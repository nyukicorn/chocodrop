{"version":3,"file":"chocodrop.umd.min.js","sources":["../src/client/LiveCommandClient.js","../src/client/SceneManager.js","../src/client/CommandUI.js","../src/client/bootstrap.js","../src/umd/index.js"],"sourcesContent":["/**\n * ChocoDrop Client - サーバーとの通信クライアント\n */\nexport class ChocoDropClient {\n  constructor(serverUrl = null) {\n    this.serverUrl = null;\n    this.initialized = false;\n    this.initPromise = null;\n\n    if (serverUrl) {\n      this.serverUrl = serverUrl;\n      this.initialized = true;\n      console.log('🍫 ChocoDropClient initialized:', serverUrl);\n    } else {\n      // 設定取得を遅延実行（Promiseを保存）\n      this.initPromise = this.initializeWithConfig();\n    }\n  }\n\n  /**\n   * サーバーから設定を取得して初期化\n   */\n  async initializeWithConfig() {\n    try {\n      // 現在のページのホストとポートを基準に設定API呼び出し\n      const baseUrl = `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\n\n      const response = await fetch(`${baseUrl}/api/config`);\n      if (response.ok) {\n        const config = await response.json();\n        this.serverUrl = config.serverUrl;\n        console.log('🍫 ChocoDropClient initialized from config:', this.serverUrl);\n      } else {\n        // フォールバック：ポート推測\n        this.serverUrl = this.detectServerUrl();\n        console.log('🍫 ChocoDropClient fallback to detected URL:', this.serverUrl);\n      }\n    } catch (error) {\n      console.warn('⚠️ ChocoDrop config fetch failed, using fallback:', error);\n      this.serverUrl = this.detectServerUrl();\n    }\n\n    this.initialized = true;\n  }\n\n  /**\n   * サーバーURL自動検出（フォールバック）\n   */\n  detectServerUrl() {\n    const currentPort = window.location.port;\n    const protocol = window.location.protocol;\n    const hostname = window.location.hostname;\n\n    // ポートが未指定の場合（ファイルプロトコル等）は既定の 3011 を使用\n    if (!currentPort) {\n      return `${protocol}//${hostname}:3011`;\n    }\n\n    return `${protocol}//${hostname}:${currentPort}`;\n  }\n\n  /**\n   * 初期化完了を待機\n   */\n  async ensureInitialized() {\n    if (this.initialized) return;\n\n    // initPromiseがあれば待機\n    if (this.initPromise) {\n      await this.initPromise;\n      return;\n    }\n\n    // フォールバック：初期化されていない場合はエラー\n    throw new Error('ChocoDropClient not initialized');\n  }\n\n  /**\n   * 画像生成リクエスト\n   */\n  async generateImage(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎨 Requesting image generation: \"${prompt}\"`);\n\n    try {\n      const payload = {\n        prompt,\n        width: options.width || 512,\n        height: options.height || 512\n      };\n\n      if (options.service) {\n        payload.service = options.service;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Image generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Image generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成リクエスト\n   */\n  async generateVideo(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎬 Requesting video generation: \"${prompt}\"`);\n\n    try {\n      const safeDefaults = {\n        aspect_ratio: '16:9',\n        resolution: '720p',\n        enable_safety_checker: true,\n        enable_prompt_expansion: true\n      };\n\n      const payload = {\n        prompt,\n        duration: typeof options.duration === 'number' && options.duration > 0 ? options.duration : 3,\n        aspect_ratio: options.aspect_ratio || safeDefaults.aspect_ratio,\n        resolution: options.resolution || safeDefaults.resolution,\n        enable_safety_checker: options.enable_safety_checker ?? safeDefaults.enable_safety_checker,\n        enable_prompt_expansion: options.enable_prompt_expansion ?? safeDefaults.enable_prompt_expansion\n      };\n\n      if (options.model) {\n        payload.model = options.model;\n      }\n\n      if (typeof options.width === 'number' && options.width > 0) {\n        payload.width = options.width;\n      }\n\n      if (typeof options.height === 'number' && options.height > 0) {\n        payload.height = options.height;\n      }\n\n      if (typeof options.seed === 'number') {\n        payload.seed = options.seed;\n      }\n\n      if (options.negative_prompt) {\n        payload.negative_prompt = options.negative_prompt;\n      }\n\n      if (typeof options.frames_per_second === 'number' && options.frames_per_second > 0) {\n        payload.frames_per_second = options.frames_per_second;\n      }\n\n      if (typeof options.guidance_scale === 'number') {\n        payload.guidance_scale = options.guidance_scale;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate-video`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Video generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Video generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド実行\n   */\n  async executeCommand(command) {\n    await this.ensureInitialized();\n    console.log(`🎯 Executing command: \"${command}\"`);\n\n    try {\n      const response = await fetch(`${this.serverUrl}/api/command`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ command })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Command execution result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 利用可能なサービス一覧取得\n   */\n  async getAvailableServices() {\n    await this.ensureInitialized();\n    try {\n      const response = await fetch(`${this.serverUrl}/api/services`);\n      \n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      return await response.json();\n\n    } catch (error) {\n      console.error('❌ Failed to get services:', error);\n      return [];\n    }\n  }\n}\n\n// 後方互換のため旧名称もエクスポート\nexport const LiveCommandClient = ChocoDropClient;\nexport const ChocoDroClient = ChocoDropClient;\n","import * as THREE from 'three';\nimport { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\n\n/**\n * Scene Manager - 3D scene integration for ChocoDrop System\n * Handles natural language parsing and 3D object management\n */\nexport class SceneManager {\n  constructor(scene, options = {}) {\n    if (!scene) {\n      throw new Error('THREE.Scene is required');\n    }\n    \n    this.scene = scene;\n    this.camera = options.camera || null;\n    this.renderer = options.renderer || null;\n    this.labelRenderer = null; // CSS2DRenderer for UI overlays like audio controls\n    // ChocoDrop Client（共通クライアント注入を優先）\n    // 外部フォルダから共有する場合は options.client でクライアントを再利用\n    this.client = options.client || new ChocoDropClient(options.serverUrl);\n    \n    // 実験オブジェクト管理用グループ\n    this.experimentGroup = new THREE.Group();\n    this.experimentGroup.name = 'LiveExperiments';\n    // 一旦シーンに追加（後でカメラに移動する可能性あり）\n    this.scene.add(this.experimentGroup);\n    \n    // コマンド履歴\n    this.commandHistory = [];\n    \n    // オブジェクト管理\n    this.spawnedObjects = new Map();\n    this.objectCounter = 0;\n    this.selectedObject = null;\n    this.selectedImageService = options.selectedImageService || null;\n    this.selectedVideoService = options.selectedVideoService || null;\n\n    // Animation管理（UI要素用）\n    this.clock = new THREE.Clock();\n    \n    // レイキャスティング用\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    this.lastHoveredObject = null;\n    \n    // 設定\n    this.config = {\n      showLocationIndicator: options.showLocationIndicator !== false,\n      indicatorDuration: options.indicatorDuration || 3000,\n      defaultObjectScale: options.defaultObjectScale || 1.0,\n      enableObjectSelection: options.enableObjectSelection !== false,\n      enableMouseInteraction: options.enableMouseInteraction,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n    \n    // クリックイベントの設定\n    this.setupClickEvents();\n    \n    console.log('🧪 SceneManager initialized with click selection');\n\n    // デバッグやコンソール操作を容易にするためグローバル参照を保持\n    if (typeof globalThis !== 'undefined') {\n      globalThis.sceneManager = this;\n    }\n  }\n  /**\n   * クリックイベントの設定\n   */\n  setupClickEvents() {\n    // enableMouseInteractionが明示的にtrueの場合のみマウス操作を有効化\n    if (this.config.enableMouseInteraction === true && this.renderer) {\n      this.setupObjectDragging();\n      console.log('🖱️ Mouse interaction enabled - Click to select, Shift+drag to move objects');\n    } else if (this.config.enableMouseInteraction === true && !this.renderer) {\n      console.warn('⚠️ Mouse interaction requested but renderer not provided. Mouse interaction disabled.');\n    } else {\n      console.log('🖱️ Mouse interaction disabled (safe mode). Set enableMouseInteraction: true to enable.');\n    }\n  }\n\n  // デバッグ情報表示メソッド\n  debugSceneInfo() {\n    console.log('🔍 === SCENE DEBUG INFO ===');\n    \n    // カメラ情報\n    if (this.camera) {\n      console.log(`📷 Camera:\n        - Position: (${this.camera.position.x.toFixed(2)}, ${this.camera.position.y.toFixed(2)}, ${this.camera.position.z.toFixed(2)})\n        - Rotation: (${(this.camera.rotation.x * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.y * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.z * 180 / Math.PI).toFixed(1)}°)\n        - FOV: ${this.camera.fov || 'N/A'}\n        - Near/Far: ${this.camera.near || 'N/A'}/${this.camera.far || 'N/A'}`);\n    }\n    \n    // シーン階層\n    console.log(`🌳 Scene hierarchy:\n      - Total objects in scene: ${this.scene.children.length}\n      - experimentGroup exists: ${this.scene.getObjectByName('LiveExperiments') ? 'Yes' : 'No'}\n      - experimentGroup children: ${this.experimentGroup.children.length}`);\n    \n    // 生成されたオブジェクト\n    console.log(`📦 Spawned objects: ${this.spawnedObjects.size}`);\n    this.spawnedObjects.forEach((obj, id) => {\n      const worldPos = new THREE.Vector3();\n      obj.getWorldPosition(worldPos);\n      console.log(`  - ${id} (${obj.userData.type}): \n        Local: (${obj.position.x.toFixed(2)}, ${obj.position.y.toFixed(2)}, ${obj.position.z.toFixed(2)})\n        World: (${worldPos.x.toFixed(2)}, ${worldPos.y.toFixed(2)}, ${worldPos.z.toFixed(2)})\n        Visible: ${obj.visible}, Scale: ${obj.scale.x.toFixed(2)}`);\n      \n      // 3Dモデルの詳細情報\n      if (obj.userData.type === 'generated_3d_model') {\n        const box = new THREE.Box3().setFromObject(obj);\n        const size = box.getSize(new THREE.Vector3());\n        const center = box.getCenter(new THREE.Vector3());\n        console.log(`    📐 Bounding box - Center: (${center.x.toFixed(2)}, ${center.y.toFixed(2)}, ${center.z.toFixed(2)}), Size: (${size.x.toFixed(2)}, ${size.y.toFixed(2)}, ${size.z.toFixed(2)})`);\n        \n        // メッシュ数\n        let meshCount = 0;\n        obj.traverse((child) => {\n          if (child.isMesh) meshCount++;\n        });\n        console.log(`    🎭 Meshes: ${meshCount}`);\n      }\n    });\n    \n    // カメラからの距離計算\n    if (this.camera && this.spawnedObjects.size > 0) {\n      console.log(`📏 Distances from camera:`);\n      this.spawnedObjects.forEach((obj, id) => {\n        const distance = this.camera.position.distanceTo(obj.position);\n        console.log(`  - ${id}: ${distance.toFixed(2)} units`);\n      });\n    }\n    \n    console.log('=========================');\n  }\n  \n\n  \n  /**\n   * オブジェクト選択\n   */\n  selectObject(object) {\n    // 既に同じオブジェクトが選択されている場合は何もしない\n    if (this.selectedObject === object) {\n      return;\n    }\n\n    // 前の選択を解除\n    this.deselectObject();\n\n    this.selectedObject = object;\n\n    this.createModernSelectionIndicator(object);\n\n    console.log(`✅ Selected object: ${object.name}`);\n    \n    // CommandUIに選択情報を表示\n    if (this.commandUI) {\n      const objectInfo = object.userData || {};\n      this.commandUI.addOutput(`📍 選択: ${object.name}`, 'info');\n      if (objectInfo.prompt) {\n        this.commandUI.addOutput(`   プロンプト: ${objectInfo.prompt}`, 'hint');\n      }\n      if (objectInfo.modelName) {\n        this.commandUI.addOutput(`   モデル: ${objectInfo.modelName}`, 'hint');\n      }\n\n      // 削除モードが待機中の場合、削除コマンドを自動入力\n      if (this.commandUI.currentMode === 'delete') {\n        const objectName = objectInfo.originalPrompt || object.name || '選択したオブジェクト';\n        this.commandUI.input.value = `${objectName}を削除`;\n        this.commandUI.input.focus();\n        // カーソルを文末に移動（選択状態を解除）\n        this.commandUI.input.setSelectionRange(this.commandUI.input.value.length, this.commandUI.input.value.length);\n        this.commandUI.addOutput(`🎯 削除対象設定: ${objectName}`, 'system');\n      }\n    }\n  }\n\n  createModernSelectionIndicator(object) {\n    // シンプルで確実な選択インジケーター\n    // 既存のインジケーターを削除（重複防止）\n    const existingIndicator = object.getObjectByName('selectionIndicator');\n    if (existingIndicator) {\n      object.remove(existingIndicator);\n    }\n\n    const indicatorGroup = new THREE.Group();\n    indicatorGroup.name = 'selectionIndicator';\n\n    // オブジェクトのバウンディングボックスを正確に取得\n    const box = new THREE.Box3().setFromObject(object);\n    const size = box.getSize(new THREE.Vector3());\n    const center = box.getCenter(new THREE.Vector3());\n\n    // 小さなマージンを追加して枠が見えやすくする\n    const margin = 0.1;\n    const adjustedSize = new THREE.Vector3(\n      size.x + margin,\n      size.y + margin, \n      size.z + margin\n    );\n\n    // シンプルな黄色い枠線\n    // PlaneGeometryの場合は平面的な枠を作成\n    if (object.geometry && object.geometry.type === 'PlaneGeometry') {\n      // スケールは既にオブジェクトに適用されているので、ジオメトリのサイズのみ使用\n      const width = object.geometry.parameters.width;\n      const height = object.geometry.parameters.height;\n      \n      // 平面の周りに枠線を作成\n      const shape = new THREE.Shape();\n      shape.moveTo(-width/2, -height/2);\n      shape.lineTo(width/2, -height/2);\n      shape.lineTo(width/2, height/2);\n      shape.lineTo(-width/2, height/2);\n      shape.lineTo(-width/2, -height/2);\n      \n      const points = shape.getPoints();\n      const geometryLine = new THREE.BufferGeometry().setFromPoints(points);\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const materialLine = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const line = new THREE.Line(geometryLine, materialLine);\n      line.position.set(0, 0, 0.01); // 少し前に出して見えるようにする\n      indicatorGroup.add(line);\n    } else {\n      // その他のオブジェクトは通常の3Dボックス枠\n      const edgesGeometry = new THREE.EdgesGeometry(\n        new THREE.BoxGeometry(adjustedSize.x, adjustedSize.y, adjustedSize.z)\n      );\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const edgesMaterial = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const edges = new THREE.LineSegments(edgesGeometry, edgesMaterial);\n      edges.position.copy(center);\n      indicatorGroup.add(edges);\n    }\n\n    // インジケーターをオブジェクトの子として追加（オブジェクトと一緒に動く）\n    object.add(indicatorGroup);\n    indicatorGroup.position.set(0, 0, 0); // 親からの相対位置は0\n\n    // リサイズハンドルを追加（親オブジェクトを直接渡す）\n    this.addResizeHandles(indicatorGroup, adjustedSize, center, object);\n  }\n\n  /**\n   * リサイズハンドルを追加\n   */\n  addResizeHandles(indicatorGroup, size, center, parentObject) {\n    // PlaneGeometryオブジェクト用のリサイズハンドル\n    console.log('🔧 addResizeHandles called');\n\n    if (!parentObject) {\n      console.log('❌ No parent object provided');\n      return;\n    }\n\n    if (!parentObject.geometry) {\n      console.log('❌ Parent has no geometry');\n      return;\n    }\n\n    if (parentObject.geometry.type !== 'PlaneGeometry') {\n      console.log(`❌ Geometry type is ${parentObject.geometry.type}, not PlaneGeometry`);\n      return;\n    }\n\n    console.log('✅ PlaneGeometry detected, creating handles');\n\n    const handleSize = 0.15; // 2025年トレンド: より小さく洗練された\n    const handleGeometry = new THREE.BoxGeometry(handleSize, handleSize, handleSize);\n    // 角を丸くするため、後でroundedBoxを使用\n\n    // 常に前面に表示されるマテリアル\n    // 2025年トレンド: アダプティブリサイズハンドル\n    const adaptiveColor = this.getAdaptiveSelectionColor();\n    const handleMaterial = new THREE.MeshBasicMaterial({\n      color: adaptiveColor,\n      transparent: true,\n      opacity: 0.8,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    const handleHoverMaterial = new THREE.MeshBasicMaterial({\n      color: this.getAdaptiveHoverColor(),\n      transparent: true,\n      opacity: 1.0,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    // 四隅の位置を計算（親オブジェクトのジオメトリサイズに基づく）\n    const width = parentObject.geometry.parameters.width;\n    const height = parentObject.geometry.parameters.height;\n\n    const positions = [\n      { x: width/2, y: height/2, z: 0.1, corner: 'top-right' },\n      { x: -width/2, y: height/2, z: 0.1, corner: 'top-left' },\n      { x: width/2, y: -height/2, z: 0.1, corner: 'bottom-right' },\n      { x: -width/2, y: -height/2, z: 0.1, corner: 'bottom-left' }\n    ];\n\n    positions.forEach((pos, index) => {\n      const handle = new THREE.Mesh(handleGeometry, handleMaterial.clone());\n      handle.position.set(pos.x, pos.y, pos.z); // 親からの相対位置\n      handle.userData = { \n        isResizeHandle: true, \n        handleIndex: index,\n        corner: pos.corner,\n        defaultMaterial: handle.material,\n        hoverMaterial: handleHoverMaterial.clone()\n      };\n      \n      // ホバーエフェクトを追加\n      // レンダリング順序を高く設定（常に前面）\n      handle.renderOrder = 1001;\n\n      handle.onHover = () => {\n        handle.material = handle.userData.hoverMaterial;\n        handle.scale.setScalar(1.5);\n        document.body.style.cursor = 'nw-resize';\n      };\n\n      handle.onHoverExit = () => {\n        handle.material = handle.userData.defaultMaterial;\n        handle.scale.setScalar(1.0);\n        document.body.style.cursor = 'default';\n      };\n\n      indicatorGroup.add(handle);\n\n      // デバッグ用にハンドルが見えることを確認\n      console.log(`🔴 Added resize handle at ${pos.corner}`);\n    });\n  }\n\n  /**\n   * 選択インジケーターのスケールをリアルタイム更新（パフォーマンス最適化版）\n   */\n  updateSelectionIndicatorScale(object) {\n    // リサイズ中はインジケーターの更新をスキップ（パフォーマンス最適化）\n    // 枠線はオブジェクトと一緒にスケールされるので、特別な更新は不要\n\n    // ハンドル位置のみ更新が必要な場合は、ここで処理\n    // 現在は自動的にオブジェクトと一緒にスケールされるので処理不要\n  }\n\n  /**\n   * オブジェクト選択解除\n   */\n  deselectObject() {\n    // シンプルで確実な選択解除\n    if (this.selectedObject) {\n      // 選択インジケーターを削除（オブジェクトの子から探す）\n      const indicator = this.selectedObject.getObjectByName('selectionIndicator');\n      if (indicator) {\n        this.selectedObject.remove(indicator);\n        \n        // メモリリークを防ぐためにリソースを破棄\n        indicator.traverse((child) => {\n          if (child.geometry) child.geometry.dispose();\n          if (child.material) {\n            if (Array.isArray(child.material)) {\n              child.material.forEach(material => material.dispose());\n            } else {\n              child.material.dispose();\n            }\n          }\n        });\n      }\n\n      console.log(`✅ Deselected: ${this.selectedObject.name}`);\n      this.selectedObject = null;\n    }\n  }\n\n  /**\n   * マウスドラッグによるオブジェクト移動機能\n   */\n  setupObjectDragging() {\n    if (!this.renderer) return;\n    \n    const canvas = this.renderer.domElement;\n    let isDragging = false;\n    let dragObject = null;\n    let dragOffset = new THREE.Vector3();\n    let mouseStart = new THREE.Vector2();\n    let dragMode = 'move'; // 'move', 'resize', 'rotate'\n    let originalScale = new THREE.Vector3();\n    \n    canvas.addEventListener('mousedown', (event) => {\n      if (event.button !== 0) return; // 左クリックのみ\n      \n      // レイキャスティングでオブジェクト検出\n      const rect = canvas.getBoundingClientRect();\n      this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(this.mouse, this.camera);\n      // オブジェクトとその子（選択インジケーター含む）を検出対象に\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const object = intersects[0].object;\n\n        // リサイズハンドルがクリックされた場合 - Shiftキー不要\n        if (object.userData && object.userData.isResizeHandle) {\n          // リサイズモード開始\n          isDragging = true;\n          dragObject = this.selectedObject; // リサイズする実際のオブジェクト\n          dragMode = 'resize';\n          \n          // ハンドル情報を保存\n          this.resizeHandleInfo = {\n            corner: object.userData.corner,\n            handleIndex: object.userData.handleIndex\n          };\n          \n          originalScale.copy(dragObject.scale);\n          mouseStart.set(event.clientX, event.clientY);\n          canvas.style.cursor = 'nw-resize';\n          console.log(`🔄 Started resizing: ${dragObject.name} from ${object.userData.corner}`);\n          return;\n        }\n\n        // 回転ハンドルがクリックされた場合\n        if (object.userData && object.userData.isRotateHandle) {\n          // 回転モード開始（今後実装）\n          console.log(`🔄 Rotation handle clicked for: ${this.selectedObject.name}`);\n          return;\n        }\n\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video' || object.userData.type === 'generated_3d_model' || object.userData.source === 'imported_file')) {\n          \n          // 🗑️ Deleteモードでのクリック処理\n          if (this.commandUI && this.commandUI.currentMode === 'delete') {\n            // 削除確認ダイアログを表示して直接削除\n            const objectName = object.name;\n            console.log(`🗑️ Delete mode: clicked on ${objectName}`);\n            \n            this.commandUI.showDeleteConfirmation(`オブジェクト「${objectName}」を削除`)\n              .then(confirmed => {\n                if (confirmed) {\n                  this.removeObject(objectName);\n                  this.commandUI.addOutput(`🗑️ 削除完了: ${objectName}`, 'success');\n                } else {\n                  this.commandUI.addOutput(`❌ 削除キャンセル: ${objectName}`, 'info');\n                }\n              })\n              .catch(error => {\n                console.error('Delete confirmation error:', error);\n                this.commandUI.addOutput(`❌ 削除エラー: ${objectName}`, 'error');\n              });\n            return; // 削除モードの場合は移動処理をスキップ\n          }\n          \n          // 移動モード開始（Shiftキー不要）\n          isDragging = true;\n          dragObject = object;\n          dragMode = 'move';\n          dragOffset.copy(intersects[0].point).sub(object.position);\n          mouseStart.set(event.clientX, event.clientY);\n\n          // 高品質な視覚フィードバック\n          if (object.material) {\n            // 移動中の透明度変更（オプション）\n            // object.material.opacity = 0.8;\n            // object.material.transparent = true;\n          }\n          // スケール変更を削除（大きくなる原因）\n\n          canvas.style.cursor = 'move';\n          console.log(`🔄 Started moving: ${object.name} (Shift-free interaction)`);\n\n          // 選択状態も更新\n          this.selectObject(object);\n        } else {\n          // 通常クリック: 選択のみ\n          this.selectObject(object);\n        }\n      } else {\n        this.deselectObject();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (event) => {\n      // ドラッグ中でない場合はホバーエフェクトを処理\n      if (!isDragging) {\n        this.handleHoverEffects(event, canvas);\n        return;\n      }\n      \n      // ドラッグ中の処理\n      if (!dragObject) return;\n      \n      // マウスの移動量を計算\n      const deltaX = event.clientX - mouseStart.x;\n      const deltaY = event.clientY - mouseStart.y;\n\n      if (dragMode === 'resize') {\n        // リサイズモード: より直感的な方向計算\n        if (!this.resizeHandleInfo) {\n          console.error('❌ Resize handle info missing');\n          return;\n        }\n        \n        const corner = this.resizeHandleInfo.corner;\n        let scaleMultiplier = 1;\n        \n        // 各ハンドルの位置に応じた直感的な方向計算\n        switch(corner) {\n          case 'top-right': \n            // 右上ハンドル: 右上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'top-left':\n            // 左上ハンドル: 左上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-right':\n            // 右下ハンドル: 右下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-left':\n            // 左下ハンドル: 左下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          default:\n            scaleMultiplier = 1 + (deltaX + deltaY) * 0.001; // フォールバック\n        }\n        \n        const newScale = Math.max(0.1, Math.min(5.0, originalScale.x * scaleMultiplier));\n        dragObject.scale.setScalar(newScale);\n\n        // 選択インジケーターも更新（パフォーマンス最適化）\n        this.updateSelectionIndicatorScale(dragObject);\n\n      } else if (dragMode === 'move') {\n        // 移動モード（従来の処理）\n        const cameraRight = new THREE.Vector3();\n        const cameraUp = new THREE.Vector3();\n        this.camera.getWorldDirection(new THREE.Vector3()); // dummy call to update matrix\n        cameraRight.setFromMatrixColumn(this.camera.matrixWorld, 0).normalize();\n        cameraUp.setFromMatrixColumn(this.camera.matrixWorld, 1).normalize();\n\n        // マウス移動をワールド座標に変換\n        const moveScale = 0.01;\n        const worldMove = new THREE.Vector3()\n          .add(cameraRight.clone().multiplyScalar(deltaX * moveScale))\n          .add(cameraUp.clone().multiplyScalar(-deltaY * moveScale));\n\n        dragObject.position.add(worldMove);\n        mouseStart.set(event.clientX, event.clientY);\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (isDragging && dragObject) {\n        // ドラッグ終了の処理\n        if (dragObject.material) {\n          dragObject.material.opacity = 1.0;\n          dragObject.material.transparent = false;\n        }\n\n        // スケールを元に戻す（移動開始時に変更した場合）\n        // 現在は移動開始時のスケール変更を削除したので、この処理は不要\n\n        console.log(`✅ Finished dragging: ${dragObject.name} to (${dragObject.position.x.toFixed(1)}, ${dragObject.position.y.toFixed(1)}, ${dragObject.position.z.toFixed(1)})`);\n\n        isDragging = false;\n        dragObject = null;\n        dragMode = 'move'; // リセット\n        this.resizeHandleInfo = null; // リサイズハンドル情報をクリーンアップ\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Shift+ホイールでリサイズ機能を追加\n    canvas.addEventListener('wheel', (event) => {\n      event.preventDefault();\n      \n      const rect = canvas.getBoundingClientRect();\n      const mouse = new THREE.Vector2();\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(mouse, this.camera);\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (obj.userData && (obj.userData.type === 'generated_image' || obj.userData.type === 'generated_video' || obj.userData.type === 'generated_3d_model')) {\n          const scaleFactor = event.deltaY > 0 ? 0.9 : 1.1;\n          const newScale = obj.scale.x * scaleFactor;\n          \n          // 最小・最大サイズ制限\n          if (newScale >= 0.2 && newScale <= 5.0) {\n            obj.scale.setScalar(newScale);\n            \n            // 高品質な視覚フィードバック\n            if (obj.material) {\n              obj.material.emissive.setHex(0x333333);\n              setTimeout(() => {\n                if (obj.material) {\n                  obj.material.emissive.setHex(0x000000);\n                }\n              }, 150);\n            }\n            \n            console.log(`🔄 Resized ${obj.userData.type}: ${obj.name} to scale ${newScale.toFixed(2)} (Shift-free interaction)`);\n          }\n        }\n      }\n    });\n\n    // 選択したオブジェクトの角度調整キーボードコントロール\n    document.addEventListener('keydown', (event) => {\n      if (!this.selectedObject) return;\n      \n      const object = this.selectedObject;\n      // 生成された画像・動画のみ角度調整可能\n      if (!object.userData || (object.userData.type !== 'generated_image' && object.userData.type !== 'generated_video')) {\n        return;\n      }\n      \n      const rotationStep = Math.PI / 36; // 5度ずつ回転\n      let rotated = false;\n      \n      switch (event.key) {\n        case 'ArrowLeft':\n          object.rotation.y -= rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowRight':\n          object.rotation.y += rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowUp':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationX = object.rotation.x - rotationStep;\n          if (newRotationX >= -Math.PI/6 && newRotationX <= Math.PI/6) {\n            object.rotation.x = newRotationX;\n            rotated = true;\n          }\n          break;\n        case 'ArrowDown':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationXDown = object.rotation.x + rotationStep;\n          if (newRotationXDown >= -Math.PI/6 && newRotationXDown <= Math.PI/6) {\n            object.rotation.x = newRotationXDown;\n            rotated = true;\n          }\n          break;\n        case 'r':\n        case 'R':\n          // リセット：正面向きに戻す\n          object.rotation.x = 0;\n          // カメラの視線方向（ユーザーがモニターで見ている方向）に向ける\n          const cameraDirection = new THREE.Vector3();\n          this.camera.getWorldDirection(cameraDirection);\n          const targetPoint = object.position.clone().add(cameraDirection.multiplyScalar(-1));\n          object.lookAt(targetPoint);\n          object.rotation.x = 0; // お辞儀防止\n          rotated = true;\n          console.log(`🔄 Reset rotation for: ${object.name}`);\n          break;\n\n        case 'i':\n        case 'I':\n          // デバッグ情報表示\n          this.debugSceneInfo();\n          event.preventDefault();\n          break;\n      }\n      \n      if (rotated) {\n        event.preventDefault();\n        const angles = {\n          x: (object.rotation.x * 180 / Math.PI).toFixed(1),\n          y: (object.rotation.y * 180 / Math.PI).toFixed(1),\n          z: (object.rotation.z * 180 / Math.PI).toFixed(1)\n        };\n        console.log(`🔄 Rotated ${object.userData.type}: ${object.name} to (${angles.x}°, ${angles.y}°, ${angles.z}°)`);\n      }\n    });\n\n    console.log('🖱️ Object dragging system enabled (Drag to move objects - Shift-free interaction)');\n    console.log('🔄 Object resizing system enabled (Scroll to resize images/videos - Shift-free interaction)');\n    console.log('🎯 Angle adjustment enabled (Select object + Arrow keys to rotate, R to reset)');\n  }\n\n  handleHoverEffects(event, canvas) {\n    // レイキャスティングでオブジェクト検出\n    const rect = canvas.getBoundingClientRect();\n    this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    \n    this.raycaster.setFromCamera(this.mouse, this.camera);\n\n    // オブジェクトとその子（選択インジケーター含む）を検出対象に\n    const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n    \n    // 前回ホバーしていたオブジェクトのエフェクトをリセット\n    if (this.lastHoveredObject && this.lastHoveredObject.onHoverExit) {\n      this.lastHoveredObject.onHoverExit();\n      this.lastHoveredObject = null;\n    }\n    \n    // 新しいホバー対象を検出\n    if (intersects.length > 0) {\n      const object = intersects[0].object;\n      \n      // リサイズハンドルにホバーした場合\n      if (object.userData && object.userData.isResizeHandle && object.onHover) {\n        object.onHover();\n        this.lastHoveredObject = object;\n        return;\n      }\n      \n      // 通常のオブジェクトにホバーした場合\n      if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video')) {\n        // 移動可能なオブジェクトの場合はカーソルを変更\n        canvas.style.cursor = 'move';\n\n        this.lastHoveredObject = { onHoverExit: () => { canvas.style.cursor = 'default'; } };\n        return;\n      }\n    }\n    \n    // ホバー対象がない場合はデフォルトカーソル\n    canvas.style.cursor = 'default';\n  }\n\n  /**\n   * メインコマンド実行エントリーポイント\n   * @param {string} command - 自然言語コマンド\n   */\n  async executeCommand(command) {\n    const timestamp = Date.now();\n    console.log(`🎯 Executing: \"${command}\"`);\n    \n    try {\n      // コマンド解析\n      const parsed = this.parseCommand(command);\n      console.log('📝 Parsed:', parsed);\n      \n      // コマンド実行\n      const result = await this.dispatchCommand(parsed);\n      \n      // 履歴に記録\n      this.commandHistory.push({\n        timestamp,\n        command,\n        parsed,\n        result,\n        status: 'success'\n      });\n      \n      return result;\n      \n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      \n      this.commandHistory.push({\n        timestamp,\n        command,\n        error: error.message,\n        status: 'error'\n      });\n      \n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド解析\n   * @param {string} command \n   * @returns {object} 解析結果\n   */\n  parseCommand(command) {\n    // プレフィックスでモードを判定\n    if (command.startsWith('[変更] ')) {\n      const actualCommand = command.replace('[変更] ', '');\n      return this.parseObjectModificationCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    if (command.startsWith('[削除] ')) {\n      const actualCommand = command.replace('[削除] ', '');\n      return this.parseDeleteCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    // 動画生成の判定（プレフィックスなし = 生成モード）\n    const cmd = command.toLowerCase().trim();\n    \n    // 自然言語オブジェクト操作の判定（「オブジェクト名 + 動作」パターン）\n    const naturalLanguagePattern = this.parseNaturalLanguageCommand(cmd);\n    if (naturalLanguagePattern) {\n      return naturalLanguagePattern;\n    }\n    \n    // 動画関連キーワードをチェック\n    const videoKeywords = ['動画', 'ビデオ', 'ムービー', '映像', 'アニメーション', '動く', \n                          'video', 'movie', 'animation', 'animate', 'motion', 'moving', 'clip'];\n    const isVideoRequest = videoKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isVideoRequest) {\n      return {\n        type: 'video_generation',\n        prompt: command,\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // オブジェクト選択関連キーワードをチェック\n    const selectKeywords = ['選択', 'select', 'オブジェクト選択', '既存', 'existing'];\n    const isSelectRequest = selectKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isSelectRequest) {\n      return {\n        type: 'object_selection',\n        position: this.parsePosition(cmd)\n      };\n    }\n    \n    // ファイルインポート関連キーワードをチェック\n    const importKeywords = ['インポート', 'import', '読み込', '読込', 'ファイル', 'file', '画像を選択', '動画を選択', '選択して配置'];\n    const isImportRequest = importKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isImportRequest) {\n      const isVideoImport = cmd.includes('動画') || cmd.includes('video') || cmd.includes('mp4');\n      return {\n        type: 'file_import',\n        fileType: isVideoImport ? 'video' : 'image',\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // 画像生成キーワードをチェック\n    const imageKeywords = ['画像', '写真', 'イメージ', '絵', 'ピクチャー', \n                          'image', 'picture', 'photo', 'generate', 'create', 'make', 'draw'];\n    const isImageRequest = imageKeywords.some(keyword => cmd.includes(keyword));\n    \n    // デフォルト: 画像生成として処理\n    return {\n      type: 'image_generation',\n      prompt: command,\n      position: this.parsePosition(cmd),\n      size: this.parseSize(cmd)\n    };\n  }\n\n  /**\n   * コマンドから対象オブジェクトを特定\n   */\n  findObjectByKeyword(command) {\n    // オブジェクトを識別するキーワード\n    const objectKeywords = {\n      '猫': ['cat', 'ネコ', 'ねこ'],\n      '犬': ['dog', 'イヌ', 'いぬ'],\n      'ドラゴン': ['dragon', '龍', 'りゅう'],\n      'ユニコーン': ['unicorn'],\n      'ペガサス': ['pegasus'],\n      '鳥': ['bird', 'とり', 'トリ'],\n      '花': ['flower', 'はな', 'ハナ'],\n      '城': ['castle', 'しろ', 'シロ'],\n      '山': ['mountain', 'やま', 'ヤマ'],\n      '木': ['tree', 'き', 'キ']\n    };\n\n    // シーン内のオブジェクトを検索\n    for (const child of this.scene.children) {\n      if (!child.name || !child.name.startsWith('generated_')) continue;\n      \n      // オブジェクト名からタイプを推測（例: generated_image_1 → image）\n      const nameParts = child.name.split('_');\n      \n      // コマンド内のキーワードと照合\n      for (const [keyword, aliases] of Object.entries(objectKeywords)) {\n        // メインキーワードをチェック\n        if (command.includes(keyword)) {\n          console.log(`🎯 Found object by keyword \"${keyword}\": ${child.name}`);\n          return child;\n        }\n        \n        // エイリアスもチェック\n        for (const alias of aliases) {\n          if (command.toLowerCase().includes(alias.toLowerCase())) {\n            console.log(`🎯 Found object by alias \"${alias}\": ${child.name}`);\n            return child;\n          }\n        }\n      }\n      \n      // プロンプトメタデータがある場合は、それも確認\n      if (child.userData && child.userData.prompt) {\n        const prompt = child.userData.prompt.toLowerCase();\n        for (const [keyword, aliases] of Object.entries(objectKeywords)) {\n          if (prompt.includes(keyword.toLowerCase())) {\n            console.log(`🎯 Found object by prompt \"${keyword}\": ${child.name}`);\n            return child;\n          }\n        }\n      }\n    }\n    \n    // 最後に作成されたオブジェクトを返すオプション\n    if (command.includes('最後') || command.includes('最新') || command.includes('last')) {\n      const generatedObjects = this.scene.children.filter(\n        child => child.name && child.name.startsWith('generated_')\n      );\n      if (generatedObjects.length > 0) {\n        const lastObject = generatedObjects[generatedObjects.length - 1];\n        console.log(`🎯 Found last created object: ${lastObject.name}`);\n        return lastObject;\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * 画像生成コマンド解析\n   */\n  parseImageGenerationCommand(command) {\n    // プロンプト抽出 (「を」「に」「で」などで区切る)\n    let prompt = command;\n    const particles = ['を', 'に', 'で', 'の'];\n    \n    for (const particle of particles) {\n      if (command.includes(particle)) {\n        const parts = command.split(particle);\n        if (parts[0]) {\n          prompt = parts[0].trim();\n          break;\n        }\n      }\n    }\n    \n    // 不要な語句を除去\n    prompt = prompt\n      .replace(/(画像|作って|生成|して|ください)/g, '')\n      .trim();\n    \n    return {\n      type: 'image_generation',\n      prompt,\n      position: this.parsePosition(command),\n      size: this.parseSize(command)\n    };\n  }\n\n  /**\n   * オブジェクト変更コマンド解析\n   */\n  parseObjectModificationCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 色変更の解析\n    let color = null;\n    const colorMap = {\n      '赤': 0xff0000, '青': 0x0000ff, '緑': 0x00ff00, '黄': 0xffff00,\n      '紫': 0xff00ff, '橙': 0xff8800, 'オレンジ': 0xff8800,\n      '白': 0xffffff, '黒': 0x000000, '灰': 0x808080, 'グレー': 0x808080,\n      'ピンク': 0xffc0cb, '茶': 0x8b4513, '銀': 0xc0c0c0, '金': 0xffd700\n    };\n    \n    for (const [colorName, colorValue] of Object.entries(colorMap)) {\n      if (cmd.includes(colorName)) {\n        color = colorValue;\n        break;\n      }\n    }\n    \n    // サイズ変更の解析\n    let scale = null;\n    if (cmd.includes('大きく') || cmd.includes('拡大')) {\n      scale = 1.5;\n    } else if (cmd.includes('小さく') || cmd.includes('縮小')) {\n      scale = 0.7;\n    } else if (cmd.includes('倍')) {\n      const match = cmd.match(/(\\d+(?:\\.\\d+)?)\\s*倍/);\n      if (match) {\n        scale = parseFloat(match[1]);\n      }\n    }\n    \n    // 移動コマンドの解析\n    let movement = null;\n    if (cmd.includes('移動') || cmd.includes('動か') || cmd.includes('へ')) {\n      movement = this.parsePositionFromPrompt(cmd);\n    }\n    \n    return {\n      type: 'object_modification',\n      command: command,\n      color: color,\n      scale: scale,\n      movement: movement,\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * 削除コマンド解析\n   */\n  parseDeleteCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 選択されたオブジェクトのみを削除するか、全削除かを判定\n    if (cmd.includes('選択') || cmd.includes('これ') || cmd.includes('この')) {\n      return {\n        type: 'delete',\n        target: 'selected',\n        requiresSelection: true\n      };\n    }\n    \n    if (cmd.includes('全部') || cmd.includes('すべて') || cmd.includes('全て')) {\n      return {\n        type: 'delete',\n        target: 'all'\n      };\n    }\n    \n    // デフォルト: 選択されたオブジェクトを削除\n    return {\n      type: 'delete',\n      target: 'selected',\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * 自然言語オブジェクト操作コマンド解析\n   * 例: \"ユニコーンを右に移動\", \"猫の画像をピンクに\", \"1つ目の猫を左に\"\n   */\n  parseNaturalLanguageCommand(command) {\n    // 移動パターンをチェック\n    const movePatterns = [\n      '(\\S+?)を(.+?)に移動', \n      '(\\S+?)を(.+?)へ移動',\n      '(\\S+?)を(.+?)に動か',\n      '(\\S+?)を(.+?)へ動か'\n    ];\n    \n    for (const pattern of movePatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n        const direction = match[2];\n        \n        console.log(`🎯 Natural language move detected: \"${objectName}\" to \"${direction}\"`);\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          movement: this.parsePositionFromPrompt(direction),\n          requiresObjectSearch: true\n        };\n      }\n    }\n    \n    // 色変更パターンをチェック\n    const colorPatterns = [\n      '(\\S+?)を(\\S+?)色に',\n      '(\\S+?)を(\\S+?)に'\n    ];\n    \n    // 色変更は基本的な色のみ対応\n    const colorKeywords = ['赤', '青', '緑', '黄', '紫', '橙', 'オレンジ', '白', '黒', '灰', 'グレー', 'ピンク', '茶', '銀', '金'];\n    \n    for (const pattern of colorPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match && colorKeywords.some(color => match[2].includes(color))) {\n        const objectName = match[1];\n        const colorName = match[2];\n        \n        console.log(`🎨 Natural language color change detected: \"${objectName}\" to \"${colorName}\"`);\n        \n        // 色変更の解析（既存のロジックを流用）\n        const colorMap = {\n          '赤': 0xff0000, '青': 0x0000ff, '緑': 0x00ff00, '黄': 0xffff00,\n          '紫': 0xff00ff, '橙': 0xff8800, 'オレンジ': 0xff8800,\n          '白': 0xffffff, '黒': 0x000000, '灰': 0x808080, 'グレー': 0x808080,\n          'ピンク': 0xffc0cb, '茶': 0x8b4513, '銀': 0xc0c0c0, '金': 0xffd700\n        };\n        \n        let colorValue = null;\n        for (const [colorKey, value] of Object.entries(colorMap)) {\n          if (colorName.includes(colorKey)) {\n            colorValue = value;\n            break;\n          }\n        }\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          color: colorValue,\n          requiresObjectSearch: true\n        };\n      }\n    }\n    \n    return null; // 自然言語パターンに一致しない場合\n  }\n\n  /**\n   * 移動コマンドから相対位置を解析（オブジェクト移動用）\n   */\n  parsePositionFromPrompt(command) {\n    let x = 0, y = 0, z = 0;\n    \n    // 左右移動（修正：左右を正しい方向に）\n    if (command.includes('右へ') || command.includes('右に') || command.includes('右側へ') || command.includes('右側に')) {\n      x = 5; // 5メートル右へ（正の値で右に移動）\n    } else if (command.includes('左へ') || command.includes('左に') || command.includes('左側へ') || command.includes('左側に')) {\n      x = -5; // 5メートル左へ（負の値で左に移動）\n    }\n    \n    // 上下移動\n    if (command.includes('上へ') || command.includes('上に') || command.includes('上側へ')) {\n      y = 3; // 3メートル上へ\n    } else if (command.includes('下へ') || command.includes('下に') || command.includes('下側へ')) {\n      y = -3; // 3メートル下へ\n    }\n    \n    // 前後移動\n    if (command.includes('前へ') || command.includes('手前へ') || command.includes('近くへ')) {\n      z = 3; // カメラに近づける\n    } else if (command.includes('後ろへ') || command.includes('奥へ') || command.includes('遠くへ')) {\n      z = -3; // カメラから遠ざける\n    }\n    \n    // 距離指定の解析\n    const distanceMatch = command.match(/(\\d+(?:\\.\\d+)?)\\s*(?:メートル|m)/);\n    if (distanceMatch) {\n      const distance = parseFloat(distanceMatch[1]);\n      // 方向に応じて距離を適用\n      if (Math.abs(x) > 0) x = x > 0 ? distance : -distance;\n      if (Math.abs(y) > 0) y = y > 0 ? distance : -distance;\n      if (Math.abs(z) > 0) z = z > 0 ? distance : -distance;\n    }\n    \n    // 「少し」「大きく」などの修飾語\n    if (command.includes('少し') || command.includes('ちょっと')) {\n      x *= 0.5; y *= 0.5; z *= 0.5;\n    } else if (command.includes('大きく') || command.includes('たくさん')) {\n      x *= 2; y *= 2; z *= 2;\n    }\n    \n    console.log(`📍 Position movement parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * 位置情報解析（カメラ相対位置）\n   */\n  parsePosition(command) {\n    const defaultPos = { x: 0, y: 5, z: 10 }; // カメラ前方10m、少し上\n    \n    // 基本方向の解析（カメラ相対座標系）\n    let x = 0, y = 5, z = 10; // デフォルト値（カメラ相対、正のzが前方）\n    \n    // 組み合わせ位置を最初にチェック（優先度最高）\n    if (command.includes('左下')) {\n      x = -8; y = 0; z = 10;  // 左下: 左側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 左下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右上')) {\n      x = 5; y = 4; z = 12;  // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 右上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('左上')) {\n      x = -8; y = 4; z = 15; // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 左上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右下')) {\n      x = 8; y = 0; z = 10; // 右下: 右側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 右下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 特殊位置\n    if (command.includes('中央') || command.includes('真ん中') || command.includes('正面')) {\n      x = 0; y = 3; z = 12;  // y=3 で目線レベルに\n      console.log(`📍 Position parsed from \"${command}\": 中央 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('空') || command.includes('天空')) {\n      x = 0; y = 20; z = 10;\n      console.log(`📍 Position parsed from \"${command}\": 空中 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('地面') || command.includes('足元')) {\n      x = 0; y = 1; z = 8;\n      console.log(`📍 Position parsed from \"${command}\": 地面 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 個別方向の解析\n    // 前後方向\n    if (command.includes('前に') || command.includes('手前に')) {\n      z = 5; // カメラに近づける\n    } else if (command.includes('後ろに') || command.includes('奥に') || command.includes('遠くに')) {\n      z = 20; // カメラから遠ざける\n    }\n    \n    // 左右方向\n    if (command.includes('右に') || command.includes('右側') || command.includes('画面の右')) {\n      x = 8;\n    } else if (command.includes('左に') || command.includes('左側') || command.includes('画面の左')) {\n      x = -8;\n    }\n    \n    // 上下方向（カメラ相対）\n    if (command.includes('上に') || command.includes('上側') || command.includes('画面の上') || command.includes('高い位置に') || command.includes('空中に')) {\n      y = 8; // カメラから8メートル上\n    } else if (command.includes('下に') || command.includes('下側') || command.includes('画面の下') || command.includes('低い位置に') || command.includes('地面に')) {\n      y = -2; // カメラから2メートル下\n    }\n    \n    // 距離指定\n    if (command.includes('近くに') || command.includes('すぐ前に')) {\n      z = Math.min(z * 0.5, 3); // 半分の距離、ただし最低3m（正の値なので min を使用）\n    } else if (command.includes('遠くに') || command.includes('向こうに')) {\n      z = z * 1.5; // 1.5倍の距離\n    }\n    \n    console.log(`📍 Position parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * サイズ解析\n   */\n  parseSize(command) {\n    if (command.includes('大きな') || command.includes('大きい')) return { scale: 2.0 };\n    if (command.includes('小さな') || command.includes('小さい')) return { scale: 0.5 };\n    return { scale: this.config.defaultObjectScale };\n  }\n\n  /**\n   * コマンド種別別実行\n   */\n  async dispatchCommand(parsed) {\n    switch (parsed.type) {\n      case 'image_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('画像生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeImageGeneration(parsed);\n        \n      case 'video_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('動画生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeVideoGeneration(parsed);\n        \n      case 'object_modification':\n        return await this.executeObjectModification(parsed);\n        \n      case 'natural_object_modification':\n        return await this.executeNaturalObjectModification(parsed);\n        \n      case 'delete':\n        return await this.executeDelete(parsed);\n        \n      case 'file_import':\n        return await this.executeFileImport(parsed);\n        \n      case 'object_selection':\n        return await this.executeObjectSelection(parsed);\n        \n      default:\n        throw new Error(`Unknown command type: ${parsed.type}`);\n    }\n  }\n\n  /**\n   * 画像生成実行\n   */\n  async executeImageGeneration(parsed) {\n    try {\n      console.log(`🎨 Generating image: \"${parsed.prompt}\"`);\n      \n      // 段階的にサイズを試行（シーンに配置しやすいサイズを優先）\n      const fallbackSizes = [\n        { width: 512, height: 512 },    // 1:1 基本サイズ（互換性最高）\n        { width: 768, height: 432 },    // 16:9 現代的サイズ\n        { width: 1024, height: 1024 },  // 大きめ1:1\n        { width: 640, height: 480 },    // 4:3 クラシック\n      ];\n      \n      let imageResult;\n      let lastError;\n      \n      for (let i = 0; i < fallbackSizes.length; i++) {\n        const dimensions = fallbackSizes[i];\n        try {\n          console.log(`🔄 Trying ${dimensions.width}x${dimensions.height}...`);\n          \n          imageResult = await this.client.generateImage(parsed.prompt, {\n            width: dimensions.width,\n            height: dimensions.height,\n            service: this.selectedImageService || undefined\n          });\n          \n          if (imageResult.success) {\n            console.log(`✅ Success with ${dimensions.width}x${dimensions.height}`);\n            break;\n          }\n        } catch (error) {\n          lastError = error;\n          console.log(`⚠️ Failed with ${dimensions.width}x${dimensions.height}: ${error.message}`);\n          \n          // 最後の試行でない場合は続行\n          if (i < fallbackSizes.length - 1) {\n            console.log(`🔄 Retrying with next size...`);\n            continue;\n          }\n        }\n      }\n      \n      // 結果にモデル情報を含める\n      if (imageResult && imageResult.modelName) {\n        console.log(`📡 Used model: ${imageResult.modelName}`);\n      }\n      \n      const loader = new THREE.TextureLoader();\n      let texture;\n      if (imageResult && imageResult.success && (imageResult.imageUrl || imageResult.localPath)) {\n        // 成功: 生成された画像をテクスチャとして使用\n        let imageUrl = imageResult.imageUrl;\n        \n        // localPathの場合はWebアクセス可能なURLに変換\n        if (!imageUrl && imageResult.localPath) {\n          const filename = imageResult.localPath.split('/').pop();\n          imageUrl = `${this.client.serverUrl}/generated/${filename}`;\n        }\n        \n        console.log(`✅ Image generated successfully: ${imageUrl}`);\n        texture = await loader.loadAsync(imageUrl);\n\n        // テクスチャの色彩を正確に表示するための設定\n        texture.colorSpace = THREE.SRGBColorSpace; // 正しいカラースペース\n      } else {\n        // 失敗: プレースホルダー画像を使用\n        console.log(`⚠️ Using fallback image (last error: ${lastError?.message || 'unknown'})`);\n        texture = this.createFallbackTexture(parsed.prompt);\n      }\n\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n      if (aspectRatio >= 1) {\n        planeWidth = baseSize;\n        planeHeight = baseSize / aspectRatio;\n      } else {\n        planeWidth = baseSize * aspectRatio;\n        planeHeight = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: false,  // 不透明で鮮明表示\n        side: THREE.DoubleSide, // 両面表示\n        toneMapped: false    // トーンマッピングを無効化（より鮮やかな色彩）\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（画像も前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      \n      // カメラ相対位置で配置（カメラの向きも考慮）\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        // フォールバック: 絶対座標\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n      \n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n      \n      // 識別用の名前とメタデータ\n      const objectId = `generated_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_image',\n        modelName: imageResult?.modelName || this.selectedImageService || null\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加（視覚的フィードバック）\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: imageResult?.modelName,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎨 Image generation failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成実行\n   */\n  async executeVideoGeneration(parsed) {\n    try {\n      console.log(`🎬 Generating video: \"${parsed.prompt}\"`);\n      console.log('🔍 Video generation - selectedVideoService:', this.selectedVideoService);\n      \n      // ChocoDro Client経由で動画生成\n      const videoResult = await this.client.generateVideo(parsed.prompt, {\n        width: 512,\n        height: 512,\n        duration: 3,\n        model: this.selectedVideoService || undefined\n      });\n      \n      // 結果にモデル情報を含める\n      if (videoResult.modelName) {\n        console.log(`📡 Used model: ${videoResult.modelName}`);\n      }\n      \n      let videoTexture;\n      let video = null; // video変数をスコープ外で定義\n      \n      if (videoResult.success && videoResult.videoUrl) {\n        // 成功: 生成された動画をテクスチャとして使用\n        console.log(`✅ Video generated successfully: ${videoResult.videoUrl}`);\n        \n        // HTML5 video要素を作成\n        video = document.createElement('video');\n        video.src = videoResult.videoUrl;\n        video.crossOrigin = 'anonymous';\n        video.loop = true;\n        video.muted = true; // 初期はミュート（ユーザーが手動で音声制御）\n        video.playsInline = true;\n        \n        // 動画テクスチャを作成\n        videoTexture = new THREE.VideoTexture(video);\n        videoTexture.colorSpace = THREE.SRGBColorSpace;\n        \n        // 動画の自動再生を開始\n        video.addEventListener('loadeddata', () => {\n          video.play().catch(console.error);\n        });\n        \n      } else {\n        // 失敗: プレースホルダー動画テクスチャを使用\n        console.log(`⚠️ Using fallback video texture`);\n        videoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      }\n      \n      // 動画を表示する平面ジオメトリを作成（アスペクト比を考慮）\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const requestedWidth = videoResult.metadata?.width || 512;\n      const requestedHeight = videoResult.metadata?.height || 512;\n      const planeAspect = requestedWidth && requestedHeight ? requestedWidth / requestedHeight : 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n\n      if (planeAspect >= 1) {\n        planeHeight = baseSize / planeAspect;\n      } else {\n        planeWidth = baseSize * planeAspect;\n      }\n\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（動画を前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        videoUrl: videoResult.videoUrl,\n        modelName: videoResult.modelName || this.selectedVideoService || null,\n        width: requestedWidth,\n        height: requestedHeight,\n        videoElement: video // video要素の参照を保存\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created video object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: videoResult.modelName,\n        videoUrl: videoResult.videoUrl,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video generation failed:', error);\n      \n      // エラー時もプレースホルダー動画を表示\n      console.log('🔄 Creating fallback video plane due to generation error');\n      const fallbackVideoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      \n      // 動画を表示する平面ジオメトリを作成\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n      const geometry = new THREE.PlaneGeometry(baseSize, baseSize);\n      const material = new THREE.MeshBasicMaterial({\n        map: fallbackVideoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        videoUrl: null, // エラー時はnull\n        modelName: 'Error Fallback',\n        width: 512,\n        height: 512,\n        videoElement: null,\n        error: error.message\n      };\n\n      // シーンに追加\n      this.scene.add(plane);\n      console.log('📍 Fallback video plane added to scene');\n\n      return {\n        success: false,\n        error: error.message,\n        object: plane,\n        prompt: parsed.prompt\n      };\n    }\n  }\n\n  async loadImageFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 } } = options;\n      \n      console.log(`📁 Loading image file: ${fileUrl}`);\n      \n      // ファイルからテクスチャを読み込み\n      const loader = new THREE.TextureLoader();\n      const texture = await loader.loadAsync(fileUrl);\n\n      // テクスチャの色彩を正確に表示するための設定\n      texture.colorSpace = THREE.SRGBColorSpace;\n\n      // アスペクト比を算出（fallback: 1）\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n      \n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      if (aspectRatio >= 1) {\n        width = baseSize;\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n        height = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成（縦横比を維持）\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n\n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // 識別用の名前とメタデータ\n      const objectId = `imported_image_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_image'\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created imported image: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('📁 Image file loading failed:', error);\n      throw error;\n    }\n  }\n\n  async loadVideoFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 } } = options;\n      \n      console.log(`🎬 Loading video file: ${fileUrl}`);\n      \n      // HTMLVideoElementを作成\n      const video = document.createElement('video');\n      video.src = fileUrl;\n      video.loop = true;\n      video.muted = true;\n      video.playsInline = true;\n      video.autoplay = true;\n      video.preload = 'auto';\n\n      // VideoTextureを作成\n      const videoTexture = new THREE.VideoTexture(video);\n      videoTexture.colorSpace = THREE.SRGBColorSpace;\n\n      // ビデオの読み込みとサイズ取得\n      await new Promise((resolve, reject) => {\n        const handleLoaded = () => {\n          console.log(`🎬 Video loaded: ${video.videoWidth}x${video.videoHeight}`);\n          resolve();\n        };\n        const handleError = (event) => {\n          reject(event?.error || new Error('Video failed to load'));\n        };\n\n        video.addEventListener('loadedmetadata', handleLoaded, { once: true });\n        video.addEventListener('error', handleError, { once: true });\n        video.load();\n      });\n\n      try {\n        await video.play();\n      } catch (playError) {\n        console.warn('🎬 Video autoplay could not start automatically. Playback will require user interaction.', playError);\n      }\n      \n      // アスペクト比を計算してサイズ調整\n      const aspectRatio = video.videoWidth / video.videoHeight;\n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      \n      if (aspectRatio > 1) {\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n      }\n      \n      // 動画を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // 識別用の名前とメタデータ\n      const objectId = `imported_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_video',\n        videoElement: video,\n        objectUrl: fileUrl\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n\n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created imported video: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video file loading failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語オブジェクト操作実行\n   */\n  async executeNaturalObjectModification(parsed) {\n    // オブジェクトを名前で検索\n    const targetObjects = this.findObjectsByName(parsed.targetObjectName);\n    \n    if (targetObjects.length === 0) {\n      return {\n        success: false,\n        message: `オブジェクト「${parsed.targetObjectName}」が見つかりませんでした`\n      };\n    }\n    \n    console.log(`🔍 Found ${targetObjects.length} object(s) matching \"${parsed.targetObjectName}\"`);\n    \n    // 複数の場合は序数詞で選択、なければ最初のオブジェクト\n    const targetObject = this.selectObjectFromMultiple(targetObjects, parsed.targetObjectName);\n    console.log(`🎯 Operating on object: ${targetObject.name}`);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        targetObject.material.color.setHex(parsed.color);\n        console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`);\n      } else {\n        targetObject.material.color.setHex(parsed.color);\n        console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y,\n        z: currentPos.z + parsed.movement.z\n      };\n      \n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        movement: parsed.movement,\n        command: `Natural language: ${parsed.targetObjectName}`\n      });\n      \n      return {\n        success: true,\n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          movement: parsed.movement\n        }\n      };\n    } else {\n      return {\n        success: false,\n        message: '変更可能な属性が見つかりませんでした'\n      };\n    }\n  }\n  \n  /**\n   * 名前でオブジェクトを検索\n   */\n  findObjectsByName(searchName) {\n    const results = [];\n    const searchLower = searchName.toLowerCase();\n    \n    // 生成されたオブジェクトから検索\n    for (const [objectId, object] of this.spawnedObjects) {\n      // プロンプト情報から検索\n      if (object.userData.prompt) {\n        const promptLower = object.userData.prompt.toLowerCase();\n        \n        // 部分一致で検索（「ユニコーン」が「ユニコーンの画像」にマッチ）\n        if (promptLower.includes(searchLower)) {\n          results.push(object);\n          console.log(`✅ Object match found: ${objectId} (prompt: \"${object.userData.prompt}\")`);\n        }\n      }\n      \n      // オブジェクト名からも検索\n      if (object.name && object.name.toLowerCase().includes(searchLower)) {\n        results.push(object);\n        console.log(`✅ Object match found: ${objectId} (name: \"${object.name}\")`);\n      }\n    }\n    \n    return results;\n  }\n  \n  /**\n   * 複数オブジェクトから序数詞で選択\n   */\n  selectObjectFromMultiple(objects, originalCommand) {\n    // 序数詞パターンをチェック\n    const ordinalPatterns = [\n      /(\\d+)つ目の/, /(\\d+)番目の/, /(\\d+)個目の/,\n      /最初の|1つ目の|1番目の|1個目の/,\n      /最後の|最終の/,\n      /2つ目の|2番目の|2個目の/,\n      /3つ目の|3番目の|3個目の/\n    ];\n    \n    for (const pattern of ordinalPatterns) {\n      const match = originalCommand.match(pattern);\n      if (match) {\n        let index;\n        \n        if (match[1]) {\n          // 数字が見つかった場合\n          index = parseInt(match[1]) - 1; // 1ベースから0ベースに変換\n        } else {\n          // 特別な表現の場合\n          const matchedText = match[0];\n          if (matchedText.includes('最初') || matchedText.includes('1つ目') || \n              matchedText.includes('1番目') || matchedText.includes('1個目')) {\n            index = 0;\n          } else if (matchedText.includes('最後') || matchedText.includes('最終')) {\n            index = objects.length - 1;\n          } else if (matchedText.includes('2つ目') || matchedText.includes('2番目') || matchedText.includes('2個目')) {\n            index = 1;\n          } else if (matchedText.includes('3つ目') || matchedText.includes('3番目') || matchedText.includes('3個目')) {\n            index = 2;\n          }\n        }\n        \n        if (index >= 0 && index < objects.length) {\n          console.log(`🔢 Selected object by ordinal: index ${index + 1} of ${objects.length}`);\n          return objects[index];\n        } else {\n          console.warn(`⚠️ Invalid ordinal index: ${index + 1} (available: 1-${objects.length})`);\n        }\n      }\n    }\n    \n    // 序数詞が見つからない場合はデフォルトで最初のオブジェクト\n    console.log(`🔢 No ordinal specified, using first object`);\n    return objects[0];\n  }\n\n  /**\n   * オブジェクト変更実行\n   */\n  async executeObjectModification(parsed) {\n    // コマンドから対象オブジェクトを特定\n    let targetObject = this.findObjectByKeyword(parsed.command);\n    \n    // キーワードで見つからない場合、選択されたオブジェクトを使用\n    if (!targetObject) {\n      if (!this.selectedObject) {\n        return { \n          success: false, \n          message: 'オブジェクトを選択するか、対象を指定してください（例：「猫を赤くして」）' \n        };\n      }\n      targetObject = this.selectedObject;\n    } else {\n      // キーワードで見つけたオブジェクトを選択状態にする\n      this.selectObject(targetObject);\n    }\n    console.log(`🔧 Modifying object: ${targetObject.name}`);\n    console.log(`🔍 Debug - parsed.movement:`, parsed.movement);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        // テクスチャがある場合は色調変更\n        targetObject.material.color.setHex(parsed.color);\n        console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`);\n      } else {\n        // テクスチャがない場合は直接色変更\n        targetObject.material.color.setHex(parsed.color);\n        console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n    \n    // サイズ変更\n    if (parsed.scale !== null) {\n      const currentScale = targetObject.scale.x; // 現在のスケール取得\n      const newScale = currentScale * parsed.scale;\n      targetObject.scale.setScalar(newScale);\n      console.log(`📏 Scale changed from ${currentScale} to ${newScale}`);\n      modified = true;\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      // 現在位置から相対移動\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y, \n        z: currentPos.z + parsed.movement.z\n      };\n      \n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        scale: parsed.scale,\n        movement: parsed.movement,\n        command: parsed.command\n      });\n      \n      return { \n        success: true, \n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          scale: parsed.scale,\n          movement: parsed.movement\n        }\n      };\n    } else {\n      return { \n        success: false, \n        message: '変更可能な属性が見つかりませんでした' \n      };\n    }\n  }\n\n  /**\n   * 削除実行\n   */\n  async executeDelete(parsed) {\n    // コマンドの安全性チェック\n    const command = parsed.command || '';\n    \n    // 「すべて」削除の場合\n    if (parsed.target === 'all' || command.includes('すべて') || command.includes('全部')) {\n      this.clearAll();\n      return { success: true, message: 'すべてのオブジェクトを削除しました' };\n    }\n    \n    // まずコマンドから対象オブジェクトを特定\n    const targetByKeyword = this.findObjectByKeyword(command);\n    \n    // 削除対象の優先順位：\n    // 1. コマンドで指定されたオブジェクト\n    // 2. 選択されているオブジェクト\n    // 3. コマンドが単に「削除」だけの場合は選択オブジェクトを優先\n    \n    let targetObject = null;\n    let deleteReason = '';\n    \n    // コマンドが単純な削除コマンドか判定\n    const isSimpleDeleteCommand = command.match(/^(削除|消して|消す|delete|remove)$/i);\n    \n    if (isSimpleDeleteCommand && this.selectedObject) {\n      // 単純な「削除」コマンドで選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    } else if (targetByKeyword) {\n      // キーワードで特定できた場合\n      targetObject = targetByKeyword;\n      deleteReason = 'コマンドで指定されたオブジェクト';\n    } else if (this.selectedObject) {\n      // その他の場合で選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    }\n    \n    if (targetObject) {\n      const objectId = targetObject.name;\n      console.log(`🗑️ Deleting ${deleteReason}: ${objectId}`);\n      \n      // 選択状態を解除\n      if (targetObject === this.selectedObject) {\n        this.deselectObject();\n      }\n      \n      // オブジェクトを削除\n      const success = this.removeObject(objectId);\n      \n      if (success) {\n        return { \n          success: true, \n          message: `${deleteReason}「${objectId}」を削除しました`,\n          deletedObjectId: objectId\n        };\n      } else {\n        return { \n          success: false, \n          message: 'オブジェクトの削除に失敗しました' \n        };\n      }\n    }\n    \n    return { \n      success: false, \n      message: '削除対象が見つかりませんでした。オブジェクトを選択するか、対象を指定してください' \n    };\n  }\n\n  async executeFileImport(parsed) {\n    try {\n      console.log('🍫 Starting file import process...');\n      \n      // ファイル選択ダイアログを表示\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.style.display = 'none';\n      \n      if (parsed.fileType === 'video') {\n        input.accept = 'video/*';\n      } else {\n        input.accept = 'image/*';\n      }\n      \n      document.body.appendChild(input);\n      \n      return new Promise((resolve, reject) => {\n        input.onchange = async (event) => {\n          try {\n            const file = event.target.files[0];\n            if (!file) {\n              reject(new Error('ファイルが選択されませんでした'));\n              return;\n            }\n            \n            console.log(`📁 Selected file: ${file.name}`);\n            \n            // ファイルのObjectURLを作成\n            const fileUrl = URL.createObjectURL(file);\n            \n            let result;\n            if (parsed.fileType === 'video' || file.type.startsWith('video/')) {\n              result = await this.loadVideoFile(fileUrl, { position: parsed.position });\n            } else {\n              result = await this.loadImageFile(fileUrl, { position: parsed.position });\n            }\n            \n            console.log('✅ File import completed:', result);\n            resolve(result);\n            \n          } catch (error) {\n            console.error('❌ File import failed:', error);\n            reject(error);\n          } finally {\n            document.body.removeChild(input);\n          }\n        };\n        \n        input.oncancel = () => {\n          document.body.removeChild(input);\n          reject(new Error('ファイル選択がキャンセルされました'));\n        };\n        \n        input.click();\n      });\n      \n    } catch (error) {\n      console.error('❌ File import execution failed:', error);\n      throw error;\n    }\n  }\n\n  async executeObjectSelection(parsed) {\n    try {\n      console.log('🎯 Starting object selection...');\n      \n      const objects = this.getSpawnedObjects();\n      if (objects.length === 0) {\n        throw new Error('選択可能なオブジェクトがありません。まずファイルをインポートしてください。');\n      }\n      \n      console.log(`📋 Available objects: ${objects.length}`);\n      \n      // オブジェクト選択UIを作成\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.8);\n        z-index: 10000;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;\n      \n      const container = document.createElement('div');\n      container.style.cssText = `\n        background: #1a1a2e;\n        border-radius: 12px;\n        padding: 24px;\n        max-width: 500px;\n        max-height: 70vh;\n        overflow-y: auto;\n        color: white;\n        font-family: Arial, sans-serif;\n      `;\n      \n      const title = document.createElement('h3');\n      title.textContent = '🎯 オブジェクトを選択してください';\n      title.style.cssText = 'margin: 0 0 16px 0; color: #ec4899;';\n      container.appendChild(title);\n      \n      const objectList = document.createElement('div');\n      objectList.style.cssText = 'margin-bottom: 16px;';\n      \n      objects.forEach((obj, index) => {\n        const item = document.createElement('div');\n        item.style.cssText = `\n          padding: 12px;\n          margin: 8px 0;\n          background: #2a2a3e;\n          border-radius: 8px;\n          cursor: pointer;\n          border: 2px solid transparent;\n          transition: all 0.3s ease;\n        `;\n        \n        const name = obj.userData?.type === 'generated_image' ? '🖼️ 画像' : \n                     obj.userData?.type === 'generated_video' ? '🎬 動画' : '📄 ファイル';\n        const time = new Date(obj.userData?.createdAt).toLocaleTimeString();\n        \n        item.innerHTML = `\n          <div style=\"font-weight: bold;\">${name} #${index + 1}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">作成: ${time}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">位置: (${Math.round(obj.position.x)}, ${Math.round(obj.position.y)}, ${Math.round(obj.position.z)})</div>\n        `;\n        \n        item.onmouseover = () => {\n          item.style.borderColor = '#ec4899';\n          item.style.background = '#3a3a4e';\n        };\n        \n        item.onmouseout = () => {\n          item.style.borderColor = 'transparent';\n          item.style.background = '#2a2a3e';\n        };\n        \n        item.onclick = () => {\n          resolve({ selectedObjectId: obj.id, selectedObject: obj });\n          document.body.removeChild(modal);\n        };\n        \n        objectList.appendChild(item);\n      });\n      \n      container.appendChild(objectList);\n      \n      const cancelBtn = document.createElement('button');\n      cancelBtn.textContent = 'キャンセル';\n      cancelBtn.style.cssText = `\n        background: #666;\n        color: white;\n        border: none;\n        padding: 8px 16px;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 14px;\n      `;\n      \n      cancelBtn.onclick = () => {\n        document.body.removeChild(modal);\n        reject(new Error('オブジェクト選択がキャンセルされました'));\n      };\n      \n      container.appendChild(cancelBtn);\n      modal.appendChild(container);\n      document.body.appendChild(modal);\n      \n      return new Promise((resolve, reject) => {\n        // Promise handlers are set up in the click events above\n      });\n      \n    } catch (error) {\n      console.error('❌ Object selection failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * フォールバック用のテクスチャ作成\n   */\n  createFallbackTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // グラデーション背景\n    const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n    gradient.addColorStop(0, `hsl(${hue}, 70%, 60%)`);\n    gradient.addColorStop(1, `hsl(${(hue + 60) % 360}, 70%, 40%)`);\n    \n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 512, 512);\n    \n    // テキスト描画\n    ctx.fillStyle = 'white';\n    ctx.font = '24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🎨', 256, 230);\n    \n    ctx.font = '16px Arial';\n    ctx.fillText(prompt.slice(0, 20), 256, 270);\n    \n    ctx.font = '14px Arial';\n    ctx.fillStyle = 'rgba(255,255,255,0.7)';\n    ctx.fillText('Placeholder Image', 256, 300);\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * フォールバック用の動画テクスチャ作成\n   */\n  createFallbackVideoTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // アニメーション用の変数\n    let animationFrame = 0;\n    \n    const animate = () => {\n      // グラデーション背景（時間で変化）\n      const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n      const offset = (animationFrame * 2) % 360;\n      gradient.addColorStop(0, `hsl(${(hue + offset) % 360}, 70%, 60%)`);\n      gradient.addColorStop(1, `hsl(${(hue + offset + 60) % 360}, 70%, 40%)`);\n      \n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, 512, 512);\n      \n      // 動的テキスト描画\n      ctx.fillStyle = 'white';\n      ctx.font = '24px Arial';\n      ctx.textAlign = 'center';\n      \n      // 動画アイコンをアニメーション\n      const icons = ['🎬', '🎥', '📹', '🎞️'];\n      const iconIndex = Math.floor(animationFrame / 10) % icons.length;\n      ctx.fillText(icons[iconIndex], 256, 230);\n      \n      ctx.font = '16px Arial';\n      ctx.fillText(prompt.slice(0, 20), 256, 270);\n      \n      ctx.font = '14px Arial';\n      ctx.fillStyle = 'rgba(255,255,255,0.7)';\n      ctx.fillText('Placeholder Video', 256, 300);\n      \n      animationFrame++;\n      \n      // 60FPSでアニメーション\n      setTimeout(() => requestAnimationFrame(animate), 1000/60);\n    };\n    \n    // アニメーション開始\n    animate();\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * 文字列のハッシュ値を計算\n   */\n  hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // 32bit整数に変換\n    }\n    return Math.abs(hash);\n  }\n\n  /**\n   * 生成されたオブジェクト一覧取得\n   */\n  getSpawnedObjects() {\n    return Array.from(this.spawnedObjects.entries()).map(([id, object]) => ({\n      id,\n      name: object.name,\n      userData: object.userData,\n      position: object.position.clone()\n    }));\n  }\n\n  /**\n   * オブジェクト削除\n   */\n  removeObject(objectId) {\n    const object = this.spawnedObjects.get(objectId);\n    if (object) {\n      if (object.userData?.videoElement) {\n        const videoElement = object.userData.videoElement;\n        try {\n          videoElement.pause();\n          if (typeof videoElement.removeAttribute === 'function') {\n            videoElement.removeAttribute('src');\n          } else {\n            videoElement.src = '';\n          }\n          if (typeof videoElement.load === 'function') {\n            videoElement.load();\n          }\n        } catch (error) {\n          console.warn('🎬 Failed to release video element resources:', error);\n        }\n      }\n\n      if (object.userData?.objectUrl) {\n        try {\n          URL.revokeObjectURL(object.userData.objectUrl);\n        } catch (error) {\n          console.warn('🎬 Failed to revoke object URL:', error);\n        }\n      }\n\n      this.experimentGroup.remove(object);\n      this.spawnedObjects.delete(objectId);\n      \n      // ジオメトリとマテリアルのメモリ解放\n      if (object.geometry) object.geometry.dispose();\n      if (object.material) {\n        const materials = Array.isArray(object.material) ? object.material : [object.material];\n        materials.forEach(mat => {\n          if (mat.map && typeof mat.map.dispose === 'function') {\n            mat.map.dispose();\n          }\n          mat.dispose();\n        });\n      }\n      \n      console.log(`🗑️ Removed object: ${objectId}`);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    const objectIds = Array.from(this.spawnedObjects.keys());\n    objectIds.forEach(id => this.removeObject(id));\n    console.log('🧹 Cleared all experimental objects');\n  }\n\n  /**\n   * コマンド履歴取得\n   */\n  getCommandHistory() {\n    return [...this.commandHistory];\n  }\n\n  /**\n   * 生成位置に一時的な視覚インジケーターを表示\n   */\n  createLocationIndicator(relativePosition) {\n    // 目立つ光る球体を作成\n    const geometry = new THREE.SphereGeometry(1, 16, 16);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00,\n      transparent: true,\n      opacity: 0.9\n    });\n    \n    const indicator = new THREE.Mesh(geometry, material);\n    \n    // カメラ相対位置でインジケーターも配置\n    if (this.camera) {\n      const indicatorPos = this.calculateCameraRelativePosition({\n        x: relativePosition.x,\n        y: relativePosition.y + 2, // オブジェクトの少し上に表示\n        z: relativePosition.z\n      });\n      indicator.position.copy(indicatorPos);\n    } else {\n      indicator.position.set(relativePosition.x, relativePosition.y + 2, relativePosition.z);\n    }\n    \n    console.log(`🟢 インジケーター表示: (${indicator.position.x.toFixed(1)}, ${indicator.position.y.toFixed(1)}, ${indicator.position.z.toFixed(1)})`);\n    \n    this.scene.add(indicator);\n    \n    // 設定された時間後に自動削除\n    setTimeout(() => {\n      this.scene.remove(indicator);\n      geometry.dispose();\n      material.dispose();\n    }, this.config.indicatorDuration);\n    \n    // アニメーション（点滅効果）\n    let opacity = 0.8;\n    let direction = -1;\n    const animate = () => {\n      opacity += direction * 0.05;\n      if (opacity <= 0.3) direction = 1;\n      if (opacity >= 0.8) direction = -1;\n      \n      material.opacity = opacity;\n      \n      if (indicator.parent) {\n        requestAnimationFrame(animate);\n      }\n    };\n    animate();\n  }\n\n  /**\n   * カメラ相対位置計算（画面座標対応）\n   */\n  calculateCameraRelativePosition(relativePosition) {\n    if (!this.camera) {\n      if (this.config.enableDebugLogging) {\n        console.warn('📷 Camera not available, using fallback positioning');\n      }\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n\n    try {\n      // カメラの位置と方向を取得\n      const cameraPos = this.camera.position.clone();\n      const cameraDirection = new THREE.Vector3();\n      this.camera.getWorldDirection(cameraDirection);\n      \n      // カメラの右方向と上方向を計算\n      const cameraRight = new THREE.Vector3();\n      const cameraUp = new THREE.Vector3(0, 1, 0); // ワールドの上方向\n      cameraRight.crossVectors(cameraDirection, cameraUp).normalize();\n      const cameraUpActual = new THREE.Vector3();\n      cameraUpActual.crossVectors(cameraRight, cameraDirection).normalize();\n\n      // 相対位置をカメラ座標系で計算\n      const finalPosition = cameraPos.clone();\n      \n      // 前後方向（Z軸）: カメラの向きに沿って（正の値で前方、負の値で後方）\n      finalPosition.add(cameraDirection.clone().multiplyScalar(relativePosition.z));\n      \n      // 左右方向（X軸）: カメラの右方向に沿って\n      finalPosition.add(cameraRight.clone().multiplyScalar(relativePosition.x));\n      \n      // 上下方向（Y軸）: カメラの上方向に沿って\n      finalPosition.add(cameraUpActual.clone().multiplyScalar(relativePosition.y));\n\n      this.logDebug(\n        `📍 Camera relative position calculated: (${finalPosition.x.toFixed(1)}, ${finalPosition.y.toFixed(1)}, ${finalPosition.z.toFixed(1)})`\n      );\n      return finalPosition;\n      \n    } catch (error) {\n      console.error('❌ Camera relative position calculation failed:', error);\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n  }\n\n  /**\n   * カメラを設定\n   */\n  alignPlaneToCamera(plane) {\n    if (!this.camera) {\n      return;\n    }\n\n    const forward = new THREE.Vector3();\n    this.camera.getWorldDirection(forward); // カメラの前方向（前方が負Z）\n    forward.negate(); // 平面の法線をカメラ側へ向ける\n\n    let up = new THREE.Vector3().copy(this.camera.up).applyQuaternion(this.camera.quaternion).normalize();\n    if (Math.abs(forward.dot(up)) > 0.999) {\n      up = new THREE.Vector3(0, 1, 0);\n      if (Math.abs(forward.dot(up)) > 0.999) {\n        up = new THREE.Vector3(0, 0, 1);\n      }\n    }\n\n    const right = new THREE.Vector3().crossVectors(up, forward).normalize();\n    up = new THREE.Vector3().crossVectors(forward, right).normalize();\n\n    const orientation = new THREE.Matrix4();\n    orientation.makeBasis(right, up, forward);\n    plane.quaternion.setFromRotationMatrix(orientation);\n  }\n\n  /**\n   * カメラを設定\n   */\n  setCamera(camera) {\n    this.camera = camera;\n  }\n\n  /**\n   * 設定を更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  setImageService(serviceId) {\n    this.selectedImageService = serviceId || null;\n    this.logDebug('🎯 Updated image service:', this.selectedImageService);\n  }\n\n  getImageService() {\n    return this.selectedImageService;\n  }\n\n  setVideoService(serviceId) {\n    this.selectedVideoService = serviceId || null;\n    this.logDebug('🎬 Updated video service:', this.selectedVideoService);\n  }\n\n  getVideoService() {\n    return this.selectedVideoService;\n  }\n\n\n\n\n\n  /**\n   * 音声制御UIを作成\n   */\n  createAudioControl(videoObject) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    // 音声制御ボタンを作成\n    const audioButton = document.createElement('div');\n    audioButton.className = 'chocodrop-audio-control';\n    audioButton.innerHTML = '♪'; // 初期状態：音楽記号\n    // カスタムツールチップを作成（プロジェクトのデザインシステムに合わせて）\n    const createTooltip = () => {\n      const tooltip = document.createElement('div');\n      tooltip.className = 'chocodrop-audio-tooltip';\n      tooltip.textContent = '音声のオン/オフ切り替え';\n      tooltip.style.cssText = `\n        position: absolute !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 8px !important;\n        padding: 8px 12px !important;\n        color: white !important;\n        font-size: 11px !important;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n        font-weight: 500 !important;\n        white-space: nowrap !important;\n        pointer-events: none !important;\n        z-index: 1000000 !important;\n        opacity: 0 !important;\n        transform: translateY(-100%) translateX(-50%) !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        margin-bottom: 8px !important;\n      `;\n      return tooltip;\n    };\n\n    const tooltip = createTooltip();\n    document.body.appendChild(tooltip);\n\n    // 縦型音量スライダーを作成\n    const createVolumeSlider = () => {\n      const sliderContainer = document.createElement('div');\n      sliderContainer.className = 'chocodrop-volume-slider';\n      sliderContainer.style.cssText = `\n        position: absolute !important;\n        width: 30px !important;\n        height: 100px !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 15px !important;\n        padding: 10px 8px !important;\n        z-index: 1000001 !important;\n        opacity: 0 !important;\n        pointer-events: none !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        display: flex !important;\n        flex-direction: column !important;\n        align-items: center !important;\n        justify-content: center !important;\n      `;\n\n      const slider = document.createElement('input');\n      slider.type = 'range';\n      slider.min = '0';\n      slider.max = '100';\n      slider.value = '100';\n      slider.style.cssText = `\n        width: 80px !important;\n        height: 12px !important;\n        background: rgba(255, 255, 255, 0.2) !important;\n        border-radius: 6px !important;\n        outline: none !important;\n        cursor: pointer !important;\n        -webkit-appearance: none !important;\n        appearance: none !important;\n        transform: rotate(-90deg) !important;\n        transform-origin: center !important;\n      `;\n\n      // WebKit用のスライダースタイル\n      const style = document.createElement('style');\n      style.textContent = `\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n          border: none;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-thumb {\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          border: none;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n      `;\n      document.head.appendChild(style);\n\n      // スライダーのスタイルをカスタマイズ\n      slider.addEventListener('input', (e) => {\n        const value = e.target.value;\n        videoElement.volume = value / 100;\n\n        // アイコンを音量に応じて変更\n        if (value == 0) {\n          audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n          audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n          audioButton.title = 'ミュート中';\n        } else {\n          audioButton.innerHTML = '♪';\n          audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n          audioButton.style.color = 'white !important';\n          audioButton.title = '音声ON';\n        }\n      });\n\n      sliderContainer.appendChild(slider);\n      return sliderContainer;\n    };\n\n    const volumeSlider = createVolumeSlider();\n    document.body.appendChild(volumeSlider);\n\n    audioButton.style.cssText = `\n      position: absolute !important;\n      width: 18px !important;\n      height: 18px !important;\n      background: rgba(0, 0, 0, 0.4) !important;\n      border: 1px solid rgba(255, 255, 255, 0.3) !important;\n      border-radius: 50% !important;\n      color: white !important;\n      font-size: 9px !important;\n      cursor: pointer !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      z-index: 999999 !important;\n      transition: all 0.2s ease !important;\n      user-select: none !important;\n      box-shadow: 0 1px 4px rgba(0,0,0,0.2) !important;\n      backdrop-filter: blur(8px) !important;\n      pointer-events: auto !important;\n      opacity: 1 !important;\n    `;\n\n    let isSliderVisible = false;\n\n    // ホバー効果とスライダー表示\n    audioButton.addEventListener('mouseenter', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.7)';\n      audioButton.style.transform = 'scale(1.05)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.5)';\n\n      if (!isSliderVisible) {\n        // ツールチップを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        tooltip.style.left = `${buttonRect.left + buttonRect.width / 2}px`;\n        tooltip.style.top = `${buttonRect.top - 8}px`;\n        tooltip.style.opacity = '1';\n      }\n    });\n\n    audioButton.addEventListener('mouseleave', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.5)';\n      audioButton.style.transform = 'scale(1.0)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n\n      // ツールチップを非表示\n      tooltip.style.opacity = '0';\n    });\n\n    // 左クリック：ミュートのオン/オフ切り替え\n    audioButton.addEventListener('click', (e) => {\n      e.stopPropagation();\n\n      // スライダーが表示されている場合は閉じる\n      if (isSliderVisible) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n        return;\n      }\n\n      // ミュート切り替え\n      if (videoElement.muted || videoElement.volume === 0) {\n        videoElement.muted = false;\n        videoElement.volume = volumeSlider.querySelector('input').value / 100;\n        audioButton.innerHTML = '♪';\n        audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n        audioButton.style.color = 'white !important';\n        audioButton.title = '音声ON';\n      } else {\n        videoElement.muted = true;\n        audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n        audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n        audioButton.title = 'ミュート中';\n      }\n    });\n\n    // 右クリック：音量スライダーの表示/非表示切り替え\n    audioButton.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      isSliderVisible = !isSliderVisible;\n\n      if (isSliderVisible) {\n        // スライダーを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        volumeSlider.style.left = `${buttonRect.left + buttonRect.width / 2 - 15}px`;\n        volumeSlider.style.top = `${buttonRect.top - 110}px`;\n        volumeSlider.style.opacity = '1';\n        volumeSlider.style.pointerEvents = 'auto';\n\n        // ツールチップを非表示\n        tooltip.style.opacity = '0';\n      } else {\n        // スライダーを非表示\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // 外側クリックでスライダーを閉じる\n    document.addEventListener('click', (e) => {\n      if (isSliderVisible && !audioButton.contains(e.target) && !volumeSlider.contains(e.target)) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // ページに追加\n    document.body.appendChild(audioButton);\n\n    // 音量ボタンは常時表示（非表示機能を削除）\n\n    // 動画オブジェクトに音声制御ボタンを関連付け\n    videoObject.userData.audioControlElement = audioButton;\n\n    // 位置更新関数を保存\n    videoObject.userData.updateAudioControlPosition = () => {\n      this.updateAudioControlPosition(videoObject, audioButton);\n    };\n\n    // 初期位置設定\n    this.updateAudioControlPosition(videoObject, audioButton);\n\n    // アニメーションループで位置を更新\n    if (!this.audioControlUpdateInterval) {\n      this.audioControlUpdateInterval = setInterval(() => {\n        this.spawnedObjects.forEach(obj => {\n          if (obj.userData.updateAudioControlPosition) {\n            obj.userData.updateAudioControlPosition();\n          }\n        });\n      }, 100); // 100msごとに更新\n    }\n\n    // 動画が削除されたときにボタンも削除\n    videoObject.userData.cleanupCallbacks = videoObject.userData.cleanupCallbacks || [];\n    videoObject.userData.cleanupCallbacks.push(() => {\n      if (audioButton.parentNode) {\n        audioButton.parentNode.removeChild(audioButton);\n      }\n    });\n\n    console.log('🔊 Audio control created for video:', videoObject.userData.id);\n  }\n\n  /**\n   * 音声制御ボタンの位置を動画オブジェクトに合わせて更新\n   */\n  updateAudioControlPosition(videoObject, audioButton) {\n    if (!this.camera || !this.renderer || !audioButton.parentNode) return;\n\n    // 動画オブジェクトの3D座標を画面座標に変換\n    const vector = new THREE.Vector3();\n    videoObject.getWorldPosition(vector);\n    vector.project(this.camera);\n\n    // 画面座標に変換\n    const canvas = this.renderer.domElement;\n    const rect = canvas.getBoundingClientRect();\n\n    const x = (vector.x * 0.5 + 0.5) * rect.width + rect.left;\n    const y = -(vector.y * 0.5 - 0.5) * rect.height + rect.top;\n\n    // 動画オブジェクトの右上にボタンを配置\n    const geometry = videoObject.geometry;\n    if (geometry && geometry.parameters) {\n      const width = geometry.parameters.width * videoObject.scale.x;\n      const offsetX = 150; // 動画の右側に固定距離\n      const offsetY = -50; // 動画の上側に固定距離\n\n      audioButton.style.left = `${x + offsetX}px`;\n      audioButton.style.top = `${y + offsetY}px`;\n    } else {\n      // フォールバック: 動画中心の右上\n      audioButton.style.left = `${x + 50}px`;\n      audioButton.style.top = `${y - 20}px`;\n    }\n  }\n\n  /**\n   * 動画音声の再生/停止を切り替え\n   */\n  toggleVideoAudio(videoObject, audioButton) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    if (videoElement.muted) {\n      // ミュート解除：音声再生\n      videoElement.muted = false;\n      audioButton.innerHTML = '🔈'; // 音声再生中マーク\n      console.log('🔊 Audio enabled for video:', videoObject.userData.id);\n    } else {\n      // ミュート：音声停止\n      videoElement.muted = true;\n      audioButton.innerHTML = '🔊'; // 音声ありマーク\n      console.log('🔇 Audio muted for video:', videoObject.userData.id);\n    }\n  }\n\n  /**\n   * CSS2DRenderer初期化（音声制御UIなどの表示に必要）\n   */\n  initializeLabelRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に初期化済み\n    }\n\n    // CSS2DRendererを動的に読み込んで初期化\n    this.loadAndInitializeCSS2DRenderer();\n  }\n\n  /**\n   * CSS2DRendererの準備完了を保証\n   */\n  async ensureCSS2DRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に準備完了\n    }\n\n    // 初期化処理がまだの場合は開始\n    if (!this.css2dInitPromise) {\n      this.css2dInitPromise = this.loadAndInitializeCSS2DRenderer();\n    }\n\n    // 初期化完了まで待機\n    await this.css2dInitPromise;\n  }\n\n  /**\n   * CSS2DRendererの動的読み込みと初期化\n   */\n  async loadAndInitializeCSS2DRenderer() {\n    try {\n      // CSS2DRendererが既に利用可能な場合\n      if (window.THREE && window.THREE.CSS2DRenderer) {\n        this.setupCSS2DRenderer();\n        return;\n      }\n\n      // Three.jsのCSS2DRendererを動的に読み込み\n      console.log('🏷️ Loading CSS2DRenderer dynamically...');\n\n      // CDNからCSS2DRendererを読み込み\n      const module = await import('https://cdn.skypack.dev/three@0.158.0/examples/jsm/renderers/CSS2DRenderer.js');\n\n      // グローバルに設定\n      if (!window.THREE) window.THREE = {};\n      window.THREE.CSS2DRenderer = module.CSS2DRenderer;\n      window.THREE.CSS2DObject = module.CSS2DObject;\n\n      console.log('✅ CSS2DRenderer loaded successfully');\n      this.setupCSS2DRenderer();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to load CSS2DRenderer:', error);\n      console.warn('🔧 Audio controls will not be visible. Please include CSS2DRenderer in your project.');\n    }\n  }\n\n  /**\n   * CSS2DRendererのセットアップ\n   */\n  setupCSS2DRenderer() {\n    try {\n      this.labelRenderer = new window.THREE.CSS2DRenderer();\n      this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n      this.labelRenderer.domElement.style.position = 'absolute';\n      this.labelRenderer.domElement.style.top = '0px';\n      this.labelRenderer.domElement.style.pointerEvents = 'none';\n\n      // メインレンダラーのコンテナに追加\n      if (this.renderer && this.renderer.domElement.parentNode) {\n        this.renderer.domElement.parentNode.appendChild(this.labelRenderer.domElement);\n      } else {\n        document.body.appendChild(this.labelRenderer.domElement);\n      }\n\n      console.log('🏷️ CSS2DRenderer initialized for UI overlays');\n\n      // リサイズハンドラーを追加\n      this.addLabelRendererResizeHandler();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to setup CSS2DRenderer:', error);\n    }\n  }\n\n  /**\n   * CSS2DRendererのリサイズハンドラー追加\n   */\n  addLabelRendererResizeHandler() {\n    if (!this.labelRendererResizeHandler) {\n      this.labelRendererResizeHandler = () => {\n        if (this.labelRenderer) {\n          this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n        }\n      };\n      window.addEventListener('resize', this.labelRendererResizeHandler);\n    }\n  }\n\n  /**\n   * レンダリング更新（アニメーションループで呼び出し）\n   */\n  updateRenderer() {\n    if (this.labelRenderer && this.scene && this.camera) {\n      this.labelRenderer.render(this.scene, this.camera);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * 2025年トレンド: アダプティブ選択インジケーター色計算\n   * 背景色を自動検出してWCAG 2025基準のコントラスト比を保証\n   */\n  getAdaptiveSelectionColor() {\n    // シーンの背景色を取得\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 }; // デフォルト中間色\n    \n    if (backgroundColor) {\n      if (backgroundColor.isColor) {\n        bgColor = {\n          r: backgroundColor.r,\n          g: backgroundColor.g,\n          b: backgroundColor.b\n        };\n      }\n    }\n    \n    // 明度計算（相対輝度）\n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    // WCAG 2025準拠: 4.5:1以上のコントラスト比を確保\n    // 背景が暗い場合は明るい色、明るい場合は暗い色を選択\n    if (bgLuminance < 0.5) {\n      // 暗い背景: 明るいアクセント色\n      return 0x00ff88; // 明るいティール\n    } else {\n      // 明るい背景: 暗いアクセント色  \n      return 0x1a1a2e; // ダークネイビー\n    }\n  }\n  \n  /**\n   * アダプティブホバー色計算\n   */\n  getAdaptiveHoverColor() {\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 };\n    \n    if (backgroundColor && backgroundColor.isColor) {\n      bgColor = {\n        r: backgroundColor.r,\n        g: backgroundColor.g,\n        b: backgroundColor.b\n      };\n    }\n    \n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    if (bgLuminance < 0.5) {\n      // 暗い背景: より明るいホバー色\n      return 0x00ffff; // シアン\n    } else {\n      // 明るい背景: より暗いホバー色\n      return 0xff3366; // ダークピンク\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  dispose() {\n    this.clearAll();\n    if (this.experimentGroup.parent) {\n      this.experimentGroup.parent.remove(this.experimentGroup);\n    }\n  }\n}\n","const IMAGE_SERVICE_STORAGE_KEY = 'chocodrop-service-image';\nconst VIDEO_SERVICE_STORAGE_KEY = 'chocodrop-service-video';\n\n/**\n * Command UI - Web interface for ChocoDrop System\n * Real-time natural language command interface for 3D scenes\n */\nexport class CommandUI {\n  constructor(options = {}) {\n    this.sceneManager = options.sceneManager || null;\n    this.client = options.client || null;\n    this.onControlsToggle = options.onControlsToggle || (() => {});\n    \n    this.isVisible = false;\n    this.container = null;\n    this.input = null;\n    this.output = null;\n    this.currentMode = 'generate';\n\n    // リアルタイム進捗管理\n    this.activeConnections = new Map();\n    this.currentTaskId = null;\n    \n    // 設定\n    this.config = {\n      activationKey: options.activationKey || '@',\n      position: options.position || 'bottom-right',\n      width: options.width || 450,\n      maxHeight: options.maxHeight || 600,\n      theme: options.theme || 'dark',\n      showExamples: options.showExamples !== false,\n      autoScroll: options.autoScroll !== false,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n\n    this.availableImageServices = [];\n    this.availableVideoServices = [];\n    this.selectedImageService = null;\n    this.selectedVideoService = null;\n    this.imageServiceSelect = null;\n    this.videoServiceSelect = null;\n    this.serviceSelectorContainer = null;\n    this.serviceSelectorStatus = null;\n    this.serviceSelectorContent = null;\n    this.serviceSelectorRetryButton = null;\n    this.serviceSelectorSaveButton = null;\n    this.serviceSelectorCancelButton = null;\n    this.serviceModalOverlay = null;\n    this.serviceModal = null;\n    this.servicesLoading = false;\n    this.isExpanded = false;\n    this.overlayTextarea = null;\n    this.pendingImageService = null;\n    this.pendingVideoService = null;\n\n    try {\n      const storedImage = localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY);\n      const storedVideo = localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY);\n      console.log('🔍 Debug localStorage read:', { storedImage, storedVideo, IMAGE_SERVICE_STORAGE_KEY, VIDEO_SERVICE_STORAGE_KEY });\n      if (storedImage) {\n        this.selectedImageService = storedImage;\n        console.log('✅ Set selectedImageService:', this.selectedImageService);\n      }\n      if (storedVideo) {\n        this.selectedVideoService = storedVideo;\n        console.log('✅ Set selectedVideoService:', this.selectedVideoService);\n      }\n      console.log('🔍 Final values:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    } catch (error) {\n      console.warn('⚠️ Failed to load stored service selections:', error);\n    }\n\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    this.applyServiceSelectionToSceneManager();\n    console.log('🔍 After applyServiceSelectionToSceneManager - UI:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    console.log('🔍 After applyServiceSelectionToSceneManager - SceneManager:', { selectedImageService: this.sceneManager?.selectedImageService, selectedVideoService: this.sceneManager?.selectedVideoService });\n\n    // テーマモード状態管理 (light, dark, wabisabi)\n    this.currentTheme = localStorage.getItem('live-command-theme') || 'light';\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    \n    // Undo/Redo システム\n    this.commandHistory = [];\n    this.currentHistoryIndex = -1;\n    this.maxHistorySize = 50; // 最大コマンド保存数\n    \n    this.initUI();\n    this.bindEvents();\n\n    if (!this.client && this.sceneManager && this.sceneManager.client) {\n      this.client = this.sceneManager.client;\n    }\n\n    this.createServiceModal();\n    this.createFloatingChocolateIcon();\n\n    // DOM読み込み完了後にスタイルを確実に適用\n    document.addEventListener('DOMContentLoaded', () => {\n      this.refreshStyles();\n    });\n\n    this.logDebug('🎮 CommandUI initialized');\n\n    if (!this.selectedImageService || !this.selectedVideoService) {\n      this.openServiceModal(true);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * UI要素の作成と配置\n   */\n  initUI() {\n    // メインコンテナ\n    this.container = document.createElement('div');\n    this.container.id = 'live-command-ui';\n    this.container.style.cssText = this.getContainerStyles();\n\n    // 2025年トレンド：Progressive Disclosure（ホバー時のみブランド表示）\n    const brandIndicator = document.createElement('div');\n    brandIndicator.className = 'progressive-brand-indicator';\n    brandIndicator.style.cssText = `\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;\n    \n    // Progressive Disclosure: ホバー/クリックでブランド名表示\n    const brandText = document.createElement('div');\n    brandText.className = 'progressive-brand-text';\n    brandText.style.cssText = `\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.25)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;\n    brandText.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">🍫</span> <span style=\"color: #6366f1;\">ChocoDrop</span>';\n    \n    // Progressive Disclosure イベント\n    brandIndicator.addEventListener('mouseenter', () => {\n      brandText.style.opacity = '1';\n      brandText.style.transform = 'translateY(0) scale(1)';\n      brandIndicator.style.transform = 'scale(1.2)';\n      brandIndicator.style.opacity = '1';\n    });\n    \n    brandIndicator.addEventListener('mouseleave', () => {\n      brandText.style.opacity = '0';\n      brandText.style.transform = 'translateY(5px) scale(0.9)';\n      brandIndicator.style.transform = 'scale(1)';\n      brandIndicator.style.opacity = '0.7';\n    });\n    \n    brandIndicator.appendChild(brandText);\n    this.container.appendChild(brandIndicator);\n\n    // 出力エリア（タスクカードコンテナ）- 非表示に変更\n    this.output = document.createElement('div');\n    this.outputDiv = this.output; // 両方の参照を保持（互換性のため）\n    this.output.id = 'command-output';\n    this.output.className = 'command-output';\n    this.output.style.cssText = this.getOutputStyles();\n    // フローティングカード用コンテナ\n    this.floatingContainer = document.createElement('div');\n    this.floatingContainer.id = 'floating-cards-container';\n    this.floatingContainer.style.cssText = `\n      position: fixed;\n      bottom: var(--floating-bottom, 120px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-start;\n    `;\n\n    // タスクカード管理用\n    this.taskCards = new Map();\n\n    // 入力フィールドラッパー（展開ボタン用）\n    this.inputWrapper = document.createElement('div');\n    this.inputWrapper.style.cssText = `\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;\n\n    // Ultra-Simple 単一入力フィールド（自動リサイズ対応）\n    this.input = document.createElement('textarea');\n    this.input.rows = 1;\n    this.input.id = 'command-input';\n    this.input.placeholder = '「右上にドラゴンを」「美しい桜の森を中央に」など... ✨';\n    this.input.style.cssText = this.getInputStyles();\n\n    // 展開ボタン（初期状態は非表示）\n    this.expandButton = document.createElement('div');\n    this.expandButton.innerHTML = '⤢';\n    this.expandButton.title = 'テキスト全体を表示';\n    this.expandButton.style.cssText = `\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n      border-radius: 6px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;\n\n    // 展開ボタンのホバー効果\n    this.expandButton.addEventListener('mouseenter', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      this.expandButton.style.transform = 'scale(1.1)';\n    });\n\n    this.expandButton.addEventListener('mouseleave', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      this.expandButton.style.transform = 'scale(1)';\n    });\n\n    // 展開ボタンのクリック処理\n    this.expandButton.addEventListener('click', () => {\n      if (this.isExpanded) {\n        this.hideOverlayTextarea();\n      } else {\n        this.showOverlayTextarea();\n      }\n    });\n\n    // ラッパーに要素を追加\n    this.inputWrapper.appendChild(this.input);\n    this.inputWrapper.appendChild(this.expandButton);\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合）\n\n    // ラジオボタン風モードセレクター\n    const modeSelector = this.createRadioModeSelector();\n\n    // ミニマルアクションボタン\n    const actionContainer = this.createMinimalActions();\n\n    // ×クローズボタンをフォーム右上に追加\n    const closeButton = document.createElement('div');\n    closeButton.innerHTML = '×';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;\n\n    closeButton.addEventListener('mouseover', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      closeButton.style.transform = 'scale(1.1)';\n    });\n\n    closeButton.addEventListener('mouseout', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.transform = 'scale(1)';\n    });\n\n    closeButton.addEventListener('click', () => {\n      this.hide();\n    });\n\n    // 組み立て（ヘッダー削除、ブランドバッジは既に追加済み）\n    // this.container.appendChild(this.output); // 大きなタスク表示エリアをDOMに追加しない\n    this.container.appendChild(closeButton);\n    this.container.appendChild(modeSelector);\n    this.container.appendChild(this.inputWrapper);\n    this.container.appendChild(actionContainer);\n\n    // フローティングカードコンテナをbodyに直接追加\n    document.body.appendChild(this.floatingContainer);\n\n    // DOM に追加\n    document.body.appendChild(this.container);\n\n    // 初回テーマ適用\n    this.applyTheme();\n\n    // 日本語IME対応のcomposition state管理\n    this.isComposing = false;\n    this.hasCompositionJustEnded = false;\n\n    // リアルタイム入力監視とコマンド検出（IME対応）\n    this.input.addEventListener('input', () => {\n      // IME入力中はコマンド検出を停止\n      if (this.isComposing) {\n        return;\n      }\n      \n      // 自動リサイズ処理\n      this.autoResizeTextarea();\n      \n      // キーワードハイライト適用\n      this.applyKeywordHighlighting();\n      \n      this.detectCommandType();\n    });\n    \n    // 日本語IME composition events\n    this.input.addEventListener('compositionstart', () => {\n      this.isComposing = true;\n    });\n    \n    this.input.addEventListener('compositionend', () => {\n      this.isComposing = false;\n      \n      // Safariのみフラグ設定（他のブラウザは不要）\n      const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n      if (isSafari) {\n        this.hasCompositionJustEnded = true;\n      }\n      \n      // 確定後のコマンド検出を実行\n      setTimeout(() => {\n        this.autoResizeTextarea();\n        this.detectCommandType();\n      }, 10);\n    });\n    \n    // Safari判定\n    const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n    \n    // 日本語IME対応Enterキー処理（Safari対応版）\n    this.input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        // Safari: compositionend直後のEnterをスキップ\n        if (isSafari && this.hasCompositionJustEnded) {\n          this.hasCompositionJustEnded = false;\n          return;\n        }\n        \n        // その他のブラウザ: isComposingチェック\n        if (!isSafari && (e.isComposing || this.isComposing)) {\n          return;\n        }\n        \n\n\n        e.preventDefault();\n        this.executeCommand();\n      }\n    });\n    \n    // 初期メッセージ\n    if (this.config.showExamples) {\n      // 起動メッセージ削除\n      // 起動時は静かに待機\n    }\n  }\n\n  /**\n   * モードセレクター作成\n   */\n  createMinimalActions() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;\n\n    // 左側: Clear All ボタン（承認済みのLayout Bデザイン）\n    const leftSection = document.createElement('div');\n    leftSection.style.cssText = 'display: flex; gap: 8px; align-items: center;';\n\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">🧹</span> Clear All';\n    clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    clearBtn.addEventListener('click', () => this.clearAllWithConfirmation());\n\n    // 履歴ボタン（将来実装用スペース確保）- 海外UI標準対応：同一幅\n    const historyBtn = document.createElement('button');\n    historyBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">📚</span> History';\n    historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n    historyBtn.style.opacity = '0.5';\n    historyBtn.disabled = true;\n    historyBtn.title = '履歴機能（開発中）';\n\n    leftSection.appendChild(clearBtn);\n    leftSection.appendChild(historyBtn);\n\n    // 右側: テーマトグルと設定（ヘッダーから移動）\n    const rightSection = document.createElement('div');\n    rightSection.style.cssText = 'display: flex; gap: 6px; align-items: center;';\n\n    const themeToggle = document.createElement('button');\n    const getThemeIcon = () => {\n      const themeConfig = {\n        light: '🌙',\n        dark: '🍵',\n        wabisabi: '☀️'\n      };\n      return themeConfig[this.currentTheme] || '🌙';\n    };\n\n    const getThemeTitle = () => {\n      const titleConfig = {\n        light: 'ダークモードに切り替え',\n        dark: '侘び寂びモードに切り替え',\n        wabisabi: 'ライトモードに切り替え'\n      };\n      return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n    };\n\n    const getThemeIconWithFilter = () => {\n      const icon = getThemeIcon();\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (icon === '☀️') {\n        return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n      } else if (icon === '🍵') {\n        return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n      } else {\n        return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n      }\n    };\n\n    themeToggle.innerHTML = getThemeIconWithFilter();\n    themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    themeToggle.title = getThemeTitle();\n    themeToggle.addEventListener('click', () => this.toggleTheme());\n\n    const settingsButton = document.createElement('button');\n    settingsButton.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">⚙️</span>';\n    settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    settingsButton.title = 'サービス設定を開く';\n    settingsButton.addEventListener('click', () => this.openServiceModal());\n\n    rightSection.appendChild(themeToggle);\n    rightSection.appendChild(settingsButton);\n\n    container.appendChild(leftSection);\n    container.appendChild(rightSection);\n\n    // 参照を保持\n    this.clearBtn = clearBtn;\n    this.historyBtn = historyBtn;\n    this.themeToggle = themeToggle;\n    this.settingsButton = settingsButton;\n\n    return container;\n  }\n\n  createServiceSelectorSection() {\n    this.serviceSelectorContainer = document.createElement('div');\n    this.serviceSelectorContainer.id = 'service-selector';\n    this.serviceSelectorContainer.style.cssText = `\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;\n\n    this.serviceSelectorStatus = document.createElement('div');\n    this.serviceSelectorStatus.textContent = 'サービス情報を読み込んでいます...';\n    this.serviceSelectorStatus.style.fontSize = '12px';\n    this.serviceSelectorStatus.style.opacity = '0.8';\n    this.serviceSelectorStatus.style.marginBottom = '8px';\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);\n\n    this.serviceSelectorContent = document.createElement('div');\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);\n\n    this.updateServiceSelectorTheme();\n    return this.serviceSelectorContainer;\n  }\n\n  createServiceModal() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.remove();\n      this.serviceModalOverlay = null;\n      this.serviceModal = null;\n    }\n\n    this.serviceModalOverlay = document.createElement('div');\n    this.serviceModalOverlay.id = 'chocodrop-service-modal-overlay';\n    this.serviceModalOverlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;\n\n    this.serviceModalOverlay.addEventListener('click', (event) => {\n      if (event.target === this.serviceModalOverlay) {\n        this.closeServiceModal();\n      }\n    });\n\n    this.serviceModal = document.createElement('div');\n    this.serviceModal.className = 'chocodrop-service-modal';\n    this.serviceModal.style.cssText = `\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;\n\n    const title = document.createElement('h2');\n    title.textContent = 'サービス設定';\n    title.style.cssText = `\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;\n\n    const subtitle = document.createElement('p');\n    subtitle.textContent = '利用するサービスを選択してください。';\n    subtitle.style.cssText = `\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;\n\n    const selector = this.createServiceSelectorSection();\n\n    const actionRow = document.createElement('div');\n    actionRow.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;\n\n    this.serviceSelectorRetryButton = document.createElement('button');\n    this.serviceSelectorRetryButton.textContent = '再読み込み';\n    this.serviceSelectorRetryButton.style.cssText = `\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorRetryButton.addEventListener('click', () => this.initializeServiceSelector(true));\n\n    const actionButtons = document.createElement('div');\n    actionButtons.style.cssText = 'display: flex; gap: 8px;';\n\n    this.serviceSelectorCancelButton = document.createElement('button');\n    this.serviceSelectorCancelButton.textContent = 'Cancel';\n    this.serviceSelectorCancelButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorCancelButton.addEventListener('click', () => this.closeServiceModal());\n\n    this.serviceSelectorSaveButton = document.createElement('button');\n    this.serviceSelectorSaveButton.textContent = 'Save';\n    this.serviceSelectorSaveButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;\n    this.serviceSelectorSaveButton.addEventListener('click', () => this.handleServiceSave());\n\n    actionButtons.appendChild(this.serviceSelectorCancelButton);\n    actionButtons.appendChild(this.serviceSelectorSaveButton);\n\n    actionRow.appendChild(this.serviceSelectorRetryButton);\n    actionRow.appendChild(actionButtons);\n\n    this.serviceModal.appendChild(title);\n    this.serviceModal.appendChild(subtitle);\n    this.serviceModal.appendChild(selector);\n    this.serviceModal.appendChild(actionRow);\n\n    this.serviceModalOverlay.appendChild(this.serviceModal);\n    document.body.appendChild(this.serviceModalOverlay);\n\n    this.updateServiceSelectorTheme();\n    this.toggleServiceRetryButton(false);\n  }\n\n  openServiceModal(forceFetch = false) {\n    if (!this.serviceModalOverlay) {\n      this.createServiceModal();\n    }\n\n    this.serviceModalOverlay.style.display = 'flex';\n    requestAnimationFrame(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.opacity = '1';\n      }\n    });\n\n    this.resetPendingSelections();\n    this.initializeServiceSelector(forceFetch);\n  }\n\n  closeServiceModal() {\n    if (!this.serviceModalOverlay) {\n      return;\n    }\n\n    this.serviceModalOverlay.style.opacity = '0';\n    setTimeout(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.display = 'none';\n      }\n      this.resetPendingSelections();\n    }, 150);\n  }\n\n  async initializeServiceSelector(force = false) {\n    if (this.servicesLoading && !force) {\n      return;\n    }\n\n    if (!this.client || typeof this.client.getAvailableServices !== 'function') {\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n      return;\n    }\n\n    this.servicesLoading = true;\n    this.setServiceSelectorStatus('サービス情報を読み込んでいます...', 'info');\n    this.toggleServiceRetryButton(false);\n    this.setServiceButtonsEnabled(false);\n\n    try {\n      if (typeof this.client.ensureInitialized === 'function') {\n        await this.client.ensureInitialized();\n      }\n\n      const response = await this.client.getAvailableServices();\n      if (!response || response.success === false || !response.metadata) {\n        throw new Error(response?.error || 'サービス情報が取得できませんでした');\n      }\n\n      this.availableImageServices = Array.isArray(response.metadata?.image) ? response.metadata.image : [];\n      this.availableVideoServices = Array.isArray(response.metadata?.video) ? response.metadata.video : [];\n\n      this.selectedImageService = this.resolveServiceSelection(\n        'image',\n        this.availableImageServices,\n        response.default?.image\n      );\n\n      this.selectedVideoService = this.resolveServiceSelection(\n        'video',\n        this.availableVideoServices,\n        response.default?.video\n      );\n\n      this.pendingImageService = this.selectedImageService;\n      this.pendingVideoService = this.selectedVideoService;\n\n      this.populateServiceSelector();\n      this.applyServiceSelectionToSceneManager();\n      this.setServiceButtonsEnabled(true);\n    } catch (error) {\n      console.error('❌ Failed to initialize service selector:', error);\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした。サーバーが起動しているか確認のうえ、再読み込みしてください。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n    } finally {\n      this.servicesLoading = false;\n    }\n  }\n\n  setServiceSelectorStatus(message, type = 'info') {\n    if (!this.serviceSelectorStatus) {\n      return;\n    }\n    this.serviceSelectorStatus.textContent = message;\n    this.serviceSelectorStatus.dataset.statusType = type;\n    this.serviceSelectorStatus.classList.toggle('service-selector-helper', type !== 'error');\n    this.updateServiceSelectorTheme();\n  }\n\n  toggleServiceRetryButton(visible) {\n    if (!this.serviceSelectorRetryButton) {\n      return;\n    }\n    this.serviceSelectorRetryButton.style.display = visible ? 'inline-flex' : 'none';\n    this.updateServiceSelectorTheme();\n  }\n\n  resolveServiceSelection(type, services, defaultId) {\n    if (!services || services.length === 0) {\n      return null;\n    }\n\n    const storageKey = type === 'image' ? IMAGE_SERVICE_STORAGE_KEY : VIDEO_SERVICE_STORAGE_KEY;\n    let storedId = null;\n    try {\n      storedId = localStorage.getItem(storageKey);\n    } catch (error) {\n      console.warn('⚠️ Failed to access localStorage:', error);\n    }\n\n    const isStoredValid = storedId && services.some(service => service.id === storedId);\n    let resolvedId = isStoredValid ? storedId : null;\n\n    if (!resolvedId && defaultId && services.some(service => service.id === defaultId)) {\n      resolvedId = defaultId;\n    }\n\n    if (!resolvedId) {\n      resolvedId = services[0]?.id || null;\n    }\n\n    try {\n      if (resolvedId) {\n        localStorage.setItem(storageKey, resolvedId);\n      } else {\n        localStorage.removeItem(storageKey);\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to persist service selection:', error);\n    }\n\n    return resolvedId;\n  }\n\n  populateServiceSelector() {\n    if (!this.serviceSelectorContent) {\n      return;\n    }\n\n    this.serviceSelectorContent.innerHTML = '';\n\n    const hasImage = this.availableImageServices.length > 0;\n    const hasVideo = this.availableVideoServices.length > 0;\n\n    if (!hasImage && !hasVideo) {\n      this.setServiceSelectorStatus('利用可能なサービスが見つかりませんでした。', 'error');\n      return;\n    }\n\n    this.setServiceSelectorStatus('利用するサービスを選択してください。', 'info');\n\n    if (hasImage) {\n      const imageRow = this.buildServiceRow('image', '画像 (T2I)', this.availableImageServices, this.pendingImageService || this.selectedImageService);\n      this.serviceSelectorContent.appendChild(imageRow);\n    }\n\n    if (hasVideo) {\n      const videoRow = this.buildServiceRow('video', '動画 (T2V)', this.availableVideoServices, this.pendingVideoService || this.selectedVideoService);\n      this.serviceSelectorContent.appendChild(videoRow);\n    }\n\n    this.updateServiceSelectorTheme();\n  }\n\n  buildServiceRow(type, labelText, services, selectedId) {\n    const row = document.createElement('div');\n    row.className = `service-row service-row-${type}`;\n    row.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;\n\n    const label = document.createElement('label');\n    label.textContent = labelText;\n    label.style.fontSize = '13px';\n    label.style.fontWeight = '600';\n    row.appendChild(label);\n\n    const select = document.createElement('select');\n    select.dataset.serviceType = type;\n    select.style.fontFamily = 'inherit';\n    select.style.width = '100%';\n\n    services.forEach(service => {\n      const option = document.createElement('option');\n      option.value = service.id;\n      option.textContent = service.name || service.id;\n      if (service.description) {\n        option.title = service.description;\n      }\n      select.appendChild(option);\n    });\n\n    if (selectedId && services.some(service => service.id === selectedId)) {\n      select.value = selectedId;\n    }\n\n    select.addEventListener('change', (event) => {\n      this.onServiceSelectionChange(type, event.target.value);\n    });\n\n    row.appendChild(select);\n\n    const description = document.createElement('div');\n    description.className = 'service-description';\n    description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    description.style.fontSize = '11px';\n    description.style.opacity = '0.75';\n    description.style.lineHeight = '1.4';\n    description.style.minHeight = '14px';\n    row.appendChild(description);\n\n    select.addEventListener('change', () => {\n      description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    });\n\n    if (type === 'image') {\n      this.imageServiceSelect = select;\n    } else {\n      this.videoServiceSelect = select;\n    }\n\n    return row;\n  }\n\n  onServiceSelectionChange(type, serviceId) {\n    if (type === 'image') {\n      this.pendingImageService = serviceId;\n    } else {\n      this.pendingVideoService = serviceId;\n    }\n\n    const info = this.findServiceInfo(type, serviceId);\n    const description = type === 'image'\n      ? this.imageServiceSelect?.parentElement?.querySelector('.service-description')\n      : this.videoServiceSelect?.parentElement?.querySelector('.service-description');\n\n    if (description) {\n      description.textContent = info?.description || '';\n    }\n  }\n\n  handleServiceSave() {\n    const newImageId = this.pendingImageService || this.selectedImageService;\n    const newVideoId = this.pendingVideoService || this.selectedVideoService;\n\n    if (newImageId) {\n      try {\n        localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY, newImageId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist image service selection:', error);\n      }\n      this.selectedImageService = newImageId;\n      this.sceneManager?.setImageService(newImageId);\n    }\n\n    if (newVideoId) {\n      try {\n        localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY, newVideoId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist video service selection:', error);\n      }\n      this.selectedVideoService = newVideoId;\n      this.sceneManager?.setVideoService(newVideoId);\n    }\n\n    const imageInfo = this.findServiceInfo('image', newImageId);\n    const videoInfo = this.findServiceInfo('video', newVideoId);\n\n    if (imageInfo) {\n      this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`, 'system');\n    }\n    if (videoInfo) {\n      this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`, 'system');\n    }\n\n    this.closeServiceModal();\n  }\n\n  setServiceButtonsEnabled(enabled) {\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.disabled = !enabled;\n      this.serviceSelectorSaveButton.style.opacity = enabled ? '1' : '0.6';\n      this.serviceSelectorSaveButton.style.cursor = enabled ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  resetPendingSelections() {\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    if (this.imageServiceSelect && this.selectedImageService) {\n      this.imageServiceSelect.value = this.selectedImageService;\n    }\n    if (this.videoServiceSelect && this.selectedVideoService) {\n      this.videoServiceSelect.value = this.selectedVideoService;\n    }\n\n    if (this.serviceSelectorContent && this.serviceSelectorContent.childElementCount > 0) {\n      this.populateServiceSelector();\n    }\n  }\n\n  findServiceInfo(type, serviceId) {\n    const list = type === 'image' ? this.availableImageServices : this.availableVideoServices;\n    return list.find(service => service.id === serviceId) || null;\n  }\n\n  applyServiceSelectionToSceneManager() {\n    if (!this.sceneManager) {\n      return;\n    }\n    this.sceneManager.setImageService(this.selectedImageService);\n    this.sceneManager.setVideoService(this.selectedVideoService);\n  }\n\n  updateServiceSelectorTheme() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.style.background = this.isDarkMode\n        ? 'rgba(8, 11, 26, 0.55)'\n        : 'rgba(229, 231, 255, 0.45)';\n    }\n\n    if (this.serviceModal) {\n      this.serviceModal.style.background = this.isDarkMode\n        ? 'rgba(17, 24, 39, 0.15)'\n        : 'rgba(255, 255, 255, 0.15)';\n      this.serviceModal.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.4)'\n        : '1px solid rgba(99, 102, 241, 0.25)';\n      this.serviceModal.style.color = this.isDarkMode ? '#e5e7ff' : '#1f2937';\n    }\n\n    if (this.serviceSelectorStatus) {\n      const type = this.serviceSelectorStatus.dataset?.statusType;\n      const statusColor = type === 'error'\n        ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n        : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.75)');\n      this.serviceSelectorStatus.style.color = statusColor;\n    }\n\n    if (this.serviceSelectorContainer) {\n      const labels = this.serviceSelectorContainer.querySelectorAll('label');\n      labels.forEach(label => {\n        label.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(31, 41, 55, 0.9)');\n      });\n\n      const selects = this.serviceSelectorContainer.querySelectorAll('select');\n      selects.forEach(select => {\n        select.style.background = this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.15)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.18)' : 'rgba(99, 102, 241, 0.12)');\n        select.style.border = this.isWabiSabiMode\n          ? '1px solid rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? '1px solid rgba(129, 140, 248, 0.45)' : '1px solid rgba(99, 102, 241, 0.45)');\n        select.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937');\n        select.style.padding = '10px 12px';\n        select.style.borderRadius = '10px';\n        select.style.fontSize = '13px';\n        select.style.outline = 'none';\n        select.style.boxShadow = this.isWabiSabiMode\n          ? '0 12px 24px rgba(93, 64, 55, 0.25)'\n          : (this.isDarkMode\n            ? '0 12px 28px rgba(15, 23, 42, 0.5)'\n            : '0 12px 24px rgba(99, 102, 241, 0.2)');\n      });\n\n      const descriptions = this.serviceSelectorContainer.querySelectorAll('.service-description');\n      descriptions.forEach(desc => {\n        desc.style.color = this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.7)'\n          : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.7)');\n      });\n    }\n\n    if (this.serviceSelectorRetryButton) {\n      this.serviceSelectorRetryButton.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.25)'\n        : (this.isDarkMode\n          ? 'rgba(129, 140, 248, 0.35)'\n          : 'rgba(99, 102, 241, 0.15)');\n      this.serviceSelectorRetryButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.5)'\n        : (this.isDarkMode\n          ? '1px solid rgba(129, 140, 248, 0.5)'\n          : '1px solid rgba(99, 102, 241, 0.45)');\n      this.serviceSelectorRetryButton.style.color = this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#f9fafb' : '#1e1b4b');\n      this.serviceSelectorRetryButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 0 8px rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '0 0 8px rgba(129, 140, 248, 0.45)'\n          : '0 0 8px rgba(99, 102, 241, 0.35)');\n    }\n\n    if (this.serviceSelectorCancelButton) {\n      this.serviceSelectorCancelButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '1px solid rgba(209, 213, 219, 0.3)'\n          : '1px solid rgba(148, 163, 184, 0.5)');\n      this.serviceSelectorCancelButton.style.color = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.85)'\n        : (this.isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(30, 41, 59, 0.85)');\n    }\n\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, #6D4C41, #5D4037)'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')'\n          : 'linear-gradient(135deg, #818cf8, #a855f7)');\n      this.serviceSelectorSaveButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 16px 28px rgba(93, 64, 55, 0.35)'\n        : (this.isDarkMode\n          ? '0 16px 28px rgba(99, 102, 241, 0.4)'\n          : '0 16px 28px rgba(129, 140, 248, 0.35)');\n    }\n  }\n\n  /**\n   * ラジオボタン風モードセレクター作成\n   */\n  createRadioModeSelector() {\n    const container = document.createElement('div');\n    container.className = 'radio-mode-selector';\n    container.style.cssText = `\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))')};\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(141, 110, 99, 0.4)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(255, 255, 255, 0.25)')};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;\n\n    const modes = [\n      { value: 'generate', label: 'Generate', icon: '✨' },\n      { value: 'import', label: 'Import', icon: '📥' },\n      { value: 'modify', label: 'Modify', icon: '🔧' },\n      { value: 'delete', label: 'Delete', icon: '🗑️' }\n    ];\n\n    this.radioModeButtons = {};\n\n    modes.forEach(mode => {\n      const button = document.createElement('div');\n      button.className = `mode-option ${mode.value}`;\n      button.style.cssText = `\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)')};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n      `;\n\n      const icon = document.createElement('div');\n      icon.textContent = mode.icon;\n      icon.style.cssText = `\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${this.isDarkMode \n          ? 'hue-rotate(220deg) saturate(0.8) brightness(1.2)' \n          : 'hue-rotate(240deg) saturate(0.7) brightness(0.9)'};\n        transition: filter 0.2s ease;\n      `;\n\n      const label = document.createElement('span');\n      label.textContent = mode.label;\n\n      // AUTOバッジを作成\n      const autoBadge = document.createElement('div');\n      autoBadge.className = 'auto-badge';\n      autoBadge.textContent = 'AUTO';\n      autoBadge.style.cssText = `\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;\n\n      button.appendChild(icon);\n      button.appendChild(label);\n      button.appendChild(autoBadge);\n\n      // クリックイベント\n      button.addEventListener('click', () => {\n        if (mode.value === 'import') {\n          this.triggerFileSelection();\n        } else {\n          this.selectMode(mode.value, true); // trueは手動選択を示す\n        }\n      });\n\n      this.radioModeButtons[mode.value] = { button, autoBadge };\n      container.appendChild(button);\n    });\n\n\n    this.radioModeContainer = container;\n    // デフォルトでGenerateを選択\n    this.selectMode('generate', false);\n\n    return container;\n  }\n\n  /**\n   * モード選択（ラジオボタンUI更新）\n   */\n  selectMode(mode, isManual = false, detectedKeyword = null) {\n    this.currentMode = mode;\n\n    // 全ボタンをリセット\n    Object.keys(this.radioModeButtons).forEach(key => {\n      const { button, autoBadge } = this.radioModeButtons[key];\n      button.style.color = this.isWabiSabiMode\n        ? '#F5F5F5'\n        : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n      button.style.background = 'transparent';\n      button.style.border = '1px solid transparent';\n      button.style.transform = 'scale(1)';\n      button.style.boxShadow = 'none';\n      // AUTOバッジを非表示\n      autoBadge.style.display = 'none';\n      autoBadge.style.opacity = '0';\n    });\n\n    // 選択されたボタンをハイライト（2025年仕様）\n    const { button, autoBadge } = this.radioModeButtons[mode];\n    \n    // 2025 Glassmorphism選択状態\n    const selectedGlass = this.isWabiSabiMode\n      ? {\n          background: 'linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))',\n          border: '1px solid rgba(109, 76, 65, 0.4)',\n          boxShadow: '0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)',\n          color: '#F5F5F5'\n        }\n      : (this.isDarkMode\n        ? {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))',\n            border: '1px solid rgba(99, 102, 241, 0.4)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)',\n            color: '#a5b4fc'\n          }\n        : {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))',\n            border: '1px solid rgba(99, 102, 241, 0.3)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)',\n            color: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n          });\n\n    button.style.color = selectedGlass.color;\n    button.style.background = selectedGlass.background;\n    button.style.border = selectedGlass.border;\n    button.style.boxShadow = selectedGlass.boxShadow;\n    button.style.transform = 'scale(1.02)';\n\n    // AUTOバッジの表示制御\n    if (!isManual && detectedKeyword) {\n      // 自動切り替えの場合はAUTOバッジを表示\n      autoBadge.style.display = 'inline-block';\n      setTimeout(() => {\n        autoBadge.style.opacity = '1';\n        autoBadge.style.transform = 'scale(1)';\n      }, 100);\n      \n      // 3秒後にフェードアウト\n      setTimeout(() => {\n        autoBadge.style.opacity = '0';\n        autoBadge.style.transform = 'scale(0.8)';\n        setTimeout(() => {\n          autoBadge.style.display = 'none';\n        }, 200);\n      }, 3000);\n    }\n\n    // パルス効果を追加\n    if (!isManual) {\n      this.addPulseEffect(button);\n      this.addContainerGlow(mode);\n    }\n\n    // プレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n\n    // モード切り替え時の入力欄メッセージ上書き機能\n    if (isManual) {\n      this.clearInputOnModeSwitch(mode);\n    }\n\n    // Importモード専用処理\n    if (mode === 'import' || this.selectedFile) {\n      this.showImportInterface();\n    } else {\n      this.hideImportInterface();\n    }\n\n    // Deleteモード専用処理\n    if (mode === 'delete' && isManual) {\n      this.handleDeleteModeSelection();\n    }\n\n    // Modifyモード専用処理\n    if (mode === 'modify' && isManual) {\n      this.handleModifyModeSelection();\n    }\n\n    // モード切り替えメッセージは表示しない（UIで分かるため）\n  }\n\n  /**\n   * パルス効果を追加\n   */\n  addPulseEffect(element) {\n    // 既存のアニメーションをリセット\n    element.style.animation = 'none';\n    \n    // 少し遅らせてからアニメーションを適用（リフロー強制）\n    setTimeout(() => {\n      element.style.animation = 'smartModePulse 0.6s ease-out';\n    }, 10);\n    \n    // アニメーション終了後にクリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 610);\n    \n    // CSSアニメーションを動的に追加（まだ存在しない場合）\n    this.ensurePulseAnimation();\n  }\n\n  /**\n   * パルスアニメーション用CSSを確保\n   */\n  ensurePulseAnimation() {\n    if (document.getElementById('smart-mode-pulse-animation')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'smart-mode-pulse-animation';\n    style.textContent = `\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コンテナグロー効果\n   */\n  addContainerGlow(mode) {\n    const container = this.radioModeContainer;\n    if (!container) return;\n\n    const glowColors = {\n      generate: 'rgba(79, 70, 229, 0.4)',   // 紫のグロー\n      modify: 'rgba(236, 72, 153, 0.4)',    // ピンクのグロー  \n      delete: 'rgba(107, 114, 128, 0.3)'    // グレーのグロー\n    };\n\n    // 一時的にグロー効果を適用\n    container.style.boxShadow = `0 0 20px ${glowColors[mode]}, 0 0 40px ${glowColors[mode]}`;\n    container.style.borderColor = glowColors[mode].replace('0.4', '0.6').replace('0.3', '0.5');\n    \n    // 1秒後にグロー効果を除去\n    setTimeout(() => {\n      container.style.boxShadow = '';\n      container.style.borderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.15)';\n    }, 1000);\n  }\n\n  getActionButtonStyles(variant = 'secondary') {\n    const baseStyles = `\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;\n\n    if (variant === 'secondary') {\n      // Clear All, History ボタン用 - 美しい配置と統一感\n      return baseStyles + `\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.6)'\n          : (this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)')};\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? '#d1d5db' : '#374151')};\n        text-align: center;\n        white-space: nowrap;\n      `;\n    } else if (variant === 'icon') {\n      // テーマトグル、設定ボタン用\n      return baseStyles + `\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(255, 255, 255, 0.4)'};\n        color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'};\n      `;\n    }\n  }\n\n  /**\n   * 破壊的アクション用ボタンスタイル（赤系ガラス効果）\n   */\n  getDestructiveButtonStyles() {\n    return `\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode ? 'rgba(220, 38, 127, 0.4)' : 'rgba(190, 24, 93, 0.35)'};\n      border-radius: 6px;\n      background: ${this.isDarkMode ? 'rgba(220, 38, 127, 0.3)' : 'rgba(190, 24, 93, 0.25)'};\n      color: ${this.isDarkMode ? '#fca5a5' : '#dc2626'};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `;\n  }\n\n  getCommandTypeIndicatorStyles() {\n    return `\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)'};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `;\n  }\n\n  /**\n   * テキストエリアの自動リサイズ処理（最大2行）\n   */\n  autoResizeTextarea() {\n    // 高さをリセットして正確な scrollHeight を取得\n    this.input.style.height = 'auto';\n    \n    // 現在のコンテンツに基づいて高さを計算\n    const lineHeight = 22; // CSS で設定した line-height\n    const padding = 28; // 上下のパディング合計 (14px * 2)\n    const maxLines = 2;\n    const maxHeight = (lineHeight * maxLines) + padding;\n    \n    // スクロール高さに基づいて新しい高さを決定\n    const newHeight = Math.min(this.input.scrollHeight, maxHeight);\n    \n    // 高さを適用\n    this.input.style.height = newHeight + 'px';\n    \n    // 2行を超える場合はスクロールを有効化と展開ボタン表示\n    if (this.input.scrollHeight > maxHeight) {\n      this.input.style.overflowY = 'auto';\n      // 展開ボタンを表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'flex';\n      }\n    } else {\n      this.input.style.overflowY = 'hidden';\n      // 展開ボタンを非表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * リアルタイムコマンドタイプ検出\n   */\n  detectCommandType() {\n    const input = this.input.value.trim();\n    if (!input) {\n      this.selectMode('generate', false);\n      return;\n    }\n\n    const commandType = this.analyzeCommandType(input);\n\n    // Delete/Modifyは手動選択を優先、自動切り替えしない\n    if (this.currentMode === 'delete' || this.currentMode === 'modify') {\n      return; // 現在のモードを維持\n    }\n    // Generate/Importのみ自動切り替え\n    this.selectMode(commandType.type, false, commandType.detectedKeyword);\n  }\n\n  /**\n   * ルールベースコマンド分析\n   */\n  analyzeCommandType(text) {\n    this.logDebug(`🔍 Analyzing command: \"${text}\"`);\n\n    // メディアタイプの検出\n    const mediaInfo = this.detectMediaType(text);\n    \n    // 削除コマンドの検出\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除' },\n      { pattern: /消去/, keyword: '消去' },\n      { pattern: /消して/, keyword: '消して' },\n      { pattern: /消す/, keyword: '消す' },\n      { pattern: /取り除/, keyword: '取り除' },\n      { pattern: /除去/, keyword: '除去' },\n      { pattern: /削除して/, keyword: '削除して' },\n      { pattern: /delete/i, keyword: 'delete' },\n      { pattern: /remove/i, keyword: 'remove' },\n      { pattern: /clear/i, keyword: 'clear' },\n      { pattern: /erase/i, keyword: 'erase' }\n    ];\n    \n    // 変更・移動コマンドの検出\n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動' },\n      { pattern: /動かして/, keyword: '動かして' },\n      { pattern: /変更/, keyword: '変更' },\n      { pattern: /変えて/, keyword: '変えて' },\n      { pattern: /修正/, keyword: '修正' },\n      { pattern: /調整/, keyword: '調整' },\n      { pattern: /を.*に.*して/, keyword: '変更' },\n      { pattern: /move/i, keyword: 'move' },\n      { pattern: /change/i, keyword: 'change' },\n      { pattern: /modify/i, keyword: 'modify' },\n      { pattern: /edit/i, keyword: 'edit' }\n    ];\n    \n    // 生成コマンドの検出（デフォルト）\n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って' },\n      { pattern: /生成/, keyword: '生成' },\n      { pattern: /作成/, keyword: '作成' },\n      { pattern: /描いて/, keyword: '描いて' },\n      { pattern: /書いて/, keyword: '書いて' },\n      { pattern: /create/i, keyword: 'create' },\n      { pattern: /generate/i, keyword: 'generate' },\n      { pattern: /make/i, keyword: 'make' },\n      { pattern: /draw/i, keyword: 'draw' }\n    ];\n\n    // 削除パターンチェック\n    for (const { pattern, keyword } of deletePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Delete pattern matched: ${keyword}`);\n        return {\n          type: 'delete',\n          confidence: 0.9,\n          reason: '削除キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: true,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 変更パターンチェック\n    for (const { pattern, keyword } of modifyPatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Modify pattern matched: ${keyword}`);\n        return {\n          type: 'modify',\n          confidence: 0.8,\n          reason: '変更キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 生成パターンチェック\n    for (const { pattern, keyword } of generatePatterns) {\n      if (pattern.test(text)) {\n        return {\n          type: 'generate',\n          confidence: mediaInfo.confidence,\n          reason: mediaInfo.reason,\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // デフォルト（生成モード）\n    this.logDebug(`ℹ️ No specific pattern matched, defaulting to generate mode`);\n    return {\n      type: 'generate',\n      confidence: mediaInfo.confidence,\n      reason: mediaInfo.reason,\n      mediaType: mediaInfo.type,\n      requiresConfirmation: false,\n      detectedKeyword: null\n    };\n  }\n\n  /**\n   * Extract all command keywords from the analyzeCommandType patterns\n   * Returns an array of {pattern, keyword, type} objects\n   */\n  getAllCommandKeywords() {\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除', type: 'delete' },\n      { pattern: /消去/, keyword: '消去', type: 'delete' },\n      { pattern: /消して/, keyword: '消して', type: 'delete' },\n      { pattern: /消す/, keyword: '消す', type: 'delete' },\n      { pattern: /取り除/, keyword: '取り除', type: 'delete' },\n      { pattern: /除去/, keyword: '除去', type: 'delete' },\n      { pattern: /削除して/, keyword: '削除して', type: 'delete' },\n      { pattern: /delete/i, keyword: 'delete', type: 'delete' },\n      { pattern: /remove/i, keyword: 'remove', type: 'delete' },\n      { pattern: /clear/i, keyword: 'clear', type: 'delete' },\n      { pattern: /erase/i, keyword: 'erase', type: 'delete' }\n    ];\n    \n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動', type: 'modify' },\n      { pattern: /動かして/, keyword: '動かして', type: 'modify' },\n      { pattern: /変更/, keyword: '変更', type: 'modify' },\n      { pattern: /変えて/, keyword: '変えて', type: 'modify' },\n      { pattern: /修正/, keyword: '修正', type: 'modify' },\n      { pattern: /調整/, keyword: '調整', type: 'modify' },\n      { pattern: /move/i, keyword: 'move', type: 'modify' },\n      { pattern: /change/i, keyword: 'change', type: 'modify' },\n      { pattern: /modify/i, keyword: 'modify', type: 'modify' },\n      { pattern: /edit/i, keyword: 'edit', type: 'modify' }\n    ];\n    \n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って', type: 'generate' },\n      { pattern: /生成/, keyword: '生成', type: 'generate' },\n      { pattern: /作成/, keyword: '作成', type: 'generate' },\n      { pattern: /描いて/, keyword: '描いて', type: 'generate' },\n      { pattern: /書いて/, keyword: '書いて', type: 'generate' },\n      { pattern: /create/i, keyword: 'create', type: 'generate' },\n      { pattern: /generate/i, keyword: 'generate', type: 'generate' },\n      { pattern: /make/i, keyword: 'make', type: 'generate' },\n      { pattern: /draw/i, keyword: 'draw', type: 'generate' }\n    ];\n\n    return [...deletePatterns, ...modifyPatterns, ...generatePatterns];\n  }\n\n  /**\n   * Apply keyword highlighting to the input text\n   */\n  applyKeywordHighlighting() {\n    if (!this.input || this.isComposing) {\n      return;\n    }\n\n    const text = this.input.value;\n    if (!text.trim()) {\n      this.clearKeywordHighlighting();\n      return;\n    }\n\n    // Get all keyword patterns\n    const allKeywords = this.getAllCommandKeywords();\n    \n    // Find matches in the text\n    const matches = [];\n    for (const { pattern, keyword, type } of allKeywords) {\n      const match = text.match(pattern);\n      if (match) {\n        const startIndex = match.index;\n        const endIndex = startIndex + match[0].length;\n        matches.push({\n          start: startIndex,\n          end: endIndex,\n          keyword: match[0], // Use actual matched text\n          type: type\n        });\n      }\n    }\n\n    // Sort matches by position to avoid overlaps\n    matches.sort((a, b) => a.start - b.start);\n\n    // Apply highlighting if we have matches\n    if (matches.length > 0) {\n      this.createHighlightOverlay(text, matches);\n    } else {\n      this.clearKeywordHighlighting();\n    }\n  }\n\n  /**\n   * Create a highlighting overlay div that sits behind the textarea\n   */\n  createHighlightOverlay(text, matches) {\n    // Remove existing overlay\n    this.clearKeywordHighlighting();\n\n    // Create highlight overlay div\n    this.highlightOverlay = document.createElement('div');\n    this.highlightOverlay.className = 'keyword-highlight-overlay';\n    \n    // Copy textarea styles to overlay\n    const computedStyle = window.getComputedStyle(this.input);\n    this.highlightOverlay.style.cssText = `\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      overflow: hidden;\n      font-family: ${computedStyle.fontFamily};\n      font-size: ${computedStyle.fontSize};\n      font-weight: ${computedStyle.fontWeight};\n      line-height: ${computedStyle.lineHeight};\n      letter-spacing: ${computedStyle.letterSpacing};\n      padding: ${computedStyle.padding};\n      border: ${computedStyle.borderWidth} solid transparent;\n      margin: 0;\n      z-index: 1;\n      color: transparent;\n      background: transparent;\n    `;\n\n    // Build highlighted HTML\n    let highlightedHTML = '';\n    let lastIndex = 0;\n\n    for (const match of matches) {\n      // Add text before this match\n      highlightedHTML += this.escapeHtml(text.substring(lastIndex, match.start));\n      \n      // Add highlighted keyword\n      const color = this.getKeywordColor(match.type);\n      highlightedHTML += `<span style=\"color: ${color}; font-weight: 600; background: linear-gradient(135deg, ${color}22 0%, ${color}11 100%); border-radius: 3px; padding: 1px 2px;\">${this.escapeHtml(match.keyword)}</span>`;\n      \n      lastIndex = match.end;\n    }\n\n    // Add remaining text\n    highlightedHTML += this.escapeHtml(text.substring(lastIndex));\n\n    this.highlightOverlay.innerHTML = highlightedHTML;\n\n    // Make textarea background transparent so overlay shows through\n    this.input.style.background = 'transparent';\n    this.input.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n\n    // Insert overlay before textarea\n    this.inputWrapper.insertBefore(this.highlightOverlay, this.input);\n  }\n\n  /**\n   * Get the appropriate color for each keyword type\n   */\n  getKeywordColor(type) {\n    switch (type) {\n      case 'delete':\n        return '#ef4444'; // Red for delete\n      case 'modify': \n        return '#f59e0b'; // Orange for modify\n      case 'generate':\n      default:\n        return '#8b5cf6'; // Purple for generate (brand color)\n    }\n  }\n\n  /**\n   * Clear keyword highlighting\n   */\n  clearKeywordHighlighting() {\n    if (this.highlightOverlay) {\n      this.highlightOverlay.remove();\n      this.highlightOverlay = null;\n    }\n    \n    // Restore textarea background\n    if (this.input) {\n      this.input.style.background = this.isDarkMode ? 'rgba(31, 41, 55, 0.8)' : 'rgba(255, 255, 255, 0.9)';\n    }\n  }\n\n  /**\n   * Escape HTML characters\n   */\n  escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  /**\n   * メディアタイプ検出（画像/動画）\n   */\n  detectMediaType(text) {\n    const videoPatterns = [\n      /動画|ビデオ|映像|ムービー/,\n      /video|movie|clip/i\n    ];\n    \n    const imagePatterns = [\n      /画像|写真|絵|イラスト|イメージ/,\n      /image|picture|photo|illustration/i\n    ];\n    \n    if (videoPatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'video',\n        confidence: 0.8,\n        reason: '動画生成コマンド'\n      };\n    }\n    \n    if (imagePatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'image',\n        confidence: 0.8,\n        reason: '画像生成コマンド'\n      };\n    }\n    \n    // デフォルトは画像\n    return {\n      type: 'image',\n      confidence: 0.6,\n      reason: '生成コマンド（画像デフォルト）'\n    };\n  }\n\n  /**\n   * コマンドタイプインジケーター表示\n   */\n  showCommandTypeIndicator(commandInfo) {\n    const { type, confidence, reason } = commandInfo;\n    \n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    // Proactive UX: 低信頼度時に提案表示\n    if (confidence < 0.7) {\n      this.showProactiveSuggestion(type, confidence);\n    } else {\n      this.hideProactiveSuggestion();\n    }\n    \n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[type].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n    // this.commandTypeIndicator.style.display = 'block';\n    // this.commandTypeIndicator.style.cursor = 'default';\n    \n    // スワイプジェスチャー対応\n    this.enableGestureControl();\n  }\n\n  /**\n   * Proactive UX: 低信頼度時の提案表示\n   */\n  showProactiveSuggestion(detectedType, confidence) {\n    if (!this.proactiveSuggestion) {\n      this.proactiveSuggestion = document.createElement('div');\n      this.proactiveSuggestion.id = 'proactive-suggestion';\n      this.proactiveSuggestion.style.cssText = `\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;\n      // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n      // 代わりに入力フィールドの前に挿入\n      this.container.insertBefore(this.proactiveSuggestion, this.input);\n    }\n\n    const alternativeTypes = ['generate', 'modify', 'delete'].filter(t => t !== detectedType);\n    const suggestion = alternativeTypes[0]; // 最初の代替案\n\n    const suggestionLabels = {\n      generate: '🎨 生成',\n      modify: '✏️ 変更', \n      delete: '🗑️ 削除'\n    };\n\n    this.proactiveSuggestion.innerHTML = `\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style=\"margin-top: 4px; font-size: 10px; opacity: 0.8;\">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;\n    \n    this.proactiveSuggestion.style.display = 'block';\n    \n    // クリックで提案モードに変更\n    this.proactiveSuggestion.onclick = () => {\n      this.currentMode = suggestion;\n      this.hideProactiveSuggestion();\n      this.updateIndicatorForMode(suggestion, 0.9);\n    };\n  }\n\n  /**\n   * Proactive UX提案を非表示\n   */\n  hideProactiveSuggestion() {\n    if (this.proactiveSuggestion) {\n      this.proactiveSuggestion.style.display = 'none';\n    }\n  }\n\n  /**\n   * 指定モードでインジケーター更新\n   */\n  updateIndicatorForMode(mode, confidence) {\n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[mode].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n  }\n\n  /**\n   * ジェスチャーコントロール有効化\n   */\n  enableGestureControl() {\n    // 旧スワイプジェスチャー機能は削除（ラジオボタンUIに統合済み）\n    // ラジオボタンで直接モード選択可能になったため、スワイプ操作は不要\n    this.gestureEnabled = true;\n  }\n\n  /**\n   * アクションボタン作成\n   */\n  createActionButtons() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;\n\n    // 履歴ボタン削除 - タスク進行状況に置き換え済み\n\n    // クリアオールボタン\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '🧹 全削除';\n    clearBtn.style.cssText = this.getModernButtonStyles('danger');\n    clearBtn.addEventListener('click', () => this.clearAll());\n\n    // historyBtn削除済み\n    container.appendChild(clearBtn);\n\n    return container;\n  }\n\n  /**\n   * スタイル定義\n   */\n  getContainerStyles() {\n    const positions = {\n      'bottom-right': 'bottom: 20px; right: 20px;',\n      'bottom-left': 'bottom: 20px; left: 20px;',\n      'top-right': 'top: 20px; right: 20px;',\n      'top-left': 'top: 20px; left: 20px;',\n      'center': 'top: 50%; left: 50%; transform: translate(-50%, -50%);'\n    };\n\n    // 2025 Glassmorphism仕様：ダーク・ライト両対応\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(99, 102, 241, 0.2)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)'\n    };\n\n    // 侘び寂びモード - 枯山水の静寂：独自のアイデンティティ\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))',\n      backdropFilter: 'blur(20px) saturate(120%)',\n      border: '1px solid rgba(93, 64, 55, 0.5)',\n      boxShadow: '0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      position: fixed;\n      ${positions[this.config.position] || positions['bottom-right']}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  getHeaderStyles() {\n    // ダークモードと同じ紫グラデーションで統一\n    const gradientColors = 'linear-gradient(135deg, #4f46e5, #7c3aed)';\n\n    return `\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `;\n  }\n\n  getOutputStyles() {\n    // カスタムスクロールバーのCSSを注入\n    this.addScrollbarStyles();\n\n    return `\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.2)'};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)'};\n    `;\n  }\n\n  /**\n   * スクロールバーのカスタムスタイルをページに注入\n   */\n  addScrollbarStyles() {\n    if (document.getElementById('custom-scrollbar-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'custom-scrollbar-styles';\n    style.textContent = `\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.5)'};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* 2025年トレンド: 微細な浮遊感アニメーション */\n      @keyframes gentleFloat {\n        0%, 100% { \n          transform: translateY(0px) scale(1);\n        }\n        25% { \n          transform: translateY(-2px) scale(1.005);\n        }\n        50% { \n          transform: translateY(-1px) scale(1.002);\n        }\n        75% { \n          transform: translateY(-3px) scale(1.008);\n        }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  getInputStyles() {\n    // 2025 Glassmorphism仕様：入力フィールド\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))',\n      border: '1px solid rgba(255, 255, 255, 0.5)',\n      boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)'\n    };\n\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))',\n      border: '1px solid rgba(97, 97, 97, 0.5)',\n      boxShadow: '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(55, 65, 81, 0.6)'};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `;\n  }\n\n  getModernButtonStyles(type) {\n    const styles = {\n      primary: this.isWabiSabiMode ? `\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      ` : `\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,\n      secondary: this.isWabiSabiMode ? `\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,\n      danger: this.isWabiSabiMode ? `\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `\n    };\n\n    return `\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `;\n  }\n\n  getModeButtonStyles(isActive, mode) {\n    // モードカラー設定\n    const modeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)', // Deep purple - 創造性\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',    // Vibrant pink - 変更・調整\n      delete: 'rgba(107, 114, 128, 0.15)'                    // 半透明グレー - セカンダリボタンスタイル\n    };\n    \n    return `\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive ? 'white' : 'rgba(255, 255, 255, 0.7)'};\n      background: ${isActive ? modeColors[mode] : 'transparent'};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `;\n  }\n\n  /**\n   * イベントバインディング\n   */\n  bindEvents() {\n    // キーボードショートカット\n    document.addEventListener('keydown', (e) => {\n      // 設定されたキーでUI表示切替\n      if (e.key === this.config.activationKey) {\n        e.preventDefault();\n        this.toggle();\n        return;\n      }\n      \n      // Enterキー処理はinitUI()内で行うため、ここでは処理しない\n      // （IME対応のため）\n      \n      // Escapeで非表示\n      if (this.isVisible && e.key === 'Escape') {\n        this.hide();\n      }\n      \n      // Ctrl+Z/Ctrl+Y でUndo/Redo\n      if (this.isVisible && e.ctrlKey) {\n        if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault();\n          this.undo();\n        } else if (e.key === 'y' || (e.key === 'z' && e.shiftKey)) {\n          e.preventDefault();\n          this.redo();\n        }\n      }\n    });\n\n    // 入力フィールドのスタイル調整\n    this.input.addEventListener('focus', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8BC34A';\n        this.input.style.boxShadow = '0 0 5px rgba(139, 195, 74, 0.5)';\n      } else {\n        this.input.style.borderColor = '#74b9ff';\n        this.input.style.boxShadow = '0 0 5px rgba(116, 185, 255, 0.5)';\n      }\n    });\n\n    this.input.addEventListener('blur', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8D6E63';\n        this.input.style.boxShadow = 'none';\n      } else {\n        this.input.style.borderColor = '#4a90e2';\n        this.input.style.boxShadow = 'none';\n      }\n    });\n  }\n\n  /**\n   * UI表示/非表示切替\n   */\n  toggle() {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * UI表示\n   */\n  show() {\n    this.container.style.display = 'flex';\n    this.container.style.flexDirection = 'column';\n    this.floatingContainer.style.display = 'flex';\n\n    // UIフォームの位置に合わせて配置（少し遅延して正確な位置を取得）\n    setTimeout(() => {\n      const containerRect = this.container.getBoundingClientRect();\n      this.floatingContainer.style.left = containerRect.left + 'px';\n      this.floatingContainer.style.top = (containerRect.top - 80) + 'px';\n      this.floatingContainer.style.width = containerRect.width + 'px';\n      this.floatingContainer.style.transform = 'none';\n    }, 50);\n\n    this.isVisible = true;\n    this.input.focus();\n\n    // フォーム表示中はチョコアイコンを隠す\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0';\n      this.floatingChocolateIcon.style.pointerEvents = 'none';\n    }\n\n    // コントロールを無効化\n    this.onControlsToggle(true);\n    // コントロール停止時も静かに\n  }\n\n  /**\n   * UI非表示\n   */\n  hide() {\n    this.container.style.display = 'none';\n    this.floatingContainer.style.display = 'none';\n    this.isVisible = false;\n\n    // フォーム非表示時はチョコアイコンを再表示\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.pointerEvents = 'auto';\n    }\n\n    // コントロールを再有効化\n    this.onControlsToggle(false);\n    this.logDebug('🎮 コントロールを再開');\n  }\n\n  /**\n   * モード切り替え\n   */\n  switchMode(mode) {\n    if (this.currentMode === mode) return;\n    \n    this.currentMode = mode;\n    \n    // モードボタンのスタイル更新\n    this.container.querySelectorAll('[data-mode]').forEach(btn => {\n      const isActive = btn.dataset.mode === mode;\n      btn.style.cssText = this.getModeButtonStyles(isActive, btn.dataset.mode);\n    });\n    \n    // 入力フィールドのプレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n    \n    // 実行ボタンのラベルと色更新\n    const executeBtn = this.container.querySelector('#execute-btn');\n    const labels = {\n      generate: '🎨 Generate Object',\n      modify: '✏️ Apply Changes', \n      delete: '🗑️ Delete Objects'\n    };\n    \n    const buttonColors = {\n      generate: 'linear-gradient(135deg, #5b21b6, #4c1d95)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)', \n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    executeBtn.innerHTML = `<span>${labels[mode]}</span>`;\n    executeBtn.style.background = buttonColors[mode];\n    \n    // モード切り替え通知は不要（ボタンで分かるため）\n  }\n  \n  /**\n   * モード別プレースホルダー\n   */\n  getPlaceholderForMode(mode) {\n    const placeholders = {\n      generate: '「猫の画像を作って」と話しかけて ⏎ ✨',\n      import: 'ファイルを選択して ⏎ 📁',\n      modify: '選択後「ピンクに変更」と伝えて ⏎ ✏️',\n      delete: '選択後、コマンドをそのまま送って ⏎ 🗑️'\n    };\n    return placeholders[mode] || placeholders.generate;\n  }\n\n  /**\n   * コマンド実行\n   */\n  async executeCommand() {\n    const command = this.input.value.trim();\n    if (!command) return;\n\n    // 最終的なコマンドタイプ判定\n    const commandType = this.analyzeCommandType(command);\n\n    if (this.selectedFile) {\n      if (this.currentMode !== 'import') {\n        this.selectMode('import', false);\n      }\n      this.currentMode = 'import';\n    } else {\n      this.currentMode = commandType.type;\n    }\n\n    // 削除の場合は確認ダイアログ\n    if (commandType.requiresConfirmation) {\n      const confirmed = await this.showDeleteConfirmation(command);\n      if (!confirmed) {\n        this.addOutput('❌ 削除をキャンセルしました', 'system');\n        return;\n      }\n    }\n\n    // 入力をクリア\n    this.input.value = '';\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.style.display = 'none';\n    this.hideProactiveSuggestion();\n\n    // コマンド表示（メディアタイプ付き）\n    const mediaIcon = commandType.mediaType === 'video' ? '🎬' : '🖼️';\n    // タスクカード作成\n    const taskId = this.addTaskCard(command, { status: 'processing' });\n\n    // コマンド実行前の状態を履歴に保存\n    this.saveCommandToHistory({\n      command: command,\n      mode: this.currentMode,\n      mediaType: commandType.mediaType,\n      timestamp: Date.now()\n    });\n\n    try {\n      // 処理メッセージ表示\n      // タスクカードは既に1183行目で作成済み（taskId変数）\n      // 重複を避けるため、ここでは作成しない\n\n      let result;\n      \n      // モードに応じたコマンド処理\n      const modePrefix = this.getModePrefix(this.currentMode);\n      const fullCommand = `${modePrefix}${command}`;\n\n      // モード別の実行処理\n      this.logDebug('🔍 Current mode check:', this.currentMode);\n      if (this.currentMode === 'import') {\n        this.logDebug('📁 Import mode detected - bypassing SceneManager');\n        // Importモード: 直接処理（SceneManagerを迂回）\n        if (!this.selectedFile) {\n          throw new Error('ファイルが選択されていません。まずファイルを選択してください。');\n        }\n        result = await this.handleImportCommand(command);\n      } else if (this.sceneManager) {\n        // 他のモード: SceneManager経由\n        result = await this.sceneManager.executeCommand(fullCommand);\n      } else if (this.client) {\n        // モードに応じてAPIエンドポイントを選択\n        if (this.currentMode === 'generate') {\n          // 生成モード: 新しいオブジェクトを作成\n          if (commandType.mediaType === 'video') {\n            result = await this.client.generateVideo(command, {\n              model: this.selectedVideoService || undefined\n            });\n          } else {\n            result = await this.client.generateImage(command, {\n              service: this.selectedImageService || undefined\n            });\n          }\n        } else if (this.currentMode === 'modify') {\n          // 変更モード: 既存オブジェクトを変更（選択が必要）\n          if (!this.selectedObject) {\n            throw new Error('変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。');\n          }\n          result = await this.client.modifySelectedObject(this.selectedObject, command);\n        } else if (this.currentMode === 'delete') {\n          // 削除モード: オブジェクト選択チェック\n          if (!this.selectedObject && !this.sceneManager?.getSelectedObjects()?.length) {\n            this.addOutput('⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。', 'system');\n            return;\n          }\n          // 削除モード: 確認ダイアログを表示してから削除\n          const confirmMessage = `本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;\n          if (!confirm(confirmMessage)) {\n            this.addOutput('❌ 削除がキャンセルされました', 'system');\n            return;\n          }\n          result = await this.client.deleteObjects(command);\n        } else {\n          // その他のモード\n          result = await this.client.executeCommand(fullCommand);\n        }\n      } else {\n        throw new Error('SceneManager または Client が設定されていません');\n      }\n\n      // taskId取得とSSE接続開始\n      if (result && result.taskId) {\n        this.connectToProgress(result.taskId, taskId);\n        this.currentTaskId = result.taskId;\n      }\n\n      // 成功メッセージ\n      const successMessages = {\n        generate: ``, // 成功メッセージ削除 - 結果で十分\n        modify: '✅ 変更を適用しました',\n        delete: '🗑️ 削除しました'\n      };\n      \n      // タスクカード完了\n      if (taskId) {\n        this.updateTaskCard(taskId, 'completed');\n      }\n      \n      // 詳細情報表示\n      if (result.modelName) {\n        // デバッグ情報削除 - モーダル表示用に保存\n      }\n      \n      if (result.objectId) {\n        // オブジェクトID削除\n      }\n      \n      if (result.position) {\n        // 位置情報削除\n      }\n\n      if (commandType.mediaType) {\n        // メディアタイプ削除\n      }\n\n    } catch (error) {\n      const errorMessages = {\n        generate: `❌ ${commandType.mediaType === 'video' ? '動画' : '画像'}生成エラー`,\n        modify: '❌ 変更エラー', \n        delete: '❌ 削除エラー'\n      };\n      // タスクカードエラー\n      if (taskId) {\n        this.updateTaskCard(taskId, 'error');\n      }\n\n      this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`, 'error');\n      console.error('Command execution error:', error);\n    }\n\n    // 2025年UXトレンド: コマンド実行後の自動選択解除\n    if (this.sceneManager && this.sceneManager.selectedObject) {\n      // Modify/Deleteコマンド後は選択を自動解除してストレス軽減\n      if (this.currentMode === 'modify' || this.currentMode === 'delete') {\n        setTimeout(() => {\n          this.sceneManager.deselectObject();\n        }, 500); // 少し遅延させて操作完了を視覚的に確認\n      }\n    }\n\n    // 出力エリアを最下部にスクロール\n    if (this.config.autoScroll) {\n      this.scrollToBottom();\n    }\n  }\n\n  /**\n   * 削除確認ダイアログ\n   */\n  async showConfirmationDialog(options) {\n    const {\n      icon = '🗑️',\n      title = '確認',\n      message = 'この操作を実行しますか？',\n      confirmText = '実行',\n      cancelText = 'キャンセル',\n      confirmColor = '#ef4444'\n    } = options;\n\n    return new Promise((resolve) => {\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;\n\n      const dialog = document.createElement('div');\n      dialog.style.cssText = `\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(239, 235, 233, 0.4), rgba(215, 204, 200, 0.3))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.3)' : 'rgba(255, 255, 255, 0.5)')};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isWabiSabiMode\n          ? '0 8px 32px rgba(93, 64, 55, 0.2), 0 0 0 1px rgba(161, 136, 127, 0.2)'\n          : (this.isDarkMode\n            ? '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)'\n            : '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)')};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;\n\n      dialog.innerHTML = `\n        <div style=\"font-size: 56px; margin-bottom: 20px;\">${icon}</div>\n        <h3 style=\"margin: 0 0 16px 0; color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;\">\n          ${title}\n        </h3>\n        <p style=\"margin: 0 0 28px 0; color: ${this.isDarkMode ? '#d1d5db' : '#6b7280'}; line-height: 1.6; font-size: 16px;\">\n          ${message}\n        </p>\n        <div style=\"display: flex; gap: 8px; justify-content: center;\">\n          <button id=\"cancel-btn\" style=\"\n            padding: 14px 24px;\n            background: ${this.isDarkMode \n              ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n              : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))'};\n            border: 1px solid ${this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)'};\n            border-radius: 12px;\n            color: ${this.isDarkMode ? '#d1d5db' : '#374151'};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          \">${cancelText}</button>\n          <button id=\"confirm-btn\" style=\"\n            padding: 14px 24px;\n            background: ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')' \n              : confirmColor === '#ef4444'\n              ? 'linear-gradient(135deg, #ef4444, #dc2626)'\n              : 'linear-gradient(135deg, #ff7b47, #f97316)'};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'rgba(99, 102, 241, 0.3)' \n              : confirmColor === '#ef4444' \n              ? 'rgba(239, 68, 68, 0.3)' \n              : 'rgba(255, 123, 71, 0.3)'};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          \">${confirmText}</button>\n        </div>\n      `;\n\n      modal.appendChild(dialog);\n      document.body.appendChild(modal);\n\n      // アニメーション開始\n      requestAnimationFrame(() => {\n        modal.style.opacity = '1';\n        dialog.style.transform = 'scale(1)';\n        dialog.style.opacity = '1';\n      });\n\n      // イベントリスナー\n      dialog.querySelector('#cancel-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(false);\n      };\n\n      dialog.querySelector('#confirm-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(true);\n      };\n\n      // ESCキーでキャンセル\n      const escHandler = (e) => {\n        if (e.key === 'Escape') {\n          this.closeModalWithAnimation(modal);\n          document.removeEventListener('keydown', escHandler);\n          resolve(false);\n        }\n      };\n      document.addEventListener('keydown', escHandler);\n\n      // モーダル背景クリックでキャンセル\n      modal.onclick = (e) => {\n        if (e.target === modal) {\n          this.closeModalWithAnimation(modal);\n          resolve(false);\n        }\n      };\n    });\n  }\n\n  async showDeleteConfirmation(command) {\n    return this.showConfirmationDialog({\n      icon: '🗑️',\n      title: '削除の確認',\n      message: `「${command}」を実行しますか？<br>この操作は取り消すことができません。`,\n      confirmText: '削除実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#ff7b47'\n    });\n  }\n\n  /**\n   * 出力エリアにメッセージ追加\n   */\n  /**\n   * タスクカード追加（従来のaddOutputを置き換え）\n   */\n  addOutput(message, type = 'default', options = {}) {\n    // タスクカード形式で処理\n    if (type === 'task' || type === 'progress') {\n      return this.addTaskCard(message, options);\n    }\n\n    // エラーとシステムメッセージのみ表示\n    if (type === 'error' || type === 'system') {\n      this.addSystemMessage(message, type);\n    }\n  }\n\n  /**\n   * フローティングタスクカード追加\n   */\n  addTaskCard(taskInfo, options = {}) {\n    if (!this.taskCards) this.taskCards = new Map();\n\n    const taskId = options.taskId || `task_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`;\n    const status = options.status || 'pending';\n    const prompt = taskInfo.prompt || taskInfo.command || taskInfo;\n\n    // フローティングカード作成\n    const card = document.createElement('div');\n    card.className = 'floating-task-card';\n    card.setAttribute('data-task-id', taskId);\n\n    // 2025年トレンド: 待機中のアニメーション効果\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    // iOS 26 Liquid Glass + 2026年トレンドスタイル\n    card.style.cssText = this.getFloatingCardStyles(status);\n    // アニメーション用初期状態（非表示）- 強制設定\n    card.style.setProperty('opacity', '0', 'important');\n    card.style.setProperty('transform', 'translateY(20px) scale(0.95)', 'important');\n    card.style.setProperty('filter', 'blur(4px)', 'important');\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    const statusText = {\n      pending: '待機中',\n      processing: '生成中',\n      progress: '進行中',\n      completed: '完了',\n      error: 'エラー'\n    };\n\n    // 温かみのあるメッセージ表示\n    const friendlyMessage = this.getFriendlyMessage(status, prompt);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // フローティングコンテナに追加（最新が上に来るように）\n    this.floatingContainer.insertBefore(card, this.floatingContainer.firstChild);\n    \n    // カード表示制限を適用（最新3個まで表示）\n    this.updateCardDisplayLimit();\n\n    this.taskCards.set(taskId, {\n      element: card,\n      status: status,\n      prompt: prompt,\n      originalPrompt: prompt, // 元のプロンプト\n      startTime: Date.now(),\n      endTime: null,\n      error: null,\n      contentType: 'image', // 'image', 'video', etc.\n      model: null,\n      settings: null\n    });\n\n    // カード詳細モーダル用のイベントリスナー\n    this.addCardDetailEvents(card, taskId);\n    \n    // 入場アニメーション\n    this.animateCardEntrance(card);\n    \n    // 2025年トレンド: シマーエフェクトCSS確保\n    this.ensureShimmerStyles();\n    \n    return taskId;\n  }\n\n  /**\n   * 2025年トレンド: シマーエフェクトスタイルを確保\n   */\n  ensureShimmerStyles() {\n    if (document.querySelector('#chocodrop-shimmer-styles')) return;\n    \n    const styleSheet = document.createElement('style');\n    styleSheet.id = 'chocodrop-shimmer-styles';\n    styleSheet.textContent = `\n      /* 2025年トレンド: シマーエフェクト（強化版） */\n      .chocodrop-shimmer {\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .chocodrop-shimmer::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(255, 255, 255, 0.7)'},\n          transparent\n        );\n        animation: shimmer 1.5s infinite;\n        pointer-events: none;\n        z-index: 1;\n      }\n      \n      .chocodrop-shimmer > * {\n        position: relative;\n        z-index: 2;\n      }\n      \n      /* 2025年トレンド: 微細な浮遊感 */\n      .chocodrop-float {\n        animation: gentleFloat 4s ease-in-out infinite;\n      }\n      \n      /* 待機中の特別なパルス効果（強化版） */\n      .chocodrop-shimmer.floating-task-card {\n        animation: gentleFloat 4s ease-in-out infinite, subtlePulse 3s ease-in-out infinite;\n      }\n      \n      @keyframes subtlePulse {\n        0%, 100% { \n          box-shadow: 0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1);\n        }\n        50% { \n          box-shadow: 0 12px 40px rgba(15, 23, 42, 0.5), 0 0 0 1px rgba(99, 102, 241, 0.3);\n        }\n      }\n    `;\n    \n    document.head.appendChild(styleSheet);\n  }\n\n  /**\n   * フローティングタスクカード更新\n   */\n  updateTaskCard(taskId, status, options = {}) {\n    if (!this.taskCards || !this.taskCards.has(taskId)) return;\n\n    const taskData = this.taskCards.get(taskId);\n    const card = taskData.element;\n\n    // ステータス更新\n    taskData.status = status;\n\n    // 2025年トレンド: アニメーション状態管理\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      // 待機中・処理中: シマーエフェクト追加\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    } else {\n      // 完了・エラー: シマーエフェクト削除\n      card.classList.remove('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    // 温かみのあるメッセージ更新\n    const friendlyMessage = this.getFriendlyMessage(status, taskData.prompt);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // スタイル更新（完了状態に応じて）\n    card.style.cssText = this.getFloatingCardStyles(status);\n\n    // 完了時の自動消去アニメーション\n    if (status === 'completed') {\n      this.animateCardSuccess(card, taskId);\n    } else if (status === 'error') {\n      this.animateCardError(card, taskId);\n    }\n  }\n\n  /**\n   * システムメッセージ表示\n   */\n  addSystemMessage(message, type) {\n    const entry = document.createElement('div');\n    entry.className = `system-message ${type}`;\n    entry.style.cssText = `\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type === 'error' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(107, 114, 128, 0.1)'};\n      border: 1px solid ${type === 'error' ? 'rgba(239, 68, 68, 0.3)' : 'rgba(107, 114, 128, 0.3)'};\n      color: ${type === 'error' ? '#fca5a5' : (this.isDarkMode ? '#d1d5db' : '#6b7280')};\n    `;\n    entry.textContent = message;\n    this.outputDiv.appendChild(entry);\n    this.scrollToBottom();\n  }\n\n  /**\n   * タスクカードスタイル取得\n   */\n  getTaskCardStyles(status) {\n    const baseStyles = `\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(255, 255, 255, 0.15)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.25)'};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;\n\n    const statusBorders = {\n      pending: 'rgba(167, 139, 250, 0.3)',     // 薄紫\n      processing: 'rgba(192, 132, 252, 0.5)',  // 紫（強調）\n      progress: 'rgba(236, 72, 153, 0.4)',     // ピンク\n      completed: 'rgba(167, 139, 250, 0.4)',   // 紫\n      error: 'rgba(239, 68, 68, 0.4)'          // 赤\n    };\n\n    return baseStyles + `border-left: 3px solid ${statusBorders[status] || statusBorders.pending};`;\n  }\n\n  /**\n   * フローティングカードスタイル（iOS 26 Liquid Glass + 2026年トレンド）\n   */\n  getFloatingCardStyles(status) {\n    // 2025年Glassmorphism仕様：フローティングタスクカード\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)',\n      color: '#ffffff'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)',\n      color: '#1f2937'\n    };\n\n    const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n    \n    // 2025年トレンド: 待機中のシマーエフェクト\n    const shimmerEffect = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      position: relative;\n      overflow: hidden;\n      &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'},\n          transparent\n        );\n        animation: shimmer 2s infinite;\n      }\n    ` : '';\n\n    // 2025年トレンド: 微細な浮遊感\n    const floatingAnimation = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      animation: gentleFloat 4s ease-in-out infinite, shimmer 2s infinite;\n    ` : '';\n\n    return `\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      ${shimmerEffect}\n      ${floatingAnimation}\n      position: relative;\n      overflow: hidden;\n    `;\n  }\n\n  /**\n   * カード表示制限を適用（最大3個まで表示、それ以上は「+ N」で表示）\n   */\n  updateCardDisplayLimit() {\n    const maxVisibleCards = 3;\n    const allCards = Array.from(this.floatingContainer.children).filter(child => \n      !child.classList.contains('overflow-counter')\n    );\n    \n    // 既存のカウンターを削除\n    const existingCounter = this.floatingContainer.querySelector('.overflow-counter');\n    if (existingCounter) {\n      existingCounter.remove();\n    }\n    \n    if (allCards.length <= maxVisibleCards) {\n      // カードが3個以下の場合、すべて表示\n      allCards.forEach(card => {\n        card.style.display = 'flex';\n      });\n    } else {\n      // カードが4個以上の場合、最新3個のみ表示し、残りはカウンター表示\n      const visibleCards = allCards.slice(0, maxVisibleCards); // 最初の3個（最新）\n      const hiddenCount = allCards.length - maxVisibleCards;\n      \n      // 古いカードを非表示\n      allCards.forEach((card, index) => {\n        if (index < maxVisibleCards) {\n          card.style.display = 'flex';\n        } else {\n          card.style.display = 'none';\n        }\n      });\n      \n      // 「+ N」カウンターを作成\n      const counter = document.createElement('div');\n      counter.className = 'overflow-counter';\n      // テーマに応じたカウンタースタイル\n      const counterBaseColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.12)';\n      const counterBorderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.15)';\n      const counterTextColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.6)';\n      \n      counter.style.cssText = `\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;\n      counter.innerHTML = `+ ${hiddenCount}`;\n      \n      // カウンターを最後に挿入（最下部に配置）\n      this.floatingContainer.appendChild(counter);\n      \n      // カウンターのホバー効果（テーマ対応）\n      const counterHoverColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.18)';\n      \n      counter.addEventListener('mouseenter', () => {\n        counter.style.background = counterHoverColor;\n        counter.style.transform = 'scale(1.05)';\n      });\n      \n      counter.addEventListener('mouseleave', () => {\n        counter.style.background = counterBaseColor;\n        counter.style.transform = 'scale(1)';\n      });\n    }\n  }\n\n  /**\n   * カードに詳細モーダル用のイベントリスナーを追加\n   */\n  addCardDetailEvents(card, taskId) {\n    // タッチデバイス検出\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    \n    if (isTouchDevice) {\n      // モバイル/タブレット: タップで詳細表示\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    } else {\n      // デスクトップ: ホバーで詳細表示\n      let hoverTimeout;\n      \n      card.addEventListener('mouseenter', () => {\n        hoverTimeout = setTimeout(() => {\n          this.showTaskDetailModal(taskId);\n        }, 800); // 0.8秒ホバーで表示\n      });\n      \n      card.addEventListener('mouseleave', () => {\n        if (hoverTimeout) {\n          clearTimeout(hoverTimeout);\n        }\n      });\n      \n      // クリックでも表示（デスクトップでも使いやすく）\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    }\n  }\n\n  /**\n   * タスク詳細モーダルを表示\n   */\n  showTaskDetailModal(taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData) return;\n    \n    // 既存のモーダルを削除\n    const existingModal = document.querySelector('.task-detail-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n    \n    // モーダル作成\n    const modal = this.createTaskDetailModal(taskData);\n    document.body.appendChild(modal);\n    \n    // 入場アニメーション\n    requestAnimationFrame(() => {\n      modal.style.opacity = '1';\n      modal.querySelector('.modal-content').style.transform = 'translateY(0) scale(1)';\n    });\n  }\n\n  /**\n   * タスク詳細モーダルのHTML要素を作成\n   */\n  createTaskDetailModal(taskData) {\n    const modal = document.createElement('div');\n    modal.className = 'task-detail-modal';\n    \n    // テーマに応じたスタイル\n    const overlayColor = this.isDarkMode ? 'rgba(0, 0, 0, 0.6)' : 'rgba(0, 0, 0, 0.4)';\n    const modalBg = this.isDarkMode ? 'rgba(20, 20, 20, 0.95)' : 'rgba(255, 255, 255, 0.95)';\n    const modalBorder = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n    const textColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(0, 0, 0, 0.9)';\n    const labelColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)';\n    \n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;\n    \n    // 実行時間計算\n    const duration = taskData.endTime \n      ? ((taskData.endTime - taskData.startTime) / 1000).toFixed(1)\n      : ((Date.now() - taskData.startTime) / 1000).toFixed(1);\n    \n    // ステータス表示\n    const statusText = taskData.status === 'pending' ? '待機中' \n                    : taskData.status === 'in-progress' ? '実行中' \n                    : taskData.status === 'completed' ? '完了' \n                    : 'エラー';\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;\">\n        <h3 style=\"margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;\">タスク詳細</h3>\n        <button class=\"close-btn\" style=\"\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        \">×</button>\n      </div>\n      \n      <div style=\"space-y: 16px;\">\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📝 元のプロンプト</div>\n          <div style=\"color: ${textColor}; font-size: 14px; line-height: 1.4;\">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📊 ステータス</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">⏱️ 実行時間</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${duration}秒</div>\n        </div>\n        \n        ${taskData.error ? `\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">❌ エラー詳細</div>\n          <div style=\"color: #ef4444; font-size: 14px; line-height: 1.4;\">${taskData.error}</div>\n        </div>\n        ` : ''}\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">🎨 コンテンツタイプ</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${taskData.contentType || '画像'}</div>\n        </div>\n      </div>\n    `;\n    \n    // イベントリスナー\n    modalContent.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    const closeBtn = modalContent.querySelector('.close-btn');\n    closeBtn.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    closeBtn.addEventListener('mouseenter', () => {\n      closeBtn.style.color = textColor;\n    });\n    \n    closeBtn.addEventListener('mouseleave', () => {\n      closeBtn.style.color = labelColor;\n    });\n    \n    modal.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    modal.appendChild(modalContent);\n    return modal;\n  }\n\n  /**\n   * タスク詳細モーダルを閉じる\n   */\n  closeTaskDetailModal(modal) {\n    modal.style.opacity = '0';\n    modal.querySelector('.modal-content').style.transform = 'translateY(20px) scale(0.95)';\n    \n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    }, 300);\n  }\n\n  /**\n   * カード入場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardEntrance(card) {\n    // iOS 26 Liquid Glass 入場エフェクト\n    card.style.transform = 'translateY(20px) scale(0.95)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(4px)';\n\n    requestAnimationFrame(() => {\n      card.style.transition = 'all 0.6s cubic-bezier(0.16, 1, 0.3, 1)';\n      card.style.transform = 'translateY(0) scale(1)';\n      card.style.opacity = '1';\n      card.style.filter = 'blur(0px)';\n\n      // 2026年トレンド: 微細な光る効果\n      card.style.boxShadow = '0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)';\n    });\n  }\n\n  /**\n   * 成功時アニメーション + 自動消去（iOS 26 Liquid Glass）\n   */\n  animateCardSuccess(card, taskId) {\n    // iOS 26 Liquid Glass 成功エフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(76, 175, 80, 0.6)';\n    card.style.transform = 'scale(1.08)';\n    card.style.boxShadow = '0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)';\n    card.style.filter = 'brightness(1.1) saturate(1.2)';\n\n    // 2026年トレンド: 流体的な戻りアニメーション\n    setTimeout(() => {\n      card.style.transform = 'scale(1.02)';\n      card.style.filter = 'brightness(1.05) saturate(1.1)';\n    }, 150);\n\n    // Liquid Glass風のスムーズなフェードアウト（2秒後に自動削除）\n    setTimeout(() => {\n      this.animateCardExit(card, taskId);\n    }, 2000);\n  }\n\n  /**\n   * エラー時アニメーション（2026年トレンド UX）\n   */\n  animateCardError(card, taskId) {\n    // iOS 26 Liquid Glass エラーエフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(244, 67, 54, 0.7)';\n    card.style.boxShadow = '0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)';\n    card.style.filter = 'saturate(1.3) brightness(1.1)';\n\n    // 2026年トレンド: より自然なpulseアニメーション（shakeより洗練）\n    card.style.animation = 'errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2';\n\n    // UX改善: エラー内容を表示するツールチップ風UI\n    this.addErrorTooltip(card, taskId);\n\n    // エラーは手動で消すまで表示継続（クリックで消去）\n    card.style.cursor = 'pointer';\n    card.onclick = () => this.animateCardExit(card, taskId);\n\n    // 5秒後に自動フェードアウト（UX改善）\n    setTimeout(() => {\n      if (this.taskCards.has(taskId)) {\n        this.animateCardExit(card, taskId);\n      }\n    }, 5000);\n  }\n\n  /**\n   * エラー時のツールチップ表示（UX改善）\n   */\n  addErrorTooltip(card, taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData || !taskData.error) return;\n\n    // ツールチップ要素作成\n    const tooltip = document.createElement('div');\n    tooltip.style.cssText = `\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;\n    tooltip.textContent = taskData.error;\n\n    card.style.position = 'relative';\n    card.appendChild(tooltip);\n\n    // フェードイン\n    requestAnimationFrame(() => {\n      tooltip.style.opacity = '1';\n    });\n\n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      if (tooltip.parentNode) {\n        tooltip.style.opacity = '0';\n        setTimeout(() => {\n          if (tooltip.parentNode) {\n            tooltip.parentNode.removeChild(tooltip);\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * カード退場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardExit(card, taskId) {\n    // iOS 26 Liquid Glass 退場エフェクト - 2026年トレンドの「スッと消える」\n    card.style.transition = 'all 0.28s cubic-bezier(0.4, 0, 0.2, 1)';\n    card.style.transform = 'translateY(-12px) scale(0.92)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(6px) brightness(1.2)';\n\n    // 2026年トレンド: 消去時の微細な光の拡散効果\n    card.style.boxShadow = '0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)';\n\n    setTimeout(() => {\n      if (card.parentNode) {\n        card.parentNode.removeChild(card);\n      }\n      this.taskCards.delete(taskId);\n      // カード削除後に表示制限を再適用\n      this.updateCardDisplayLimit();\n    }, 280);\n  }\n\n  /**\n   * ユーザーの表現スタイルを自然に感知\n   */\n  getResponseType(prompt) {\n    // ユーザーの表現スタイルを自然に感知\n    if (/ちょこっと|ちょこん|少し|軽く/.test(prompt) || prompt.length < 15) {\n      return 'casual';\n    }\n    if (/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)) {\n      return 'magical';\n    }\n    return 'balanced'; // 80%がここに該当\n  }\n\n  /**\n   * 温かみのあるメッセージを生成（マーケ提案ベース）\n   */\n  getFriendlyMessage(status, prompt) {\n    const shortPrompt = prompt.length > 15 ? prompt.substring(0, 15) + '...' : prompt;\n\n    // 自然な応答システム適用\n    const responseType = this.getResponseType(prompt);\n\n    switch (status) {\n      case 'pending':\n        return responseType === 'casual' ? 'ちょこっと準備中です...' :\n               responseType === 'magical' ? '魔法をかけようとしています...' :\n               'ちょこっと魔法の準備中...';\n      case 'processing':\n      case 'in-progress':\n      case 'progress':\n        return responseType === 'casual' ? 'ちょこんと配置中です...' :\n               responseType === 'magical' ? 'あなたの想いを形にしています...' :\n               'ちょこっと魔法をかけています...';\n      case 'completed':\n        return responseType === 'casual' ? 'ちょこっとドロップしました！' :\n               responseType === 'magical' ? '素敵な世界が完成しました！' :\n               'ちょこんと配置完了！素敵ですね！';\n      case 'error':\n        return responseType === 'casual' ? 'ちょこっと失敗... もう一度どうぞ' :\n               'うまくいかなかったようです... もう一度試してみませんか？';\n      default:\n        return shortPrompt;\n    }\n  }\n\n  /**\n   * ステータス色取得\n   */\n  getStatusColor(status) {\n    // ネオンパープル/ピンク系で統一（2025トレンド）\n    const colors = {\n      pending: this.isDarkMode ? '#a78bfa' : '#7c3aed',        // 薄紫\n      processing: this.isDarkMode ? '#c084fc' : '#9333ea',     // 紫（生成中）\n      progress: this.isDarkMode ? '#ec4899' : '#be185d',       // ピンク\n      completed: this.isDarkMode ? '#a78bfa' : '#7c3aed',      // 紫（完了も統一）\n      error: this.isDarkMode ? '#f87171' : '#dc2626'           // 赤（エラーのみ）\n    };\n    return colors[status] || colors.pending;\n  }\n\n  /**\n   * ステータスインジケーター作成（パーセント表示なし）\n   */\n  createStatusIndicator(status) {\n    if (status === 'processing' || status === 'progress') {\n      return `\n        <div class=\"status-indicator\" style=\"\n          background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        \">\n          <div class=\"status-pulse\" style=\"\n            background: linear-gradient(90deg, transparent, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'}, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          \"></div>\n        </div>\n        <div style=\"display: flex; align-items: center; gap: 4px; margin-top: 8px;\">\n          <div class=\"status-dots\" style=\"font-size: 10px; color: ${this.isDarkMode ? '#c084fc' : '#9333ea'};\">\n            処理中<span style=\"animation: dots 1.5s infinite;\">...</span>\n          </div>\n        </div>\n      `;\n    }\n    return '';\n  }\n\n  /**\n   * タスク完了アニメーション\n   */\n  animateTaskCompletion(card) {\n    // 控えめなサクセスアニメーション\n    card.style.animation = 'taskComplete 0.8s ease-out';\n\n    // 微妙なパーティクル効果を追加（控えめ）\n    this.addSubtleParticleEffect(card);\n\n    setTimeout(() => {\n      card.style.animation = '';\n    }, 800);\n\n    this.ensureTaskAnimations();\n  }\n\n  /**\n   * 控えめなパーティクル効果\n   */\n  addSubtleParticleEffect(card) {\n    const particles = 3; // 少ない数のパーティクル\n    const rect = card.getBoundingClientRect();\n\n    for (let i = 0; i < particles; i++) {\n      const particle = document.createElement('div');\n      particle.style.cssText = `\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right - 20}px;\n        top: ${rect.top + 10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;\n\n      // ランダムな方向に少し移動\n      const angle = (i / particles) * Math.PI * 2;\n      const distance = 15; // 控えめな距離\n      particle.style.setProperty('--move-x', `${Math.cos(angle) * distance}px`);\n      particle.style.setProperty('--move-y', `${Math.sin(angle) * distance}px`);\n\n      document.body.appendChild(particle);\n\n      // 自動削除\n      setTimeout(() => particle.remove(), 1200);\n    }\n  }\n\n  /**\n   * タスクアニメーション用CSS確保\n   */\n  ensureTaskAnimations() {\n    if (document.getElementById('task-animations')) return;\n\n    const style = document.createElement('style');\n    style.id = 'task-animations';\n    style.textContent = `\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * プログレス付きタスクステータス表示（互換性のため）\n   */\n  addTaskStatus(message, percent = 0, taskId = null) {\n    const id = taskId || `task_${Date.now()}`;\n    return this.addTaskCard(message, {\n      percent: Math.min(Math.max(percent, 0), 100),\n      taskId: id,\n      status: percent > 0 ? 'progress' : 'pending'\n    });\n  }\n\n  /**\n   * プログレス更新\n   */\n  updateTaskProgress(taskId, percent, newMessage = null) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask && newMessage) {\n      // 既存タスクを更新\n      this.addOutput(newMessage, 'progress', { \n        percent: Math.min(Math.max(percent, 0), 100),\n        taskId\n      });\n    }\n  }\n\n  /**\n   * タスク完了（プログレスバー削除）\n   */\n  completeTask(taskId) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask) {\n      // 完了アニメーション\n      existingTask.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n      existingTask.style.opacity = '0';\n      existingTask.style.transform = 'translateX(20px)';\n      \n      setTimeout(() => {\n        if (existingTask.parentNode) {\n          existingTask.remove();\n        }\n      }, 500);\n    }\n  }\n\n  /**\n   * SSE接続開始（リアルタイム進捗受信）\n   */\n  connectToProgress(serverTaskId, uiTaskId = null) {\n    if (this.activeConnections.has(serverTaskId)) {\n      return;\n    }\n\n    const eventSource = new EventSource(`/api/progress/${serverTaskId}`);\n    this.activeConnections.set(serverTaskId, eventSource);\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        data.uiTaskId = uiTaskId; // UI用タスクIDを追加\n        this.handleProgressUpdate(data);\n      } catch (error) {\n        console.error('SSE data parse error:', error);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error);\n      this.disconnectProgress(serverTaskId);\n    };\n  }\n\n  /**\n   * 進捗更新処理\n   */\n  handleProgressUpdate(data) {\n    switch (data.type) {\n      case 'connected':\n        this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);\n        break;\n\n      case 'progress':\n        if (data.percent !== undefined && data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'progress', { percent: data.percent });\n        }\n        break;\n\n      case 'completed':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'completed');\n        }\n        this.disconnectProgress(data.taskId);\n        break;\n\n      case 'error':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'error');\n        }\n        this.addOutput(`❌ ${data.message}`, 'error');\n        this.disconnectProgress(data.taskId);\n        break;\n    }\n  }\n\n  /**\n   * SSE接続終了\n   */\n  disconnectProgress(taskId) {\n    const connection = this.activeConnections.get(taskId);\n    if (connection) {\n      connection.close();\n      this.activeConnections.delete(taskId);\n    }\n  }\n\n  /**\n   * 出力エリアを最下部にスクロール\n   */\n  scrollToBottom() {\n    if (this.outputDiv) {\n      this.outputDiv.scrollTop = this.outputDiv.scrollHeight;\n    }\n  }\n\n  /**\n   * モード別コマンドプレフィックス\n   */\n  getModePrefix(mode) {\n    // サーバー側でモードを区別するためのプレフィックス\n    const prefixes = {\n      generate: '', // デフォルトは生成モード\n      modify: '[変更] ',\n      delete: '[削除] '\n    };\n    return prefixes[mode] || '';\n  }\n\n  /**\n   * コマンド保存 (Undo/Redoシステム)\n   */\n  saveCommandToHistory(commandData) {\n    // 現在のインデックス以降の履歴を削除（新しいコマンドが実行されたため）\n    this.commandHistory = this.commandHistory.slice(0, this.currentHistoryIndex + 1);\n    \n    // 新しいコマンドを履歴に追加\n    this.commandHistory.push(commandData);\n    this.currentHistoryIndex = this.commandHistory.length - 1;\n    \n    // 最大コマンド保存数を超えた場合、古いコマンドを削除\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentHistoryIndex--;\n    }\n    \n    // ボタン状態を更新\n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undo実行\n   */\n  undo() {\n    if (!this.canUndo()) {\n      this.addOutput('↶ Undoできる操作がありません', 'hint');\n      return;\n    }\n    \n    const command = this.commandHistory[this.currentHistoryIndex];\n    this.currentHistoryIndex--;\n    \n    // Undoの逆操作を実行（簡易実装）\n    if (command.mode === 'generate') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の生成を取り消しました`, 'system');\n      // 実際のシーン管理では最後に作成されたオブジェクトを削除\n      if (this.sceneManager && this.sceneManager.undoLastGenerate) {\n        this.sceneManager.undoLastGenerate();\n      }\n    } else if (command.mode === 'modify') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の変更を取り消しました`, 'system');\n      // 実際のシーン管理では前の状態に戻す\n      if (this.sceneManager && this.sceneManager.undoLastModify) {\n        this.sceneManager.undoLastModify();\n      }\n    } else if (command.mode === 'delete') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の削除を取り消しました`, 'system');\n      // 実際のシーン管理では削除されたオブジェクトを復元\n      if (this.sceneManager && this.sceneManager.undoLastDelete) {\n        this.sceneManager.undoLastDelete();\n      }\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Redo実行\n   */\n  redo() {\n    if (!this.canRedo()) {\n      this.addOutput('↷ Redoできる操作がありません', 'hint');\n      return;\n    }\n    \n    this.currentHistoryIndex++;\n    const command = this.commandHistory[this.currentHistoryIndex];\n    \n    // Redoでコマンドを再実行\n    this.addOutput(`↷ Redo: \"${command.command}\" を再実行しました`, 'system');\n    \n    // 実際のシーン管理でのRedo処理\n    if (this.sceneManager && this.sceneManager.redoCommand) {\n      this.sceneManager.redoCommand(command);\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undoが可能かチェック\n   */\n  canUndo() {\n    return this.currentHistoryIndex >= 0;\n  }\n\n  /**\n   * Redoが可能かチェック\n   */\n  canRedo() {\n    return this.currentHistoryIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Undo/Redoボタンの状態更新\n   */\n  updateUndoRedoButtons() {\n    if (this.undoBtn) {\n      this.undoBtn.disabled = !this.canUndo();\n      this.undoBtn.style.opacity = this.canUndo() ? '1' : '0.4';\n      this.undoBtn.style.cursor = this.canUndo() ? 'pointer' : 'not-allowed';\n    }\n    \n    if (this.redoBtn) {\n      this.redoBtn.disabled = !this.canRedo();\n      this.redoBtn.style.opacity = this.canRedo() ? '1' : '0.4';\n      this.redoBtn.style.cursor = this.canRedo() ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  /**\n   * 確認付き全オブジェクト削除\n   */\n  async clearAllWithConfirmation() {\n    const confirmed = await this.showClearAllConfirmation();\n    if (confirmed) {\n      this.clearAll();\n    }\n  }\n\n  /**\n   * Clear All確認ダイアログ\n   */\n  async showClearAllConfirmation() {\n    return this.showConfirmationDialog({\n      icon: '🧹',\n      title: 'Clear All の確認',\n      message: 'すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。',\n      confirmText: 'Clear All 実行',\n      cancelText: 'キャンセル',\n      confirmColor: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n    });\n  }\n\n  /**\n   * モーダルクローズアニメーション\n   */\n  closeModalWithAnimation(modal) {\n    const dialog = modal.querySelector('div:last-child');\n    dialog.style.transform = 'scale(0.9)';\n    dialog.style.opacity = '0';\n    modal.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (modal.parentElement) {\n        document.body.removeChild(modal);\n      }\n    }, 200);\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    if (this.sceneManager) {\n      this.sceneManager.clearAll();\n      this.addOutput('🧹 全ての実験オブジェクトを削除しました', 'system');\n    } else if (this.client) {\n      // サーバー側での削除は未実装\n      this.addOutput('⚠️ サーバー側削除は未実装', 'error');\n    }\n  }\n\n  // showHistory() メソッド完全削除済み\n\n  /**\n   * 利用可能なコマンド例を表示\n   */\n  showExamples() {\n    const examples = [\n      '右上にドラゴンを作って',\n      '中央に大きなユニコーンを生成',\n      '左下に小さな桜を作って',\n      '空に鳳凰を作って',\n      '地面に神社を作って'\n    ];\n\n    this.addOutput('💡 コマンド例:', 'system');\n    examples.forEach(example => {\n      this.addOutput(`   \"${example}\"`, 'hint');\n    });\n  }\n\n  /**\n   * SceneManager設定\n   */\n  setSceneManager(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.applyServiceSelectionToSceneManager();\n  }\n\n  /**\n   * Client設定\n   */\n  setClient(client) {\n    this.client = client;\n  }\n\n  /**\n   * 設定更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n    // 必要に応じてUIを更新\n    if (newConfig.activationKey) {\n      // 新しいキーバインドを反映するため、イベントリスナーを再設定\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  /**\n   * スタイル再適用\n   */\n  refreshStyles() {\n    // Generateモードボタンのスタイルを再適用\n    const generateBtn = this.container?.querySelector('[data-mode=\"generate\"]');\n    if (generateBtn) {\n      generateBtn.style.cssText = this.getModeButtonStyles(true, 'generate');\n    }\n\n    // Executeボタンのスタイルを再適用\n    const executeBtn = this.container?.querySelector('#execute-btn');\n    if (executeBtn) {\n      executeBtn.style.cssText = this.getModernButtonStyles('primary');\n    }\n\n    // サービスモーダルの背景とスタイルを更新\n    if (this.serviceModal) {\n      this.updateServiceModalStyles();\n    }\n\n    // サービスセレクターテーマ更新\n    this.updateServiceSelectorTheme();\n  }\n\n  updateServiceModalStyles() {\n    if (!this.serviceModal) return;\n\n    // モーダルの背景とボーダーを更新（枯山水の静寂）\n    this.serviceModal.style.background = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.4), rgba(189, 189, 189, 0.35))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))');\n\n    this.serviceModal.style.border = this.isWabiSabiMode\n      ? '1px solid rgba(141, 110, 99, 0.4)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.3)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    this.serviceModal.style.color = this.isWabiSabiMode\n      ? '#424242'\n      : (this.isDarkMode ? '#ffffff' : '#1f2937');\n\n    this.serviceModal.style.boxShadow = this.isWabiSabiMode\n      ? '0 20px 40px rgba(93, 64, 55, 0.35)'\n      : '0 20px 40px rgba(15, 23, 42, 0.35)';\n  }\n\n  /**\n   * テーマ切り替え\n   */\n  toggleTheme() {\n    // 3段階サイクル: light → dark → wabisabi → light\n    switch (this.currentTheme) {\n      case 'light':\n        this.currentTheme = 'dark';\n        break;\n      case 'dark':\n        this.currentTheme = 'wabisabi';\n        break;\n      case 'wabisabi':\n        this.currentTheme = 'light';\n        break;\n      default:\n        this.currentTheme = 'light';\n    }\n\n    // 状態更新\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    localStorage.setItem('live-command-theme', this.currentTheme);\n\n    // アイコンボタン更新\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n\n      const config = themeConfig[this.currentTheme];\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n    }\n\n    // 全スタイル再適用\n    this.applyTheme();\n\n    // テーマ切り替え完了（履歴には出力しない）\n  }\n\n  /**\n   * テーマ適用\n   */\n  applyTheme() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isWabiSabiMode ? 'wabisabi-mode' : (this.isDarkMode ? 'dark-mode' : 'light-mode');\n\n    // メインコンテナ（display状態を保持）\n    const currentDisplay = this.container.style.display;\n    const currentFlexDirection = this.container.style.flexDirection;\n    this.container.style.cssText = this.getContainerStyles();\n    this.container.style.display = currentDisplay || 'flex';\n    this.container.style.flexDirection = currentFlexDirection || 'column';\n\n    // フローティングブランドバッジのテーマ再適用\n    const brandBadge = this.container.querySelector('.floating-brand-badge');\n    if (brandBadge) {\n      brandBadge.style.background = this.isDarkMode \n        ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))'\n        : 'linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))';\n      brandBadge.style.border = `1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'}`;\n    }\n\n    // 入力フィールド\n    this.input.style.cssText = this.getInputStyles();\n\n    // スタイル適用\n    this.output.style.cssText = this.getOutputStyles();\n\n    // ラジオボタンモードセレクターの2025年仕様テーマ再適用\n    if (this.radioModeContainer) {\n      this.radioModeContainer.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))');\n      this.radioModeContainer.style.borderColor = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.4)'\n        : (this.isDarkMode\n          ? 'rgba(99, 102, 241, 0.15)'\n          : 'rgba(255, 255, 255, 0.25)');\n\n      // 各ラジオボタンのスタイル更新\n      Object.keys(this.radioModeButtons).forEach(key => {\n        const { button } = this.radioModeButtons[key];\n        if (this.currentMode !== key) {\n          button.style.color = this.isWabiSabiMode\n            ? 'rgba(245, 245, 245, 0.8)'\n            : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n          button.style.background = 'transparent';\n          button.style.border = '1px solid transparent';\n          button.style.boxShadow = 'none';\n        }\n      });\n\n      // 現在選択されているモードのスタイルも更新\n      this.selectMode(this.currentMode, false);\n    }\n\n    // アクションボタンのテーマ再適用\n    if (this.clearBtn) {\n      this.clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    }\n    if (this.historyBtn) {\n      this.historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n      this.historyBtn.style.opacity = '0.5';\n    }\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n      const config = themeConfig[this.currentTheme] || themeConfig.light;\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n      this.themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    }\n    if (this.settingsButton) {\n      this.settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    }\n\n    this.updateServiceSelectorTheme();\n\n    // 閉じるボタンのテーマ更新\n    const closeButton = this.container.querySelector('.close-button');\n    if (closeButton) {\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.background = this.isDarkMode \n        ? 'rgba(255, 255, 255, 0.1)' \n        : 'rgba(0, 0, 0, 0.1)';\n    }\n\n    // フローティングコンテナとタスクカードのテーマ更新\n    this.updateFloatingContainerTheme();\n\n    // 既存の出力テキストの色を更新\n    this.updateExistingTextColors();\n  }\n\n  /**\n   * フローティングコンテナとタスクカードのテーマ更新\n   */\n  updateFloatingContainerTheme() {\n    if (!this.floatingContainer) return;\n\n    // フローティングコンテナの表示状態を保持\n    const currentDisplay = this.floatingContainer.style.display;\n\n    // 既存のタスクカードの色だけをテーマに合わせて更新（レイアウトは保持）\n    if (this.taskCards && this.taskCards.size > 0) {\n      this.taskCards.forEach((taskData, taskId) => {\n        const card = taskData.element;\n        if (card) {\n          // テーマ関連の色のみ更新（位置やアニメーション状態は保持）\n          // 2025年Glassmorphism仕様適用\n          const glassmorphismDark = {\n            background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n            border: '1px solid rgba(99, 102, 241, 0.25)',\n            color: '#ffffff'\n          };\n\n          const glassmorphismLight = {\n            background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n            border: '1px solid rgba(255, 255, 255, 0.4)',\n            color: '#1f2937'\n          };\n\n          const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n\n          card.style.setProperty('background', theme.background, 'important');\n          card.style.setProperty('border', theme.border, 'important');\n          card.style.setProperty('color', theme.color, 'important');\n        }\n      });\n    }\n\n    // テーマ切り替え時は位置は変更せず、表示状態のみ復元\n    this.floatingContainer.style.display = currentDisplay;\n  }\n\n  /**\n   * 既存のテキスト色を現在のテーマに合わせて更新\n   */\n  updateExistingTextColors() {\n    const colors = this.isDarkMode ? {\n      system: '#60a5fa',\n      command: '#93c5fd',\n      success: '#f472b6',\n      error: '#f87171',\n      processing: '#fbbf24',\n      info: '#d1d5db',\n      hint: '#d1d5db'\n    } : {\n      system: '#1e40af',\n      command: '#1d4ed8',\n      success: '#be185d',\n      error: '#dc2626',\n      processing: '#d97706',\n      info: '#7c3aed',\n      hint: '#374151'\n    };\n\n    const defaultTextColor = this.isDarkMode ? '#d1d5db' : '#374151';\n\n    // output内の全てのdivの色を更新\n    this.output.querySelectorAll('div').forEach(line => {\n      const text = line.textContent;\n      let type = 'default';\n      \n      // テキストの内容からタイプを判定\n      if (text.includes('📋') || text.includes('🎨') || text.includes('🎮') || text.includes('UI起動')) {\n        type = 'system';\n      } else if (text.startsWith('> ')) {\n        type = 'command';\n      } else if (text.includes('✅') || text.includes('⭐') || text.includes('生成しました')) {\n        type = 'success';\n      } else if (text.includes('❌') || text.includes('エラー')) {\n        type = 'error';\n      } else if (text.includes('中...')) {\n        type = 'processing';\n      } else if (text.includes('📍') || text.includes('使用モデル:') || text.includes('位置:')) {\n        type = 'info';\n      } else if (text.includes('   ')) {\n        type = 'hint';\n      }\n\n      line.style.color = colors[type] || defaultTextColor;\n    });\n  }\n\n  /**\n   * Importインターフェース表示\n   */\n  showImportInterface() {\n    // 隠しファイル入力を作成（Importボタンから直接選択できるので、ボタンは不要）\n    if (!this.fileInput) {\n      this.fileInput = document.createElement('input');\n      this.fileInput.type = 'file';\n      this.fileInput.accept = '.glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov';\n      this.fileInput.style.display = 'none';\n      this.fileInput.onchange = (e) => this.handleFileSelection(e);\n      document.body.appendChild(this.fileInput);\n    }\n\n    // ドラッグ&ドロップ機能を有効化\n    this.enableDragAndDrop();\n  }\n\n  /**\n   * Importインターフェース非表示\n   */\n  hideImportInterface() {\n    if (this.fileSelectButton && this.fileSelectButton.parentNode) {\n      this.fileSelectButton.parentNode.removeChild(this.fileSelectButton);\n    }\n    this.disableDragAndDrop();\n  }\n\n  /**\n   * ファイル選択ダイアログを開く\n   */\n  openFileSelector() {\n    if (this.fileInput) {\n      this.fileInput.click();\n    }\n  }\n\n  /**\n   * Importボタンから直接ファイル選択を実行\n   */\n  triggerFileSelection() {\n    // ファイル入力要素が存在しない場合は作成\n    if (!this.fileInput) {\n      this.showImportInterface(); // 既存のファイル入力作成処理を呼び出し\n    }\n\n    // 直接ファイル選択ダイアログを開く\n    this.openFileSelector();\n\n    // Import モードに切り替え（UI反映）\n    this.selectMode('import', true);\n  }\n\n  /**\n   * ファイル選択処理\n   */\n  async handleFileSelection(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      // 前回のObjectURLをクリーンアップ（メモリリーク防止）\n      if (this.selectedFile && this.selectedFile.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n\n      // ファイルタイプを判定\n      const fileType = this.detectFileType(file.name);\n\n      // ファイルをローカルURLとして処理\n      const fileUrl = URL.createObjectURL(file);\n\n      // ファイル情報を保存\n      this.selectedFile = {\n        file: file,\n        url: fileUrl,\n        type: fileType,\n        name: file.name\n      };\n\n      this.selectMode('import', true);\n\n      // 自動的にデフォルトプロンプトで実行\n      const defaultPrompt = `中央に設置 (${file.name})`;\n      this.input.value = defaultPrompt;\n\n      this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`, 'system');\n      this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`, 'system');\n\n      // 自動実行（少し遅延を入れてUX向上）\n      setTimeout(() => {\n        this.executeCommand();\n      }, 500);\n\n    } catch (error) {\n      console.error('File selection error:', error);\n      this.addOutput(`❌ ファイル選択エラー: ${error.message}`, 'error');\n    } finally {\n      // IMPORTANT: ファイル入力をリセットして同じファイルの再選択を可能にする\n      if (event.target) {\n        event.target.value = '';\n      }\n    }\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を有効化\n   */\n  enableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.addEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.addEventListener('drop', this.handleDrop.bind(this));\n    this.input.addEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.addEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を無効化\n   */\n  disableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.removeEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.removeEventListener('drop', this.handleDrop.bind(this));\n    this.input.removeEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.removeEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグオーバー処理\n   */\n  handleDragOver(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグエンター処理\n   */\n  handleDragEnter(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグリーブ処理\n   */\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n  }\n\n  /**\n   * ドロップ処理\n   */\n  async handleDrop(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length === 0) return;\n\n    const file = files[0]; // 最初のファイルのみ処理\n\n    // ファイルタイプをチェック\n    const fileType = this.detectFileType(file.name);\n    if (!fileType) {\n      this.addOutput('❌ サポートされていないファイル形式です', 'error');\n      return;\n    }\n\n    // ファイル選択処理と同じ流れ\n    this.handleFileSelection({ target: { files: [file] } });\n  }\n\n  /**\n   * ファイルタイプ判定\n   */\n  detectFileType(fileName) {\n    const ext = fileName.toLowerCase().split('.').pop();\n\n    if (['glb', 'gltf'].includes(ext)) return '3d';\n    if (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) return 'image';\n    if (['mp4', 'mov', 'webm'].includes(ext)) return 'video';\n\n    return null;\n  }\n\n  /**\n   * Importコマンド処理\n   */\n  async handleImportCommand(command) {\n    if (!this.selectedFile) {\n      throw new Error('ファイルが選択されていません');\n    }\n\n    try {\n      // プロンプトから位置情報を解析\n      const position = this.sceneManager ? this.sceneManager.parsePosition(command) : { x: 0, y: 5, z: -10 };\n\n      let result;\n\n      switch (this.selectedFile.type) {\n        case '3d':\n          // 3Dモデルを読み込み\n          if (this.sceneManager) {\n            result = await this.sceneManager.load3DModel(this.selectedFile.url, {\n              position: position,\n              // scale: 自動調整に任せる\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'image':\n          // 画像をテクスチャプレーンとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadImageFile(this.selectedFile.url, {\n              position: position\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'video':\n          // 動画をビデオテクスチャとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadVideoFile(this.selectedFile.url, {\n              position: position\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        default:\n          throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`);\n      }\n\n      // ファイル情報をクリーンアップ\n      const processedFileName = this.selectedFile?.name;\n      const importedType = this.selectedFile?.type;\n      const importedUrl = this.selectedFile?.url;\n\n      if (importedType !== 'video' && importedUrl) {\n        URL.revokeObjectURL(importedUrl);\n      }\n\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n\n      return {\n        success: true,\n        message: `${processedFileName || 'ファイル'} を ${position.x}, ${position.y}, ${position.z} に配置しました`,\n        objectId: result.objectId\n      };\n\n    } catch (error) {\n      // エラー時もファイル情報をクリーンアップ\n      if (this.selectedFile?.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n      throw error;\n    }\n  }\n\n  /**\n   * 削除モードが選択された時の処理\n   */\n  handleDeleteModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：削除コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を削除 ⏎`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 削除対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 削除するオブジェクトを選択後、削除ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('delete');\n      \n      // DELETEモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 修正モードが選択された時の処理\n   */\n  handleModifyModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：修正コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 修正対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 修正するオブジェクトを選択後、修正ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('modify');\n      \n      // Modifyモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Attention Animation\n   * オブジェクト未選択時の注意喚起アニメーション\n   */\n  triggerAttentionAnimation(mode) {\n    const chatOutput = this.chatOutput;\n    const inputField = this.input;\n    \n    // 2025年トレンド1: Micro-Shake Effect（微細な震え）\n    this.addMicroShakeEffect(chatOutput);\n    \n    // 2025年トレンド2: Context-Aware Glow（状況認識グロー）\n    this.addContextGlow(inputField, mode);\n    \n    // 2025年トレンド3: Emotional Pulse（感情的パルス）\n    this.addEmotionalPulse(chatOutput, mode);\n    \n    // 2025年トレンド4: 3D Depth Shadow（立体的影効果）\n    this.add3DDepthEffect(chatOutput);\n  }\n\n  /**\n   * 2025年トレンド：Micro-Shake Effect\n   */\n  addMicroShakeEffect(element) {\n    element.style.animation = 'microShake2025 0.5s ease-in-out';\n    \n    // CSSアニメーションを動的追加\n    this.ensureMicroShakeAnimation();\n    \n    // アニメーション後クリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 500);\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Glow\n   */\n  addContextGlow(element, mode) {\n    const glowColor = mode === 'delete' ? 'rgba(239, 68, 68, 0.4)' : 'rgba(99, 102, 241, 0.4)';\n    \n    element.style.transition = 'all 0.3s ease';\n    element.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n    \n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      element.style.boxShadow = '';\n    }, 3000);\n  }\n\n  /**\n   * 2025年トレンド：Emotional Pulse\n   */\n  addEmotionalPulse(element, mode) {\n    const pulseColor = mode === 'delete' ? '#ef4444' : (this.isWabiSabiMode ? '#8BC34A' : '#6366f1');\n    \n    element.style.borderLeft = `4px solid ${pulseColor}`;\n    element.style.animation = 'emotionalPulse2025 2s ease-in-out infinite';\n    \n    // CSSアニメーションを動的追加\n    this.ensureEmotionalPulseAnimation();\n    \n    // 6秒後にアニメーション停止\n    setTimeout(() => {\n      element.style.animation = '';\n      element.style.borderLeft = '';\n    }, 6000);\n  }\n\n  /**\n   * 2025年トレンド：3D Depth Effect\n   */\n  add3DDepthEffect(element) {\n    element.style.transform = 'translateZ(8px) rotateX(1deg)';\n    element.style.transition = 'transform 0.3s ease';\n    \n    // 2秒後に元に戻す\n    setTimeout(() => {\n      element.style.transform = '';\n    }, 2000);\n  }\n\n  /**\n   * Micro-Shake CSSアニメーション確保\n   */\n  ensureMicroShakeAnimation() {\n    if (document.getElementById('micro-shake-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'micro-shake-2025';\n    style.textContent = `\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Emotional Pulse CSSアニメーション確保\n   */\n  ensureEmotionalPulseAnimation() {\n    if (document.getElementById('emotional-pulse-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'emotional-pulse-2025';\n    style.textContent = `\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * モード切り替え時の入力欄メッセージ上書き機能\n   * ユーザビリティ向上：他モードのメッセージを新モードの初期状態にクリア\n   */\n  clearInputOnModeSwitch(newMode) {\n    // 現在の入力欄に内容がある場合のみ処理\n    if (this.input.value.trim()) {\n      // 以前のモードのメッセージかどうかを判定\n      const isPreviousModeMessage = this.isPreviousModeMessage(this.input.value, newMode);\n      \n      if (isPreviousModeMessage) {\n        // 以前のモードのメッセージの場合、新モードの初期メッセージに置き換え\n        this.input.value = '';\n        this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`, 'system');\n      }\n    }\n  }\n\n  /**\n   * 入力内容が以前のモードのメッセージかどうかを判定\n   */\n  isPreviousModeMessage(inputValue, currentMode) {\n    // Delete/Modifyモードの特徴的なメッセージパターンを検出\n    const deletePatterns = [\n      /.*を削除$/,\n      /削除$/\n    ];\n    \n    const modifyPatterns = [\n      /.*を$/,\n      /.*を変更/,\n      /.*をピンク/,\n      /.*を大きく/,\n      /.*を小さく/,\n      /.*を移動/,\n      /回転/,\n      /反転/,\n      /ミラー/,\n      /傾け/,\n      /向きを変え/,\n      /.*を.*色/,\n      /.*を.*サイズ/\n    ];\n    \n    const importPatterns = [\n      /ファイル/,\n      /画像/,\n      /インポート/\n    ];\n\n    // 現在のモードと異なるパターンにマッチする場合は上書き対象\n    switch (currentMode) {\n      case 'delete':\n        return modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'modify':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'import':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'generate':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      default:\n        return false;\n    }\n  }\n\n  /**\n   * モード表示名を取得\n   */\n  getModeDisplayName(mode) {\n    const modeNames = {\n      'generate': '生成',\n      'import': 'インポート',\n      'modify': '修正',\n      'delete': '削除'\n    };\n    return modeNames[mode] || mode;\n  }\n\n  /**\n   * 常時表示フローティングチョコアイコンを作成\n   */\n  createFloatingChocolateIcon() {\n    // 既存のアイコンがあれば削除\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.remove();\n    }\n\n    this.floatingChocolateIcon = document.createElement('div');\n    this.floatingChocolateIcon.innerHTML = '🍫';\n    this.floatingChocolateIcon.title = 'ChocoDrop を開く (@キーでも開けます)';\n    this.floatingChocolateIcon.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;\n\n    // ホバー効果\n    this.floatingChocolateIcon.addEventListener('mouseover', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1.1) translateY(-2px)';\n      this.floatingChocolateIcon.style.boxShadow = '0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)';\n      this.floatingChocolateIcon.style.opacity = '1';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    this.floatingChocolateIcon.addEventListener('mouseout', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1) translateY(0)';\n      this.floatingChocolateIcon.style.boxShadow = '0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)';\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    // クリックで ChocoDrop を開く\n    this.floatingChocolateIcon.addEventListener('click', () => {\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // 右クリックメニュー\n    this.floatingChocolateIcon.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.showFloatingIconContextMenu(e);\n    });\n\n    // DOM に追加\n    document.body.appendChild(this.floatingChocolateIcon);\n  }\n\n  /**\n   * フローティングアイコンの右クリックメニューを表示\n   */\n  showFloatingIconContextMenu(event) {\n    // 既存のメニューがあれば削除\n    const existingMenu = document.querySelector('.floating-icon-context-menu');\n    if (existingMenu) {\n      existingMenu.remove();\n    }\n\n    // コンテキストメニュー作成\n    const menu = document.createElement('div');\n    menu.className = 'floating-icon-context-menu';\n    menu.style.cssText = `\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isWabiSabiMode\n        ? 'rgba(239, 235, 233, 0.9)'\n        : (this.isDarkMode ? 'rgba(17, 24, 39, 0.85)' : 'rgba(255, 255, 255, 0.85)')};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.2)')};\n      border-radius: 12px;\n      box-shadow: ${this.isWabiSabiMode\n        ? '0 8px 24px rgba(93, 64, 55, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'\n        : '0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'};\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n    `;\n\n    // メニューアイテム1: フォームを開く\n    const openFormItem = document.createElement('div');\n    openFormItem.innerHTML = '📄 フォームを開く';\n    openFormItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    openFormItem.addEventListener('mouseover', () => {\n      openFormItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    openFormItem.addEventListener('mouseout', () => {\n      openFormItem.style.background = 'transparent';\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    openFormItem.addEventListener('click', () => {\n      menu.remove();\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // メニューアイテム2: アイコンを非表示\n    const hideIconItem = document.createElement('div');\n    hideIconItem.innerHTML = '✕ アイコンを非表示';\n    hideIconItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    hideIconItem.addEventListener('mouseover', () => {\n      hideIconItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    hideIconItem.addEventListener('mouseout', () => {\n      hideIconItem.style.background = 'transparent';\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    hideIconItem.addEventListener('click', () => {\n      menu.remove();\n      this.hideFloatingIcon();\n    });\n\n    // メニューに追加\n    menu.appendChild(openFormItem);\n    menu.appendChild(hideIconItem);\n\n    // DOM に追加\n    document.body.appendChild(menu);\n\n    // 画面外に出ないように調整\n    const rect = menu.getBoundingClientRect();\n    if (rect.right > window.innerWidth) {\n      menu.style.left = `${event.clientX - rect.width}px`;\n    }\n    if (rect.bottom > window.innerHeight) {\n      menu.style.top = `${event.clientY - rect.height}px`;\n    }\n\n    // 外部クリックで閉じる\n    const closeMenu = (e) => {\n      if (!menu.contains(e.target)) {\n        menu.remove();\n        document.removeEventListener('click', closeMenu);\n      }\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', closeMenu);\n    }, 10);\n  }\n\n  /**\n   * フローティングアイコンを非表示にする\n   */\n  hideFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * フローティングアイコンを表示する\n   */\n  showFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'flex';\n    }\n  }\n\n  dispose() {\n    // キーワードハイライトのクリーンアップ\n    this.clearKeywordHighlighting();\n\n    // ファイル選択関連のクリーンアップ\n    if (this.fileInput && this.fileInput.parentNode) {\n      this.fileInput.parentNode.removeChild(this.fileInput);\n    }\n    if (this.selectedFile && this.selectedFile.url) {\n      URL.revokeObjectURL(this.selectedFile.url);\n    }\n\n    // フローティングチョコアイコンのクリーンアップ\n    if (this.floatingChocolateIcon && this.floatingChocolateIcon.parentNode) {\n      this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon);\n    }\n\n    if (this.container && this.container.parentElement) {\n      this.container.parentElement.removeChild(this.container);\n    }\n  }\n\n  showOverlayTextarea() {\n    if (this.overlayTextarea) return;\n\n    this.isExpanded = true;\n    \n    // オーバーレイテキストエリアを作成\n    this.overlayTextarea = document.createElement('textarea');\n    this.overlayTextarea.value = this.input.value;\n    this.overlayTextarea.placeholder = this.input.placeholder;\n    \n    // フォームの位置とサイズを取得\n    const containerRect = this.container.getBoundingClientRect();\n    \n    // 画面境界を考慮した位置調整\n    const overlayHeight = 300;\n    const padding = 20;\n    \n    let top = containerRect.top + 60;\n    let left = containerRect.left;\n    let width = containerRect.width;\n    \n    // 右端がはみ出る場合\n    if (left + width > window.innerWidth - padding) {\n      left = window.innerWidth - width - padding;\n    }\n    \n    // 左端がはみ出る場合\n    if (left < padding) {\n      left = padding;\n      width = Math.min(width, window.innerWidth - 2 * padding);\n    }\n    \n    // 下端がはみ出る場合\n    if (top + overlayHeight > window.innerHeight - padding) {\n      top = Math.max(padding, window.innerHeight - overlayHeight - padding);\n    }\n    \n    // オーバーレイのスタイル設定\n    this.overlayTextarea.style.cssText = `\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${this.isDarkMode ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))' : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))'};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${this.isDarkMode ? '1px solid rgba(99, 102, 241, 0.25)' : '1px solid rgba(255, 255, 255, 0.5)'};\n      box-shadow: ${this.isDarkMode ? '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)' : '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)'};\n      border-radius: 16px;\n      color: white;\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;\n    \n    // ドキュメントに追加\n    document.body.appendChild(this.overlayTextarea);\n    \n    // アニメーション開始\n    requestAnimationFrame(() => {\n      this.overlayTextarea.style.opacity = '1';\n    });\n    \n    // フォーカス設定\n    this.overlayTextarea.focus();\n    \n    // 入力同期\n    this.overlayTextarea.addEventListener('input', (e) => {\n      this.input.value = e.target.value;\n    });\n    \n    // Escapeキーで閉じる\n    this.overlayTextarea.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.hideOverlayTextarea();\n      }\n    });\n    \n    // 外側クリックで閉じる\n    this.overlayTextarea.addEventListener('blur', () => {\n      setTimeout(() => this.hideOverlayTextarea(), 100);\n    });\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n}\n","import { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\nimport { SceneManager } from './SceneManager.js';\nimport { CommandUI } from './CommandUI.js';\n\n/**\n * ChocoDrop ワンステップ初期化ヘルパー\n * 共有フォルダから複数の Three.js プロジェクトへ使い回すことを想定\n *\n * @param {THREE.Scene} scene - 既存 Three.js シーン\n * @param {Object} options - 初期化オプション\n * @param {THREE.Camera} [options.camera] - 相対配置計算に使用するカメラ\n * @param {THREE.WebGLRenderer} [options.renderer] - マウス操作を有効化する場合に使用\n * @param {string} [options.serverUrl] - ChocoDrop サーバーの明示的 URL\n * @param {ChocoDropClient} [options.client] - 既存のクライアントを注入する場合（旧 LiveCommandClient）\n * @param {Function} [options.onControlsToggle] - UI 開閉時に呼ばれるコールバック\n * @param {Object} [options.sceneOptions] - SceneManager へ渡す追加オプション\n * @param {Object} [options.uiOptions] - CommandUI へ渡す追加オプション\n * @returns {Object} - 初期化済みのコンポーネント群と dispose ヘルパー\n */\nexport function createChocoDrop(scene, options = {}) {\n  if (!scene) {\n    throw new Error('THREE.Scene インスタンスが必要です');\n  }\n\n  const {\n    camera = null,\n    renderer = null,\n    serverUrl = null,\n    client = null,\n    onControlsToggle = () => {},\n    sceneOptions = {},\n    uiOptions = {}\n  } = options;\n\n  const resolvedServerUrl = serverUrl || sceneOptions.serverUrl || null;\n  const chocoDropClient = client || new ChocoDropClient(resolvedServerUrl);\n\n  const sceneManager = new SceneManager(scene, {\n    camera,\n    renderer,\n    serverUrl: resolvedServerUrl,\n    client: chocoDropClient,\n    ...sceneOptions\n  });\n\n  const commandUI = new CommandUI({\n    sceneManager,\n    client: chocoDropClient,\n    onControlsToggle,\n    ...uiOptions\n  });\n\n  return {\n    client: chocoDropClient,\n    sceneManager,\n    ui: commandUI,\n    dispose() {\n      commandUI.dispose?.();\n      sceneManager.dispose?.();\n    }\n  };\n}\n\n// 旧API名の互換エクスポート\nexport const createChocoDro = createChocoDrop;\nexport const createLiveCommand = createChocoDrop;\n","/**\n * ChocoDrop UMD Bundle\n * Browser-compatible script tag version\n */\n\n// Import all client components\nimport { ChocoDropClient, ChocoDroClient, LiveCommandClient } from '../client/LiveCommandClient.js';\nimport { SceneManager } from '../client/SceneManager.js';\nimport { CommandUI } from '../client/CommandUI.js';\nimport { createChocoDrop, createChocoDro, createLiveCommand } from '../client/bootstrap.js';\n\n// Export everything for UMD\nexport {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUI,\n  createChocoDrop,\n  createChocoDro,\n  createLiveCommand\n};\n\n// Default export for convenience\nexport default {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUI,\n  createChocoDrop,\n  createChocoDro,\n  createLiveCommand\n};"],"names":["ChocoDropClient","constructor","serverUrl","this","initialized","initPromise","console","log","initializeWithConfig","baseUrl","window","location","protocol","hostname","port","response","fetch","ok","config","json","detectServerUrl","error","warn","currentPort","ensureInitialized","Error","generateImage","prompt","options","payload","width","height","service","method","headers","body","JSON","stringify","status","result","generateVideo","safeDefaults","aspect_ratio","resolution","enable_safety_checker","enable_prompt_expansion","duration","model","seed","negative_prompt","frames_per_second","guidance_scale","executeCommand","command","getAvailableServices","LiveCommandClient","ChocoDroClient","SceneManager","scene","camera","renderer","labelRenderer","client","experimentGroup","THREE","Group","name","add","commandHistory","spawnedObjects","Map","objectCounter","selectedObject","selectedImageService","selectedVideoService","clock","Clock","raycaster","Raycaster","mouse","Vector2","lastHoveredObject","showLocationIndicator","indicatorDuration","defaultObjectScale","enableObjectSelection","enableMouseInteraction","enableDebugLogging","setupClickEvents","globalThis","sceneManager","setupObjectDragging","debugSceneInfo","position","x","toFixed","y","z","rotation","Math","PI","fov","near","far","children","length","getObjectByName","size","forEach","obj","id","worldPos","Vector3","getWorldPosition","userData","type","visible","scale","box","Box3","setFromObject","getSize","center","getCenter","meshCount","traverse","child","isMesh","distance","distanceTo","selectObject","object","deselectObject","createModernSelectionIndicator","commandUI","objectInfo","addOutput","modelName","currentMode","objectName","originalPrompt","input","value","focus","setSelectionRange","existingIndicator","remove","indicatorGroup","adjustedSize","geometry","parameters","shape","Shape","moveTo","lineTo","points","getPoints","geometryLine","BufferGeometry","setFromPoints","adaptiveColor","getAdaptiveSelectionColor","materialLine","LineBasicMaterial","color","linewidth","transparent","opacity","line","Line","set","edgesGeometry","EdgesGeometry","BoxGeometry","edgesMaterial","edges","LineSegments","copy","addResizeHandles","parentObject","handleSize","handleGeometry","handleMaterial","MeshBasicMaterial","depthTest","depthWrite","handleHoverMaterial","getAdaptiveHoverColor","corner","pos","index","handle","Mesh","clone","isResizeHandle","handleIndex","defaultMaterial","material","hoverMaterial","renderOrder","onHover","setScalar","document","style","cursor","onHoverExit","updateSelectionIndicatorScale","indicator","dispose","Array","isArray","canvas","domElement","isDragging","dragObject","dragOffset","mouseStart","dragMode","originalScale","addEventListener","event","button","rect","getBoundingClientRect","clientX","left","clientY","top","setFromCamera","intersects","intersectObjects","resizeHandleInfo","isRotateHandle","source","showDeleteConfirmation","then","confirmed","removeObject","catch","point","sub","handleHoverEffects","deltaX","deltaY","scaleMultiplier","abs","newScale","max","min","cameraRight","cameraUp","getWorldDirection","setFromMatrixColumn","matrixWorld","normalize","moveScale","worldMove","multiplyScalar","preventDefault","scaleFactor","emissive","setHex","setTimeout","rotationStep","rotated","key","newRotationX","newRotationXDown","cameraDirection","targetPoint","lookAt","angles","timestamp","Date","now","parsed","parseCommand","dispatchCommand","push","message","startsWith","actualCommand","replace","parseObjectModificationCommand","toLowerCase","trim","parseDeleteCommand","cmd","naturalLanguagePattern","parseNaturalLanguageCommand","some","keyword","includes","parsePosition","parseSize","fileType","findObjectByKeyword","objectKeywords","split","aliases","Object","entries","alias","generatedObjects","filter","lastObject","parseImageGenerationCommand","particles","particle","parts","colorMap","colorName","colorValue","match","parseFloat","movement","parsePositionFromPrompt","requiresSelection","target","movePatterns","pattern","regex","RegExp","direction","targetObjectName","requiresObjectSearch","colorPatterns","colorKeywords","colorKey","distanceMatch","executeImageGeneration","executeVideoGeneration","executeObjectModification","executeNaturalObjectModification","executeDelete","executeFileImport","executeObjectSelection","fallbackSizes","imageResult","lastError","i","dimensions","undefined","success","loader","TextureLoader","texture","imageUrl","localPath","filename","pop","loadAsync","colorSpace","SRGBColorSpace","createFallbackTexture","baseSize","imageWidth","image","naturalWidth","data","aspectRatio","naturalHeight","planeWidth","planeHeight","PlaneGeometry","map","side","DoubleSide","toneMapped","plane","finalPosition","calculateCameraRelativePosition","alignPlaneToCamera","objectId","createdAt","createLocationIndicator","videoResult","videoTexture","video","videoUrl","createElement","src","crossOrigin","loop","muted","playsInline","VideoTexture","play","createFallbackVideoTexture","requestedWidth","metadata","requestedHeight","planeAspect","videoElement","createAudioControl","fallbackVideoTexture","loadImageFile","fileUrl","loadVideoFile","autoplay","preload","Promise","resolve","reject","videoWidth","videoHeight","once","load","playError","objectUrl","targetObjects","findObjectsByName","targetObject","selectObjectFromMultiple","modified","toString","currentPos","newPos","lastModified","modifications","searchName","results","searchLower","objects","originalCommand","ordinalPatterns","parseInt","matchedText","currentScale","clearAll","targetByKeyword","deleteReason","deletedObjectId","display","accept","appendChild","onchange","async","file","files","URL","createObjectURL","removeChild","oncancel","click","getSpawnedObjects","modal","cssText","container","title","textContent","objectList","item","time","toLocaleTimeString","innerHTML","round","onmouseover","borderColor","background","onmouseout","onclick","selectedObjectId","cancelBtn","ctx","getContext","hue","hashString","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","font","textAlign","fillText","slice","CanvasTexture","animationFrame","animate","offset","icons","iconIndex","floor","requestAnimationFrame","str","hash","charCodeAt","from","get","pause","removeAttribute","revokeObjectURL","delete","mat","keys","getCommandHistory","relativePosition","SphereGeometry","indicatorPos","parent","cameraPos","crossVectors","cameraUpActual","logDebug","forward","negate","up","applyQuaternion","quaternion","dot","right","orientation","Matrix4","makeBasis","setFromRotationMatrix","setCamera","updateConfig","newConfig","setImageService","serviceId","getImageService","setVideoService","getVideoService","videoObject","audioButton","className","tooltip","createTooltip","volumeSlider","sliderContainer","slider","head","e","volume","createVolumeSlider","isSliderVisible","transform","buttonRect","stopPropagation","pointerEvents","querySelector","contains","audioControlElement","updateAudioControlPosition","audioControlUpdateInterval","setInterval","cleanupCallbacks","parentNode","vector","project","offsetX","offsetY","toggleVideoAudio","initializeLabelRenderer","loadAndInitializeCSS2DRenderer","ensureCSS2DRenderer","css2dInitPromise","CSS2DRenderer","setupCSS2DRenderer","module","import","CSS2DObject","setSize","innerWidth","innerHeight","addLabelRendererResizeHandler","labelRendererResizeHandler","updateRenderer","render","args","backgroundColor","bgColor","r","g","b","isColor","pow","getLuminance","IMAGE_SERVICE_STORAGE_KEY","VIDEO_SERVICE_STORAGE_KEY","CommandUI","onControlsToggle","isVisible","output","activeConnections","currentTaskId","activationKey","maxHeight","theme","showExamples","autoScroll","availableImageServices","availableVideoServices","imageServiceSelect","videoServiceSelect","serviceSelectorContainer","serviceSelectorStatus","serviceSelectorContent","serviceSelectorRetryButton","serviceSelectorSaveButton","serviceSelectorCancelButton","serviceModalOverlay","serviceModal","servicesLoading","isExpanded","overlayTextarea","pendingImageService","pendingVideoService","storedImage","localStorage","getItem","storedVideo","applyServiceSelectionToSceneManager","currentTheme","isDarkMode","isWabiSabiMode","currentHistoryIndex","maxHistorySize","initUI","bindEvents","createServiceModal","createFloatingChocolateIcon","refreshStyles","openServiceModal","getContainerStyles","brandIndicator","brandText","outputDiv","getOutputStyles","floatingContainer","taskCards","inputWrapper","rows","placeholder","getInputStyles","expandButton","hideOverlayTextarea","showOverlayTextarea","modeSelector","createRadioModeSelector","actionContainer","createMinimalActions","closeButton","hide","applyTheme","isComposing","hasCompositionJustEnded","autoResizeTextarea","applyKeywordHighlighting","detectCommandType","test","navigator","userAgent","isSafari","leftSection","clearBtn","getActionButtonStyles","clearAllWithConfirmation","historyBtn","disabled","rightSection","themeToggle","getThemeIcon","light","dark","wabisabi","icon","getThemeIconWithFilter","getThemeTitle","toggleTheme","settingsButton","createServiceSelectorSection","fontSize","marginBottom","updateServiceSelectorTheme","closeServiceModal","subtitle","selector","actionRow","initializeServiceSelector","actionButtons","handleServiceSave","toggleServiceRetryButton","forceFetch","resetPendingSelections","force","setServiceSelectorStatus","setServiceButtonsEnabled","resolveServiceSelection","default","populateServiceSelector","dataset","statusType","classList","toggle","services","defaultId","storageKey","storedId","resolvedId","setItem","removeItem","hasImage","hasVideo","imageRow","buildServiceRow","videoRow","labelText","selectedId","row","label","fontWeight","select","serviceType","fontFamily","option","description","onServiceSelectionChange","findServiceInfo","lineHeight","minHeight","info","parentElement","newImageId","newVideoId","imageInfo","videoInfo","enabled","childElementCount","find","border","statusColor","querySelectorAll","padding","borderRadius","outline","boxShadow","desc","radioModeButtons","mode","autoBadge","triggerFileSelection","selectMode","radioModeContainer","isManual","detectedKeyword","selectedGlass","addPulseEffect","addContainerGlow","getPlaceholderForMode","clearInputOnModeSwitch","selectedFile","showImportInterface","hideImportInterface","handleDeleteModeSelection","handleModifyModeSelection","element","animation","ensurePulseAnimation","getElementById","glowColors","generate","modify","variant","baseStyles","getDestructiveButtonStyles","getCommandTypeIndicatorStyles","newHeight","scrollHeight","overflowY","commandType","analyzeCommandType","text","mediaInfo","detectMediaType","deletePatterns","modifyPatterns","generatePatterns","confidence","reason","mediaType","requiresConfirmation","getAllCommandKeywords","clearKeywordHighlighting","allKeywords","matches","startIndex","endIndex","start","end","sort","a","createHighlightOverlay","highlightOverlay","computedStyle","getComputedStyle","letterSpacing","borderWidth","highlightedHTML","lastIndex","escapeHtml","substring","getKeywordColor","insertBefore","div","showCommandTypeIndicator","commandInfo","showProactiveSuggestion","hideProactiveSuggestion","enableGestureControl","detectedType","proactiveSuggestion","suggestion","t","updateIndicatorForMode","gestureEnabled","createActionButtons","getModernButtonStyles","positions","backdropFilter","getHeaderStyles","addScrollbarStyles","primary","secondary","danger","getModeButtonStyles","isActive","ctrlKey","shiftKey","redo","undo","show","flexDirection","containerRect","floatingChocolateIcon","switchMode","btn","executeBtn","placeholders","taskId","addTaskCard","saveCommandToHistory","fullCommand","getModePrefix","handleImportCommand","modifySelectedObject","getSelectedObjects","confirmMessage","confirm","deleteObjects","connectToProgress","updateTaskCard","errorMessages","scrollToBottom","showConfirmationDialog","confirmText","cancelText","confirmColor","dialog","closeModalWithAnimation","escHandler","removeEventListener","addSystemMessage","taskInfo","random","substr","card","setAttribute","getFloatingCardStyles","setProperty","friendlyMessage","getFriendlyMessage","pending","processing","progress","completed","firstChild","updateCardDisplayLimit","startTime","endTime","contentType","settings","addCardDetailEvents","animateCardEntrance","ensureShimmerStyles","styleSheet","has","taskData","animateCardSuccess","animateCardError","entry","getTaskCardStyles","statusBorders","shimmerEffect","allCards","existingCounter","hiddenCount","counter","counterBaseColor","counterBorderColor","counterTextColor","counterHoverColor","maxTouchPoints","showTaskDetailModal","hoverTimeout","clearTimeout","existingModal","createTaskDetailModal","overlayColor","modalBg","modalBorder","textColor","labelColor","statusText","modalContent","closeBtn","closeTaskDetailModal","transition","animateCardExit","addErrorTooltip","getResponseType","shortPrompt","responseType","getStatusColor","colors","createStatusIndicator","animateTaskCompletion","addSubtleParticleEffect","ensureTaskAnimations","angle","cos","sin","addTaskStatus","percent","updateTaskProgress","newMessage","completeTask","existingTask","serverTaskId","uiTaskId","eventSource","EventSource","onmessage","parse","handleProgressUpdate","onerror","disconnectProgress","connection","close","scrollTop","commandData","shift","updateUndoRedoButtons","canUndo","undoLastGenerate","undoLastModify","undoLastDelete","canRedo","redoCommand","undoBtn","redoBtn","showClearAllConfirmation","example","setSceneManager","setClient","generateBtn","updateServiceModalStyles","currentDisplay","currentFlexDirection","brandBadge","themeConfig","updateFloatingContainerTheme","updateExistingTextColors","glassmorphismDark","glassmorphismLight","system","hint","defaultTextColor","fileInput","handleFileSelection","enableDragAndDrop","fileSelectButton","disableDragAndDrop","openFileSelector","url","detectFileType","defaultPrompt","handleDragOver","bind","handleDrop","handleDragEnter","handleDragLeave","dataTransfer","fileName","ext","load3DModel","processedFileName","importedType","importedUrl","triggerAttentionAnimation","chatOutput","inputField","addMicroShakeEffect","addContextGlow","addEmotionalPulse","add3DDepthEffect","ensureMicroShakeAnimation","glowColor","pulseColor","borderLeft","ensureEmotionalPulseAnimation","newMode","isPreviousModeMessage","getModeDisplayName","inputValue","importPatterns","showFloatingIconContextMenu","existingMenu","menu","openFormItem","textShadow","hideIconItem","hideFloatingIcon","bottom","closeMenu","showFloatingIcon","createChocoDrop","sceneOptions","uiOptions","resolvedServerUrl","chocoDropClient","ui","createChocoDro","createLiveCommand"],"mappings":"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"}