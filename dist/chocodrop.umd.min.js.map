{"version":3,"names":["ChocoDropClient","constructor","serverUrl","this","initialized","initPromise","console","log","initializeWithConfig","baseUrl","window","location","protocol","hostname","port","response","fetch","ok","config","json","detectServerUrl","error","warn","currentPort","ensureInitialized","Error","generateImage","prompt","options","payload","width","height","service","method","headers","body","JSON","stringify","status","result","generateVideo","safeDefaults","resolution","enable_safety_checker","enable_prompt_expansion","duration","aspect_ratio","model","seed","negative_prompt","frames_per_second","guidance_scale","executeCommand","command","getAvailableServices","LiveCommandClient","ChocoDroClient","TRANSLATION_DICTIONARY","createObjectKeywords","keywords","japanese","english","Object","entries","includes","push","translateKeyword","matchKeywordWithFilename","keyword","filename","lowerFilename","toLowerCase","jp","aliases","alias","englishKeyword","module","exports","SceneManager","scene","camera","renderer","labelRenderer","client","experimentGroup","THREE","Group","name","add","commandHistory","spawnedObjects","Map","objectCounter","selectedObject","selectedImageService","selectedVideoService","audioControls","audioControlUpdateInterval","audioControlUpdateListener","clock","Clock","raycaster","Raycaster","mouse","Vector2","lastHoveredObject","showLocationIndicator","indicatorDuration","defaultObjectScale","enableObjectSelection","enableMouseInteraction","enableDebugLogging","setupClickEvents","globalThis","sceneManager","setupObjectDragging","debugSceneInfo","position","x","toFixed","y","z","rotation","Math","PI","fov","near","far","children","length","getObjectByName","size","forEach","obj","id","worldPos","Vector3","getWorldPosition","userData","type","visible","scale","box","Box3","setFromObject","getSize","center","getCenter","meshCount","traverse","child","isMesh","distance","distanceTo","selectObject","object","deselectObject","createModernSelectionIndicator","commandUI","objectInfo","addOutput","modelName","currentMode","objectName","originalPrompt","input","value","focus","setSelectionRange","existingIndicator","remove","indicatorGroup","margin","adjustedSize","geometry","parameters","shape","Shape","moveTo","lineTo","points","getPoints","geometryLine","BufferGeometry","setFromPoints","adaptiveColor","getAdaptiveSelectionColor","materialLine","LineBasicMaterial","color","linewidth","transparent","opacity","line","Line","set","edgesGeometry","EdgesGeometry","BoxGeometry","edgesMaterial","edges","LineSegments","copy","addResizeHandles","parentObject","handleSize","handleGeometry","handleMaterial","MeshBasicMaterial","depthTest","depthWrite","handleHoverMaterial","getAdaptiveHoverColor","positions","corner","pos","index","handle","Mesh","clone","isResizeHandle","handleIndex","defaultMaterial","material","hoverMaterial","renderOrder","onHover","setScalar","document","style","cursor","onHoverExit","updateSelectionIndicatorScale","indicator","dispose","Array","isArray","canvas","domElement","isDragging","dragObject","dragOffset","mouseStart","dragMode","originalScale","addEventListener","event","button","rect","getBoundingClientRect","clientX","left","clientY","top","setFromCamera","intersects","intersectObjects","resizeHandleInfo","isRotateHandle","source","showDeleteConfirmation","then","confirmed","removeObject","catch","point","sub","handleHoverEffects","deltaX","deltaY","scaleMultiplier","abs","newScale","max","min","cameraRight","cameraUp","getWorldDirection","setFromMatrixColumn","matrixWorld","normalize","moveScale","worldMove","multiplyScalar","preventDefault","scaleFactor","emissive","setHex","setTimeout","rotationStep","rotated","key","newRotationX","newRotationXDown","cameraDirection","targetPoint","lookAt","angles","timestamp","Date","now","parsed","parseCommand","dispatchCommand","message","startsWith","actualCommand","replace","parseObjectModificationCommand","trim","parseDeleteCommand","cmd","naturalLanguagePattern","parseNaturalLanguageCommand","videoKeywords","isAnimationForVideo","isVideoRequest","some","parsePosition","parseSize","selectKeywords","isSelectRequest","importKeywords","isImportRequest","isVideoImport","fileType","imageKeywords","getObjectKeywords","normalizeTargetPhrase","phrase","referentialPattern","test","politePattern","trailingPatterns","pattern","englishLeadingPattern","isReferentialCommand","getObjectSourceType","getRecentObjects","objects","from","values","importContext","generatedContext","candidates","filter","sort","a","b","aTime","lastModified","createdAt","bTime","findRecentObjectByContext","normalizedTarget","objectKeywords","candidate","matchesObjectName","extractTextTokens","text","split","map","token","buildObjectKeywordHints","fileName","baseType","Set","baseName","Boolean","findObjectByKeyword","normalizedCommand","importOrderMatch","match","orderNumber","parseInt","findImportedObjectByOrder","sourceMatch","sourceType","isImported","findObjectBySourceAndName","recentObject","findObjectByName","importedObjects","importOrder","matchingObjects","foundObject","childSource","isChildImported","isChildGenerated","sourceLabel","target","targetLower","keywordLower","aliasLower","promptLower","parseImageGenerationCommand","particles","particle","parts","colorMap","colorName","colorValue","effects","parseEffects","parseFloat","movement","parsePositionFromPrompt","degreeMatch","flip","requiresSelection","effectKeywords","intensity","metalness","roughness","animation","speed","amplitude","axis","colors","presetEffects","presetName","presetEffectList","chromaRequested","requiresChromaKey","effect","chromaConfig","detectChromaKeyConfig","threshold","smoothing","toString","chromaKeywords","detectChromaKeyColor","hexMatch","colorKeywords","tokens","entry","applyEffects","targetObject","applied","applyOpacityEffect","applyGlowEffect","applyMaterialEffect","applyAnimationEffect","applyCosmicEffect","applyWatercolorEffect","applyChromaKeyEffect","needsUpdate","ensureEmissiveSupport","Color","emissiveIntensity","fallbackColor","originalColor","lerp","undefined","animations","startAnimationLoop","animationId","uuid","has","delete","animationData","startTime","originalPosition","originalRotation","useColorFallback","cosmicAnimationId","cosmicData","cosmicType","getCosmicSpeed","colorIndex","originalEmissive","originalEmissiveIntensity","texture","isChromaKeyMaterial","uniforms","keyColor","shaderMaterial","ShaderMaterial","vertexShader","fragmentShader","side","DoubleSide","toneMapped","watercolorAnimationId","watercolorData","artType","getWatercolorSpeed","originalOpacity","animationLoopRunning","animate","updateAnimations","requestAnimationFrame","currentTime","elapsed","updateFloatAnimation","updatePulseAnimation","updateSpinAnimation","updateSparkleAnimation","updateRainbowAnimation","updateGlitchAnimation","updateCosmicAnimation","updateWatercolorAnimation","yOffset","sin","scaleOffset","rotationAmount","hue","setHSL","random","offset","colorCycleSpeed","numColors","colorProgress","currentColorIndex","floor","nextColorIndex","lerpFactor","currentColor","nextColor","blendedColor","intensityMultiplier","cos","opacityMultiplier","getAutoEffectsFromPrompt","lowerPrompt","applyRecognitionFeedback","feedbackEffect","stopRecognitionFeedback","feedbackAnimationId","movePatterns","regex","RegExp","direction","targetObjectName","requiresObjectSearch","colorPatterns","colorKey","rotationPatterns","flipPatterns","effectPatterns","effectName","distanceMatch","executeImageGeneration","executeVideoGeneration","executeObjectModification","executeNaturalObjectModification","executeDelete","executeFileImport","executeObjectSelection","fallbackSizes","imageResult","lastError","i","dimensions","success","loader","TextureLoader","imageUrl","localPath","pop","loadAsync","colorSpace","SRGBColorSpace","createFallbackTexture","sizeScale","baseSize","imageWidth","image","naturalWidth","data","imageHeight","naturalHeight","aspectRatio","planeWidth","planeHeight","PlaneGeometry","plane","alphaTest","finalPosition","calculateCameraRelativePosition","alignPlaneToCamera","objectId","createLocationIndicator","videoResult","videoTexture","video","videoUrl","createElement","src","crossOrigin","loop","muted","playsInline","VideoTexture","play","createFallbackVideoTexture","requestedWidth","metadata","requestedHeight","planeAspect","videoElement","createAudioControl","fallbackVideoTexture","loadImageFile","fileUrl","loadVideoFile","autoplay","preload","Promise","resolve","reject","handleLoaded","videoWidth","videoHeight","handleError","once","load","playError","objectUrl","targetObjects","findObjectsByName","selectObjectFromMultiple","modified","effectsApplied","currentPos","newPos","modifications","searchName","results","searchLower","originalCommand","ordinalPatterns","matchedText","currentScale","currentRotation","newRotation","degrees","currentOpacity","currentScaleX","clearAll","targetByKeyword","deleteReason","isSimpleDeleteCommand","deletedObjectId","display","accept","appendChild","onchange","async","file","files","URL","createObjectURL","removeChild","oncancel","click","getSpawnedObjects","modal","cssText","container","title","textContent","objectList","item","time","toLocaleTimeString","innerHTML","round","onmouseover","borderColor","background","onmouseout","onclick","selectedObjectId","cancelBtn","ctx","getContext","hash","hashString","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","font","textAlign","fillText","slice","CanvasTexture","animationFrame","icons","iconIndex","str","char","charCodeAt","get","pause","removeAttribute","revokeObjectURL","cleanupCallbacks","cb","materials","mat","objectIds","keys","getCommandHistory","relativePosition","SphereGeometry","indicatorPos","parent","cameraPos","crossVectors","cameraUpActual","logDebug","forward","negate","up","applyQuaternion","quaternion","dot","right","orientation","Matrix4","makeBasis","setFromRotationMatrix","setCamera","updateConfig","newConfig","setImageService","serviceId","getImageService","setVideoService","getVideoService","videoObject","audioButton","className","createTooltip","tooltip","createVolumeSlider","sliderContainer","slider","head","e","volume","volumeSlider","isSliderVisible","transform","buttonRect","stopPropagation","pointerEvents","querySelector","contains","audioControlElement","updateAudioControlPosition","hideSlider","updateAllAudioControlPositions","passive","setInterval","cleanup","removeEventListener","onDocumentClick","parentNode","clearInterval","vector","project","offsetX","offsetY","_","toggleVideoAudio","initializeLabelRenderer","loadAndInitializeCSS2DRenderer","ensureCSS2DRenderer","css2dInitPromise","CSS2DRenderer","setupCSS2DRenderer","import","CSS2DObject","setSize","innerWidth","innerHeight","addLabelRendererResizeHandler","labelRendererResizeHandler","updateRenderer","render","args","backgroundColor","bgColor","r","g","isColor","getLuminance","rs","pow","gs","bs","bgLuminance","IMAGE_SERVICE_STORAGE_KEY","VIDEO_SERVICE_STORAGE_KEY","KEYWORD_HIGHLIGHT_COLOR","CommandUI","onControlsToggle","isVisible","output","activeConnections","currentTaskId","activationKey","maxHeight","theme","showExamples","autoScroll","availableImageServices","availableVideoServices","highlightOverlay","inputDefaultStyles","imageServiceSelect","videoServiceSelect","serviceSelectorContainer","serviceSelectorStatus","serviceSelectorContent","serviceSelectorRetryButton","serviceSelectorSaveButton","serviceSelectorCancelButton","serviceModalOverlay","serviceModal","servicesLoading","isExpanded","overlayTextarea","pendingImageService","pendingVideoService","feedbackAutoClearTimer","currentFeedback","storedImage","localStorage","getItem","storedVideo","applyServiceSelectionToSceneManager","currentTheme","isDarkMode","isWabiSabiMode","currentHistoryIndex","maxHistorySize","initUI","bindEvents","createServiceModal","createFloatingChocolateIcon","refreshStyles","openServiceModal","getContainerStyles","brandIndicator","brandText","outputDiv","getOutputStyles","floatingContainer","taskCards","inputWrapper","rows","placeholder","getInputStyles","expandButton","hideOverlayTextarea","showOverlayTextarea","modeSelector","createRadioModeSelector","actionContainer","createMinimalActions","closeButton","hide","applyTheme","isComposing","hasCompositionJustEnded","clearInputFeedback","autoResizeTextarea","applyKeywordHighlighting","detectCommandType","isSafari","navigator","userAgent","leftSection","clearBtn","getActionButtonStyles","clearAllWithConfirmation","historyBtn","disabled","rightSection","themeToggle","getThemeIcon","themeConfig","light","dark","wabisabi","getThemeTitle","titleConfig","getThemeIconWithFilter","icon","toggleTheme","settingsButton","createServiceSelectorSection","fontSize","marginBottom","updateServiceSelectorTheme","closeServiceModal","subtitle","selector","actionRow","initializeServiceSelector","actionButtons","handleServiceSave","toggleServiceRetryButton","forceFetch","resetPendingSelections","force","setServiceSelectorStatus","setServiceButtonsEnabled","resolveServiceSelection","default","populateServiceSelector","dataset","statusType","classList","toggle","services","defaultId","storageKey","storedId","isStoredValid","resolvedId","setItem","removeItem","hasImage","hasVideo","imageRow","buildServiceRow","videoRow","labelText","selectedId","row","label","fontWeight","select","serviceType","fontFamily","option","description","onServiceSelectionChange","findServiceInfo","lineHeight","minHeight","info","parentElement","newImageId","newVideoId","imageInfo","videoInfo","enabled","childElementCount","list","find","border","statusColor","labels","querySelectorAll","selects","padding","borderRadius","outline","boxShadow","descriptions","desc","modes","radioModeButtons","mode","autoBadge","triggerFileSelection","selectMode","radioModeContainer","isManual","detectedKeyword","selectedGlass","addPulseEffect","addContainerGlow","getPlaceholderForMode","clearInputOnModeSwitch","selectedFile","showImportInterface","hideImportInterface","handleDeleteModeSelection","handleModifyModeSelection","element","ensurePulseAnimation","getElementById","glowColors","generate","modify","glowColor","intensified","variant","baseStyles","getDestructiveButtonStyles","getCommandTypeIndicatorStyles","maxLines","newHeight","scrollHeight","overflowY","commandType","analyzeCommandType","hasSelectedObject","trimmedText","reason","mediaInfo","detectMediaType","deletePatterns","confidence","mediaType","requiresConfirmation","needsTarget","generatePatterns","targetPatterns","explicitTargetMatched","hasExplicitTarget","modificationIndicators","mediaReferenceIndicators","getAllCommandKeywords","modifyPatterns","createHighlightOverlay","matches","clearKeywordHighlighting","computedStyle","getComputedStyle","captureInputDefaultStyles","letterSpacing","borderWidth","highlightedHTML","lastIndex","escapeHtml","substring","start","getKeywordColor","end","backgroundImage","getInputTextColor","insertBefore","div","videoPatterns","imagePatterns","showCommandTypeIndicator","commandInfo","showProactiveSuggestion","hideProactiveSuggestion","enableGestureControl","detectedType","proactiveSuggestion","alternativeTypes","t","suggestion","suggestionLabels","updateIndicatorForMode","gestureEnabled","createActionButtons","getModernButtonStyles","glassmorphismDark","backdropFilter","glassmorphismLight","glassmorphismWabiSabi","getHeaderStyles","gradientColors","addScrollbarStyles","styles","primary","secondary","danger","getModeButtonStyles","isActive","modeColors","ctrlKey","shiftKey","undo","redo","show","flexDirection","containerRect","floatingChocolateIcon","switchMode","btn","executeBtn","buttonColors","placeholders","preValidation","preValidateCommand","canExecute","proceedWithExecution","showConfirmationDialog","confirmText","cancelText","confirmColor","dialog","closeModalWithAnimation","escHandler","addTaskCard","addSystemMessage","taskInfo","taskId","substr","card","setAttribute","getFloatingCardStyles","setProperty","iconMap","pending","processing","progress","completed","friendlyMessage","getFriendlyMessage","errorMessage","firstChild","updateCardDisplayLimit","endTime","contentType","settings","addCardDetailEvents","animateCardEntrance","ensureShimmerStyles","styleSheet","updateTaskCard","taskData","animateCardSuccess","animateCardError","scrollToBottom","showInputFeedback","feedbackOverlay","overlay","isError","messageSpan","flex","actions","actionsContainer","action","onClick","clearTimeout","ensureFeedbackStyles","canAttemptSearch","foundTarget","executeCommandAfterValidation","newCommand","convertToGenerateCommand","saveCommandToHistory","modePrefix","getModePrefix","fullCommand","handleImportCommand","modifySelectedObject","getSelectedObjects","confirmMessage","confirm","deleteObjects","connectToProgress","errorMessages","patterns","to","getTaskCardStyles","statusBorders","shimmerEffect","floatingAnimation","maxVisibleCards","allCards","existingCounter","hiddenCount","counter","counterBaseColor","counterBorderColor","counterTextColor","counterHoverColor","isTouchDevice","maxTouchPoints","showTaskDetailModal","hoverTimeout","existingModal","createTaskDetailModal","overlayColor","modalBg","modalBorder","textColor","labelColor","statusText","modalContent","closeBtn","closeTaskDetailModal","transition","animateCardExit","addErrorTooltip","getResponseType","shortPrompt","responseType","shortError","getStatusColor","createStatusIndicator","animateTaskCompletion","addSubtleParticleEffect","ensureTaskAnimations","angle","addTaskStatus","percent","updateTaskProgress","newMessage","existingTask","completeTask","serverTaskId","uiTaskId","eventSource","EventSource","onmessage","parse","handleProgressUpdate","onerror","disconnectProgress","connection","close","scrollTop","prefixes","commandData","shift","updateUndoRedoButtons","canUndo","undoLastGenerate","undoLastModify","undoLastDelete","canRedo","redoCommand","undoBtn","redoBtn","showClearAllConfirmation","examples","example","setSceneManager","setClient","generateBtn","updateServiceModalStyles","currentDisplay","currentFlexDirection","brandBadge","hadHighlight","updateFloatingContainerTheme","updateExistingTextColors","system","hint","defaultTextColor","fileInput","handleFileSelection","enableDragAndDrop","fileSelectButton","disableDragAndDrop","openFileSelector","url","detectFileType","defaultPrompt","handleDragOver","bind","handleDrop","handleDragEnter","handleDragLeave","dataTransfer","ext","load3DModel","processedFileName","importedType","importedUrl","triggerAttentionAnimation","chatOutput","inputField","addMicroShakeEffect","addContextGlow","addEmotionalPulse","add3DDepthEffect","ensureMicroShakeAnimation","pulseColor","borderLeft","ensureEmotionalPulseAnimation","newMode","isPreviousModeMessage","getModeDisplayName","inputValue","importPatterns","modeNames","showFloatingIconContextMenu","existingMenu","menu","openFormItem","textShadow","hideIconItem","hideFloatingIcon","bottom","closeMenu","showFloatingIcon","overlayHeight","overlayBackground","overlayBorder","overlayInnerShadow","overlayTextColor","createChocoDrop","sceneOptions","uiOptions","resolvedServerUrl","chocoDropClient","ui","createChocoDro","createLiveCommand"],"sources":["../src/client/LiveCommandClient.js","../src/common/translation-dictionary.js","../src/client/SceneManager.js","../src/client/CommandUI.js","../src/client/bootstrap.js","../src/umd/index.js"],"sourcesContent":["/**\n * ChocoDrop Client - サーバーとの通信クライアント\n */\nexport class ChocoDropClient {\n  constructor(serverUrl = null) {\n    this.serverUrl = null;\n    this.initialized = false;\n    this.initPromise = null;\n\n    if (serverUrl) {\n      this.serverUrl = serverUrl;\n      this.initialized = true;\n      console.log('🍫 ChocoDropClient initialized:', serverUrl);\n    } else {\n      // 設定取得を遅延実行（Promiseを保存）\n      this.initPromise = this.initializeWithConfig();\n    }\n  }\n\n  /**\n   * サーバーから設定を取得して初期化\n   */\n  async initializeWithConfig() {\n    try {\n      // 現在のページのホストとポートを基準に設定API呼び出し\n      const baseUrl = `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\n\n      const response = await fetch(`${baseUrl}/api/config`);\n      if (response.ok) {\n        const config = await response.json();\n        this.serverUrl = config.serverUrl;\n        console.log('🍫 ChocoDropClient initialized from config:', this.serverUrl);\n      } else {\n        // フォールバック：ポート推測\n        this.serverUrl = this.detectServerUrl();\n        console.log('🍫 ChocoDropClient fallback to detected URL:', this.serverUrl);\n      }\n    } catch (error) {\n      console.warn('⚠️ ChocoDrop config fetch failed, using fallback:', error);\n      this.serverUrl = this.detectServerUrl();\n    }\n\n    this.initialized = true;\n  }\n\n  /**\n   * サーバーURL自動検出（フォールバック）\n   */\n  detectServerUrl() {\n    const currentPort = window.location.port;\n    const protocol = window.location.protocol;\n    const hostname = window.location.hostname;\n\n    // ポートが未指定の場合（ファイルプロトコル等）は既定の 3011 を使用\n    if (!currentPort) {\n      return `${protocol}//${hostname}:3011`;\n    }\n\n    return `${protocol}//${hostname}:${currentPort}`;\n  }\n\n  /**\n   * 初期化完了を待機\n   */\n  async ensureInitialized() {\n    if (this.initialized) return;\n\n    // initPromiseがあれば待機\n    if (this.initPromise) {\n      await this.initPromise;\n      return;\n    }\n\n    // フォールバック：初期化されていない場合はエラー\n    throw new Error('ChocoDropClient not initialized');\n  }\n\n  /**\n   * 画像生成リクエスト\n   */\n  async generateImage(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎨 Requesting image generation: \"${prompt}\"`);\n\n    try {\n      const payload = {\n        prompt,\n        width: options.width || 512,\n        height: options.height || 512\n      };\n\n      if (options.service) {\n        payload.service = options.service;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Image generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Image generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成リクエスト\n   */\n  async generateVideo(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎬 Requesting video generation: \"${prompt}\"`);\n\n    try {\n      const safeDefaults = {\n        // aspect_ratio: サーバー側で各モデル最適な比率を自動選択\n        resolution: '720p',\n        enable_safety_checker: true,\n        enable_prompt_expansion: true\n      };\n\n      const payload = {\n        prompt,\n        duration: typeof options.duration === 'number' && options.duration > 0 ? options.duration : 3,\n        resolution: options.resolution || safeDefaults.resolution,\n        enable_safety_checker: options.enable_safety_checker ?? safeDefaults.enable_safety_checker,\n        enable_prompt_expansion: options.enable_prompt_expansion ?? safeDefaults.enable_prompt_expansion\n      };\n\n      // ユーザーが明示的にアスペクト比を指定した場合のみ追加\n      if (options.aspect_ratio) {\n        payload.aspect_ratio = options.aspect_ratio;\n      }\n      // それ以外はサーバー側で各モデルに最適な比率を自動選択\n\n      if (options.model) {\n        payload.model = options.model;\n      }\n\n      if (typeof options.width === 'number' && options.width > 0) {\n        payload.width = options.width;\n      }\n\n      if (typeof options.height === 'number' && options.height > 0) {\n        payload.height = options.height;\n      }\n\n      if (typeof options.seed === 'number') {\n        payload.seed = options.seed;\n      }\n\n      if (options.negative_prompt) {\n        payload.negative_prompt = options.negative_prompt;\n      }\n\n      if (typeof options.frames_per_second === 'number' && options.frames_per_second > 0) {\n        payload.frames_per_second = options.frames_per_second;\n      }\n\n      if (typeof options.guidance_scale === 'number') {\n        payload.guidance_scale = options.guidance_scale;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate-video`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Video generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Video generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド実行\n   */\n  async executeCommand(command) {\n    await this.ensureInitialized();\n    console.log(`🎯 Executing command: \"${command}\"`);\n\n    try {\n      const response = await fetch(`${this.serverUrl}/api/command`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ command })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Command execution result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 利用可能なサービス一覧取得\n   */\n  async getAvailableServices() {\n    await this.ensureInitialized();\n    try {\n      const response = await fetch(`${this.serverUrl}/api/services`);\n      \n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      return await response.json();\n\n    } catch (error) {\n      console.error('❌ Failed to get services:', error);\n      return [];\n    }\n  }\n}\n\n// 後方互換のため旧名称もエクスポート\nexport const LiveCommandClient = ChocoDropClient;\nexport const ChocoDroClient = ChocoDropClient;\n","/**\n * ChocoDrop 共通翻訳辞書\n * サーバー・クライアント共通で使用する日本語→英語翻訳辞書\n */\n\nconst TRANSLATION_DICTIONARY = {\n  // ファンタジー・魔法系\n  'ユニコーン': 'unicorn',\n  'ドラゴン': 'dragon',\n  '龍': 'dragon',\n  '怪獣': 'monster',\n  'モンスター': 'monster',\n  '魔法使い': 'wizard',\n  '魔術師': 'sorcerer',\n  '魔女': 'witch',\n  '妖精': 'fairy',\n  '🧚': 'fairy',\n  '🧙': 'wizard',\n  '魔法杖': 'magic wand',\n  '杖': 'wand',\n  'スタッフ': 'staff',\n  '魔法': 'magic',\n  '呪文': 'spell',\n  '魔法陣': 'magic circle',\n  '水晶玉': 'crystal ball',\n  '薬瓶': 'potion bottle',\n  '魔導書': 'grimoire',\n  'フェニックス': 'phoenix',\n  'グリフィン': 'griffin',\n  'ペガサス': 'pegasus',\n  'ケルベロス': 'cerberus',\n\n  // 動物\n  '画像': 'image',\n  '写真': 'photo',\n  'イメージ': 'image',\n  '絵': 'picture',\n  'ファイル': 'file',\n  'メディア': 'media',\n  '素材': 'asset',\n  '動画': 'video',\n  'ビデオ': 'video',\n  'ムービー': 'movie',\n  '映像': 'video',\n  'クリップ': 'clip',\n  '猫': 'cat',\n  'ネコ': 'cat',\n  'ねこ': 'cat',\n  '犬': 'dog',\n  'イヌ': 'dog',\n  'いぬ': 'dog',\n  '狼': 'wolf',\n  '熊': 'bear',\n  'ライオン': 'lion',\n  'トラ': 'tiger',\n  '象': 'elephant',\n  'キリン': 'giraffe',\n  'シマウマ': 'zebra',\n  'パンダ': 'panda',\n  'ウサギ': 'rabbit',\n  'リス': 'squirrel',\n  'ハムスター': 'hamster',\n  'フクロウ': 'owl',\n  'ワシ': 'eagle',\n  'カラス': 'crow',\n  'ハト': 'dove',\n  'ペンギン': 'penguin',\n  'イルカ': 'dolphin',\n  'クジラ': 'whale',\n  'サメ': 'shark',\n  'タコ': 'octopus',\n  'カニ': 'crab',\n  'エビ': 'shrimp',\n\n  // 自然・風景\n  '花': 'flower',\n  'はな': 'flower',\n  'ハナ': 'flower',\n  '桜': 'cherry blossom',\n  'バラ': 'rose',\n  'ひまわり': 'sunflower',\n  'チューリップ': 'tulip',\n  '雲': 'cloud',\n  '空': 'sky',\n  '海': 'ocean',\n  '湖': 'lake',\n  '川': 'river',\n  '山': 'mountain',\n  'やま': 'mountain',\n  'ヤマ': 'mountain',\n  '森': 'forest',\n  '木': 'tree',\n  'き': 'tree',\n  'キ': 'tree',\n  '草原': 'meadow',\n  '砂漠': 'desert',\n  '滝': 'waterfall',\n  '洞窟': 'cave',\n  '島': 'island',\n  '星座': 'constellation',\n  '銀河': 'galaxy',\n  '惑星': 'planet',\n\n  // 建物・場所\n  '城': 'castle',\n  'しろ': 'castle',\n  'シロ': 'castle',\n  '宮殿': 'palace',\n  '家': 'house',\n  '塔': 'tower',\n  '教会': 'church',\n  '神殿': 'temple',\n  '図書館': 'library',\n  '学校': 'school',\n  '病院': 'hospital',\n  '駅': 'station',\n  '空港': 'airport',\n  '港': 'port',\n  '橋': 'bridge',\n  '灯台': 'lighthouse',\n  '風車': 'windmill',\n  '庭': 'garden',\n  '公園': 'park',\n  '遊園地': 'amusement park',\n\n  // 乗り物\n  '車': 'car',\n  '電車': 'train',\n  'バス': 'bus',\n  '飛行機': 'airplane',\n  'ヘリコプター': 'helicopter',\n  '船': 'ship',\n  'ヨット': 'yacht',\n  '自転車': 'bicycle',\n  'バイク': 'motorcycle',\n  'ロケット': 'rocket',\n\n  // 天体・時間\n  '月': 'moon',\n  '太陽': 'sun',\n  '星': 'star',\n  '彗星': 'comet',\n  '流れ星': 'shooting star',\n  '虹': 'rainbow',\n  '雷': 'lightning',\n  '雪': 'snow',\n  '雨': 'rain',\n  '嵐': 'storm',\n  '霧': 'fog',\n  '氷': 'ice',\n  '火': 'fire',\n  '水': 'water',\n  '風': 'wind',\n  '光': 'light',\n  '影': 'shadow',\n  '夜': 'night',\n  '朝': 'morning',\n  '夕方': 'evening',\n\n  // 色・素材\n  '赤': 'red',\n  '青': 'blue',\n  '緑': 'green',\n  '黄色': 'yellow',\n  '白': 'white',\n  '黒': 'black',\n  '紫': 'purple',\n  'ピンク': 'pink',\n  'オレンジ': 'orange',\n  '茶色': 'brown',\n  'グレー': 'gray',\n  '金': 'gold',\n  '銀': 'silver',\n  'プラチナ': 'platinum',\n  '銅': 'copper',\n  '鉄': 'iron',\n  '石': 'stone',\n  '木材': 'wood',\n  'ガラス': 'glass',\n  '水晶': 'crystal',\n  'ダイヤモンド': 'diamond',\n\n  // 鳥類\n  '鳥': 'bird',\n  'とり': 'bird',\n  'トリ': 'bird'\n};\n\n/**\n * オブジェクト識別用のエイリアス辞書（拡張版）\n * 翻訳辞書から逆マッピングを生成し、エイリアスも含める\n */\nfunction createObjectKeywords() {\n  const keywords = {};\n\n  // 翻訳辞書から逆マッピングを作成\n  for (const [japanese, english] of Object.entries(TRANSLATION_DICTIONARY)) {\n    // 英語をキーとして日本語とエイリアスを格納\n    if (!keywords[japanese]) {\n      keywords[japanese] = [];\n    }\n\n    // 英語の翻訳を追加\n    if (!keywords[japanese].includes(english)) {\n      keywords[japanese].push(english);\n    }\n  }\n\n  return keywords;\n}\n\n/**\n * 日本語キーワードを英語に翻訳\n */\nfunction translateKeyword(japanese) {\n  return TRANSLATION_DICTIONARY[japanese] || japanese;\n}\n\n/**\n * ファイル名と日本語キーワードをマッチング\n */\nfunction matchKeywordWithFilename(keyword, filename, keywords) {\n  const lowerFilename = filename.toLowerCase();\n\n  // 直接マッチ\n  if (lowerFilename.includes(keyword.toLowerCase())) {\n    return true;\n  }\n\n  // キーワード辞書での相互マッチ\n  for (const [jp, aliases] of Object.entries(keywords)) {\n    // キーワードが日本語の場合、対応する英語エイリアスをファイル名で探す\n    if (keyword.includes(jp)) {\n      for (const alias of aliases) {\n        if (lowerFilename.includes(alias.toLowerCase())) {\n          return true;\n        }\n      }\n    }\n  }\n\n  // 翻訳辞書での直接マッチ\n  const englishKeyword = translateKeyword(keyword);\n  if (englishKeyword !== keyword && lowerFilename.includes(englishKeyword.toLowerCase())) {\n    return true;\n  }\n\n  return false;\n}\n\n// ES6 Modules (クライアント用)\nexport { TRANSLATION_DICTIONARY, createObjectKeywords, translateKeyword, matchKeywordWithFilename };\n\n// CommonJS (サーバー用)\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = { TRANSLATION_DICTIONARY, createObjectKeywords, translateKeyword, matchKeywordWithFilename };\n}\n","import * as THREE from 'three';\nimport { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\nimport { createObjectKeywords, matchKeywordWithFilename } from '../common/translation-dictionary.js';\n\n/**\n * Scene Manager - 3D scene integration for ChocoDrop System\n * Handles natural language parsing and 3D object management\n */\nexport class SceneManager {\n  constructor(scene, options = {}) {\n    if (!scene) {\n      throw new Error('THREE.Scene is required');\n    }\n    \n    this.scene = scene;\n    this.camera = options.camera || null;\n    this.renderer = options.renderer || null;\n    this.labelRenderer = null; // CSS2DRenderer for UI overlays like audio controls\n    // ChocoDrop Client（共通クライアント注入を優先）\n    // 外部フォルダから共有する場合は options.client でクライアントを再利用\n    this.client = options.client || new ChocoDropClient(options.serverUrl);\n    \n    // 実験オブジェクト管理用グループ\n    this.experimentGroup = new THREE.Group();\n    this.experimentGroup.name = 'LiveExperiments';\n    // 一旦シーンに追加（後でカメラに移動する可能性あり）\n    this.scene.add(this.experimentGroup);\n    \n    // コマンド履歴\n    this.commandHistory = [];\n    \n    // オブジェクト管理\n    this.spawnedObjects = new Map();\n    this.objectCounter = 0;\n    this.selectedObject = null;\n    this.selectedImageService = options.selectedImageService || null;\n    this.selectedVideoService = options.selectedVideoService || null;\n    this.audioControls = new Map();\n    this.audioControlUpdateInterval = null;\n    this.audioControlUpdateListener = null;\n\n    // Animation管理（UI要素用）\n    this.clock = new THREE.Clock();\n    \n    // レイキャスティング用\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    this.lastHoveredObject = null;\n    \n    // 設定\n    this.config = {\n      showLocationIndicator: options.showLocationIndicator !== false,\n      indicatorDuration: options.indicatorDuration || 3000,\n      defaultObjectScale: options.defaultObjectScale || 1.0,\n      enableObjectSelection: options.enableObjectSelection !== false,\n      enableMouseInteraction: options.enableMouseInteraction,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n    \n    // クリックイベントの設定\n    this.setupClickEvents();\n    \n    console.log('🧪 SceneManager initialized with click selection');\n\n    // デバッグやコンソール操作を容易にするためグローバル参照を保持\n    if (typeof globalThis !== 'undefined') {\n      globalThis.sceneManager = this;\n    }\n  }\n  /**\n   * クリックイベントの設定\n   */\n  setupClickEvents() {\n    // enableMouseInteractionが明示的にtrueの場合のみマウス操作を有効化\n    if (this.config.enableMouseInteraction === true && this.renderer) {\n      this.setupObjectDragging();\n      console.log('🖱️ Mouse interaction enabled - Click to select, Shift+drag to move objects');\n    } else if (this.config.enableMouseInteraction === true && !this.renderer) {\n      console.warn('⚠️ Mouse interaction requested but renderer not provided. Mouse interaction disabled.');\n    } else {\n      console.log('🖱️ Mouse interaction disabled (safe mode). Set enableMouseInteraction: true to enable.');\n    }\n  }\n\n  // デバッグ情報表示メソッド\n  debugSceneInfo() {\n    console.log('🔍 === SCENE DEBUG INFO ===');\n    \n    // カメラ情報\n    if (this.camera) {\n      console.log(`📷 Camera:\n        - Position: (${this.camera.position.x.toFixed(2)}, ${this.camera.position.y.toFixed(2)}, ${this.camera.position.z.toFixed(2)})\n        - Rotation: (${(this.camera.rotation.x * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.y * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.z * 180 / Math.PI).toFixed(1)}°)\n        - FOV: ${this.camera.fov || 'N/A'}\n        - Near/Far: ${this.camera.near || 'N/A'}/${this.camera.far || 'N/A'}`);\n    }\n    \n    // シーン階層\n    console.log(`🌳 Scene hierarchy:\n      - Total objects in scene: ${this.scene.children.length}\n      - experimentGroup exists: ${this.scene.getObjectByName('LiveExperiments') ? 'Yes' : 'No'}\n      - experimentGroup children: ${this.experimentGroup.children.length}`);\n    \n    // 生成されたオブジェクト\n    console.log(`📦 Spawned objects: ${this.spawnedObjects.size}`);\n    this.spawnedObjects.forEach((obj, id) => {\n      const worldPos = new THREE.Vector3();\n      obj.getWorldPosition(worldPos);\n      console.log(`  - ${id} (${obj.userData.type}): \n        Local: (${obj.position.x.toFixed(2)}, ${obj.position.y.toFixed(2)}, ${obj.position.z.toFixed(2)})\n        World: (${worldPos.x.toFixed(2)}, ${worldPos.y.toFixed(2)}, ${worldPos.z.toFixed(2)})\n        Visible: ${obj.visible}, Scale: ${obj.scale.x.toFixed(2)}`);\n      \n      // 3Dモデルの詳細情報\n      if (obj.userData.type === 'generated_3d_model') {\n        const box = new THREE.Box3().setFromObject(obj);\n        const size = box.getSize(new THREE.Vector3());\n        const center = box.getCenter(new THREE.Vector3());\n        console.log(`    📐 Bounding box - Center: (${center.x.toFixed(2)}, ${center.y.toFixed(2)}, ${center.z.toFixed(2)}), Size: (${size.x.toFixed(2)}, ${size.y.toFixed(2)}, ${size.z.toFixed(2)})`);\n        \n        // メッシュ数\n        let meshCount = 0;\n        obj.traverse((child) => {\n          if (child.isMesh) meshCount++;\n        });\n        console.log(`    🎭 Meshes: ${meshCount}`);\n      }\n    });\n    \n    // カメラからの距離計算\n    if (this.camera && this.spawnedObjects.size > 0) {\n      console.log(`📏 Distances from camera:`);\n      this.spawnedObjects.forEach((obj, id) => {\n        const distance = this.camera.position.distanceTo(obj.position);\n        console.log(`  - ${id}: ${distance.toFixed(2)} units`);\n      });\n    }\n    \n    console.log('=========================');\n  }\n  \n\n  \n  /**\n   * オブジェクト選択\n   */\n  selectObject(object) {\n    // 既に同じオブジェクトが選択されている場合は何もしない\n    if (this.selectedObject === object) {\n      return;\n    }\n\n    // 前の選択を解除\n    this.deselectObject();\n\n    this.selectedObject = object;\n\n    this.createModernSelectionIndicator(object);\n\n    console.log(`✅ Selected object: ${object.name}`);\n    \n    // CommandUIに選択情報を表示\n    if (this.commandUI) {\n      const objectInfo = object.userData || {};\n      this.commandUI.addOutput(`📍 選択: ${object.name}`, 'info');\n      if (objectInfo.prompt) {\n        this.commandUI.addOutput(`   プロンプト: ${objectInfo.prompt}`, 'hint');\n      }\n      if (objectInfo.modelName) {\n        this.commandUI.addOutput(`   モデル: ${objectInfo.modelName}`, 'hint');\n      }\n\n      // 削除モードが待機中の場合、削除コマンドを自動入力\n      if (this.commandUI.currentMode === 'delete') {\n        const objectName = objectInfo.originalPrompt || object.name || '選択したオブジェクト';\n        this.commandUI.input.value = `${objectName}を削除`;\n        this.commandUI.input.focus();\n        // カーソルを文末に移動（選択状態を解除）\n        this.commandUI.input.setSelectionRange(this.commandUI.input.value.length, this.commandUI.input.value.length);\n        this.commandUI.addOutput(`🎯 削除対象設定: ${objectName}`, 'system');\n      }\n    }\n  }\n\n  createModernSelectionIndicator(object) {\n    // シンプルで確実な選択インジケーター\n    // 既存のインジケーターを削除（重複防止）\n    const existingIndicator = object.getObjectByName('selectionIndicator');\n    if (existingIndicator) {\n      object.remove(existingIndicator);\n    }\n\n    const indicatorGroup = new THREE.Group();\n    indicatorGroup.name = 'selectionIndicator';\n\n    // オブジェクトのバウンディングボックスを正確に取得\n    const box = new THREE.Box3().setFromObject(object);\n    const size = box.getSize(new THREE.Vector3());\n    const center = box.getCenter(new THREE.Vector3());\n\n    // 小さなマージンを追加して枠が見えやすくする\n    const margin = 0.1;\n    const adjustedSize = new THREE.Vector3(\n      size.x + margin,\n      size.y + margin, \n      size.z + margin\n    );\n\n    // シンプルな黄色い枠線\n    // PlaneGeometryの場合は平面的な枠を作成\n    if (object.geometry && object.geometry.type === 'PlaneGeometry') {\n      // スケールは既にオブジェクトに適用されているので、ジオメトリのサイズのみ使用\n      const width = object.geometry.parameters.width;\n      const height = object.geometry.parameters.height;\n      \n      // 平面の周りに枠線を作成\n      const shape = new THREE.Shape();\n      shape.moveTo(-width/2, -height/2);\n      shape.lineTo(width/2, -height/2);\n      shape.lineTo(width/2, height/2);\n      shape.lineTo(-width/2, height/2);\n      shape.lineTo(-width/2, -height/2);\n      \n      const points = shape.getPoints();\n      const geometryLine = new THREE.BufferGeometry().setFromPoints(points);\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const materialLine = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const line = new THREE.Line(geometryLine, materialLine);\n      line.position.set(0, 0, 0.01); // 少し前に出して見えるようにする\n      indicatorGroup.add(line);\n    } else {\n      // その他のオブジェクトは通常の3Dボックス枠\n      const edgesGeometry = new THREE.EdgesGeometry(\n        new THREE.BoxGeometry(adjustedSize.x, adjustedSize.y, adjustedSize.z)\n      );\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const edgesMaterial = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const edges = new THREE.LineSegments(edgesGeometry, edgesMaterial);\n      edges.position.copy(center);\n      indicatorGroup.add(edges);\n    }\n\n    // インジケーターをオブジェクトの子として追加（オブジェクトと一緒に動く）\n    object.add(indicatorGroup);\n    indicatorGroup.position.set(0, 0, 0); // 親からの相対位置は0\n\n    // リサイズハンドルを追加（親オブジェクトを直接渡す）\n    this.addResizeHandles(indicatorGroup, adjustedSize, center, object);\n  }\n\n  /**\n   * リサイズハンドルを追加\n   */\n  addResizeHandles(indicatorGroup, size, center, parentObject) {\n    // PlaneGeometryオブジェクト用のリサイズハンドル\n    console.log('🔧 addResizeHandles called');\n\n    if (!parentObject) {\n      console.log('❌ No parent object provided');\n      return;\n    }\n\n    if (!parentObject.geometry) {\n      console.log('❌ Parent has no geometry');\n      return;\n    }\n\n    if (parentObject.geometry.type !== 'PlaneGeometry') {\n      console.log(`❌ Geometry type is ${parentObject.geometry.type}, not PlaneGeometry`);\n      return;\n    }\n\n    console.log('✅ PlaneGeometry detected, creating handles');\n\n    const handleSize = 0.15; // 2025年トレンド: より小さく洗練された\n    const handleGeometry = new THREE.BoxGeometry(handleSize, handleSize, handleSize);\n    // 角を丸くするため、後でroundedBoxを使用\n\n    // 常に前面に表示されるマテリアル\n    // 2025年トレンド: アダプティブリサイズハンドル\n    const adaptiveColor = this.getAdaptiveSelectionColor();\n    const handleMaterial = new THREE.MeshBasicMaterial({\n      color: adaptiveColor,\n      transparent: true,\n      opacity: 0.8,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    const handleHoverMaterial = new THREE.MeshBasicMaterial({\n      color: this.getAdaptiveHoverColor(),\n      transparent: true,\n      opacity: 1.0,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    // 四隅の位置を計算（親オブジェクトのジオメトリサイズに基づく）\n    const width = parentObject.geometry.parameters.width;\n    const height = parentObject.geometry.parameters.height;\n\n    const positions = [\n      { x: width/2, y: height/2, z: 0.1, corner: 'top-right' },\n      { x: -width/2, y: height/2, z: 0.1, corner: 'top-left' },\n      { x: width/2, y: -height/2, z: 0.1, corner: 'bottom-right' },\n      { x: -width/2, y: -height/2, z: 0.1, corner: 'bottom-left' }\n    ];\n\n    positions.forEach((pos, index) => {\n      const handle = new THREE.Mesh(handleGeometry, handleMaterial.clone());\n      handle.position.set(pos.x, pos.y, pos.z); // 親からの相対位置\n      handle.userData = { \n        isResizeHandle: true, \n        handleIndex: index,\n        corner: pos.corner,\n        defaultMaterial: handle.material,\n        hoverMaterial: handleHoverMaterial.clone()\n      };\n      \n      // ホバーエフェクトを追加\n      // レンダリング順序を高く設定（常に前面）\n      handle.renderOrder = 1001;\n\n      handle.onHover = () => {\n        handle.material = handle.userData.hoverMaterial;\n        handle.scale.setScalar(1.5);\n        document.body.style.cursor = 'nw-resize';\n      };\n\n      handle.onHoverExit = () => {\n        handle.material = handle.userData.defaultMaterial;\n        handle.scale.setScalar(1.0);\n        document.body.style.cursor = 'default';\n      };\n\n      indicatorGroup.add(handle);\n\n      // デバッグ用にハンドルが見えることを確認\n      console.log(`🔴 Added resize handle at ${pos.corner}`);\n    });\n  }\n\n  /**\n   * 選択インジケーターのスケールをリアルタイム更新（パフォーマンス最適化版）\n   */\n  updateSelectionIndicatorScale(object) {\n    // リサイズ中はインジケーターの更新をスキップ（パフォーマンス最適化）\n    // 枠線はオブジェクトと一緒にスケールされるので、特別な更新は不要\n\n    // ハンドル位置のみ更新が必要な場合は、ここで処理\n    // 現在は自動的にオブジェクトと一緒にスケールされるので処理不要\n  }\n\n  /**\n   * オブジェクト選択解除\n   */\n  deselectObject() {\n    // シンプルで確実な選択解除\n    if (this.selectedObject) {\n      // 選択インジケーターを削除（オブジェクトの子から探す）\n      const indicator = this.selectedObject.getObjectByName('selectionIndicator');\n      if (indicator) {\n        this.selectedObject.remove(indicator);\n        \n        // メモリリークを防ぐためにリソースを破棄\n        indicator.traverse((child) => {\n          if (child.geometry) child.geometry.dispose();\n          if (child.material) {\n            if (Array.isArray(child.material)) {\n              child.material.forEach(material => material.dispose());\n            } else {\n              child.material.dispose();\n            }\n          }\n        });\n      }\n\n      console.log(`✅ Deselected: ${this.selectedObject.name}`);\n      this.selectedObject = null;\n    }\n  }\n\n  /**\n   * マウスドラッグによるオブジェクト移動機能\n   */\n  setupObjectDragging() {\n    if (!this.renderer) return;\n    \n    const canvas = this.renderer.domElement;\n    let isDragging = false;\n    let dragObject = null;\n    let dragOffset = new THREE.Vector3();\n    let mouseStart = new THREE.Vector2();\n    let dragMode = 'move'; // 'move', 'resize', 'rotate'\n    let originalScale = new THREE.Vector3();\n    \n    canvas.addEventListener('mousedown', (event) => {\n      if (event.button !== 0) return; // 左クリックのみ\n      \n      // レイキャスティングでオブジェクト検出\n      const rect = canvas.getBoundingClientRect();\n      this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(this.mouse, this.camera);\n      // オブジェクトとその子（選択インジケーター含む）を検出対象に\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const object = intersects[0].object;\n\n        // リサイズハンドルがクリックされた場合 - Shiftキー不要\n        if (object.userData && object.userData.isResizeHandle) {\n          // リサイズモード開始\n          isDragging = true;\n          dragObject = this.selectedObject; // リサイズする実際のオブジェクト\n          dragMode = 'resize';\n          \n          // ハンドル情報を保存\n          this.resizeHandleInfo = {\n            corner: object.userData.corner,\n            handleIndex: object.userData.handleIndex\n          };\n          \n          originalScale.copy(dragObject.scale);\n          mouseStart.set(event.clientX, event.clientY);\n          canvas.style.cursor = 'nw-resize';\n          console.log(`🔄 Started resizing: ${dragObject.name} from ${object.userData.corner}`);\n          return;\n        }\n\n        // 回転ハンドルがクリックされた場合\n        if (object.userData && object.userData.isRotateHandle) {\n          // 回転モード開始（今後実装）\n          console.log(`🔄 Rotation handle clicked for: ${this.selectedObject.name}`);\n          return;\n        }\n\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video' || object.userData.type === 'generated_3d_model' || object.userData.source === 'imported_file')) {\n          \n          // 🗑️ Deleteモードでのクリック処理\n          if (this.commandUI && this.commandUI.currentMode === 'delete') {\n            // 削除確認ダイアログを表示して直接削除\n            const objectName = object.name;\n            console.log(`🗑️ Delete mode: clicked on ${objectName}`);\n            \n            this.commandUI.showDeleteConfirmation(`オブジェクト「${objectName}」を削除`)\n              .then(confirmed => {\n                if (confirmed) {\n                  this.removeObject(objectName);\n                  this.commandUI.addOutput(`🗑️ 削除完了: ${objectName}`, 'success');\n                } else {\n                  this.commandUI.addOutput(`❌ 削除キャンセル: ${objectName}`, 'info');\n                }\n              })\n              .catch(error => {\n                console.error('Delete confirmation error:', error);\n                this.commandUI.addOutput(`❌ 削除エラー: ${objectName}`, 'error');\n              });\n            return; // 削除モードの場合は移動処理をスキップ\n          }\n          \n          // 移動モード開始（Shiftキー不要）\n          isDragging = true;\n          dragObject = object;\n          dragMode = 'move';\n          dragOffset.copy(intersects[0].point).sub(object.position);\n          mouseStart.set(event.clientX, event.clientY);\n\n          // 高品質な視覚フィードバック\n          if (object.material) {\n            // 移動中の透明度変更（オプション）\n            // object.material.opacity = 0.8;\n            // object.material.transparent = true;\n          }\n          // スケール変更を削除（大きくなる原因）\n\n          canvas.style.cursor = 'move';\n          console.log(`🔄 Started moving: ${object.name} (Shift-free interaction)`);\n\n          // 選択状態も更新\n          this.selectObject(object);\n        } else {\n          // 通常クリック: 選択のみ\n          this.selectObject(object);\n        }\n      } else {\n        this.deselectObject();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (event) => {\n      // ドラッグ中でない場合はホバーエフェクトを処理\n      if (!isDragging) {\n        this.handleHoverEffects(event, canvas);\n        return;\n      }\n      \n      // ドラッグ中の処理\n      if (!dragObject) return;\n      \n      // マウスの移動量を計算\n      const deltaX = event.clientX - mouseStart.x;\n      const deltaY = event.clientY - mouseStart.y;\n\n      if (dragMode === 'resize') {\n        // リサイズモード: より直感的な方向計算\n        if (!this.resizeHandleInfo) {\n          console.error('❌ Resize handle info missing');\n          return;\n        }\n        \n        const corner = this.resizeHandleInfo.corner;\n        let scaleMultiplier = 1;\n        \n        // 各ハンドルの位置に応じた直感的な方向計算\n        switch(corner) {\n          case 'top-right': \n            // 右上ハンドル: 右上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'top-left':\n            // 左上ハンドル: 左上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-right':\n            // 右下ハンドル: 右下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-left':\n            // 左下ハンドル: 左下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          default:\n            scaleMultiplier = 1 + (deltaX + deltaY) * 0.001; // フォールバック\n        }\n        \n        const newScale = Math.max(0.1, Math.min(5.0, originalScale.x * scaleMultiplier));\n        dragObject.scale.setScalar(newScale);\n\n        // 選択インジケーターも更新（パフォーマンス最適化）\n        this.updateSelectionIndicatorScale(dragObject);\n\n      } else if (dragMode === 'move') {\n        // 移動モード（従来の処理）\n        const cameraRight = new THREE.Vector3();\n        const cameraUp = new THREE.Vector3();\n        this.camera.getWorldDirection(new THREE.Vector3()); // dummy call to update matrix\n        cameraRight.setFromMatrixColumn(this.camera.matrixWorld, 0).normalize();\n        cameraUp.setFromMatrixColumn(this.camera.matrixWorld, 1).normalize();\n\n        // マウス移動をワールド座標に変換\n        const moveScale = 0.01;\n        const worldMove = new THREE.Vector3()\n          .add(cameraRight.clone().multiplyScalar(deltaX * moveScale))\n          .add(cameraUp.clone().multiplyScalar(-deltaY * moveScale));\n\n        dragObject.position.add(worldMove);\n        mouseStart.set(event.clientX, event.clientY);\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (isDragging && dragObject) {\n        // ドラッグ終了の処理\n        if (dragObject.material) {\n          dragObject.material.opacity = 1.0;\n          dragObject.material.transparent = false;\n        }\n\n        // スケールを元に戻す（移動開始時に変更した場合）\n        // 現在は移動開始時のスケール変更を削除したので、この処理は不要\n\n        console.log(`✅ Finished dragging: ${dragObject.name} to (${dragObject.position.x.toFixed(1)}, ${dragObject.position.y.toFixed(1)}, ${dragObject.position.z.toFixed(1)})`);\n\n        isDragging = false;\n        dragObject = null;\n        dragMode = 'move'; // リセット\n        this.resizeHandleInfo = null; // リサイズハンドル情報をクリーンアップ\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Shift+ホイールでリサイズ機能を追加\n    canvas.addEventListener('wheel', (event) => {\n      event.preventDefault();\n      \n      const rect = canvas.getBoundingClientRect();\n      const mouse = new THREE.Vector2();\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(mouse, this.camera);\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (obj.userData && (obj.userData.type === 'generated_image' || obj.userData.type === 'generated_video' || obj.userData.type === 'generated_3d_model')) {\n          const scaleFactor = event.deltaY > 0 ? 0.9 : 1.1;\n          const newScale = obj.scale.x * scaleFactor;\n          \n          // 最小・最大サイズ制限\n          if (newScale >= 0.2 && newScale <= 5.0) {\n            obj.scale.setScalar(newScale);\n            \n            // 高品質な視覚フィードバック\n            if (obj.material) {\n              obj.material.emissive.setHex(0x333333);\n              setTimeout(() => {\n                if (obj.material) {\n                  obj.material.emissive.setHex(0x000000);\n                }\n              }, 150);\n            }\n            \n            console.log(`🔄 Resized ${obj.userData.type}: ${obj.name} to scale ${newScale.toFixed(2)} (Shift-free interaction)`);\n          }\n        }\n      }\n    });\n\n    // 選択したオブジェクトの角度調整キーボードコントロール\n    document.addEventListener('keydown', (event) => {\n      if (!this.selectedObject) return;\n      \n      const object = this.selectedObject;\n      // 生成された画像・動画のみ角度調整可能\n      if (!object.userData || (object.userData.type !== 'generated_image' && object.userData.type !== 'generated_video')) {\n        return;\n      }\n      \n      const rotationStep = Math.PI / 36; // 5度ずつ回転\n      let rotated = false;\n      \n      switch (event.key) {\n        case 'ArrowLeft':\n          object.rotation.y -= rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowRight':\n          object.rotation.y += rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowUp':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationX = object.rotation.x - rotationStep;\n          if (newRotationX >= -Math.PI/6 && newRotationX <= Math.PI/6) {\n            object.rotation.x = newRotationX;\n            rotated = true;\n          }\n          break;\n        case 'ArrowDown':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationXDown = object.rotation.x + rotationStep;\n          if (newRotationXDown >= -Math.PI/6 && newRotationXDown <= Math.PI/6) {\n            object.rotation.x = newRotationXDown;\n            rotated = true;\n          }\n          break;\n        case 'r':\n        case 'R':\n          // リセット：正面向きに戻す\n          object.rotation.x = 0;\n          // カメラの視線方向（ユーザーがモニターで見ている方向）に向ける\n          const cameraDirection = new THREE.Vector3();\n          this.camera.getWorldDirection(cameraDirection);\n          const targetPoint = object.position.clone().add(cameraDirection.multiplyScalar(-1));\n          object.lookAt(targetPoint);\n          object.rotation.x = 0; // お辞儀防止\n          rotated = true;\n          console.log(`🔄 Reset rotation for: ${object.name}`);\n          break;\n\n        case 'i':\n        case 'I':\n          // デバッグ情報表示\n          this.debugSceneInfo();\n          event.preventDefault();\n          break;\n      }\n      \n      if (rotated) {\n        event.preventDefault();\n        const angles = {\n          x: (object.rotation.x * 180 / Math.PI).toFixed(1),\n          y: (object.rotation.y * 180 / Math.PI).toFixed(1),\n          z: (object.rotation.z * 180 / Math.PI).toFixed(1)\n        };\n        console.log(`🔄 Rotated ${object.userData.type}: ${object.name} to (${angles.x}°, ${angles.y}°, ${angles.z}°)`);\n      }\n    });\n\n    console.log('🖱️ Object dragging system enabled (Drag to move objects - Shift-free interaction)');\n    console.log('🔄 Object resizing system enabled (Scroll to resize images/videos - Shift-free interaction)');\n    console.log('🎯 Angle adjustment enabled (Select object + Arrow keys to rotate, R to reset)');\n  }\n\n  handleHoverEffects(event, canvas) {\n    // レイキャスティングでオブジェクト検出\n    const rect = canvas.getBoundingClientRect();\n    this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    \n    this.raycaster.setFromCamera(this.mouse, this.camera);\n\n    // オブジェクトとその子（選択インジケーター含む）を検出対象に\n    const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n    \n    // 前回ホバーしていたオブジェクトのエフェクトをリセット\n    if (this.lastHoveredObject && this.lastHoveredObject.onHoverExit) {\n      this.lastHoveredObject.onHoverExit();\n      this.lastHoveredObject = null;\n    }\n    \n    // 新しいホバー対象を検出\n    if (intersects.length > 0) {\n      const object = intersects[0].object;\n      \n      // リサイズハンドルにホバーした場合\n      if (object.userData && object.userData.isResizeHandle && object.onHover) {\n        object.onHover();\n        this.lastHoveredObject = object;\n        return;\n      }\n      \n      // 通常のオブジェクトにホバーした場合\n      if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video')) {\n        // 移動可能なオブジェクトの場合はカーソルを変更\n        canvas.style.cursor = 'move';\n\n        this.lastHoveredObject = { onHoverExit: () => { canvas.style.cursor = 'default'; } };\n        return;\n      }\n    }\n    \n    // ホバー対象がない場合はデフォルトカーソル\n    canvas.style.cursor = 'default';\n  }\n\n  /**\n   * メインコマンド実行エントリーポイント\n   * @param {string} command - 自然言語コマンド\n   */\n  async executeCommand(command) {\n    const timestamp = Date.now();\n    console.log(`🎯 Executing: \"${command}\"`);\n    \n    try {\n      // コマンド解析\n      const parsed = this.parseCommand(command);\n      console.log('📝 Parsed:', parsed);\n      \n      // コマンド実行\n      const result = await this.dispatchCommand(parsed);\n      \n      // 履歴に記録\n      this.commandHistory.push({\n        timestamp,\n        command,\n        parsed,\n        result,\n        status: 'success'\n      });\n      \n      return result;\n      \n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      \n      this.commandHistory.push({\n        timestamp,\n        command,\n        error: error.message,\n        status: 'error'\n      });\n      \n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド解析\n   * @param {string} command \n   * @returns {object} 解析結果\n   */\n  parseCommand(command) {\n    // プレフィックスでモードを判定\n    if (command.startsWith('[変更] ')) {\n      const actualCommand = command.replace('[変更] ', '');\n      return this.parseObjectModificationCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    if (command.startsWith('[削除] ')) {\n      const actualCommand = command.replace('[削除] ', '');\n      return this.parseDeleteCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    // 動画生成の判定（プレフィックスなし = 生成モード）\n    const cmd = command.toLowerCase().trim();\n    \n    // 自然言語オブジェクト操作の判定（「オブジェクト名 + 動作」パターン）\n    const naturalLanguagePattern = this.parseNaturalLanguageCommand(cmd);\n    if (naturalLanguagePattern) {\n      return naturalLanguagePattern;\n    }\n    \n    // 動画関連キーワードをチェック（文脈を考慮）\n    const videoKeywords = ['動画', 'ビデオ', 'ムービー', '映像', '動く',\n                          'video', 'movie', 'motion', 'moving', 'clip'];\n\n    // アニメーションは文脈で判定\n    const isAnimationForVideo = cmd.includes('アニメーション') &&\n      (cmd.includes('作って') || cmd.includes('生成') || cmd.includes('を') ||\n       cmd.includes('create') || cmd.includes('make') || cmd.includes('generate'));\n\n    const isVideoRequest = videoKeywords.some(keyword => cmd.includes(keyword)) ||\n      (cmd.includes('animate') && !cmd.includes('を')) || // \"animate a cat\"は動画、\"猫をanimate\"は操作\n      isAnimationForVideo;\n    \n    if (isVideoRequest) {\n      return {\n        type: 'video_generation',\n        prompt: command,\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // オブジェクト選択関連キーワードをチェック\n    const selectKeywords = ['選択', 'select', 'オブジェクト選択', '既存', 'existing'];\n    const isSelectRequest = selectKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isSelectRequest) {\n      return {\n        type: 'object_selection',\n        position: this.parsePosition(cmd)\n      };\n    }\n    \n    // ファイルインポート関連キーワードをチェック\n    const importKeywords = ['インポート', 'import', '読み込', '読込', 'ファイル', 'file', '画像を選択', '動画を選択', '選択して配置'];\n    const isImportRequest = importKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isImportRequest) {\n      const isVideoImport = cmd.includes('動画') || cmd.includes('video') || cmd.includes('mp4');\n      return {\n        type: 'file_import',\n        fileType: isVideoImport ? 'video' : 'image',\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // 画像生成キーワードをチェック\n    const imageKeywords = ['画像', '写真', 'イメージ', '絵', 'ピクチャー', \n                          'image', 'picture', 'photo', 'generate', 'create', 'make', 'draw'];\n    const isImageRequest = imageKeywords.some(keyword => cmd.includes(keyword));\n    \n    // デフォルト: 画像生成として処理\n    return {\n      type: 'image_generation',\n      prompt: command,\n      position: this.parsePosition(cmd),\n      size: this.parseSize(cmd)\n    };\n  }\n\n  /**\n   * コマンドから対象オブジェクトを特定\n   */\n  /**\n   * オブジェクト識別用キーワード辞書を取得\n   */\n  getObjectKeywords() {\n    return createObjectKeywords();\n  }\n\n  normalizeTargetPhrase(phrase) {\n    if (!phrase) {\n      return '';\n    }\n\n    let result = `${phrase}`.trim();\n\n    result = result.replace(/[。、，,.!?！？]/g, ' ').trim();\n\n    const referentialPattern = /^(さっき|先ほど|直前|最近|この前|その|あの|この|前回|前の|最新|最後|last|latest)\\s*(の)?/i;\n    while (referentialPattern.test(result)) {\n      result = result.replace(referentialPattern, '').trim();\n    }\n\n    const politePattern = /(してください|して下さい|してね|してよ|してくれ|してくれませんか|してくださいね|してくださいよ|お願いします?|お願い|頼む)$/i;\n    result = result.replace(politePattern, '').trim();\n\n    const trailingPatterns = [\n      /(を)?(左右反転|反転|削除|消して|消す|変更|変えて|塗り替えて|塗って|回転|回して|移動|動かして|拡大|縮小|大きく|小さく|並べ|寄せて|整列|選択|選んで|指定|生成|作って|描いて|アップロード|アップして|読み込んで|読み込んだ|開いて|閉じて|置いて|配置して|貼り付けて|flip|delete|remove|change|make|turn|rotate|move|scale|resize|generate|create).*$/i,\n      /(を|に|へ|で|から|まで|と|や|って)$/i\n    ];\n\n    for (const pattern of trailingPatterns) {\n      result = result.replace(pattern, '').trim();\n    }\n\n    result = result.replace(/(を|に|へ|で|から|まで|と|や|って)$/i, '').trim();\n\n    if (!result) {\n      const englishLeadingPattern = /^(flip|delete|remove|change|make|turn|rotate|move|scale|resize|generate|create)\\s+/i;\n      if (englishLeadingPattern.test(phrase.trim())) {\n        result = phrase.trim().replace(englishLeadingPattern, '').trim();\n      }\n    }\n\n    result = result.replace(/(を|に|へ|で|から|まで|と|や|って)$/i, '').trim();\n\n    return result;\n  }\n\n  isReferentialCommand(command) {\n    if (!command) {\n      return false;\n    }\n    return /(さっき|先ほど|直前|最近|前回|前の|最後|最新|last|previous|before)/i.test(command);\n  }\n\n  getObjectSourceType(object) {\n    if (!object || !object.userData) {\n      return null;\n    }\n    return object.userData.source || object.userData.type || null;\n  }\n\n  getRecentObjects(command) {\n    const objects = Array.from(this.spawnedObjects.values());\n    if (objects.length === 0) {\n      return [];\n    }\n\n    const importContext = /(インポート|取り込|アップロード|読み込)/.test(command);\n    const generatedContext = /(生成|作っ|描い|create|generate)/.test(command);\n\n    let candidates = objects;\n    if (importContext) {\n      candidates = candidates.filter(obj => this.getObjectSourceType(obj) === 'imported_file');\n    } else if (generatedContext) {\n      candidates = candidates.filter(obj => {\n        const source = this.getObjectSourceType(obj);\n        return source === 'generated_image' || source === 'generated_video';\n      });\n    }\n\n    if (candidates.length === 0) {\n      candidates = objects;\n    }\n\n    return candidates.sort((a, b) => {\n      const aTime = a.userData?.lastModified || a.userData?.createdAt || 0;\n      const bTime = b.userData?.lastModified || b.userData?.createdAt || 0;\n      return bTime - aTime;\n    });\n  }\n\n  findRecentObjectByContext(command, normalizedTarget, objectKeywords) {\n    const candidates = this.getRecentObjects(command);\n    if (candidates.length === 0) {\n      return null;\n    }\n\n    if (normalizedTarget) {\n      for (const candidate of candidates) {\n        if (this.matchesObjectName(candidate, normalizedTarget, objectKeywords)) {\n          return candidate;\n        }\n      }\n    }\n\n    return candidates[0];\n  }\n\n  extractTextTokens(text) {\n    if (!text) {\n      return [];\n    }\n\n    return text\n      .replace(/[。、，,.!?！？]/g, ' ')\n      .split(/[\\s_/\\-]+/)\n      .map(token => token.trim())\n      .filter(token => token.length > 1);\n  }\n\n  buildObjectKeywordHints({ prompt = '', fileName = '', baseType = null } = {}) {\n    const keywords = new Set();\n\n    if (prompt) {\n      keywords.add(prompt.toLowerCase());\n      for (const token of this.extractTextTokens(prompt)) {\n        keywords.add(token.toLowerCase());\n      }\n    }\n\n    if (fileName) {\n      const baseName = fileName.replace(/\\.[^/.]+$/, '');\n      keywords.add(baseName.toLowerCase());\n      for (const token of this.extractTextTokens(baseName)) {\n        keywords.add(token.toLowerCase());\n      }\n    }\n\n    if (baseType === 'image') {\n      ['image', 'photo', 'picture', '画像', '写真', 'イメージ'].forEach(keyword => keywords.add(keyword));\n    } else if (baseType === 'video') {\n      ['video', 'movie', 'clip', '動画', 'ビデオ', 'ムービー', '映像'].forEach(keyword => keywords.add(keyword));\n    }\n\n    return Array.from(keywords).filter(Boolean);\n  }\n\n  findObjectByKeyword(command) {\n    // 共通翻訳辞書から拡張されたキーワード辞書を使用\n    const objectKeywords = this.getObjectKeywords();\n    const normalizedCommand = this.normalizeTargetPhrase(command);\n\n    // インポート順序での指定を解析（例: \"2番目にインポートした猫\", \"最初にインポートしたユニコーン\"）\n    const importOrderMatch = command.match(/((\\d+)番目|最初|初回|1番目)に(インポート|取り込)した(.+)/);\n    if (importOrderMatch) {\n      let orderNumber = 1; // デフォルトは1番目\n      if (importOrderMatch[2]) {\n        // 数字が指定されている場合\n        orderNumber = parseInt(importOrderMatch[2]);\n      } else if (importOrderMatch[1] === '最初' || importOrderMatch[1] === '初回') {\n        orderNumber = 1;\n      } else if (importOrderMatch[1] === '1番目') {\n        orderNumber = 1;\n      }\n      const objectName = this.normalizeTargetPhrase(importOrderMatch[4]) || importOrderMatch[4].trim();\n      return this.findImportedObjectByOrder(objectName, orderNumber, objectKeywords);\n    }\n\n    // インポート vs 生成の区別（例: \"インポートした猫\", \"生成した犬\", \"作った画像\"）\n    const sourceMatch = command.match(/(インポート|取り込|アップロード|読み込|生成|作った)した?(.+)/);\n    if (sourceMatch) {\n      const sourceType = sourceMatch[1];\n      const objectName = this.normalizeTargetPhrase(sourceMatch[2]) || sourceMatch[2].trim();\n      const isImported = sourceType === 'インポート' || sourceType === '取り込';\n      return this.findObjectBySourceAndName(objectName, isImported, objectKeywords);\n    }\n\n    if (this.isReferentialCommand(command)) {\n      const recentObject = this.findRecentObjectByContext(command, normalizedCommand, objectKeywords);\n      if (recentObject) {\n        return recentObject;\n      }\n    }\n\n    // 従来のキーワード検索（すべてのオブジェクト対象）\n    return this.findObjectByName(normalizedCommand || command, objectKeywords);\n  }\n\n  /**\n   * インポート順序でオブジェクトを検索\n   */\n  findImportedObjectByOrder(objectName, orderNumber, objectKeywords) {\n    // インポートされたオブジェクトのみを取得してimportOrder順でソート\n    const importedObjects = [];\n    for (const child of this.spawnedObjects.values()) {\n      if (!child.userData || this.getObjectSourceType(child) !== 'imported_file') continue;\n      importedObjects.push(child);\n    }\n\n    // importOrderでソート\n    importedObjects.sort((a, b) => (a.userData.importOrder || 0) - (b.userData.importOrder || 0));\n\n    // オブジェクト名でフィルタリング\n    const matchingObjects = objectName\n      ? importedObjects.filter(child => this.matchesObjectName(child, objectName, objectKeywords))\n      : importedObjects;\n\n    if (matchingObjects.length >= orderNumber) {\n      const foundObject = matchingObjects[orderNumber - 1]; // 1-based index\n      console.log(`🎯 Found ${orderNumber}番目 imported object \"${objectName}\": ${foundObject.name}`);\n      return foundObject;\n    }\n\n    console.warn(`⚠️ ${orderNumber}番目にインポートした\"${objectName}\"が見つかりません`);\n    return null;\n  }\n\n  /**\n   * ソース（インポート/生成）と名前でオブジェクトを検索\n   */\n  findObjectBySourceAndName(objectName, isImported, objectKeywords) {\n    for (const child of this.spawnedObjects.values()) {\n      if (!child.userData) continue;\n\n      const childSource = this.getObjectSourceType(child);\n      const isChildImported = childSource === 'imported_file';\n      const isChildGenerated = childSource === 'generated_image' || childSource === 'generated_video';\n\n      if (isImported && !isChildImported) continue;\n      if (!isImported && !isChildGenerated) continue;\n\n      if (this.matchesObjectName(child, objectName, objectKeywords)) {\n        const sourceLabel = isImported ? 'インポートした' : '生成した';\n        console.log(`🎯 Found ${sourceLabel} object \"${objectName}\": ${child.name}`);\n        return child;\n      }\n    }\n\n    const sourceLabel = isImported ? 'インポートした' : '生成した';\n    console.warn(`⚠️ ${sourceLabel}\"${objectName}\"が見つかりません`);\n    return null;\n  }\n\n  /**\n   * 名前でオブジェクトを検索（従来の方式）\n   */\n  findObjectByName(command, objectKeywords) {\n    const target = command && command.trim();\n    if (!target) {\n      return null;\n    }\n\n    for (const child of this.spawnedObjects.values()) {\n      if (!child) continue;\n      if (this.matchesObjectName(child, target, objectKeywords)) {\n        return child;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * オブジェクトが指定された名前にマッチするかチェック\n   */\n  matchesObjectName(child, objectName, objectKeywords) {\n    if (!child || !objectName) {\n      return false;\n    }\n\n    const targetLower = objectName.toLowerCase();\n\n    if (child.userData && Array.isArray(child.userData.keywords)) {\n      for (const keyword of child.userData.keywords) {\n        if (!keyword) continue;\n        const keywordLower = keyword.toLowerCase();\n        if (targetLower.includes(keywordLower) || keywordLower.includes(targetLower)) {\n          return true;\n        }\n      }\n    }\n\n    for (const [keyword, aliases] of Object.entries(objectKeywords)) {\n      const keywordLower = keyword.toLowerCase();\n      if (targetLower.includes(keywordLower)) {\n        return true;\n      }\n\n      for (const alias of aliases) {\n        const aliasLower = alias.toLowerCase();\n        if (targetLower.includes(aliasLower)) {\n          return true;\n        }\n      }\n    }\n\n    if (child.userData && child.userData.prompt) {\n      const promptLower = child.userData.prompt.toLowerCase();\n      if (promptLower.includes(targetLower) || targetLower.includes(promptLower)) {\n        return true;\n      }\n    }\n\n    if (child.userData && child.userData.fileName) {\n      if (matchKeywordWithFilename(objectName, child.userData.fileName, objectKeywords)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * 画像生成コマンド解析\n   */\n  parseImageGenerationCommand(command) {\n    // プロンプト抽出 (「を」「に」「で」などで区切る)\n    let prompt = command;\n    const particles = ['を', 'に', 'で', 'の'];\n    \n    for (const particle of particles) {\n      if (command.includes(particle)) {\n        const parts = command.split(particle);\n        if (parts[0]) {\n          prompt = parts[0].trim();\n          break;\n        }\n      }\n    }\n    \n    // 不要な語句を除去\n    prompt = prompt\n      .replace(/(画像|作って|生成|して|ください)/g, '')\n      .trim();\n    \n    return {\n      type: 'image_generation',\n      prompt,\n      position: this.parsePosition(command),\n      size: this.parseSize(command)\n    };\n  }\n\n  /**\n   * オブジェクト変更コマンド解析\n   */\n  parseObjectModificationCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 色変更の解析\n    let color = null;\n    const colorMap = {\n      '赤': 0xff0000, '赤色': 0xff0000,\n      '青': 0x0000ff, '青色': 0x0000ff,\n      '緑': 0x00ff00, '緑色': 0x00ff00,\n      '黄': 0xffff00, '黄色': 0xffff00, '黄色い': 0xffff00,\n      '紫': 0xff00ff, '紫色': 0xff00ff,\n      '橙': 0xff8800, '橙色': 0xff8800, 'オレンジ': 0xff8800, 'オレンジ色': 0xff8800,\n      '白': 0xffffff, '白色': 0xffffff,\n      '黒': 0x000000, '黒色': 0x000000,\n      '灰': 0x808080, '灰色': 0x808080, 'グレー': 0x808080, 'グレー色': 0x808080,\n      'ピンク': 0xffc0cb, 'ピンク色': 0xffc0cb,\n      '茶': 0x8b4513, '茶色': 0x8b4513,\n      '銀': 0xc0c0c0, '銀色': 0xc0c0c0,\n      '金': 0xffd700, '金色': 0xffd700\n    };\n    \n    for (const [colorName, colorValue] of Object.entries(colorMap)) {\n      if (cmd.includes(colorName)) {\n        color = colorValue;\n        break;\n      }\n    }\n\n    // エフェクト解析の追加\n    const effects = this.parseEffects(cmd);\n    \n    // サイズ変更の解析\n    let scale = null;\n    if (cmd.includes('大きく') || cmd.includes('拡大')) {\n      scale = 1.5;\n    } else if (cmd.includes('小さく') || cmd.includes('縮小')) {\n      scale = 0.7;\n    } else if (cmd.includes('倍')) {\n      const match = cmd.match(/(\\d+(?:\\.\\d+)?)\\s*倍/);\n      if (match) {\n        scale = parseFloat(match[1]);\n      }\n    }\n    \n    // 移動コマンドの解析\n    let movement = null;\n    if (cmd.includes('移動') || cmd.includes('動か') || cmd.includes('へ')) {\n      movement = this.parsePositionFromPrompt(cmd);\n    }\n\n    // 回転コマンドの解析\n    let rotation = null;\n    if (cmd.includes('回転') || cmd.includes('回す') || cmd.includes('回して') || cmd.includes('rotate')) {\n      // 角度指定があるかチェック\n      const degreeMatch = cmd.match(/(\\d+)\\s*度/);\n      if (degreeMatch) {\n        rotation = parseFloat(degreeMatch[1]) * Math.PI / 180; // 度をラジアンに変換\n      } else {\n        rotation = Math.PI / 4; // デフォルトは45度\n      }\n    }\n\n    // 透明度コマンドの解析\n    let opacity = null;\n    if (cmd.includes('透明') || cmd.includes('transparent')) {\n      if (cmd.includes('半透明')) {\n        opacity = 0.5;\n      } else {\n        opacity = 0.3; // デフォルトの透明度\n      }\n    } else if (cmd.includes('不透明') || cmd.includes('opaque')) {\n      opacity = 1.0;\n    }\n\n    // 反転コマンドの解析\n    let flip = null;\n    if (cmd.includes('左右反転') || cmd.includes('反転') || cmd.includes('ひっくり返') || cmd.includes('flip')) {\n      flip = true;\n    }\n\n    return {\n      type: 'object_modification',\n      command: command,\n      color: color,\n      scale: scale,\n      movement: movement,\n      rotation: rotation,\n      opacity: opacity,\n      flip: flip,\n      effects: effects,\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * エフェクト解析 - Phase 2 総合エフェクトシステム\n   */\n  parseEffects(cmd) {\n    const effects = [];\n\n    // エフェクトキーワード辞書\n    const effectKeywords = {\n      // 透明度系\n      '透明': { type: 'opacity', value: 0.0, name: 'transparent' },\n      '半透明': { type: 'opacity', value: 0.5, name: 'semi_transparent' },\n      '不透明': { type: 'opacity', value: 1.0, name: 'opaque' },\n      '濃く': { type: 'opacity', value: 1.0, name: 'solid' },\n\n      // 発光系\n      '光らせ': { type: 'glow', color: 0xffffff, intensity: 0.5, name: 'glow_white' },\n      '光る': { type: 'glow', color: 0xffffff, intensity: 0.5, name: 'glow_white' },\n      'ネオン': { type: 'glow', color: 0x00ffff, intensity: 0.8, name: 'neon_cyan' },\n      'ホログラム': { type: 'glow', color: 0x00ffff, intensity: 0.6, name: 'hologram' },\n\n      // 材質系\n      'メタリック': { type: 'material', metalness: 0.8, roughness: 0.2, name: 'metallic' },\n      '金属質': { type: 'material', metalness: 0.9, roughness: 0.1, name: 'metallic_shiny' },\n      'ガラス': { type: 'material', metalness: 0.0, roughness: 0.0, name: 'glass' },\n      'マット': { type: 'material', metalness: 0.0, roughness: 1.0, name: 'matte' },\n\n      // アニメーション系\n      'ふわふわ': { type: 'animation', animation: 'float', speed: 0.002, amplitude: 0.5, name: 'float_gentle' },\n      '浮く': { type: 'animation', animation: 'float', speed: 0.003, amplitude: 0.8, name: 'float_strong' },\n      '漂う': { type: 'animation', animation: 'float', speed: 0.001, amplitude: 0.3, name: 'float_slow' },\n\n      'ドクドク': { type: 'animation', animation: 'pulse', speed: 0.003, amplitude: 0.15, name: 'pulse_heartbeat' },\n      '鼓動': { type: 'animation', animation: 'pulse', speed: 0.0025, amplitude: 0.1, name: 'pulse_heart' },\n      '脈動': { type: 'animation', animation: 'pulse', speed: 0.004, amplitude: 0.2, name: 'pulse_throb' },\n\n      'くるくる': { type: 'animation', animation: 'spin', speed: 0.02, axis: 'y', name: 'spin_y' },\n      'スピン': { type: 'animation', animation: 'spin', speed: 0.03, axis: 'y', name: 'spin_fast' },\n      '回る': { type: 'animation', animation: 'spin', speed: 0.015, axis: 'y', name: 'spin_slow' },\n\n      'きらめ': { type: 'animation', animation: 'sparkle', intensity: 0.8, name: 'sparkle' },\n      '輝': { type: 'animation', animation: 'sparkle', intensity: 1.0, name: 'shine' },\n      'キラキラ': { type: 'animation', animation: 'sparkle', intensity: 0.9, name: 'twinkle' },\n\n      // 宇宙的エフェクト\n      '宇宙': { type: 'cosmic', colors: [0x4444ff, 0xff4488, 0x44ffaa], intensity: 0.9, name: 'cosmic' },\n      'オーロラ': { type: 'aurora', colors: [0x00ffaa, 0x4488ff, 0xff88aa], intensity: 0.8, name: 'aurora' },\n      '星雲': { type: 'nebula', colors: [0x8844ff, 0xff8844, 0x44aaff], intensity: 1.0, name: 'nebula' },\n      'エネルギー': { type: 'energy', colors: [0xffaa00, 0x00aaff, 0xaa00ff], intensity: 0.7, name: 'energy' },\n      '神秘的': { type: 'mystic', colors: [0xaa44ff, 0xff44aa, 0x44ffff], intensity: 0.6, name: 'mystic' },\n\n      // アート系エフェクト\n      '水彩': { type: 'watercolor_art', colors: [0xff6b9d, 0x4ecdc4, 0xffe66d, 0x95e1d3], opacity: 0.6, name: 'watercolor' },\n      '水彩画': { type: 'watercolor_art', colors: [0xff6b9d, 0x4ecdc4, 0xffe66d, 0x95e1d3], opacity: 0.6, name: 'watercolor' },\n      'パステル': { type: 'pastel_art', colors: [0xffb3ba, 0xffdfba, 0xffffba, 0xbaffc9, 0xbae1ff], opacity: 0.7, name: 'pastel' },\n      '虹色': { type: 'rainbow_glow', colors: [0xff0000, 0xff8800, 0xffff00, 0x00ff00, 0x0088ff, 0x0000ff, 0x8800ff], intensity: 0.5, name: 'rainbow_glow' }\n    };\n\n    // プリセット効果\n    const presetEffects = {\n      '魔法っぽく': [\n        { type: 'glow', color: 0xcc44ff, intensity: 0.7, name: 'magic_glow' },\n        { type: 'animation', animation: 'pulse', speed: 0.003, amplitude: 0.1, name: 'magic_pulse' },\n        { type: 'animation', animation: 'sparkle', intensity: 0.6, name: 'magic_sparkle' }\n      ],\n      '幽霊': [\n        { type: 'opacity', value: 0.6, name: 'ghost_transparent' },\n        { type: 'animation', animation: 'float', speed: 0.002, amplitude: 0.4, name: 'ghost_float' },\n        { type: 'glow', color: 0xffffff, intensity: 0.3, name: 'ghost_aura' }\n      ],\n      'サイバー': [\n        { type: 'glow', color: 0x00ffaa, intensity: 0.8, name: 'cyber_glow' },\n        { type: 'material', metalness: 0.8, roughness: 0.1, name: 'cyber_metal' },\n        { type: 'animation', animation: 'glitch', intensity: 0.1, name: 'cyber_glitch' }\n      ],\n      '夢みたい': [\n        { type: 'opacity', value: 0.7, name: 'dream_soft' },\n        { type: 'animation', animation: 'float', speed: 0.0015, amplitude: 0.3, name: 'dream_float' },\n        { type: 'animation', animation: 'rainbow', speed: 0.001, name: 'dream_rainbow' }\n      ]\n    };\n\n    // プリセット効果をチェック\n    for (const [presetName, presetEffectList] of Object.entries(presetEffects)) {\n      if (cmd.includes(presetName)) {\n        effects.push(...presetEffectList);\n        console.log(`✨ Preset effect applied: ${presetName}`);\n        continue;\n      }\n    }\n\n    const chromaRequested = this.requiresChromaKey(cmd);\n\n    // 個別効果をチェック\n    for (const [keyword, effect] of Object.entries(effectKeywords)) {\n      if (chromaRequested && keyword === '透明') {\n        continue;\n      }\n      if (cmd.includes(keyword)) {\n        effects.push(effect);\n        console.log(`🎭 Effect detected: ${keyword} -> ${effect.name}`);\n      }\n    }\n\n    if (chromaRequested) {\n      const chromaConfig = this.detectChromaKeyConfig(cmd);\n      effects.push({\n        type: 'chroma_key',\n        color: chromaConfig.color,\n        threshold: chromaConfig.threshold,\n        smoothing: chromaConfig.smoothing,\n        name: 'chroma_key'\n      });\n      console.log(`🪄 Chroma key requested (color: #${chromaConfig.color.toString(16)}, threshold: ${chromaConfig.threshold})`);\n    }\n\n    return effects;\n  }\n\n  requiresChromaKey(cmd) {\n    if (!cmd) return false;\n    const chromaKeywords = ['クロマキー', 'グリーンバック', '背景を透過', '背景透過', '背景を透明', '背景透明', '背景を消', '背景消', '背景抜', 'remove background', 'transparent background'];\n    if (chromaKeywords.some(keyword => cmd.includes(keyword))) {\n      return true;\n    }\n    if (cmd.includes('背景') && (cmd.includes('透過') || cmd.includes('透明') || cmd.includes('消') || cmd.includes('なくして'))) {\n      return true;\n    }\n    return false;\n  }\n\n  detectChromaKeyConfig(cmd) {\n    const color = this.detectChromaKeyColor(cmd);\n    let threshold;\n    switch (color) {\n      case 0xffffff:\n        threshold = 0.22;\n        break;\n      case 0x000000:\n        threshold = 0.24;\n        break;\n      case 0x00ff00:\n        threshold = 0.32;\n        break;\n      case 0x0000ff:\n        threshold = 0.3;\n        break;\n      default:\n        threshold = 0.28;\n    }\n    return {\n      color,\n      threshold,\n      smoothing: 0.1\n    };\n  }\n\n  detectChromaKeyColor(cmd) {\n    const hexMatch = cmd.match(/#([0-9a-fA-F]{6})/);\n    if (hexMatch) {\n      return parseInt(hexMatch[1], 16);\n    }\n\n    const colorKeywords = [\n      { tokens: ['白', 'ホワイト', 'しろ'], value: 0xffffff },\n      { tokens: ['黒', 'ブラック', 'くろ'], value: 0x000000 },\n      { tokens: ['緑', 'グリーン', 'みどり'], value: 0x00ff00 },\n      { tokens: ['青', 'ブルー', 'あお'], value: 0x0000ff },\n      { tokens: ['赤', 'レッド', 'あか'], value: 0xff0000 },\n      { tokens: ['黄', 'イエロー', 'きいろ'], value: 0xffff00 },\n      { tokens: ['ピンク'], value: 0xffc0cb },\n      { tokens: ['オレンジ'], value: 0xff8800 }\n    ];\n\n    for (const entry of colorKeywords) {\n      if (entry.tokens.some(token => cmd.includes(token))) {\n        return entry.value;\n      }\n    }\n\n    return 0xffffff; // デフォルトはホワイト背景\n  }\n\n  /**\n   * エフェクト適用システム - Phase 2\n   */\n  applyEffects(targetObject, effects) {\n    let applied = false;\n\n    for (const effect of effects) {\n      console.log(`✨ Applying effect: ${effect.name} (${effect.type})`);\n\n      switch (effect.type) {\n        case 'opacity':\n          applied = this.applyOpacityEffect(targetObject, effect) || applied;\n          break;\n        case 'glow':\n          applied = this.applyGlowEffect(targetObject, effect) || applied;\n          break;\n        case 'material':\n          applied = this.applyMaterialEffect(targetObject, effect) || applied;\n          break;\n        case 'animation':\n          applied = this.applyAnimationEffect(targetObject, effect) || applied;\n          break;\n        case 'cosmic':\n        case 'aurora':\n        case 'nebula':\n        case 'energy':\n        case 'mystic':\n        case 'rainbow_glow':\n          applied = this.applyCosmicEffect(targetObject, effect) || applied;\n          break;\n        case 'watercolor_art':\n        case 'pastel_art':\n          applied = this.applyWatercolorEffect(targetObject, effect) || applied;\n          break;\n        case 'chroma_key':\n          applied = this.applyChromaKeyEffect(targetObject, effect) || applied;\n          break;\n        default:\n          console.warn(`🚫 Unknown effect type: ${effect.type}`);\n      }\n    }\n\n    return applied;\n  }\n\n  /**\n   * 透明度エフェクト適用\n   */\n  applyOpacityEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    targetObject.material.transparent = true;\n    targetObject.material.opacity = effect.value;\n    targetObject.material.needsUpdate = true;\n\n    console.log(`👻 Opacity set to: ${effect.value} (${effect.name})`);\n    return true;\n  }\n\n  /**\n   * 発光エフェクト適用\n   */\n  applyGlowEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    if (this.ensureEmissiveSupport(targetObject)) {\n      targetObject.material.emissive = new THREE.Color(effect.color);\n      targetObject.material.emissiveIntensity = effect.intensity;\n      targetObject.material.needsUpdate = true;\n      console.log(`💡 Glow applied: color=0x${effect.color.toString(16)}, intensity=${effect.intensity}`);\n      return true;\n    }\n\n    // Fallback: 調色による簡易発光表現\n    const fallbackColor = new THREE.Color(effect.color);\n    if (!targetObject.userData.originalColor) {\n      targetObject.userData.originalColor = targetObject.material.color ? targetObject.material.color.clone() : null;\n    }\n    if (targetObject.material.color) {\n      targetObject.material.color.lerp(fallbackColor, 0.4);\n      targetObject.material.needsUpdate = true;\n      console.log('💡 Glow fallback applied via color tint');\n      return true;\n    }\n\n    console.warn('🚫 Glow effect could not be applied');\n    return false;\n  }\n\n  ensureEmissiveSupport(targetObject) {\n    const material = targetObject.material;\n    if (!material) return false;\n    return 'emissive' in material && material.emissive !== undefined;\n  }\n\n  /**\n   * 材質エフェクト適用\n   */\n  applyMaterialEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    // StandardMaterial の場合のみ適用\n    if (targetObject.material.type === 'MeshStandardMaterial') {\n      if (effect.metalness !== undefined) {\n        targetObject.material.metalness = effect.metalness;\n      }\n      if (effect.roughness !== undefined) {\n        targetObject.material.roughness = effect.roughness;\n      }\n      targetObject.material.needsUpdate = true;\n\n      console.log(`🔩 Material updated: metalness=${effect.metalness}, roughness=${effect.roughness}`);\n      return true;\n    } else {\n      console.warn(`🚫 Material effect requires StandardMaterial, got: ${targetObject.material.type}`);\n      return false;\n    }\n  }\n\n  /**\n   * アニメーションエフェクト適用\n   */\n  applyAnimationEffect(targetObject, effect) {\n    // アニメーション管理オブジェクトを初期化\n    if (!this.animations) {\n      this.animations = new Map();\n      this.startAnimationLoop();\n    }\n\n    const animationId = `${targetObject.uuid}_${effect.animation}`;\n\n    // 既存のアニメーションがあれば停止\n    if (this.animations.has(animationId)) {\n      this.animations.delete(animationId);\n    }\n\n    // 新しいアニメーションを追加\n    const animationData = {\n      object: targetObject,\n      type: effect.animation,\n      speed: effect.speed,\n      amplitude: effect.amplitude || 1.0,\n      axis: effect.axis || 'y',\n      intensity: effect.intensity || 1.0,\n      startTime: Date.now(),\n      originalPosition: { ...targetObject.position },\n      originalScale: { ...targetObject.scale },\n      originalRotation: { ...targetObject.rotation }\n    };\n\n    this.animations.set(animationId, animationData);\n    console.log(`🎬 Animation started: ${effect.animation} for ${targetObject.name}`);\n    return true;\n  }\n\n  /**\n   * 宇宙的エフェクト適用（オーロラ、星雲、エネルギー）\n   */\n  applyCosmicEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    const useColorFallback = !this.ensureEmissiveSupport(targetObject);\n\n    // アニメーション管理オブジェクトを初期化\n    if (!this.animations) {\n      this.animations = new Map();\n      this.startAnimationLoop();\n    }\n\n    // 複数色の発光と色変化アニメーションを組み合わせ\n    const cosmicAnimationId = `${targetObject.uuid}_${effect.type}`;\n\n    // 既存のコスミックエフェクトがあれば削除\n    if (this.animations.has(cosmicAnimationId)) {\n      this.animations.delete(cosmicAnimationId);\n    }\n\n    if (useColorFallback) {\n      if (targetObject.material.color) {\n        if (!targetObject.userData.originalColor) {\n          targetObject.userData.originalColor = targetObject.material.color.clone();\n        }\n        targetObject.material.color.set(effect.colors[0]);\n        targetObject.material.needsUpdate = true;\n      } else {\n        console.warn('🚫 Cosmic fallback could not adjust color');\n      }\n    } else {\n      targetObject.material.emissive = new THREE.Color(effect.colors[0]);\n      targetObject.material.emissiveIntensity = effect.intensity;\n      targetObject.material.needsUpdate = true;\n    }\n\n    // コスミックアニメーションデータを作成\n    const cosmicData = {\n      object: targetObject,\n      type: 'cosmic',\n      cosmicType: effect.type,\n      colors: effect.colors,\n      intensity: effect.intensity,\n      speed: this.getCosmicSpeed(effect.type),\n      startTime: Date.now(),\n      colorIndex: 0,\n      originalEmissive: !useColorFallback && targetObject.material.emissive ? targetObject.material.emissive.clone() : null,\n      originalEmissiveIntensity: !useColorFallback ? (targetObject.material.emissiveIntensity || 0) : 0,\n      useColorFallback\n    };\n\n    this.animations.set(cosmicAnimationId, cosmicData);\n    console.log(`🌌 Cosmic effect started: ${effect.type} with ${effect.colors.length} colors`);\n    return true;\n  }\n\n  applyChromaKeyEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n    const material = targetObject.material;\n    const texture = material.map;\n\n    if (!texture) {\n      console.warn('🚫 Chroma key requires texture map');\n      return false;\n    }\n\n    if (material.userData && material.userData.isChromaKeyMaterial && material.uniforms) {\n      material.uniforms.keyColor.value.setHex(effect.color);\n      material.uniforms.threshold.value = effect.threshold;\n      material.uniforms.smoothing.value = effect.smoothing;\n      material.needsUpdate = true;\n      console.log('🎯 Updated existing chroma key material');\n      return true;\n    }\n\n    const shaderMaterial = new THREE.ShaderMaterial({\n      uniforms: {\n        map: { value: texture },\n        keyColor: { value: new THREE.Color(effect.color) },\n        threshold: { value: effect.threshold },\n        smoothing: { value: effect.smoothing }\n      },\n      vertexShader: `varying vec2 vUv;\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}`,\n      fragmentShader: `uniform sampler2D map;\\nuniform vec3 keyColor;\\nuniform float threshold;\\nuniform float smoothing;\\nvarying vec2 vUv;\\nvoid main() {\\n  vec4 color = texture2D(map, vUv);\\n  float dist = distance(color.rgb, keyColor);\\n  float alpha = smoothstep(threshold, threshold + smoothing, dist) * color.a;\\n  if (alpha <= 0.0) discard;\\n  gl_FragColor = vec4(color.rgb, alpha);\\n}`,\n      transparent: true,\n      side: THREE.DoubleSide,\n      depthTest: material.depthTest,\n      depthWrite: material.depthWrite,\n      toneMapped: material.toneMapped === true\n    });\n\n    shaderMaterial.userData.isChromaKeyMaterial = true;\n    targetObject.material = shaderMaterial;\n\n    if (typeof material.dispose === 'function') {\n      material.dispose();\n    }\n\n    console.log('🪄 Applied chroma key shader material');\n    return true;\n  }\n\n  /**\n   * 宇宙的エフェクトのスピード設定\n   */\n  getCosmicSpeed(cosmicType) {\n    switch (cosmicType) {\n      case 'cosmic': return 0.0005;      // ゆっくりと神秘的に\n      case 'aurora': return 0.0008;      // オーロラのような流れ\n      case 'nebula': return 0.0003;      // 星雲のようにゆったり\n      case 'energy': return 0.0015;      // エネルギッシュに\n      case 'mystic': return 0.0006;      // 神秘的にゆらゆら\n      case 'rainbow_glow': return 0.001; // 虹色は適度なスピード\n      default: return 0.0008;\n    }\n  }\n\n  /**\n   * 水彩画・パステル系エフェクト適用\n   */\n  applyWatercolorEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    // 透明度を設定\n    targetObject.material.transparent = true;\n    targetObject.material.opacity = effect.opacity;\n\n    // アニメーション管理オブジェクトを初期化\n    if (!this.animations) {\n      this.animations = new Map();\n      this.startAnimationLoop();\n    }\n\n    // 水彩画アニメーションID\n    const watercolorAnimationId = `${targetObject.uuid}_${effect.type}`;\n\n    // 既存の水彩画エフェクトがあれば削除\n    if (this.animations.has(watercolorAnimationId)) {\n      this.animations.delete(watercolorAnimationId);\n    }\n\n    // 初期色を設定（発光ではなく拡散色）\n    targetObject.material.color = new THREE.Color(effect.colors[0]);\n    targetObject.material.needsUpdate = true;\n\n    // 水彩画アニメーションデータを作成\n    const watercolorData = {\n      object: targetObject,\n      type: 'watercolor',\n      artType: effect.type,\n      colors: effect.colors,\n      opacity: effect.opacity,\n      speed: this.getWatercolorSpeed(effect.type),\n      startTime: Date.now(),\n      colorIndex: 0,\n      originalColor: new THREE.Color(targetObject.material.color),\n      originalOpacity: targetObject.material.opacity\n    };\n\n    this.animations.set(watercolorAnimationId, watercolorData);\n    console.log(`🎨 Watercolor effect started: ${effect.type} with ${effect.colors.length} colors`);\n    return true;\n  }\n\n  /**\n   * 水彩画系エフェクトのスピード設定\n   */\n  getWatercolorSpeed(artType) {\n    switch (artType) {\n      case 'watercolor_art': return 0.0003;  // 水彩画は非常にゆっくり\n      case 'pastel_art': return 0.0002;      // パステルはより穏やか\n      default: return 0.0003;\n    }\n  }\n\n  /**\n   * アニメーションループ開始\n   */\n  startAnimationLoop() {\n    if (this.animationLoopRunning) return;\n\n    this.animationLoopRunning = true;\n\n    const animate = () => {\n      if (this.animations && this.animations.size > 0) {\n        this.updateAnimations();\n      }\n\n      if (this.animationLoopRunning) {\n        requestAnimationFrame(animate);\n      }\n    };\n\n    animate();\n    console.log(`🎭 Animation loop started`);\n  }\n\n  /**\n   * アニメーション更新\n   */\n  updateAnimations() {\n    const currentTime = Date.now();\n\n    for (const [id, animation] of this.animations.entries()) {\n      const elapsed = (currentTime - animation.startTime) * 0.001; // 秒に変換\n\n      switch (animation.type) {\n        case 'float':\n          this.updateFloatAnimation(animation, elapsed);\n          break;\n        case 'pulse':\n          this.updatePulseAnimation(animation, elapsed);\n          break;\n        case 'spin':\n          this.updateSpinAnimation(animation, elapsed);\n          break;\n        case 'sparkle':\n          this.updateSparkleAnimation(animation, elapsed);\n          break;\n        case 'rainbow':\n          this.updateRainbowAnimation(animation, elapsed);\n          break;\n        case 'glitch':\n          this.updateGlitchAnimation(animation, elapsed);\n          break;\n        case 'cosmic':\n          this.updateCosmicAnimation(animation, elapsed);\n          break;\n        case 'watercolor':\n          this.updateWatercolorAnimation(animation, elapsed);\n          break;\n      }\n    }\n  }\n\n  /**\n   * 浮遊アニメーション\n   */\n  updateFloatAnimation(animation, elapsed) {\n    const yOffset = Math.sin(elapsed * animation.speed * 2 * Math.PI) * animation.amplitude;\n    animation.object.position.y = animation.originalPosition.y + yOffset;\n  }\n\n  /**\n   * パルスアニメーション\n   */\n  updatePulseAnimation(animation, elapsed) {\n    const scaleOffset = Math.sin(elapsed * animation.speed * 2 * Math.PI) * animation.amplitude;\n    const newScale = 1 + scaleOffset;\n    animation.object.scale.setScalar(animation.originalScale.x * newScale);\n  }\n\n  /**\n   * 回転アニメーション\n   */\n  updateSpinAnimation(animation, elapsed) {\n    const rotationAmount = elapsed * animation.speed * 2 * Math.PI;\n    if (animation.axis === 'x') {\n      animation.object.rotation.x = animation.originalRotation.x + rotationAmount;\n    } else if (animation.axis === 'y') {\n      animation.object.rotation.y = animation.originalRotation.y + rotationAmount;\n    } else if (animation.axis === 'z') {\n      animation.object.rotation.z = animation.originalRotation.z + rotationAmount;\n    }\n  }\n\n  /**\n   * キラキラアニメーション（発光の明滅）\n   */\n  updateSparkleAnimation(animation, elapsed) {\n    if (animation.object.material) {\n      const intensity = (Math.sin(elapsed * 3 * 2 * Math.PI) * 0.5 + 0.5) * animation.intensity;\n      animation.object.material.emissiveIntensity = intensity;\n      animation.object.material.needsUpdate = true;\n    }\n  }\n\n  /**\n   * 虹色アニメーション\n   */\n  updateRainbowAnimation(animation, elapsed) {\n    if (animation.object.material) {\n      const hue = (elapsed * animation.speed) % 1;\n      const color = new THREE.Color().setHSL(hue, 1, 0.5);\n      animation.object.material.color = color;\n      animation.object.material.needsUpdate = true;\n    }\n  }\n\n  /**\n   * グリッチアニメーション\n   */\n  updateGlitchAnimation(animation, elapsed) {\n    if (Math.random() < 0.1) { // 10%の確率でグリッチ\n      const offset = (Math.random() - 0.5) * animation.intensity;\n      animation.object.position.x = animation.originalPosition.x + offset;\n      animation.object.position.z = animation.originalPosition.z + offset;\n    } else {\n      animation.object.position.x = animation.originalPosition.x;\n      animation.object.position.z = animation.originalPosition.z;\n    }\n  }\n\n  /**\n   * 宇宙的アニメーション（オーロラ、星雲、エネルギーエフェクト）\n   */\n  updateCosmicAnimation(animation, elapsed) {\n    if (!animation.object.material) return;\n\n    // 色の循環スピードを調整\n    const colorCycleSpeed = elapsed * animation.speed;\n    const numColors = animation.colors.length;\n\n    // 滑らかな色の遷移を実現\n    const colorProgress = (colorCycleSpeed % numColors);\n    const currentColorIndex = Math.floor(colorProgress);\n    const nextColorIndex = (currentColorIndex + 1) % numColors;\n    const lerpFactor = colorProgress - currentColorIndex;\n\n    // 現在の色と次の色をブレンド\n    const currentColor = new THREE.Color(animation.colors[currentColorIndex]);\n    const nextColor = new THREE.Color(animation.colors[nextColorIndex]);\n    const blendedColor = currentColor.lerp(nextColor, lerpFactor);\n\n    // 宇宙的エフェクトタイプごとの特別な処理\n    let intensityMultiplier = 1.0;\n    switch (animation.cosmicType) {\n      case 'aurora':\n        // オーロラは波のような強弱変化\n        intensityMultiplier = 0.7 + 0.3 * Math.sin(elapsed * 2.5);\n        break;\n      case 'nebula':\n        // 星雲はゆっくりとした脈動\n        intensityMultiplier = 0.8 + 0.2 * Math.sin(elapsed * 1.2);\n        break;\n      case 'energy':\n        // エネルギーは激しく変動\n        intensityMultiplier = 0.6 + 0.4 * (Math.sin(elapsed * 4) * Math.cos(elapsed * 3));\n        break;\n      case 'cosmic':\n        // 宇宙は神秘的にゆらゆら\n        intensityMultiplier = 0.8 + 0.2 * Math.sin(elapsed * 1.8);\n        break;\n      case 'mystic':\n        // 神秘的は複雑な変化\n        intensityMultiplier = 0.7 + 0.3 * Math.sin(elapsed * 1.5) * Math.cos(elapsed * 0.8);\n        break;\n      case 'rainbow_glow':\n        // 虹色は鮮やかに輝く\n        intensityMultiplier = 0.6 + 0.3 * Math.sin(elapsed * 2.0);\n        break;\n    }\n\n    if (animation.useColorFallback) {\n      if (animation.object.material.color) {\n        animation.object.material.color.copy(blendedColor);\n        animation.object.material.needsUpdate = true;\n      }\n    } else {\n      animation.object.material.emissive = blendedColor;\n      animation.object.material.emissiveIntensity = animation.intensity * intensityMultiplier;\n      animation.object.material.needsUpdate = true;\n    }\n  }\n\n  /**\n   * 水彩画アニメーション（拡散色の柔らかな変化）\n   */\n  updateWatercolorAnimation(animation, elapsed) {\n    if (!animation.object.material) return;\n\n    // 色の循環スピードを調整（宇宙エフェクトより遅い）\n    const colorCycleSpeed = elapsed * animation.speed;\n    const numColors = animation.colors.length;\n\n    // 滑らかな色の遷移\n    const colorProgress = (colorCycleSpeed % numColors);\n    const currentColorIndex = Math.floor(colorProgress);\n    const nextColorIndex = (currentColorIndex + 1) % numColors;\n    const lerpFactor = colorProgress - currentColorIndex;\n\n    // 現在の色と次の色をブレンド\n    const currentColor = new THREE.Color(animation.colors[currentColorIndex]);\n    const nextColor = new THREE.Color(animation.colors[nextColorIndex]);\n    const blendedColor = currentColor.lerp(nextColor, lerpFactor);\n\n    // 透明度の柔らかな変化\n    let opacityMultiplier = 1.0;\n    switch (animation.artType) {\n      case 'watercolor_art':\n        // 水彩画は透明度もゆっくり変化\n        opacityMultiplier = 0.9 + 0.1 * Math.sin(elapsed * 0.5);\n        break;\n      case 'pastel_art':\n        // パステルは透明度をより安定\n        opacityMultiplier = 0.95 + 0.05 * Math.sin(elapsed * 0.3);\n        break;\n    }\n\n    // 拡散色を設定（emissiveではなくcolor）\n    animation.object.material.color = blendedColor;\n    animation.object.material.opacity = animation.opacity * opacityMultiplier;\n    animation.object.material.needsUpdate = true;\n  }\n\n  /**\n   * プロンプトに基づいて自動エフェクトを決定\n   */\n  getAutoEffectsFromPrompt(prompt) {\n    if (!prompt) return null;\n\n    const lowerPrompt = prompt.toLowerCase();\n\n    // 魔法・ファンタジー系\n    if (lowerPrompt.includes('ユニコーン') || lowerPrompt.includes('unicorn') ||\n        lowerPrompt.includes('魔法') || lowerPrompt.includes('magic') ||\n        lowerPrompt.includes('魔女') || lowerPrompt.includes('wizard') ||\n        lowerPrompt.includes('fairy') || lowerPrompt.includes('妖精')) {\n      return ['魔法っぽく'];\n    }\n\n    // 宇宙・神秘系\n    if (lowerPrompt.includes('ドラゴン') || lowerPrompt.includes('dragon') ||\n        lowerPrompt.includes('宇宙') || lowerPrompt.includes('space') ||\n        lowerPrompt.includes('星') || lowerPrompt.includes('star')) {\n      return ['宇宙'];\n    }\n\n    // 幽霊・透明系\n    if (lowerPrompt.includes('幽霊') || lowerPrompt.includes('ghost') ||\n        lowerPrompt.includes('精霊') || lowerPrompt.includes('spirit')) {\n      return ['幽霊'];\n    }\n\n    // サイバー・未来系\n    if (lowerPrompt.includes('ロボット') || lowerPrompt.includes('robot') ||\n        lowerPrompt.includes('サイバー') || lowerPrompt.includes('cyber') ||\n        lowerPrompt.includes('未来') || lowerPrompt.includes('future')) {\n      return ['サイバー'];\n    }\n\n    // 動物系 - 軽いキラキラエフェクト\n    if (lowerPrompt.includes('猫') || lowerPrompt.includes('cat') ||\n        lowerPrompt.includes('犬') || lowerPrompt.includes('dog') ||\n        lowerPrompt.includes('鳥') || lowerPrompt.includes('bird')) {\n      return ['きらめ'];\n    }\n\n    // 花・自然系 - パステルエフェクト\n    if (lowerPrompt.includes('花') || lowerPrompt.includes('flower') ||\n        lowerPrompt.includes('桜') || lowerPrompt.includes('cherry') ||\n        lowerPrompt.includes('自然') || lowerPrompt.includes('nature')) {\n      return ['パステル'];\n    }\n\n    return null; // 該当なしの場合はエフェクトなし\n  }\n\n  /**\n   * オブジェクト認識成功時のフィードバックエフェクト\n   */\n  applyRecognitionFeedback(targetObject) {\n    console.log(`🎯 Object recognition successful: ${targetObject.name}`);\n\n    // 短時間のキラキラエフェクトで認識成功を視覚的に伝える\n    const feedbackEffect = [{\n      type: 'animation',\n      animation: 'sparkle',\n      intensity: 0.8,\n      name: 'recognition_feedback'\n    }];\n\n    this.applyEffects(targetObject, feedbackEffect);\n\n    // 3秒後にフィードバックエフェクトを停止\n    setTimeout(() => {\n      this.stopRecognitionFeedback(targetObject);\n    }, 3000);\n  }\n\n  /**\n   * 認識フィードバックエフェクトを停止\n   */\n  stopRecognitionFeedback(targetObject) {\n    if (!this.animations) return;\n\n    const feedbackAnimationId = `${targetObject.uuid}_sparkle`;\n    if (this.animations.has(feedbackAnimationId)) {\n      this.animations.delete(feedbackAnimationId);\n\n      // 発光を元に戻す\n      if (targetObject.material) {\n        targetObject.material.emissiveIntensity = 0;\n        targetObject.material.needsUpdate = true;\n      }\n\n      console.log(`✨ Recognition feedback stopped for: ${targetObject.name}`);\n    }\n  }\n\n  /**\n   * 削除コマンド解析\n   */\n  parseDeleteCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 選択されたオブジェクトのみを削除するか、全削除かを判定\n    if (cmd.includes('選択') || cmd.includes('これ') || cmd.includes('この')) {\n      return {\n        type: 'delete',\n        target: 'selected',\n        requiresSelection: true\n      };\n    }\n    \n    if (cmd.includes('全部') || cmd.includes('すべて') || cmd.includes('全て')) {\n      return {\n        type: 'delete',\n        target: 'all'\n      };\n    }\n    \n    // デフォルト: 選択されたオブジェクトを削除\n    return {\n      type: 'delete',\n      target: 'selected',\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * 自然言語オブジェクト操作コマンド解析\n   * 例: \"ユニコーンを右に移動\", \"猫の画像をピンクに\", \"1つ目の猫を左に\"\n   */\n  parseNaturalLanguageCommand(command) {\n    // 移動パターンをチェック\n    const movePatterns = [\n      '(\\S+?)を(.+?)に移動', \n      '(\\S+?)を(.+?)へ移動',\n      '(\\S+?)を(.+?)に動か',\n      '(\\S+?)を(.+?)へ動か'\n    ];\n    \n    for (const pattern of movePatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n        const direction = match[2];\n        \n        console.log(`🎯 Natural language move detected: \"${objectName}\" to \"${direction}\"`);\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          movement: this.parsePositionFromPrompt(direction),\n          requiresObjectSearch: true\n        };\n      }\n    }\n    \n    // 色変更パターンをチェック\n    const colorPatterns = [\n      '(\\S+?)を(\\S+?)色に',\n      '(\\S+?)を(\\S+?)に'\n    ];\n    \n    // 色変更は基本的な色のみ対応\n    const colorKeywords = ['赤', '赤色', '青', '青色', '緑', '緑色', '黄', '黄色', '黄色い', '紫', '紫色',\n                          '橙', '橙色', 'オレンジ', 'オレンジ色', '白', '白色', '黒', '黒色',\n                          '灰', '灰色', 'グレー', 'グレー色', 'ピンク', 'ピンク色', '茶', '茶色', '銀', '銀色', '金', '金色'];\n    \n    for (const pattern of colorPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match && colorKeywords.some(color => match[2].includes(color))) {\n        const objectName = match[1];\n        const colorName = match[2];\n        \n        console.log(`🎨 Natural language color change detected: \"${objectName}\" to \"${colorName}\"`);\n        \n        // 色変更の解析（既存のロジックを流用）\n        const colorMap = {\n          '赤': 0xff0000, '赤色': 0xff0000,\n          '青': 0x0000ff, '青色': 0x0000ff,\n          '緑': 0x00ff00, '緑色': 0x00ff00,\n          '黄': 0xffff00, '黄色': 0xffff00, '黄色い': 0xffff00,\n          '紫': 0xff00ff, '紫色': 0xff00ff,\n          '橙': 0xff8800, '橙色': 0xff8800, 'オレンジ': 0xff8800, 'オレンジ色': 0xff8800,\n          '白': 0xffffff, '白色': 0xffffff,\n          '黒': 0x000000, '黒色': 0x000000,\n          '灰': 0x808080, '灰色': 0x808080, 'グレー': 0x808080, 'グレー色': 0x808080,\n          'ピンク': 0xffc0cb, 'ピンク色': 0xffc0cb,\n          '茶': 0x8b4513, '茶色': 0x8b4513,\n          '銀': 0xc0c0c0, '銀色': 0xc0c0c0,\n          '金': 0xffd700, '金色': 0xffd700\n        };\n        \n        let colorValue = null;\n        for (const [colorKey, value] of Object.entries(colorMap)) {\n          if (colorName.includes(colorKey)) {\n            colorValue = value;\n            break;\n          }\n        }\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          color: colorValue,\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    // 回転パターンをチェック\n    const rotationPatterns = [\n      '(\\S+?)を回転',\n      '(\\S+?)を回す',\n      '(\\S+?)を回して',\n      '(\\S+?)回転',\n      '回転.*?(\\S+)'\n    ];\n\n    for (const pattern of rotationPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n\n        console.log(`🔄 Natural language rotation detected: \"${objectName}\"`);\n\n        // 角度指定があるかチェック\n        const degreeMatch = command.match(/(\\d+)\\s*度/);\n        const rotation = degreeMatch ?\n          parseFloat(degreeMatch[1]) * Math.PI / 180 :\n          Math.PI / 4; // デフォルト45度\n\n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          rotation: rotation,\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    // 反転パターンをチェック\n    const flipPatterns = [\n      '(\\S+?)を左右反転',\n      '(\\S+?)を反転',\n      '(\\S+?)反転',\n      '(\\S+?)をひっくり返',\n      '(\\S+?)をflip'\n    ];\n\n    for (const pattern of flipPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n\n        console.log(`🔄 Natural language flip detected: \"${objectName}\"`);\n\n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          flip: true, // 反転フラグを追加\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    // エフェクトパターンをチェック（水彩、宇宙エフェクトなど）\n    const effectPatterns = [\n      '(\\S+?)を(\\S+?)っぽく',\n      '(\\S+?)を(\\S+?)に',\n      '(\\S+?)を(\\S+?)風に',\n      '(\\S+?)を(\\S+?)みたい'\n    ];\n\n    const effectKeywords = ['水彩', '水彩画', '宇宙', 'オーロラ', '星雲', 'エネルギー', '神秘的',\n                            'パステル', '魔法', '幽霊', 'サイバー', '夢', '光', 'ネオン',\n                            'メタリック', '金属', 'ガラス', 'マット'];\n\n    for (const pattern of effectPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match && effectKeywords.some(effect => match[2].includes(effect))) {\n        const objectName = match[1];\n        const effectName = match[2];\n\n        console.log(`✨ Natural language effect detected: \"${objectName}\" with \"${effectName}\"`);\n\n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          command: effectName, // エフェクトはコマンドとして渡す\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    return null; // 自然言語パターンに一致しない場合\n  }\n\n  /**\n   * 移動コマンドから相対位置を解析（オブジェクト移動用）\n   */\n  parsePositionFromPrompt(command) {\n    let x = 0, y = 0, z = 0;\n    \n    // 左右移動（修正：左右を正しい方向に）\n    if (command.includes('右へ') || command.includes('右に') || command.includes('右側へ') || command.includes('右側に')) {\n      x = 5; // 5メートル右へ（正の値で右に移動）\n    } else if (command.includes('左へ') || command.includes('左に') || command.includes('左側へ') || command.includes('左側に')) {\n      x = -5; // 5メートル左へ（負の値で左に移動）\n    }\n    \n    // 上下移動\n    if (command.includes('上へ') || command.includes('上に') || command.includes('上側へ')) {\n      y = 3; // 3メートル上へ\n    } else if (command.includes('下へ') || command.includes('下に') || command.includes('下側へ')) {\n      y = -3; // 3メートル下へ\n    }\n    \n    // 前後移動\n    if (command.includes('前へ') || command.includes('手前へ') || command.includes('近くへ')) {\n      z = 3; // カメラに近づける\n    } else if (command.includes('後ろへ') || command.includes('奥へ') || command.includes('遠くへ')) {\n      z = -3; // カメラから遠ざける\n    }\n    \n    // 距離指定の解析\n    const distanceMatch = command.match(/(\\d+(?:\\.\\d+)?)\\s*(?:メートル|m)/);\n    if (distanceMatch) {\n      const distance = parseFloat(distanceMatch[1]);\n      // 方向に応じて距離を適用\n      if (Math.abs(x) > 0) x = x > 0 ? distance : -distance;\n      if (Math.abs(y) > 0) y = y > 0 ? distance : -distance;\n      if (Math.abs(z) > 0) z = z > 0 ? distance : -distance;\n    }\n    \n    // 「少し」「大きく」などの修飾語\n    if (command.includes('少し') || command.includes('ちょっと')) {\n      x *= 0.5; y *= 0.5; z *= 0.5;\n    } else if (command.includes('大きく') || command.includes('たくさん')) {\n      x *= 2; y *= 2; z *= 2;\n    }\n    \n    console.log(`📍 Position movement parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * 位置情報解析（カメラ相対位置）\n   */\n  parsePosition(command) {\n    const defaultPos = { x: 0, y: 5, z: 10 }; // カメラ前方10m、少し上\n    \n    // 基本方向の解析（カメラ相対座標系）\n    let x = 0, y = 5, z = 10; // デフォルト値（カメラ相対、正のzが前方）\n    \n    // 組み合わせ位置を最初にチェック（優先度最高）\n    if (command.includes('左下')) {\n      x = -8; y = 0; z = 10;  // 左下: 左側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 左下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右上')) {\n      x = 5; y = 4; z = 12;  // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 右上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('左上')) {\n      x = -8; y = 4; z = 15; // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 左上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右下')) {\n      x = 8; y = 0; z = 10; // 右下: 右側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 右下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 特殊位置\n    if (command.includes('中央') || command.includes('真ん中') || command.includes('正面')) {\n      x = 0; y = 3; z = 12;  // y=3 で目線レベルに\n      console.log(`📍 Position parsed from \"${command}\": 中央 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('空') || command.includes('天空')) {\n      x = 0; y = 20; z = 10;\n      console.log(`📍 Position parsed from \"${command}\": 空中 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('地面') || command.includes('足元')) {\n      x = 0; y = 1; z = 8;\n      console.log(`📍 Position parsed from \"${command}\": 地面 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 個別方向の解析\n    // 前後方向\n    if (command.includes('前に') || command.includes('手前に')) {\n      z = 5; // カメラに近づける\n    } else if (command.includes('後ろに') || command.includes('奥に') || command.includes('遠くに')) {\n      z = 20; // カメラから遠ざける\n    }\n    \n    // 左右方向\n    if (command.includes('右に') || command.includes('右側') || command.includes('画面の右')) {\n      x = 8;\n    } else if (command.includes('左に') || command.includes('左側') || command.includes('画面の左')) {\n      x = -8;\n    }\n    \n    // 上下方向（カメラ相対）\n    if (command.includes('上に') || command.includes('上側') || command.includes('画面の上') || command.includes('高い位置に') || command.includes('空中に')) {\n      y = 8; // カメラから8メートル上\n    } else if (command.includes('下に') || command.includes('下側') || command.includes('画面の下') || command.includes('低い位置に') || command.includes('地面に')) {\n      y = -2; // カメラから2メートル下\n    }\n    \n    // 距離指定\n    if (command.includes('近くに') || command.includes('すぐ前に')) {\n      z = Math.min(z * 0.5, 3); // 半分の距離、ただし最低3m（正の値なので min を使用）\n    } else if (command.includes('遠くに') || command.includes('向こうに')) {\n      z = z * 1.5; // 1.5倍の距離\n    }\n    \n    console.log(`📍 Position parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * サイズ解析\n   */\n  parseSize(command) {\n    if (command.includes('大きな') || command.includes('大きい')) return { scale: 2.0 };\n    if (command.includes('小さな') || command.includes('小さい')) return { scale: 0.5 };\n    return { scale: this.config.defaultObjectScale };\n  }\n\n  /**\n   * コマンド種別別実行\n   */\n  async dispatchCommand(parsed) {\n    switch (parsed.type) {\n      case 'image_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('画像生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeImageGeneration(parsed);\n        \n      case 'video_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('動画生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeVideoGeneration(parsed);\n        \n      case 'object_modification':\n        return await this.executeObjectModification(parsed);\n        \n      case 'natural_object_modification':\n        return await this.executeNaturalObjectModification(parsed);\n        \n      case 'delete':\n        return await this.executeDelete(parsed);\n        \n      case 'file_import':\n        return await this.executeFileImport(parsed);\n        \n      case 'object_selection':\n        return await this.executeObjectSelection(parsed);\n        \n      default:\n        throw new Error(`Unknown command type: ${parsed.type}`);\n    }\n  }\n\n  /**\n   * 画像生成実行\n   */\n  async executeImageGeneration(parsed) {\n    try {\n      console.log(`🎨 Generating image: \"${parsed.prompt}\"`);\n      \n      // 段階的にサイズを試行（シーンに配置しやすいサイズを優先）\n      const fallbackSizes = [\n        { width: 512, height: 512 },    // 1:1 基本サイズ（互換性最高）\n        { width: 768, height: 432 },    // 16:9 現代的サイズ\n        { width: 1024, height: 1024 },  // 大きめ1:1\n        { width: 640, height: 480 },    // 4:3 クラシック\n      ];\n      \n      let imageResult;\n      let lastError;\n      \n      for (let i = 0; i < fallbackSizes.length; i++) {\n        const dimensions = fallbackSizes[i];\n        try {\n          console.log(`🔄 Trying ${dimensions.width}x${dimensions.height}...`);\n          \n          imageResult = await this.client.generateImage(parsed.prompt, {\n            width: dimensions.width,\n            height: dimensions.height,\n            service: this.selectedImageService || undefined\n          });\n          \n          if (imageResult.success) {\n            console.log(`✅ Success with ${dimensions.width}x${dimensions.height}`);\n            break;\n          }\n        } catch (error) {\n          lastError = error;\n          console.log(`⚠️ Failed with ${dimensions.width}x${dimensions.height}: ${error.message}`);\n          \n          // 最後の試行でない場合は続行\n          if (i < fallbackSizes.length - 1) {\n            console.log(`🔄 Retrying with next size...`);\n            continue;\n          }\n        }\n      }\n      \n      // 結果にモデル情報を含める\n      if (imageResult && imageResult.modelName) {\n        console.log(`📡 Used model: ${imageResult.modelName}`);\n      }\n      \n      const loader = new THREE.TextureLoader();\n      let texture;\n      if (imageResult && imageResult.success && (imageResult.imageUrl || imageResult.localPath)) {\n        // 成功: 生成された画像をテクスチャとして使用\n        let imageUrl = imageResult.imageUrl;\n        \n        // localPathの場合はWebアクセス可能なURLに変換\n        if (!imageUrl && imageResult.localPath) {\n          const filename = imageResult.localPath.split('/').pop();\n          imageUrl = `${this.client.serverUrl}/generated/${filename}`;\n        }\n        \n        console.log(`✅ Image generated successfully: ${imageUrl}`);\n        texture = await loader.loadAsync(imageUrl);\n\n        // テクスチャの色彩を正確に表示するための設定\n        texture.colorSpace = THREE.SRGBColorSpace; // 正しいカラースペース\n      } else {\n        // 失敗: プレースホルダー画像を使用\n        console.log(`⚠️ Using fallback image (last error: ${lastError?.message || 'unknown'})`);\n        texture = this.createFallbackTexture(parsed.prompt);\n      }\n\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n      if (aspectRatio >= 1) {\n        planeWidth = baseSize;\n        planeHeight = baseSize / aspectRatio;\n      } else {\n        planeWidth = baseSize * aspectRatio;\n        planeHeight = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n        side: THREE.DoubleSide, // 両面表示\n        toneMapped: false    // トーンマッピングを無効化（より鮮やかな色彩）\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（画像も前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      material.alphaTest = 0.01;\n      material.needsUpdate = true;\n\n      // カメラ相対位置で配置（カメラの向きも考慮）\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        // フォールバック: 絶対座標\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n      \n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n      \n      // 識別用の名前とメタデータ\n      const objectId = `generated_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_image',\n        source: 'generated_image',\n        modelName: imageResult?.modelName || this.selectedImageService || null,\n        keywords: this.buildObjectKeywordHints({ prompt: parsed.prompt, baseType: 'image' })\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n\n      console.log(`✅ Created object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n\n      // 生成位置にパーティクルエフェクトを追加（視覚的フィードバック）\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: imageResult?.modelName,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎨 Image generation failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成実行\n   */\n  async executeVideoGeneration(parsed) {\n    try {\n      console.log(`🎬 Generating video: \"${parsed.prompt}\"`);\n      console.log('🔍 Video generation - selectedVideoService:', this.selectedVideoService);\n      \n      // ChocoDro Client経由で動画生成\n      // アスペクト比は各モデルのサポート状況に応じてサーバー側で最適化\n      const videoResult = await this.client.generateVideo(parsed.prompt, {\n        duration: 3,\n        model: this.selectedVideoService || undefined\n        // width, height指定を削除してサーバー側デフォルト(16:9)を使用\n      });\n      \n      // 結果にモデル情報を含める\n      if (videoResult.modelName) {\n        console.log(`📡 Used model: ${videoResult.modelName}`);\n      }\n      \n      let videoTexture;\n      let video = null; // video変数をスコープ外で定義\n      \n      if (videoResult.success && videoResult.videoUrl) {\n        // 成功: 生成された動画をテクスチャとして使用\n        console.log(`✅ Video generated successfully: ${videoResult.videoUrl}`);\n        \n        // HTML5 video要素を作成\n        video = document.createElement('video');\n        video.src = videoResult.videoUrl;\n        video.crossOrigin = 'anonymous';\n        video.loop = true;\n        video.muted = true; // 初期はミュート（ユーザーが手動で音声制御）\n        video.playsInline = true;\n        \n        // 動画テクスチャを作成\n        videoTexture = new THREE.VideoTexture(video);\n        videoTexture.colorSpace = THREE.SRGBColorSpace;\n        \n        // 動画の自動再生を開始\n        video.addEventListener('loadeddata', () => {\n          video.play().catch(console.error);\n        });\n        \n      } else {\n        // 失敗: プレースホルダー動画テクスチャを使用\n        console.log(`⚠️ Using fallback video texture`);\n        videoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      }\n      \n      // 動画を表示する平面ジオメトリを作成（アスペクト比を考慮）\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const requestedWidth = videoResult.metadata?.width || 512;\n      const requestedHeight = videoResult.metadata?.height || 512;\n      const planeAspect = requestedWidth && requestedHeight ? requestedWidth / requestedHeight : 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n\n      if (planeAspect >= 1) {\n        planeHeight = baseSize / planeAspect;\n      } else {\n        planeWidth = baseSize * planeAspect;\n      }\n\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（動画を前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        source: 'generated_video',\n        videoUrl: videoResult.videoUrl,\n        modelName: videoResult.modelName || this.selectedVideoService || null,\n        width: requestedWidth,\n        height: requestedHeight,\n        videoElement: video,\n        keywords: this.buildObjectKeywordHints({ prompt: parsed.prompt, baseType: 'video' })\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created video object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: videoResult.modelName,\n        videoUrl: videoResult.videoUrl,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video generation failed:', error);\n      \n      // エラー時もプレースホルダー動画を表示\n      console.log('🔄 Creating fallback video plane due to generation error');\n      const fallbackVideoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      \n      // 動画を表示する平面ジオメトリを作成\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n      const geometry = new THREE.PlaneGeometry(baseSize, baseSize);\n      const material = new THREE.MeshBasicMaterial({\n        map: fallbackVideoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        source: 'generated_video',\n        videoUrl: null, // エラー時はnull\n        modelName: 'Error Fallback',\n        width: 512,\n        height: 512,\n        videoElement: null,\n        error: error.message,\n        keywords: this.buildObjectKeywordHints({ prompt: parsed.prompt, baseType: 'video' })\n      };\n\n      // シーンに追加\n      this.scene.add(plane);\n      console.log('📍 Fallback video plane added to scene');\n\n      return {\n        success: false,\n        error: error.message,\n        object: plane,\n        prompt: parsed.prompt\n      };\n    }\n  }\n\n  async loadImageFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 }, fileName = null } = options;\n      \n      console.log(`📁 Loading image file: ${fileUrl}`);\n      \n      // ファイルからテクスチャを読み込み\n      const loader = new THREE.TextureLoader();\n      const texture = await loader.loadAsync(fileUrl);\n\n      // テクスチャの色彩を正確に表示するための設定\n      texture.colorSpace = THREE.SRGBColorSpace;\n\n      // アスペクト比を算出（fallback: 1）\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n      \n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      if (aspectRatio >= 1) {\n        width = baseSize;\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n        height = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成（縦横比を維持）\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      material.alphaTest = 0.01;\n      material.needsUpdate = true;\n      \n      const plane = new THREE.Mesh(geometry, material);\n\n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // ファイル名からpromptを作成（拡張子を除去）\n      const prompt = fileName ? fileName.replace(/\\.[^/.]+$/, '') : 'imported_image';\n\n      // 識別用の名前とメタデータ\n      const objectId = `imported_image_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_image',\n        prompt: prompt, // ファイル名をpromptとして設定\n        fileName: fileName, // 元のファイル名も保存\n        importOrder: this.objectCounter, // インポート順序を記録\n        keywords: this.buildObjectKeywordHints({ prompt, fileName, baseType: 'image' })\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n\n      console.log(`✅ Created imported image: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n\n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('📁 Image file loading failed:', error);\n      throw error;\n    }\n  }\n\n  async loadVideoFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 }, fileName = null } = options;\n      \n      console.log(`🎬 Loading video file: ${fileUrl}`);\n      \n      // HTMLVideoElementを作成\n      const video = document.createElement('video');\n      video.src = fileUrl;\n      video.loop = true;\n      video.muted = true;\n      video.playsInline = true;\n      video.autoplay = true;\n      video.preload = 'auto';\n\n      // VideoTextureを作成\n      const videoTexture = new THREE.VideoTexture(video);\n      videoTexture.colorSpace = THREE.SRGBColorSpace;\n\n      // ビデオの読み込みとサイズ取得\n      await new Promise((resolve, reject) => {\n        const handleLoaded = () => {\n          console.log(`🎬 Video loaded: ${video.videoWidth}x${video.videoHeight}`);\n          resolve();\n        };\n        const handleError = (event) => {\n          reject(event?.error || new Error('Video failed to load'));\n        };\n\n        video.addEventListener('loadedmetadata', handleLoaded, { once: true });\n        video.addEventListener('error', handleError, { once: true });\n        video.load();\n      });\n\n      try {\n        await video.play();\n      } catch (playError) {\n        console.warn('🎬 Video autoplay could not start automatically. Playback will require user interaction.', playError);\n      }\n      \n      // アスペクト比を計算してサイズ調整\n      const aspectRatio = video.videoWidth / video.videoHeight;\n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      \n      if (aspectRatio > 1) {\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n      }\n      \n      // 動画を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: true,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      material.alphaTest = 0.01;\n      material.needsUpdate = true;\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // ファイル名からpromptを作成（拡張子を除去）\n      const prompt = fileName ? fileName.replace(/\\.[^/.]+$/, '') : 'imported_video';\n\n      // 識別用の名前とメタデータ\n      const objectId = `imported_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_video',\n        videoElement: video,\n        objectUrl: fileUrl,\n        prompt: prompt, // ファイル名をpromptとして設定\n        fileName: fileName, // 元のファイル名も保存\n        importOrder: this.objectCounter, // インポート順序を記録\n        keywords: this.buildObjectKeywordHints({ prompt, fileName, baseType: 'video' })\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n\n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created imported video: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video file loading failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語オブジェクト操作実行\n   */\n  async executeNaturalObjectModification(parsed) {\n    // オブジェクトを名前で検索\n    const targetObjects = this.findObjectsByName(parsed.targetObjectName);\n    \n    if (targetObjects.length === 0) {\n      return {\n        success: false,\n        message: `オブジェクト「${parsed.targetObjectName}」が見つかりませんでした`\n      };\n    }\n    \n    console.log(`🔍 Found ${targetObjects.length} object(s) matching \"${parsed.targetObjectName}\"`);\n    \n    // 複数の場合は序数詞で選択、なければ最初のオブジェクト\n    const targetObject = this.selectObjectFromMultiple(targetObjects, parsed.targetObjectName);\n    console.log(`🎯 Operating on object: ${targetObject.name}`);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Texture color tint changed to: #${parsed.color.toString(16)}`);\n      } else {\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Material color changed to: #${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n\n    // Phase 2: エフェクト適用\n    if (parsed.effects && parsed.effects.length > 0) {\n      const effectsApplied = this.applyEffects(targetObject, parsed.effects);\n      if (effectsApplied) {\n        modified = true;\n      }\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y,\n        z: currentPos.z + parsed.movement.z\n      };\n      \n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        movement: parsed.movement,\n        command: `Natural language: ${parsed.targetObjectName}`\n      });\n      \n      return {\n        success: true,\n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          movement: parsed.movement\n        }\n      };\n    } else {\n      return {\n        success: false,\n        message: '変更可能な属性が見つかりませんでした'\n      };\n    }\n  }\n  \n  /**\n   * 名前でオブジェクトを検索\n   */\n  findObjectsByName(searchName) {\n    const results = [];\n    const searchLower = searchName.toLowerCase();\n    \n    // 生成されたオブジェクトから検索\n    for (const [objectId, object] of this.spawnedObjects) {\n      // プロンプト情報から検索\n      if (object.userData.prompt) {\n        const promptLower = object.userData.prompt.toLowerCase();\n        \n        // 部分一致で検索（「ユニコーン」が「ユニコーンの画像」にマッチ）\n        if (promptLower.includes(searchLower)) {\n          results.push(object);\n          console.log(`✅ Object match found: ${objectId} (prompt: \"${object.userData.prompt}\")`);\n        }\n      }\n      \n      // オブジェクト名からも検索\n      if (object.name && object.name.toLowerCase().includes(searchLower)) {\n        results.push(object);\n        console.log(`✅ Object match found: ${objectId} (name: \"${object.name}\")`);\n      }\n    }\n    \n    return results;\n  }\n  \n  /**\n   * 複数オブジェクトから序数詞で選択\n   */\n  selectObjectFromMultiple(objects, originalCommand) {\n    // 序数詞パターンをチェック\n    const ordinalPatterns = [\n      /(\\d+)つ目の/, /(\\d+)番目の/, /(\\d+)個目の/,\n      /最初の|1つ目の|1番目の|1個目の/,\n      /最後の|最終の/,\n      /2つ目の|2番目の|2個目の/,\n      /3つ目の|3番目の|3個目の/\n    ];\n    \n    for (const pattern of ordinalPatterns) {\n      const match = originalCommand.match(pattern);\n      if (match) {\n        let index;\n        \n        if (match[1]) {\n          // 数字が見つかった場合\n          index = parseInt(match[1]) - 1; // 1ベースから0ベースに変換\n        } else {\n          // 特別な表現の場合\n          const matchedText = match[0];\n          if (matchedText.includes('最初') || matchedText.includes('1つ目') || \n              matchedText.includes('1番目') || matchedText.includes('1個目')) {\n            index = 0;\n          } else if (matchedText.includes('最後') || matchedText.includes('最終')) {\n            index = objects.length - 1;\n          } else if (matchedText.includes('2つ目') || matchedText.includes('2番目') || matchedText.includes('2個目')) {\n            index = 1;\n          } else if (matchedText.includes('3つ目') || matchedText.includes('3番目') || matchedText.includes('3個目')) {\n            index = 2;\n          }\n        }\n        \n        if (index >= 0 && index < objects.length) {\n          console.log(`🔢 Selected object by ordinal: index ${index + 1} of ${objects.length}`);\n          return objects[index];\n        } else {\n          console.warn(`⚠️ Invalid ordinal index: ${index + 1} (available: 1-${objects.length})`);\n        }\n      }\n    }\n    \n    // 序数詞が見つからない場合はデフォルトで最初のオブジェクト\n    console.log(`🔢 No ordinal specified, using first object`);\n    return objects[0];\n  }\n\n  /**\n   * オブジェクト変更実行\n   */\n  async executeObjectModification(parsed) {\n    // コマンドから対象オブジェクトを特定\n    let targetObject = this.findObjectByKeyword(parsed.command);\n    \n    // キーワードで見つからない場合、選択されたオブジェクトを使用\n    if (!targetObject) {\n      if (!this.selectedObject) {\n        return { \n          success: false, \n          message: 'オブジェクトを選択するか、対象を指定してください（例：「猫を赤くして」）' \n        };\n      }\n      targetObject = this.selectedObject;\n    } else {\n      // キーワードで見つけたオブジェクトを選択状態にする\n      this.selectObject(targetObject);\n\n      // オブジェクト認識成功のフィードバックエフェクト\n      this.applyRecognitionFeedback(targetObject);\n    }\n    console.log(`🔧 Modifying object: ${targetObject.name}`);\n    console.log(`🔍 Debug - parsed.movement:`, parsed.movement);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        // テクスチャがある場合は色調変更\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Texture color tint changed to: #${parsed.color.toString(16)}`);\n      } else {\n        // テクスチャがない場合は直接色変更\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Material color changed to: #${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n\n    // Phase 2: エフェクト適用\n    if (parsed.effects && parsed.effects.length > 0) {\n      const effectsApplied = this.applyEffects(targetObject, parsed.effects);\n      if (effectsApplied) {\n        modified = true;\n      }\n    }\n    \n    // サイズ変更\n    if (parsed.scale !== null) {\n      const currentScale = targetObject.scale.x; // 現在のスケール取得\n      const newScale = currentScale * parsed.scale;\n      targetObject.scale.setScalar(newScale);\n      console.log(`📏 Scale changed from ${currentScale} to ${newScale}`);\n      modified = true;\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      // 現在位置から相対移動\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y,\n        z: currentPos.z + parsed.movement.z\n      };\n\n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n\n    // 回転\n    if (parsed.rotation !== null) {\n      const currentRotation = targetObject.rotation.y;\n      const newRotation = currentRotation + parsed.rotation;\n      targetObject.rotation.y = newRotation;\n      const degrees = (parsed.rotation * 180 / Math.PI).toFixed(1);\n      console.log(`🔄 Rotation changed by ${degrees}° (new Y rotation: ${(newRotation * 180 / Math.PI).toFixed(1)}°)`);\n      modified = true;\n    }\n\n    // 透明度\n    if (parsed.opacity !== null && targetObject.material) {\n      const currentOpacity = targetObject.material.opacity || 1.0;\n      targetObject.material.opacity = parsed.opacity;\n      targetObject.material.transparent = parsed.opacity < 1.0;\n      console.log(`🔍 Opacity changed from ${currentOpacity.toFixed(2)} to ${parsed.opacity.toFixed(2)}`);\n      modified = true;\n    }\n\n    // 左右反転\n    if (parsed.flip) {\n      const currentScaleX = targetObject.scale.x;\n      targetObject.scale.x = -currentScaleX; // X軸を反転\n      console.log(`↔️ Object flipped horizontally (scale.x: ${currentScaleX} → ${targetObject.scale.x})`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        scale: parsed.scale,\n        movement: parsed.movement,\n        rotation: parsed.rotation,\n        opacity: parsed.opacity,\n        command: parsed.command\n      });\n      \n      return { \n        success: true, \n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          scale: parsed.scale,\n          movement: parsed.movement,\n          rotation: parsed.rotation,\n          opacity: parsed.opacity\n        }\n      };\n    } else {\n      return { \n        success: false, \n        message: '変更可能な属性が見つかりませんでした' \n      };\n    }\n  }\n\n  /**\n   * 削除実行\n   */\n  async executeDelete(parsed) {\n    // コマンドの安全性チェック\n    const command = parsed.command || '';\n    \n    // 「すべて」削除の場合\n    if (parsed.target === 'all' || command.includes('すべて') || command.includes('全部')) {\n      this.clearAll();\n      return { success: true, message: 'すべてのオブジェクトを削除しました' };\n    }\n    \n    // まずコマンドから対象オブジェクトを特定\n    const targetByKeyword = this.findObjectByKeyword(command);\n    \n    // 削除対象の優先順位：\n    // 1. コマンドで指定されたオブジェクト\n    // 2. 選択されているオブジェクト\n    // 3. コマンドが単に「削除」だけの場合は選択オブジェクトを優先\n    \n    let targetObject = null;\n    let deleteReason = '';\n    \n    // コマンドが単純な削除コマンドか判定\n    const isSimpleDeleteCommand = command.match(/^(削除|消して|消す|delete|remove)$/i);\n    \n    if (isSimpleDeleteCommand && this.selectedObject) {\n      // 単純な「削除」コマンドで選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    } else if (targetByKeyword) {\n      // キーワードで特定できた場合\n      targetObject = targetByKeyword;\n      deleteReason = 'コマンドで指定されたオブジェクト';\n    } else if (this.selectedObject) {\n      // その他の場合で選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    }\n    \n    if (targetObject) {\n      const objectId = targetObject.name;\n      console.log(`🗑️ Deleting ${deleteReason}: ${objectId}`);\n      \n      // 選択状態を解除\n      if (targetObject === this.selectedObject) {\n        this.deselectObject();\n      }\n      \n      // オブジェクトを削除\n      const success = this.removeObject(objectId);\n      \n      if (success) {\n        return { \n          success: true, \n          message: `${deleteReason}「${objectId}」を削除しました`,\n          deletedObjectId: objectId\n        };\n      } else {\n        return { \n          success: false, \n          message: 'オブジェクトの削除に失敗しました' \n        };\n      }\n    }\n    \n    return { \n      success: false, \n      message: '削除対象が見つかりませんでした。オブジェクトを選択するか、対象を指定してください' \n    };\n  }\n\n  async executeFileImport(parsed) {\n    try {\n      console.log('🍫 Starting file import process...');\n      \n      // ファイル選択ダイアログを表示\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.style.display = 'none';\n      \n      if (parsed.fileType === 'video') {\n        input.accept = 'video/*';\n      } else {\n        input.accept = 'image/*';\n      }\n      \n      document.body.appendChild(input);\n      \n      return new Promise((resolve, reject) => {\n        input.onchange = async (event) => {\n          try {\n            const file = event.target.files[0];\n            if (!file) {\n              reject(new Error('ファイルが選択されませんでした'));\n              return;\n            }\n            \n            console.log(`📁 Selected file: ${file.name}`);\n            \n            // ファイルのObjectURLを作成\n            const fileUrl = URL.createObjectURL(file);\n            \n            let result;\n            if (parsed.fileType === 'video' || file.type.startsWith('video/')) {\n              result = await this.loadVideoFile(fileUrl, { position: parsed.position });\n            } else {\n              result = await this.loadImageFile(fileUrl, { position: parsed.position });\n            }\n            \n            console.log('✅ File import completed:', result);\n            resolve(result);\n            \n          } catch (error) {\n            console.error('❌ File import failed:', error);\n            reject(error);\n          } finally {\n            document.body.removeChild(input);\n          }\n        };\n        \n        input.oncancel = () => {\n          document.body.removeChild(input);\n          reject(new Error('ファイル選択がキャンセルされました'));\n        };\n        \n        input.click();\n      });\n      \n    } catch (error) {\n      console.error('❌ File import execution failed:', error);\n      throw error;\n    }\n  }\n\n  async executeObjectSelection(parsed) {\n    try {\n      console.log('🎯 Starting object selection...');\n      \n      const objects = this.getSpawnedObjects();\n      if (objects.length === 0) {\n        throw new Error('選択可能なオブジェクトがありません。まずファイルをインポートしてください。');\n      }\n      \n      console.log(`📋 Available objects: ${objects.length}`);\n      \n      // オブジェクト選択UIを作成\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.8);\n        z-index: 10000;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;\n      \n      const container = document.createElement('div');\n      container.style.cssText = `\n        background: #1a1a2e;\n        border-radius: 12px;\n        padding: 24px;\n        max-width: 500px;\n        max-height: 70vh;\n        overflow-y: auto;\n        color: white;\n        font-family: Arial, sans-serif;\n      `;\n      \n      const title = document.createElement('h3');\n      title.textContent = '🎯 オブジェクトを選択してください';\n      title.style.cssText = 'margin: 0 0 16px 0; color: #ec4899;';\n      container.appendChild(title);\n      \n      const objectList = document.createElement('div');\n      objectList.style.cssText = 'margin-bottom: 16px;';\n      \n      objects.forEach((obj, index) => {\n        const item = document.createElement('div');\n        item.style.cssText = `\n          padding: 12px;\n          margin: 8px 0;\n          background: #2a2a3e;\n          border-radius: 8px;\n          cursor: pointer;\n          border: 2px solid transparent;\n          transition: all 0.3s ease;\n        `;\n        \n        const name = obj.userData?.type === 'generated_image' ? '🖼️ 画像' : \n                     obj.userData?.type === 'generated_video' ? '🎬 動画' : '📄 ファイル';\n        const time = new Date(obj.userData?.createdAt).toLocaleTimeString();\n        \n        item.innerHTML = `\n          <div style=\"font-weight: bold;\">${name} #${index + 1}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">作成: ${time}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">位置: (${Math.round(obj.position.x)}, ${Math.round(obj.position.y)}, ${Math.round(obj.position.z)})</div>\n        `;\n        \n        item.onmouseover = () => {\n          item.style.borderColor = '#ec4899';\n          item.style.background = '#3a3a4e';\n        };\n        \n        item.onmouseout = () => {\n          item.style.borderColor = 'transparent';\n          item.style.background = '#2a2a3e';\n        };\n        \n        item.onclick = () => {\n          resolve({ selectedObjectId: obj.id, selectedObject: obj });\n          document.body.removeChild(modal);\n        };\n        \n        objectList.appendChild(item);\n      });\n      \n      container.appendChild(objectList);\n      \n      const cancelBtn = document.createElement('button');\n      cancelBtn.textContent = 'キャンセル';\n      cancelBtn.style.cssText = `\n        background: #666;\n        color: white;\n        border: none;\n        padding: 8px 16px;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 14px;\n      `;\n      \n      cancelBtn.onclick = () => {\n        document.body.removeChild(modal);\n        reject(new Error('オブジェクト選択がキャンセルされました'));\n      };\n      \n      container.appendChild(cancelBtn);\n      modal.appendChild(container);\n      document.body.appendChild(modal);\n      \n      return new Promise((resolve, reject) => {\n        // Promise handlers are set up in the click events above\n      });\n      \n    } catch (error) {\n      console.error('❌ Object selection failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * フォールバック用のテクスチャ作成\n   */\n  createFallbackTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // グラデーション背景\n    const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n    gradient.addColorStop(0, `hsl(${hue}, 70%, 60%)`);\n    gradient.addColorStop(1, `hsl(${(hue + 60) % 360}, 70%, 40%)`);\n    \n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 512, 512);\n    \n    // テキスト描画\n    ctx.fillStyle = 'white';\n    ctx.font = '24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🎨', 256, 230);\n    \n    ctx.font = '16px Arial';\n    ctx.fillText(prompt.slice(0, 20), 256, 270);\n    \n    ctx.font = '14px Arial';\n    ctx.fillStyle = 'rgba(255,255,255,0.7)';\n    ctx.fillText('Placeholder Image', 256, 300);\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * フォールバック用の動画テクスチャ作成\n   */\n  createFallbackVideoTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // アニメーション用の変数\n    let animationFrame = 0;\n    \n    const animate = () => {\n      // グラデーション背景（時間で変化）\n      const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n      const offset = (animationFrame * 2) % 360;\n      gradient.addColorStop(0, `hsl(${(hue + offset) % 360}, 70%, 60%)`);\n      gradient.addColorStop(1, `hsl(${(hue + offset + 60) % 360}, 70%, 40%)`);\n      \n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, 512, 512);\n      \n      // 動的テキスト描画\n      ctx.fillStyle = 'white';\n      ctx.font = '24px Arial';\n      ctx.textAlign = 'center';\n      \n      // 動画アイコンをアニメーション\n      const icons = ['🎬', '🎥', '📹', '🎞️'];\n      const iconIndex = Math.floor(animationFrame / 10) % icons.length;\n      ctx.fillText(icons[iconIndex], 256, 230);\n      \n      ctx.font = '16px Arial';\n      ctx.fillText(prompt.slice(0, 20), 256, 270);\n      \n      ctx.font = '14px Arial';\n      ctx.fillStyle = 'rgba(255,255,255,0.7)';\n      ctx.fillText('Placeholder Video', 256, 300);\n      \n      animationFrame++;\n      \n      // 60FPSでアニメーション\n      setTimeout(() => requestAnimationFrame(animate), 1000/60);\n    };\n    \n    // アニメーション開始\n    animate();\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * 文字列のハッシュ値を計算\n   */\n  hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // 32bit整数に変換\n    }\n    return Math.abs(hash);\n  }\n\n  /**\n   * 生成されたオブジェクト一覧取得\n   */\n  getSpawnedObjects() {\n    return Array.from(this.spawnedObjects.entries()).map(([id, object]) => ({\n      id,\n      name: object.name,\n      userData: object.userData,\n      position: object.position.clone()\n    }));\n  }\n\n  /**\n   * オブジェクト削除\n   */\n  removeObject(objectId) {\n    const object = this.spawnedObjects.get(objectId);\n    if (object) {\n      if (object.userData?.videoElement) {\n        const videoElement = object.userData.videoElement;\n        try {\n          videoElement.pause();\n          if (typeof videoElement.removeAttribute === 'function') {\n            videoElement.removeAttribute('src');\n          } else {\n            videoElement.src = '';\n          }\n          if (typeof videoElement.load === 'function') {\n            videoElement.load();\n          }\n        } catch (error) {\n          console.warn('🎬 Failed to release video element resources:', error);\n        }\n      }\n\n      if (object.userData?.objectUrl) {\n        try {\n          URL.revokeObjectURL(object.userData.objectUrl);\n        } catch (error) {\n          console.warn('🎬 Failed to revoke object URL:', error);\n        }\n      }\n\n      if (object.userData?.cleanupCallbacks) {\n        try {\n          object.userData.cleanupCallbacks.forEach(cb => {\n            if (typeof cb === 'function') cb();\n          });\n        } catch (error) {\n          console.warn('🧹 Cleanup callbacks failed:', error);\n        }\n      }\n\n      this.experimentGroup.remove(object);\n      this.spawnedObjects.delete(objectId);\n      \n      // ジオメトリとマテリアルのメモリ解放\n      if (object.geometry) object.geometry.dispose();\n      if (object.material) {\n        const materials = Array.isArray(object.material) ? object.material : [object.material];\n        materials.forEach(mat => {\n          if (mat.map && typeof mat.map.dispose === 'function') {\n            mat.map.dispose();\n          }\n          mat.dispose();\n        });\n      }\n      \n      console.log(`🗑️ Removed object: ${objectId}`);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    const objectIds = Array.from(this.spawnedObjects.keys());\n    objectIds.forEach(id => this.removeObject(id));\n    console.log('🧹 Cleared all experimental objects');\n  }\n\n  /**\n   * コマンド履歴取得\n   */\n  getCommandHistory() {\n    return [...this.commandHistory];\n  }\n\n  /**\n   * 生成位置に一時的な視覚インジケーターを表示\n   */\n  createLocationIndicator(relativePosition) {\n    // 目立つ光る球体を作成\n    const geometry = new THREE.SphereGeometry(1, 16, 16);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00,\n      transparent: true,\n      opacity: 0.9\n    });\n    \n    const indicator = new THREE.Mesh(geometry, material);\n    \n    // カメラ相対位置でインジケーターも配置\n    if (this.camera) {\n      const indicatorPos = this.calculateCameraRelativePosition({\n        x: relativePosition.x,\n        y: relativePosition.y + 2, // オブジェクトの少し上に表示\n        z: relativePosition.z\n      });\n      indicator.position.copy(indicatorPos);\n    } else {\n      indicator.position.set(relativePosition.x, relativePosition.y + 2, relativePosition.z);\n    }\n    \n    console.log(`🟢 インジケーター表示: (${indicator.position.x.toFixed(1)}, ${indicator.position.y.toFixed(1)}, ${indicator.position.z.toFixed(1)})`);\n    \n    this.scene.add(indicator);\n    \n    // 設定された時間後に自動削除\n    setTimeout(() => {\n      this.scene.remove(indicator);\n      geometry.dispose();\n      material.dispose();\n    }, this.config.indicatorDuration);\n    \n    // アニメーション（点滅効果）\n    let opacity = 0.8;\n    let direction = -1;\n    const animate = () => {\n      opacity += direction * 0.05;\n      if (opacity <= 0.3) direction = 1;\n      if (opacity >= 0.8) direction = -1;\n      \n      material.opacity = opacity;\n      \n      if (indicator.parent) {\n        requestAnimationFrame(animate);\n      }\n    };\n    animate();\n  }\n\n  /**\n   * カメラ相対位置計算（画面座標対応）\n   */\n  calculateCameraRelativePosition(relativePosition) {\n    if (!this.camera) {\n      if (this.config.enableDebugLogging) {\n        console.warn('📷 Camera not available, using fallback positioning');\n      }\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n\n    try {\n      // カメラの位置と方向を取得\n      const cameraPos = this.camera.position.clone();\n      const cameraDirection = new THREE.Vector3();\n      this.camera.getWorldDirection(cameraDirection);\n      \n      // カメラの右方向と上方向を計算\n      const cameraRight = new THREE.Vector3();\n      const cameraUp = new THREE.Vector3(0, 1, 0); // ワールドの上方向\n      cameraRight.crossVectors(cameraDirection, cameraUp).normalize();\n      const cameraUpActual = new THREE.Vector3();\n      cameraUpActual.crossVectors(cameraRight, cameraDirection).normalize();\n\n      // 相対位置をカメラ座標系で計算\n      const finalPosition = cameraPos.clone();\n      \n      // 前後方向（Z軸）: カメラの向きに沿って（正の値で前方、負の値で後方）\n      finalPosition.add(cameraDirection.clone().multiplyScalar(relativePosition.z));\n      \n      // 左右方向（X軸）: カメラの右方向に沿って\n      finalPosition.add(cameraRight.clone().multiplyScalar(relativePosition.x));\n      \n      // 上下方向（Y軸）: カメラの上方向に沿って\n      finalPosition.add(cameraUpActual.clone().multiplyScalar(relativePosition.y));\n\n      this.logDebug(\n        `📍 Camera relative position calculated: (${finalPosition.x.toFixed(1)}, ${finalPosition.y.toFixed(1)}, ${finalPosition.z.toFixed(1)})`\n      );\n      return finalPosition;\n      \n    } catch (error) {\n      console.error('❌ Camera relative position calculation failed:', error);\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n  }\n\n  /**\n   * カメラを設定\n   */\n  alignPlaneToCamera(plane) {\n    if (!this.camera) {\n      return;\n    }\n\n    const forward = new THREE.Vector3();\n    this.camera.getWorldDirection(forward); // カメラの前方向（前方が負Z）\n    forward.negate(); // 平面の法線をカメラ側へ向ける\n\n    let up = new THREE.Vector3().copy(this.camera.up).applyQuaternion(this.camera.quaternion).normalize();\n    if (Math.abs(forward.dot(up)) > 0.999) {\n      up = new THREE.Vector3(0, 1, 0);\n      if (Math.abs(forward.dot(up)) > 0.999) {\n        up = new THREE.Vector3(0, 0, 1);\n      }\n    }\n\n    const right = new THREE.Vector3().crossVectors(up, forward).normalize();\n    up = new THREE.Vector3().crossVectors(forward, right).normalize();\n\n    const orientation = new THREE.Matrix4();\n    orientation.makeBasis(right, up, forward);\n    plane.quaternion.setFromRotationMatrix(orientation);\n  }\n\n  /**\n   * カメラを設定\n   */\n  setCamera(camera) {\n    this.camera = camera;\n  }\n\n  /**\n   * 設定を更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  setImageService(serviceId) {\n    this.selectedImageService = serviceId || null;\n    this.logDebug('🎯 Updated image service:', this.selectedImageService);\n  }\n\n  getImageService() {\n    return this.selectedImageService;\n  }\n\n  setVideoService(serviceId) {\n    this.selectedVideoService = serviceId || null;\n    this.logDebug('🎬 Updated video service:', this.selectedVideoService);\n  }\n\n  getVideoService() {\n    return this.selectedVideoService;\n  }\n\n\n\n\n\n  /**\n   * 音声制御UIを作成\n   */\n  createAudioControl(videoObject) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    // 音声制御ボタンを作成\n    const audioButton = document.createElement('div');\n    audioButton.className = 'chocodrop-audio-control';\n    audioButton.innerHTML = '♪'; // 初期状態：音楽記号\n    // カスタムツールチップを作成（プロジェクトのデザインシステムに合わせて）\n    const createTooltip = () => {\n      const tooltip = document.createElement('div');\n      tooltip.className = 'chocodrop-audio-tooltip';\n      tooltip.textContent = '音声のオン/オフ切り替え';\n      tooltip.style.cssText = `\n        position: absolute !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 8px !important;\n        padding: 8px 12px !important;\n        color: white !important;\n        font-size: 11px !important;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n        font-weight: 500 !important;\n        white-space: nowrap !important;\n        pointer-events: none !important;\n        z-index: 1000000 !important;\n        opacity: 0 !important;\n        transform: translateY(-100%) translateX(-50%) !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        margin-bottom: 8px !important;\n      `;\n      return tooltip;\n    };\n\n    const tooltip = createTooltip();\n    document.body.appendChild(tooltip);\n\n    // 縦型音量スライダーを作成\n    const createVolumeSlider = () => {\n      const sliderContainer = document.createElement('div');\n      sliderContainer.className = 'chocodrop-volume-slider';\n      sliderContainer.style.cssText = `\n        position: absolute !important;\n        width: 30px !important;\n        height: 100px !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 15px !important;\n        padding: 10px 8px !important;\n        z-index: 1000001 !important;\n        opacity: 0 !important;\n        pointer-events: none !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        display: flex !important;\n        flex-direction: column !important;\n        align-items: center !important;\n        justify-content: center !important;\n      `;\n\n      const slider = document.createElement('input');\n      slider.type = 'range';\n      slider.min = '0';\n      slider.max = '100';\n      slider.value = '100';\n      slider.style.cssText = `\n        width: 80px !important;\n        height: 12px !important;\n        background: rgba(255, 255, 255, 0.2) !important;\n        border-radius: 6px !important;\n        outline: none !important;\n        cursor: pointer !important;\n        -webkit-appearance: none !important;\n        appearance: none !important;\n        transform: rotate(-90deg) !important;\n        transform-origin: center !important;\n      `;\n\n      // WebKit用のスライダースタイル\n      const style = document.createElement('style');\n      style.textContent = `\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n          border: none;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-thumb {\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          border: none;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n      `;\n      document.head.appendChild(style);\n\n      // スライダーのスタイルをカスタマイズ\n      slider.addEventListener('input', (e) => {\n        const value = e.target.value;\n        videoElement.volume = value / 100;\n\n        // アイコンを音量に応じて変更\n        if (value == 0) {\n          audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n          audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n          audioButton.title = 'ミュート中';\n        } else {\n          audioButton.innerHTML = '♪';\n          audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n          audioButton.style.color = 'white !important';\n          audioButton.title = '音声ON';\n        }\n      });\n\n      sliderContainer.appendChild(slider);\n      return sliderContainer;\n    };\n\n    const volumeSlider = createVolumeSlider();\n    document.body.appendChild(volumeSlider);\n\n    audioButton.style.cssText = `\n      position: absolute !important;\n      width: 18px !important;\n      height: 18px !important;\n      background: rgba(0, 0, 0, 0.4) !important;\n      border: 1px solid rgba(255, 255, 255, 0.3) !important;\n      border-radius: 50% !important;\n      color: white !important;\n      font-size: 9px !important;\n      cursor: pointer !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      z-index: 999999 !important;\n      transition: all 0.2s ease !important;\n      user-select: none !important;\n      box-shadow: 0 1px 4px rgba(0,0,0,0.2) !important;\n      backdrop-filter: blur(8px) !important;\n      pointer-events: auto !important;\n      opacity: 1 !important;\n    `;\n\n    let isSliderVisible = false;\n\n    // ホバー効果とスライダー表示\n    audioButton.addEventListener('mouseenter', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.7)';\n      audioButton.style.transform = 'scale(1.05)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.5)';\n\n      if (!isSliderVisible) {\n        // ツールチップを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        tooltip.style.left = `${buttonRect.left + buttonRect.width / 2}px`;\n        tooltip.style.top = `${buttonRect.top - 8}px`;\n        tooltip.style.opacity = '1';\n      }\n    });\n\n    audioButton.addEventListener('mouseleave', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.5)';\n      audioButton.style.transform = 'scale(1.0)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n\n      // ツールチップを非表示\n      tooltip.style.opacity = '0';\n    });\n\n    // 左クリック：ミュートのオン/オフ切り替え\n    audioButton.addEventListener('click', (e) => {\n      e.stopPropagation();\n\n      // スライダーが表示されている場合は閉じる\n      if (isSliderVisible) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n        return;\n      }\n\n      // ミュート切り替え\n      if (videoElement.muted || videoElement.volume === 0) {\n        videoElement.muted = false;\n        videoElement.volume = volumeSlider.querySelector('input').value / 100;\n        audioButton.innerHTML = '♪';\n        audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n        audioButton.style.color = 'white !important';\n        audioButton.title = '音声ON';\n      } else {\n        videoElement.muted = true;\n        audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n        audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n        audioButton.title = 'ミュート中';\n      }\n    });\n\n    // 右クリック：音量スライダーの表示/非表示切り替え\n    audioButton.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      isSliderVisible = !isSliderVisible;\n\n      if (isSliderVisible) {\n        // スライダーを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        volumeSlider.style.left = `${buttonRect.left + buttonRect.width / 2 - 15}px`;\n        volumeSlider.style.top = `${buttonRect.top - 110}px`;\n        volumeSlider.style.opacity = '1';\n        volumeSlider.style.pointerEvents = 'auto';\n\n        // ツールチップを非表示\n        tooltip.style.opacity = '0';\n      } else {\n        // スライダーを非表示\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // 外側クリックでスライダーを閉じる\n    document.addEventListener('click', (e) => {\n      if (isSliderVisible && !audioButton.contains(e.target) && !volumeSlider.contains(e.target)) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // ページに追加\n    document.body.appendChild(audioButton);\n\n    // 動画オブジェクトに音声制御ボタンを関連付け\n    videoObject.userData.audioControlElement = audioButton;\n\n    // 位置更新関数を保存\n    videoObject.userData.updateAudioControlPosition = () => {\n      this.updateAudioControlPosition(videoObject, audioButton);\n    };\n\n    // 初期位置設定\n    this.updateAudioControlPosition(videoObject, audioButton);\n\n    // 管理マップに登録\n    this.audioControls.set(videoObject.uuid, {\n      audioButton,\n      tooltip,\n      volumeSlider,\n      isSliderVisible: () => isSliderVisible,\n      hideSlider: () => {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // スクロール・リサイズで追随\n    if (!this.audioControlUpdateListener) {\n      this.audioControlUpdateListener = () => {\n        this.updateAllAudioControlPositions();\n      };\n      window.addEventListener('scroll', this.audioControlUpdateListener, { passive: true });\n      window.addEventListener('resize', this.audioControlUpdateListener, { passive: true });\n    }\n\n    if (!this.audioControlUpdateInterval) {\n      this.audioControlUpdateInterval = setInterval(() => {\n        this.updateAllAudioControlPositions();\n      }, 100);\n    }\n\n    const cleanup = () => {\n      document.removeEventListener('click', onDocumentClick, true);\n      if (audioButton.parentNode) audioButton.parentNode.removeChild(audioButton);\n      if (tooltip.parentNode) tooltip.parentNode.removeChild(tooltip);\n      if (volumeSlider.parentNode) volumeSlider.parentNode.removeChild(volumeSlider);\n      this.audioControls.delete(videoObject.uuid);\n\n      if (this.audioControls.size === 0) {\n        if (this.audioControlUpdateInterval) {\n          clearInterval(this.audioControlUpdateInterval);\n          this.audioControlUpdateInterval = null;\n        }\n        if (this.audioControlUpdateListener) {\n          window.removeEventListener('scroll', this.audioControlUpdateListener);\n          window.removeEventListener('resize', this.audioControlUpdateListener);\n          this.audioControlUpdateListener = null;\n        }\n      }\n    };\n\n    const onDocumentClick = (e) => {\n      if (isSliderVisible && !audioButton.contains(e.target) && !volumeSlider.contains(e.target)) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    };\n\n    document.addEventListener('click', onDocumentClick, true);\n\n    videoObject.userData.cleanupCallbacks = videoObject.userData.cleanupCallbacks || [];\n    videoObject.userData.cleanupCallbacks.push(cleanup);\n\n    console.log('🔊 Audio control created for video:', videoObject.userData.id);\n  }\n\n  /**\n   * 音声制御ボタンの位置を動画オブジェクトに合わせて更新\n   */\n  updateAudioControlPosition(videoObject, audioButton) {\n    if (!this.camera || !this.renderer || !audioButton.parentNode) return;\n\n    // 動画オブジェクトの3D座標を画面座標に変換\n    const vector = new THREE.Vector3();\n    videoObject.getWorldPosition(vector);\n    vector.project(this.camera);\n\n    // 画面座標に変換\n    const canvas = this.renderer.domElement;\n    const rect = canvas.getBoundingClientRect();\n\n    const x = (vector.x * 0.5 + 0.5) * rect.width + rect.left;\n    const y = -(vector.y * 0.5 - 0.5) * rect.height + rect.top;\n\n    // 動画オブジェクトの右上にボタンを配置\n    const geometry = videoObject.geometry;\n    if (geometry && geometry.parameters) {\n      const width = geometry.parameters.width * videoObject.scale.x;\n      const offsetX = 150; // 動画の右側に固定距離\n      const offsetY = -50; // 動画の上側に固定距離\n\n      audioButton.style.left = `${x + offsetX}px`;\n      audioButton.style.top = `${y + offsetY}px`;\n    } else {\n      // フォールバック: 動画中心の右上\n      audioButton.style.left = `${x + 50}px`;\n      audioButton.style.top = `${y - 20}px`;\n    }\n  }\n\n  updateAllAudioControlPositions() {\n    if (!this.audioControls || this.audioControls.size === 0) {\n      return;\n    }\n\n    this.audioControls.forEach((_, uuid) => {\n      const obj = this.spawnedObjects.get(uuid);\n      if (obj && obj.userData && obj.userData.updateAudioControlPosition) {\n        obj.userData.updateAudioControlPosition();\n      }\n    });\n  }\n\n  /**\n   * 動画音声の再生/停止を切り替え\n   */\n  toggleVideoAudio(videoObject, audioButton) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    if (videoElement.muted) {\n      // ミュート解除：音声再生\n      videoElement.muted = false;\n      audioButton.innerHTML = '🔈'; // 音声再生中マーク\n      console.log('🔊 Audio enabled for video:', videoObject.userData.id);\n    } else {\n      // ミュート：音声停止\n      videoElement.muted = true;\n      audioButton.innerHTML = '🔊'; // 音声ありマーク\n      console.log('🔇 Audio muted for video:', videoObject.userData.id);\n    }\n  }\n\n  /**\n   * CSS2DRenderer初期化（音声制御UIなどの表示に必要）\n   */\n  initializeLabelRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に初期化済み\n    }\n\n    // CSS2DRendererを動的に読み込んで初期化\n    this.loadAndInitializeCSS2DRenderer();\n  }\n\n  /**\n   * CSS2DRendererの準備完了を保証\n   */\n  async ensureCSS2DRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に準備完了\n    }\n\n    // 初期化処理がまだの場合は開始\n    if (!this.css2dInitPromise) {\n      this.css2dInitPromise = this.loadAndInitializeCSS2DRenderer();\n    }\n\n    // 初期化完了まで待機\n    await this.css2dInitPromise;\n  }\n\n  /**\n   * CSS2DRendererの動的読み込みと初期化\n   */\n  async loadAndInitializeCSS2DRenderer() {\n    try {\n      // CSS2DRendererが既に利用可能な場合\n      if (window.THREE && window.THREE.CSS2DRenderer) {\n        this.setupCSS2DRenderer();\n        return;\n      }\n\n      // Three.jsのCSS2DRendererを動的に読み込み\n      console.log('🏷️ Loading CSS2DRenderer dynamically...');\n\n      // CDNからCSS2DRendererを読み込み\n      const module = await import('https://cdn.skypack.dev/three@0.158.0/examples/jsm/renderers/CSS2DRenderer.js');\n\n      // グローバルに設定\n      if (!window.THREE) window.THREE = {};\n      window.THREE.CSS2DRenderer = module.CSS2DRenderer;\n      window.THREE.CSS2DObject = module.CSS2DObject;\n\n      console.log('✅ CSS2DRenderer loaded successfully');\n      this.setupCSS2DRenderer();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to load CSS2DRenderer:', error);\n      console.warn('🔧 Audio controls will not be visible. Please include CSS2DRenderer in your project.');\n    }\n  }\n\n  /**\n   * CSS2DRendererのセットアップ\n   */\n  setupCSS2DRenderer() {\n    try {\n      this.labelRenderer = new window.THREE.CSS2DRenderer();\n      this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n      this.labelRenderer.domElement.style.position = 'absolute';\n      this.labelRenderer.domElement.style.top = '0px';\n      this.labelRenderer.domElement.style.pointerEvents = 'none';\n\n      // メインレンダラーのコンテナに追加\n      if (this.renderer && this.renderer.domElement.parentNode) {\n        this.renderer.domElement.parentNode.appendChild(this.labelRenderer.domElement);\n      } else {\n        document.body.appendChild(this.labelRenderer.domElement);\n      }\n\n      console.log('🏷️ CSS2DRenderer initialized for UI overlays');\n\n      // リサイズハンドラーを追加\n      this.addLabelRendererResizeHandler();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to setup CSS2DRenderer:', error);\n    }\n  }\n\n  /**\n   * CSS2DRendererのリサイズハンドラー追加\n   */\n  addLabelRendererResizeHandler() {\n    if (!this.labelRendererResizeHandler) {\n      this.labelRendererResizeHandler = () => {\n        if (this.labelRenderer) {\n          this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n        }\n      };\n      window.addEventListener('resize', this.labelRendererResizeHandler);\n    }\n  }\n\n  /**\n   * レンダリング更新（アニメーションループで呼び出し）\n   */\n  updateRenderer() {\n    if (this.labelRenderer && this.scene && this.camera) {\n      this.labelRenderer.render(this.scene, this.camera);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * 2025年トレンド: アダプティブ選択インジケーター色計算\n   * 背景色を自動検出してWCAG 2025基準のコントラスト比を保証\n   */\n  getAdaptiveSelectionColor() {\n    // シーンの背景色を取得\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 }; // デフォルト中間色\n    \n    if (backgroundColor) {\n      if (backgroundColor.isColor) {\n        bgColor = {\n          r: backgroundColor.r,\n          g: backgroundColor.g,\n          b: backgroundColor.b\n        };\n      }\n    }\n    \n    // 明度計算（相対輝度）\n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    // WCAG 2025準拠: 4.5:1以上のコントラスト比を確保\n    // 背景が暗い場合は明るい色、明るい場合は暗い色を選択\n    if (bgLuminance < 0.5) {\n      // 暗い背景: 明るいアクセント色\n      return 0x00ff88; // 明るいティール\n    } else {\n      // 明るい背景: 暗いアクセント色  \n      return 0x1a1a2e; // ダークネイビー\n    }\n  }\n  \n  /**\n   * アダプティブホバー色計算\n   */\n  getAdaptiveHoverColor() {\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 };\n    \n    if (backgroundColor && backgroundColor.isColor) {\n      bgColor = {\n        r: backgroundColor.r,\n        g: backgroundColor.g,\n        b: backgroundColor.b\n      };\n    }\n    \n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    if (bgLuminance < 0.5) {\n      // 暗い背景: より明るいホバー色\n      return 0x00ffff; // シアン\n    } else {\n      // 明るい背景: より暗いホバー色\n      return 0xff3366; // ダークピンク\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  dispose() {\n    this.clearAll();\n    if (this.experimentGroup.parent) {\n      this.experimentGroup.parent.remove(this.experimentGroup);\n    }\n  }\n}\n","const IMAGE_SERVICE_STORAGE_KEY = 'chocodrop-service-image';\nconst VIDEO_SERVICE_STORAGE_KEY = 'chocodrop-service-video';\nconst KEYWORD_HIGHLIGHT_COLOR = '#ff6ad5';\n\n/**\n * Command UI - Web interface for ChocoDrop System\n * Real-time natural language command interface for 3D scenes\n */\nexport class CommandUI {\n  constructor(options = {}) {\n    this.sceneManager = options.sceneManager || null;\n    this.client = options.client || null;\n    this.onControlsToggle = options.onControlsToggle || (() => {});\n    \n    this.isVisible = false;\n    this.container = null;\n    this.input = null;\n    this.output = null;\n    this.currentMode = 'generate';\n\n    // リアルタイム進捗管理\n    this.activeConnections = new Map();\n    this.currentTaskId = null;\n    \n    // 設定\n    this.config = {\n      activationKey: options.activationKey || '@',\n      position: options.position || 'bottom-right',\n      width: options.width || 450,\n      maxHeight: options.maxHeight || 600,\n      theme: options.theme || 'dark',\n      showExamples: options.showExamples !== false,\n      autoScroll: options.autoScroll !== false,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n\n    this.availableImageServices = [];\n    this.availableVideoServices = [];\n    this.selectedImageService = null;\n    this.selectedVideoService = null;\n    this.highlightOverlay = null;\n    this.inputDefaultStyles = null;\n    this.imageServiceSelect = null;\n    this.videoServiceSelect = null;\n    this.serviceSelectorContainer = null;\n    this.serviceSelectorStatus = null;\n    this.serviceSelectorContent = null;\n    this.serviceSelectorRetryButton = null;\n    this.serviceSelectorSaveButton = null;\n    this.serviceSelectorCancelButton = null;\n    this.serviceModalOverlay = null;\n    this.serviceModal = null;\n    this.servicesLoading = false;\n    this.isExpanded = false;\n    this.overlayTextarea = null;\n    this.pendingImageService = null;\n    this.pendingVideoService = null;\n    this.feedbackAutoClearTimer = null;\n    this.currentFeedback = null;\n\n    try {\n      const storedImage = localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY);\n      const storedVideo = localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY);\n      console.log('🔍 Debug localStorage read:', { storedImage, storedVideo, IMAGE_SERVICE_STORAGE_KEY, VIDEO_SERVICE_STORAGE_KEY });\n      if (storedImage) {\n        this.selectedImageService = storedImage;\n        console.log('✅ Set selectedImageService:', this.selectedImageService);\n      }\n      if (storedVideo) {\n        this.selectedVideoService = storedVideo;\n        console.log('✅ Set selectedVideoService:', this.selectedVideoService);\n      }\n      console.log('🔍 Final values:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    } catch (error) {\n      console.warn('⚠️ Failed to load stored service selections:', error);\n    }\n\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    this.applyServiceSelectionToSceneManager();\n    console.log('🔍 After applyServiceSelectionToSceneManager - UI:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    console.log('🔍 After applyServiceSelectionToSceneManager - SceneManager:', { selectedImageService: this.sceneManager?.selectedImageService, selectedVideoService: this.sceneManager?.selectedVideoService });\n\n    // テーマモード状態管理 (light, dark, wabisabi)\n    this.currentTheme = localStorage.getItem('live-command-theme') || 'light';\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    \n    // Undo/Redo システム\n    this.commandHistory = [];\n    this.currentHistoryIndex = -1;\n    this.maxHistorySize = 50; // 最大コマンド保存数\n    \n    this.initUI();\n    this.bindEvents();\n\n    if (!this.client && this.sceneManager && this.sceneManager.client) {\n      this.client = this.sceneManager.client;\n    }\n\n    this.createServiceModal();\n    this.createFloatingChocolateIcon();\n\n    // DOM読み込み完了後にスタイルを確実に適用\n    document.addEventListener('DOMContentLoaded', () => {\n      this.refreshStyles();\n    });\n\n    this.logDebug('🎮 CommandUI initialized');\n\n    if (!this.selectedImageService || !this.selectedVideoService) {\n      this.openServiceModal(true);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * UI要素の作成と配置\n   */\n  initUI() {\n    // メインコンテナ\n    this.container = document.createElement('div');\n    this.container.id = 'live-command-ui';\n    this.container.style.cssText = this.getContainerStyles();\n\n    // 2025年トレンド：Progressive Disclosure（ホバー時のみブランド表示）\n    const brandIndicator = document.createElement('div');\n    brandIndicator.className = 'progressive-brand-indicator';\n    brandIndicator.style.cssText = `\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;\n    \n    // Progressive Disclosure: ホバー/クリックでブランド名表示\n    const brandText = document.createElement('div');\n    brandText.className = 'progressive-brand-text';\n    brandText.style.cssText = `\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.25)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;\n    brandText.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">🍫</span> <span style=\"color: #6366f1;\">ChocoDrop</span>';\n    \n    // Progressive Disclosure イベント\n    brandIndicator.addEventListener('mouseenter', () => {\n      brandText.style.opacity = '1';\n      brandText.style.transform = 'translateY(0) scale(1)';\n      brandIndicator.style.transform = 'scale(1.2)';\n      brandIndicator.style.opacity = '1';\n    });\n    \n    brandIndicator.addEventListener('mouseleave', () => {\n      brandText.style.opacity = '0';\n      brandText.style.transform = 'translateY(5px) scale(0.9)';\n      brandIndicator.style.transform = 'scale(1)';\n      brandIndicator.style.opacity = '0.7';\n    });\n    \n    brandIndicator.appendChild(brandText);\n    this.container.appendChild(brandIndicator);\n\n    // 出力エリア（タスクカードコンテナ）- 非表示に変更\n    this.output = document.createElement('div');\n    this.outputDiv = this.output; // 両方の参照を保持（互換性のため）\n    this.output.id = 'command-output';\n    this.output.className = 'command-output';\n    this.output.style.cssText = this.getOutputStyles();\n    // フローティングカード用コンテナ\n    this.floatingContainer = document.createElement('div');\n    this.floatingContainer.id = 'floating-cards-container';\n    this.floatingContainer.style.cssText = `\n      position: fixed;\n      bottom: var(--floating-bottom, 120px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-start;\n    `;\n\n    // タスクカード管理用\n    this.taskCards = new Map();\n\n    // 入力フィールドラッパー（展開ボタン用）\n    this.inputWrapper = document.createElement('div');\n    this.inputWrapper.style.cssText = `\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;\n\n    // Ultra-Simple 単一入力フィールド（自動リサイズ対応）\n    this.input = document.createElement('textarea');\n    this.input.rows = 1;\n    this.input.id = 'command-input';\n    this.input.placeholder = '「右上にドラゴンを」「美しい桜の森を中央に」など... ✨';\n    this.input.style.cssText = this.getInputStyles();\n\n    // 展開ボタン（初期状態は非表示）\n    this.expandButton = document.createElement('div');\n    this.expandButton.innerHTML = '⤢';\n    this.expandButton.title = 'テキスト全体を表示';\n    this.expandButton.style.cssText = `\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n      border-radius: 6px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;\n\n    // 展開ボタンのホバー効果\n    this.expandButton.addEventListener('mouseenter', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      this.expandButton.style.transform = 'scale(1.1)';\n    });\n\n    this.expandButton.addEventListener('mouseleave', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      this.expandButton.style.transform = 'scale(1)';\n    });\n\n    // 展開ボタンのクリック処理\n    this.expandButton.addEventListener('click', () => {\n      if (this.isExpanded) {\n        this.hideOverlayTextarea();\n      } else {\n        this.showOverlayTextarea();\n      }\n    });\n\n    // ラッパーに要素を追加\n    this.inputWrapper.appendChild(this.input);\n    this.inputWrapper.appendChild(this.expandButton);\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合）\n\n    // ラジオボタン風モードセレクター\n    const modeSelector = this.createRadioModeSelector();\n\n    // ミニマルアクションボタン\n    const actionContainer = this.createMinimalActions();\n\n    // ×クローズボタンをフォーム右上に追加\n    const closeButton = document.createElement('div');\n    closeButton.innerHTML = '×';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;\n\n    closeButton.addEventListener('mouseover', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      closeButton.style.transform = 'scale(1.1)';\n    });\n\n    closeButton.addEventListener('mouseout', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.transform = 'scale(1)';\n    });\n\n    closeButton.addEventListener('click', () => {\n      this.hide();\n    });\n\n    // 組み立て（ヘッダー削除、ブランドバッジは既に追加済み）\n    // this.container.appendChild(this.output); // 大きなタスク表示エリアをDOMに追加しない\n    this.container.appendChild(closeButton);\n    this.container.appendChild(modeSelector);\n    this.container.appendChild(this.inputWrapper);\n    this.container.appendChild(actionContainer);\n\n    // フローティングカードコンテナをbodyに直接追加\n    document.body.appendChild(this.floatingContainer);\n\n    // DOM に追加\n    document.body.appendChild(this.container);\n\n    // 初回テーマ適用\n    this.applyTheme();\n\n    // 日本語IME対応のcomposition state管理\n    this.isComposing = false;\n    this.hasCompositionJustEnded = false;\n\n    // リアルタイム入力監視とコマンド検出（IME対応）\n    this.input.addEventListener('input', () => {\n      // IME入力中はコマンド検出を停止\n      if (this.isComposing) {\n        return;\n      }\n      \n      // フィードバック自動クリア（ユーザーが入力を修正している）\n      if (this.currentFeedback) {\n        this.clearInputFeedback();\n      }\n      \n      // 自動リサイズ処理\n      this.autoResizeTextarea();\n      \n      // キーワードハイライト適用\n      this.applyKeywordHighlighting();\n      \n      this.detectCommandType();\n    });\n    \n    // 日本語IME composition events\n    this.input.addEventListener('compositionstart', () => {\n      this.isComposing = true;\n    });\n    \n    this.input.addEventListener('compositionend', () => {\n      this.isComposing = false;\n      \n      // Safariのみフラグ設定（他のブラウザは不要）\n      const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n      if (isSafari) {\n        this.hasCompositionJustEnded = true;\n      }\n      \n      // 確定後のコマンド検出を実行\n      setTimeout(() => {\n        this.autoResizeTextarea();\n        this.detectCommandType();\n      }, 10);\n    });\n    \n    // Safari判定\n    const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n    \n    // 日本語IME対応Enterキー処理（Safari対応版）\n    this.input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        // Safari: compositionend直後のEnterをスキップ\n        if (isSafari && this.hasCompositionJustEnded) {\n          this.hasCompositionJustEnded = false;\n          return;\n        }\n        \n        // その他のブラウザ: isComposingチェック\n        if (!isSafari && (e.isComposing || this.isComposing)) {\n          return;\n        }\n        \n\n\n        e.preventDefault();\n        this.executeCommand();\n      }\n    });\n    \n    // 初期メッセージ\n    if (this.config.showExamples) {\n      // 起動メッセージ削除\n      // 起動時は静かに待機\n    }\n  }\n\n  /**\n   * モードセレクター作成\n   */\n  createMinimalActions() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;\n\n    // 左側: Clear All ボタン（承認済みのLayout Bデザイン）\n    const leftSection = document.createElement('div');\n    leftSection.style.cssText = 'display: flex; gap: 8px; align-items: center;';\n\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">🧹</span> Clear All';\n    clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    clearBtn.addEventListener('click', () => this.clearAllWithConfirmation());\n\n    // 履歴ボタン（将来実装用スペース確保）- 海外UI標準対応：同一幅\n    const historyBtn = document.createElement('button');\n    historyBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">📚</span> History';\n    historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n    historyBtn.style.opacity = '0.5';\n    historyBtn.disabled = true;\n    historyBtn.title = '履歴機能（開発中）';\n\n    leftSection.appendChild(clearBtn);\n    leftSection.appendChild(historyBtn);\n\n    // 右側: テーマトグルと設定（ヘッダーから移動）\n    const rightSection = document.createElement('div');\n    rightSection.style.cssText = 'display: flex; gap: 6px; align-items: center;';\n\n    const themeToggle = document.createElement('button');\n    const getThemeIcon = () => {\n      const themeConfig = {\n        light: '🌙',\n        dark: '🍵',\n        wabisabi: '☀️'\n      };\n      return themeConfig[this.currentTheme] || '🌙';\n    };\n\n    const getThemeTitle = () => {\n      const titleConfig = {\n        light: 'ダークモードに切り替え',\n        dark: '侘び寂びモードに切り替え',\n        wabisabi: 'ライトモードに切り替え'\n      };\n      return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n    };\n\n    const getThemeIconWithFilter = () => {\n      const icon = getThemeIcon();\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (icon === '☀️') {\n        return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n      } else if (icon === '🍵') {\n        return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n      } else {\n        return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n      }\n    };\n\n    themeToggle.innerHTML = getThemeIconWithFilter();\n    themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    themeToggle.title = getThemeTitle();\n    themeToggle.addEventListener('click', () => this.toggleTheme());\n\n    const settingsButton = document.createElement('button');\n    settingsButton.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">⚙️</span>';\n    settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    settingsButton.title = 'サービス設定を開く';\n    settingsButton.addEventListener('click', () => this.openServiceModal());\n\n    rightSection.appendChild(themeToggle);\n    rightSection.appendChild(settingsButton);\n\n    container.appendChild(leftSection);\n    container.appendChild(rightSection);\n\n    // 参照を保持\n    this.clearBtn = clearBtn;\n    this.historyBtn = historyBtn;\n    this.themeToggle = themeToggle;\n    this.settingsButton = settingsButton;\n\n    return container;\n  }\n\n  createServiceSelectorSection() {\n    this.serviceSelectorContainer = document.createElement('div');\n    this.serviceSelectorContainer.id = 'service-selector';\n    this.serviceSelectorContainer.style.cssText = `\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;\n\n    this.serviceSelectorStatus = document.createElement('div');\n    this.serviceSelectorStatus.textContent = 'サービス情報を読み込んでいます...';\n    this.serviceSelectorStatus.style.fontSize = '12px';\n    this.serviceSelectorStatus.style.opacity = '0.8';\n    this.serviceSelectorStatus.style.marginBottom = '8px';\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);\n\n    this.serviceSelectorContent = document.createElement('div');\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);\n\n    this.updateServiceSelectorTheme();\n    return this.serviceSelectorContainer;\n  }\n\n  createServiceModal() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.remove();\n      this.serviceModalOverlay = null;\n      this.serviceModal = null;\n    }\n\n    this.serviceModalOverlay = document.createElement('div');\n    this.serviceModalOverlay.id = 'chocodrop-service-modal-overlay';\n    this.serviceModalOverlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;\n\n    this.serviceModalOverlay.addEventListener('click', (event) => {\n      if (event.target === this.serviceModalOverlay) {\n        this.closeServiceModal();\n      }\n    });\n\n    this.serviceModal = document.createElement('div');\n    this.serviceModal.className = 'chocodrop-service-modal';\n    this.serviceModal.style.cssText = `\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;\n\n    const title = document.createElement('h2');\n    title.textContent = 'サービス設定';\n    title.style.cssText = `\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;\n\n    const subtitle = document.createElement('p');\n    subtitle.textContent = '利用するサービスを選択してください。';\n    subtitle.style.cssText = `\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;\n\n    const selector = this.createServiceSelectorSection();\n\n    const actionRow = document.createElement('div');\n    actionRow.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;\n\n    this.serviceSelectorRetryButton = document.createElement('button');\n    this.serviceSelectorRetryButton.textContent = '再読み込み';\n    this.serviceSelectorRetryButton.style.cssText = `\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorRetryButton.addEventListener('click', () => this.initializeServiceSelector(true));\n\n    const actionButtons = document.createElement('div');\n    actionButtons.style.cssText = 'display: flex; gap: 8px;';\n\n    this.serviceSelectorCancelButton = document.createElement('button');\n    this.serviceSelectorCancelButton.textContent = 'Cancel';\n    this.serviceSelectorCancelButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorCancelButton.addEventListener('click', () => this.closeServiceModal());\n\n    this.serviceSelectorSaveButton = document.createElement('button');\n    this.serviceSelectorSaveButton.textContent = 'Save';\n    this.serviceSelectorSaveButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;\n    this.serviceSelectorSaveButton.addEventListener('click', () => this.handleServiceSave());\n\n    actionButtons.appendChild(this.serviceSelectorCancelButton);\n    actionButtons.appendChild(this.serviceSelectorSaveButton);\n\n    actionRow.appendChild(this.serviceSelectorRetryButton);\n    actionRow.appendChild(actionButtons);\n\n    this.serviceModal.appendChild(title);\n    this.serviceModal.appendChild(subtitle);\n    this.serviceModal.appendChild(selector);\n    this.serviceModal.appendChild(actionRow);\n\n    this.serviceModalOverlay.appendChild(this.serviceModal);\n    document.body.appendChild(this.serviceModalOverlay);\n\n    this.updateServiceSelectorTheme();\n    this.toggleServiceRetryButton(false);\n  }\n\n  openServiceModal(forceFetch = false) {\n    if (!this.serviceModalOverlay) {\n      this.createServiceModal();\n    }\n\n    this.serviceModalOverlay.style.display = 'flex';\n    requestAnimationFrame(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.opacity = '1';\n      }\n    });\n\n    this.resetPendingSelections();\n    this.initializeServiceSelector(forceFetch);\n  }\n\n  closeServiceModal() {\n    if (!this.serviceModalOverlay) {\n      return;\n    }\n\n    this.serviceModalOverlay.style.opacity = '0';\n    setTimeout(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.display = 'none';\n      }\n      this.resetPendingSelections();\n    }, 150);\n  }\n\n  async initializeServiceSelector(force = false) {\n    if (this.servicesLoading && !force) {\n      return;\n    }\n\n    if (!this.client || typeof this.client.getAvailableServices !== 'function') {\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n      return;\n    }\n\n    this.servicesLoading = true;\n    this.setServiceSelectorStatus('サービス情報を読み込んでいます...', 'info');\n    this.toggleServiceRetryButton(false);\n    this.setServiceButtonsEnabled(false);\n\n    try {\n      if (typeof this.client.ensureInitialized === 'function') {\n        await this.client.ensureInitialized();\n      }\n\n      const response = await this.client.getAvailableServices();\n      if (!response || response.success === false || !response.metadata) {\n        throw new Error(response?.error || 'サービス情報が取得できませんでした');\n      }\n\n      this.availableImageServices = Array.isArray(response.metadata?.image) ? response.metadata.image : [];\n      this.availableVideoServices = Array.isArray(response.metadata?.video) ? response.metadata.video : [];\n\n      this.selectedImageService = this.resolveServiceSelection(\n        'image',\n        this.availableImageServices,\n        response.default?.image\n      );\n\n      this.selectedVideoService = this.resolveServiceSelection(\n        'video',\n        this.availableVideoServices,\n        response.default?.video\n      );\n\n      this.pendingImageService = this.selectedImageService;\n      this.pendingVideoService = this.selectedVideoService;\n\n      this.populateServiceSelector();\n      this.applyServiceSelectionToSceneManager();\n      this.setServiceButtonsEnabled(true);\n    } catch (error) {\n      console.error('❌ Failed to initialize service selector:', error);\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした。サーバーが起動しているか確認のうえ、再読み込みしてください。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n    } finally {\n      this.servicesLoading = false;\n    }\n  }\n\n  setServiceSelectorStatus(message, type = 'info') {\n    if (!this.serviceSelectorStatus) {\n      return;\n    }\n    this.serviceSelectorStatus.textContent = message;\n    this.serviceSelectorStatus.dataset.statusType = type;\n    this.serviceSelectorStatus.classList.toggle('service-selector-helper', type !== 'error');\n    this.updateServiceSelectorTheme();\n  }\n\n  toggleServiceRetryButton(visible) {\n    if (!this.serviceSelectorRetryButton) {\n      return;\n    }\n    this.serviceSelectorRetryButton.style.display = visible ? 'inline-flex' : 'none';\n    this.updateServiceSelectorTheme();\n  }\n\n  resolveServiceSelection(type, services, defaultId) {\n    if (!services || services.length === 0) {\n      return null;\n    }\n\n    const storageKey = type === 'image' ? IMAGE_SERVICE_STORAGE_KEY : VIDEO_SERVICE_STORAGE_KEY;\n    let storedId = null;\n    try {\n      storedId = localStorage.getItem(storageKey);\n    } catch (error) {\n      console.warn('⚠️ Failed to access localStorage:', error);\n    }\n\n    const isStoredValid = storedId && services.some(service => service.id === storedId);\n    let resolvedId = isStoredValid ? storedId : null;\n\n    if (!resolvedId && defaultId && services.some(service => service.id === defaultId)) {\n      resolvedId = defaultId;\n    }\n\n    if (!resolvedId) {\n      resolvedId = services[0]?.id || null;\n    }\n\n    try {\n      if (resolvedId) {\n        localStorage.setItem(storageKey, resolvedId);\n      } else {\n        localStorage.removeItem(storageKey);\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to persist service selection:', error);\n    }\n\n    return resolvedId;\n  }\n\n  populateServiceSelector() {\n    if (!this.serviceSelectorContent) {\n      return;\n    }\n\n    this.serviceSelectorContent.innerHTML = '';\n\n    const hasImage = this.availableImageServices.length > 0;\n    const hasVideo = this.availableVideoServices.length > 0;\n\n    if (!hasImage && !hasVideo) {\n      this.setServiceSelectorStatus('利用可能なサービスが見つかりませんでした。', 'error');\n      return;\n    }\n\n    this.setServiceSelectorStatus('利用するサービスを選択してください。', 'info');\n\n    if (hasImage) {\n      const imageRow = this.buildServiceRow('image', '画像 (T2I)', this.availableImageServices, this.pendingImageService || this.selectedImageService);\n      this.serviceSelectorContent.appendChild(imageRow);\n    }\n\n    if (hasVideo) {\n      const videoRow = this.buildServiceRow('video', '動画 (T2V)', this.availableVideoServices, this.pendingVideoService || this.selectedVideoService);\n      this.serviceSelectorContent.appendChild(videoRow);\n    }\n\n    this.updateServiceSelectorTheme();\n  }\n\n  buildServiceRow(type, labelText, services, selectedId) {\n    const row = document.createElement('div');\n    row.className = `service-row service-row-${type}`;\n    row.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;\n\n    const label = document.createElement('label');\n    label.textContent = labelText;\n    label.style.fontSize = '13px';\n    label.style.fontWeight = '600';\n    row.appendChild(label);\n\n    const select = document.createElement('select');\n    select.dataset.serviceType = type;\n    select.style.fontFamily = 'inherit';\n    select.style.width = '100%';\n\n    services.forEach(service => {\n      const option = document.createElement('option');\n      option.value = service.id;\n      option.textContent = service.name || service.id;\n      if (service.description) {\n        option.title = service.description;\n      }\n      select.appendChild(option);\n    });\n\n    if (selectedId && services.some(service => service.id === selectedId)) {\n      select.value = selectedId;\n    }\n\n    select.addEventListener('change', (event) => {\n      this.onServiceSelectionChange(type, event.target.value);\n    });\n\n    row.appendChild(select);\n\n    const description = document.createElement('div');\n    description.className = 'service-description';\n    description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    description.style.fontSize = '11px';\n    description.style.opacity = '0.75';\n    description.style.lineHeight = '1.4';\n    description.style.minHeight = '14px';\n    row.appendChild(description);\n\n    select.addEventListener('change', () => {\n      description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    });\n\n    if (type === 'image') {\n      this.imageServiceSelect = select;\n    } else {\n      this.videoServiceSelect = select;\n    }\n\n    return row;\n  }\n\n  onServiceSelectionChange(type, serviceId) {\n    if (type === 'image') {\n      this.pendingImageService = serviceId;\n    } else {\n      this.pendingVideoService = serviceId;\n    }\n\n    const info = this.findServiceInfo(type, serviceId);\n    const description = type === 'image'\n      ? this.imageServiceSelect?.parentElement?.querySelector('.service-description')\n      : this.videoServiceSelect?.parentElement?.querySelector('.service-description');\n\n    if (description) {\n      description.textContent = info?.description || '';\n    }\n  }\n\n  handleServiceSave() {\n    const newImageId = this.pendingImageService || this.selectedImageService;\n    const newVideoId = this.pendingVideoService || this.selectedVideoService;\n\n    if (newImageId) {\n      try {\n        localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY, newImageId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist image service selection:', error);\n      }\n      this.selectedImageService = newImageId;\n      this.sceneManager?.setImageService(newImageId);\n    }\n\n    if (newVideoId) {\n      try {\n        localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY, newVideoId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist video service selection:', error);\n      }\n      this.selectedVideoService = newVideoId;\n      this.sceneManager?.setVideoService(newVideoId);\n    }\n\n    const imageInfo = this.findServiceInfo('image', newImageId);\n    const videoInfo = this.findServiceInfo('video', newVideoId);\n\n    if (imageInfo) {\n      this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`, 'system');\n    }\n    if (videoInfo) {\n      this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`, 'system');\n    }\n\n    this.closeServiceModal();\n  }\n\n  setServiceButtonsEnabled(enabled) {\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.disabled = !enabled;\n      this.serviceSelectorSaveButton.style.opacity = enabled ? '1' : '0.6';\n      this.serviceSelectorSaveButton.style.cursor = enabled ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  resetPendingSelections() {\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    if (this.imageServiceSelect && this.selectedImageService) {\n      this.imageServiceSelect.value = this.selectedImageService;\n    }\n    if (this.videoServiceSelect && this.selectedVideoService) {\n      this.videoServiceSelect.value = this.selectedVideoService;\n    }\n\n    if (this.serviceSelectorContent && this.serviceSelectorContent.childElementCount > 0) {\n      this.populateServiceSelector();\n    }\n  }\n\n  findServiceInfo(type, serviceId) {\n    const list = type === 'image' ? this.availableImageServices : this.availableVideoServices;\n    return list.find(service => service.id === serviceId) || null;\n  }\n\n  applyServiceSelectionToSceneManager() {\n    if (!this.sceneManager) {\n      return;\n    }\n    this.sceneManager.setImageService(this.selectedImageService);\n    this.sceneManager.setVideoService(this.selectedVideoService);\n  }\n\n  updateServiceSelectorTheme() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.style.background = this.isDarkMode\n        ? 'rgba(8, 11, 26, 0.55)'\n        : 'rgba(229, 231, 255, 0.45)';\n    }\n\n    if (this.serviceModal) {\n      this.serviceModal.style.background = this.isDarkMode\n        ? 'rgba(17, 24, 39, 0.15)'\n        : 'rgba(255, 255, 255, 0.15)';\n      this.serviceModal.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.4)'\n        : '1px solid rgba(99, 102, 241, 0.25)';\n      this.serviceModal.style.color = this.isDarkMode ? '#e5e7ff' : '#1f2937';\n    }\n\n    if (this.serviceSelectorStatus) {\n      const type = this.serviceSelectorStatus.dataset?.statusType;\n      const statusColor = type === 'error'\n        ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n        : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.75)');\n      this.serviceSelectorStatus.style.color = statusColor;\n    }\n\n    if (this.serviceSelectorContainer) {\n      const labels = this.serviceSelectorContainer.querySelectorAll('label');\n      labels.forEach(label => {\n        label.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(31, 41, 55, 0.9)');\n      });\n\n      const selects = this.serviceSelectorContainer.querySelectorAll('select');\n      selects.forEach(select => {\n        select.style.background = this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.15)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.18)' : 'rgba(99, 102, 241, 0.12)');\n        select.style.border = this.isWabiSabiMode\n          ? '1px solid rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? '1px solid rgba(129, 140, 248, 0.45)' : '1px solid rgba(99, 102, 241, 0.45)');\n        select.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937');\n        select.style.padding = '10px 12px';\n        select.style.borderRadius = '10px';\n        select.style.fontSize = '13px';\n        select.style.outline = 'none';\n        select.style.boxShadow = this.isWabiSabiMode\n          ? '0 12px 24px rgba(93, 64, 55, 0.25)'\n          : (this.isDarkMode\n            ? '0 12px 28px rgba(15, 23, 42, 0.5)'\n            : '0 12px 24px rgba(99, 102, 241, 0.2)');\n      });\n\n      const descriptions = this.serviceSelectorContainer.querySelectorAll('.service-description');\n      descriptions.forEach(desc => {\n        desc.style.color = this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.7)'\n          : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.7)');\n      });\n    }\n\n    if (this.serviceSelectorRetryButton) {\n      this.serviceSelectorRetryButton.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.25)'\n        : (this.isDarkMode\n          ? 'rgba(129, 140, 248, 0.35)'\n          : 'rgba(99, 102, 241, 0.15)');\n      this.serviceSelectorRetryButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.5)'\n        : (this.isDarkMode\n          ? '1px solid rgba(129, 140, 248, 0.5)'\n          : '1px solid rgba(99, 102, 241, 0.45)');\n      this.serviceSelectorRetryButton.style.color = this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#f9fafb' : '#1e1b4b');\n      this.serviceSelectorRetryButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 0 8px rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '0 0 8px rgba(129, 140, 248, 0.45)'\n          : '0 0 8px rgba(99, 102, 241, 0.35)');\n    }\n\n    if (this.serviceSelectorCancelButton) {\n      this.serviceSelectorCancelButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '1px solid rgba(209, 213, 219, 0.3)'\n          : '1px solid rgba(148, 163, 184, 0.5)');\n      this.serviceSelectorCancelButton.style.color = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.85)'\n        : (this.isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(30, 41, 59, 0.85)');\n    }\n\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, #6D4C41, #5D4037)'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')'\n          : 'linear-gradient(135deg, #818cf8, #a855f7)');\n      this.serviceSelectorSaveButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 16px 28px rgba(93, 64, 55, 0.35)'\n        : (this.isDarkMode\n          ? '0 16px 28px rgba(99, 102, 241, 0.4)'\n          : '0 16px 28px rgba(129, 140, 248, 0.35)');\n    }\n  }\n\n  /**\n   * ラジオボタン風モードセレクター作成\n   */\n  createRadioModeSelector() {\n    const container = document.createElement('div');\n    container.className = 'radio-mode-selector';\n    container.style.cssText = `\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))')};\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(141, 110, 99, 0.4)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(255, 255, 255, 0.25)')};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;\n\n    const modes = [\n      { value: 'generate', label: 'Generate', icon: '✨' },\n      { value: 'import', label: 'Import', icon: '📥' },\n      { value: 'modify', label: 'Modify', icon: '🔧' },\n      { value: 'delete', label: 'Delete', icon: '🗑️' }\n    ];\n\n    this.radioModeButtons = {};\n\n    modes.forEach(mode => {\n      const button = document.createElement('div');\n      button.className = `mode-option ${mode.value}`;\n      button.style.cssText = `\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)')};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n      `;\n\n      const icon = document.createElement('div');\n      icon.textContent = mode.icon;\n      icon.style.cssText = `\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${this.isDarkMode \n          ? 'hue-rotate(220deg) saturate(0.8) brightness(1.2)' \n          : 'hue-rotate(240deg) saturate(0.7) brightness(0.9)'};\n        transition: filter 0.2s ease;\n      `;\n\n      const label = document.createElement('span');\n      label.textContent = mode.label;\n\n      // AUTOバッジを作成\n      const autoBadge = document.createElement('div');\n      autoBadge.className = 'auto-badge';\n      autoBadge.textContent = 'AUTO';\n      autoBadge.style.cssText = `\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;\n\n      button.appendChild(icon);\n      button.appendChild(label);\n      button.appendChild(autoBadge);\n\n      // クリックイベント\n      button.addEventListener('click', () => {\n        if (mode.value === 'import') {\n          this.triggerFileSelection();\n        } else {\n          this.selectMode(mode.value, true); // trueは手動選択を示す\n        }\n      });\n\n      this.radioModeButtons[mode.value] = { button, autoBadge };\n      container.appendChild(button);\n    });\n\n\n    this.radioModeContainer = container;\n    // デフォルトでGenerateを選択\n    this.selectMode('generate', false);\n\n    return container;\n  }\n\n  /**\n   * モード選択（ラジオボタンUI更新）\n   */\n  selectMode(mode, isManual = false, detectedKeyword = null) {\n    this.currentMode = mode;\n\n    // 全ボタンをリセット\n    Object.keys(this.radioModeButtons).forEach(key => {\n      const { button, autoBadge } = this.radioModeButtons[key];\n      button.style.color = this.isWabiSabiMode\n        ? '#F5F5F5'\n        : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n      button.style.background = 'transparent';\n      button.style.border = '1px solid transparent';\n      button.style.transform = 'scale(1)';\n      button.style.boxShadow = 'none';\n      // AUTOバッジを非表示\n      autoBadge.style.display = 'none';\n      autoBadge.style.opacity = '0';\n    });\n\n    // 選択されたボタンをハイライト（2025年仕様）\n    const { button, autoBadge } = this.radioModeButtons[mode];\n    \n    // 2025 Glassmorphism選択状態\n    const selectedGlass = this.isWabiSabiMode\n      ? {\n          background: 'linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))',\n          border: '1px solid rgba(109, 76, 65, 0.4)',\n          boxShadow: '0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)',\n          color: '#F5F5F5'\n        }\n      : (this.isDarkMode\n        ? {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))',\n            border: '1px solid rgba(99, 102, 241, 0.4)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)',\n            color: '#a5b4fc'\n          }\n        : {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))',\n            border: '1px solid rgba(99, 102, 241, 0.3)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)',\n            color: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n          });\n\n    button.style.color = selectedGlass.color;\n    button.style.background = selectedGlass.background;\n    button.style.border = selectedGlass.border;\n    button.style.boxShadow = selectedGlass.boxShadow;\n    button.style.transform = 'scale(1.02)';\n\n    // AUTOバッジの表示制御\n    if (!isManual && detectedKeyword) {\n      // 自動切り替えの場合はAUTOバッジを表示\n      autoBadge.style.display = 'inline-block';\n      setTimeout(() => {\n        autoBadge.style.opacity = '1';\n        autoBadge.style.transform = 'scale(1)';\n      }, 100);\n      \n      // 3秒後にフェードアウト\n      setTimeout(() => {\n        autoBadge.style.opacity = '0';\n        autoBadge.style.transform = 'scale(0.8)';\n        setTimeout(() => {\n          autoBadge.style.display = 'none';\n        }, 200);\n      }, 3000);\n    }\n\n    // パルス効果を追加\n    if (!isManual && mode !== 'import') {\n      this.addPulseEffect(button);\n      this.addContainerGlow(mode);\n    } else if (mode === 'import') {\n      this.addContainerGlow(mode);\n    }\n\n    // プレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n\n    // モード切り替え時の入力欄メッセージ上書き機能\n    if (isManual) {\n      this.clearInputOnModeSwitch(mode);\n    }\n\n    // Importモード専用処理\n    if (mode === 'import' || this.selectedFile) {\n      this.showImportInterface();\n    } else {\n      this.hideImportInterface();\n    }\n\n    // Deleteモード専用処理\n    if (mode === 'delete' && isManual) {\n      this.handleDeleteModeSelection();\n    }\n\n    // Modifyモード専用処理\n    if (mode === 'modify' && isManual) {\n      this.handleModifyModeSelection();\n    }\n\n    // モード切り替えメッセージは表示しない（UIで分かるため）\n  }\n\n  /**\n   * パルス効果を追加\n   */\n  addPulseEffect(element) {\n    // 既存のアニメーションをリセット\n    element.style.animation = 'none';\n    \n    // 少し遅らせてからアニメーションを適用（リフロー強制）\n    setTimeout(() => {\n      element.style.animation = 'smartModePulse 0.6s ease-out';\n    }, 10);\n    \n    // アニメーション終了後にクリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 610);\n    \n    // CSSアニメーションを動的に追加（まだ存在しない場合）\n    this.ensurePulseAnimation();\n  }\n\n  /**\n   * パルスアニメーション用CSSを確保\n   */\n  ensurePulseAnimation() {\n    if (document.getElementById('smart-mode-pulse-animation')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'smart-mode-pulse-animation';\n    style.textContent = `\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コンテナグロー効果\n   */\n  addContainerGlow(mode) {\n    const container = this.radioModeContainer;\n    if (!container) return;\n\n    // モードに応じてグロー色を設定\n    const glowColors = this.isWabiSabiMode ? {\n      generate: 'rgba(139, 195, 74, 0.4)',\n      modify: 'rgba(139, 195, 74, 0.4)',\n      delete: 'rgba(139, 195, 74, 0.4)',\n      import: 'rgba(139, 195, 74, 0.4)'\n    } : {\n      generate: 'rgba(79, 70, 229, 0.4)',\n      modify: 'rgba(236, 72, 153, 0.4)',\n      delete: 'rgba(107, 114, 128, 0.3)',\n      import: 'rgba(59, 130, 246, 0.35)'\n    };\n\n    const glowColor = glowColors[mode] || glowColors.generate;\n\n    // 一時的にグロー効果を適用\n    container.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n\n    const intensified = glowColor.replace('0.4', '0.6').replace('0.3', '0.5');\n    container.style.borderColor = intensified !== glowColor ? intensified : glowColor;\n    \n    // 1秒後にグロー効果を除去\n    setTimeout(() => {\n      container.style.boxShadow = '';\n      container.style.borderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.15)';\n    }, 1000);\n  }\n\n  getActionButtonStyles(variant = 'secondary') {\n    const baseStyles = `\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;\n\n    if (variant === 'secondary') {\n      // Clear All, History ボタン用 - 美しい配置と統一感\n      return baseStyles + `\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.6)'\n          : (this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)')};\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? '#d1d5db' : '#374151')};\n        text-align: center;\n        white-space: nowrap;\n      `;\n    } else if (variant === 'icon') {\n      // テーマトグル、設定ボタン用\n      return baseStyles + `\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(255, 255, 255, 0.4)'};\n        color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'};\n      `;\n    }\n  }\n\n  /**\n   * 破壊的アクション用ボタンスタイル（赤系ガラス効果）\n   */\n  getDestructiveButtonStyles() {\n    return `\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode ? 'rgba(220, 38, 127, 0.4)' : 'rgba(190, 24, 93, 0.35)'};\n      border-radius: 6px;\n      background: ${this.isDarkMode ? 'rgba(220, 38, 127, 0.3)' : 'rgba(190, 24, 93, 0.25)'};\n      color: ${this.isDarkMode ? '#fca5a5' : '#dc2626'};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `;\n  }\n\n  getCommandTypeIndicatorStyles() {\n    return `\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)'};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `;\n  }\n\n  /**\n   * テキストエリアの自動リサイズ処理（最大2行）\n   */\n  autoResizeTextarea() {\n    // 高さをリセットして正確な scrollHeight を取得\n    this.input.style.height = 'auto';\n    \n    // 現在のコンテンツに基づいて高さを計算\n    const lineHeight = 22; // CSS で設定した line-height\n    const padding = 28; // 上下のパディング合計 (14px * 2)\n    const maxLines = 2;\n    const maxHeight = (lineHeight * maxLines) + padding;\n    \n    // スクロール高さに基づいて新しい高さを決定\n    const newHeight = Math.min(this.input.scrollHeight, maxHeight);\n    \n    // 高さを適用\n    this.input.style.height = newHeight + 'px';\n    \n    // 2行を超える場合はスクロールを有効化と展開ボタン表示\n    if (this.input.scrollHeight > maxHeight) {\n      this.input.style.overflowY = 'auto';\n      // 展開ボタンを表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'flex';\n      }\n    } else {\n      this.input.style.overflowY = 'hidden';\n      // 展開ボタンを非表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * リアルタイムコマンドタイプ検出\n   */\n  detectCommandType() {\n    const input = this.input.value.trim();\n    if (!input) {\n      this.selectMode('generate', false);\n      return;\n    }\n\n    const commandType = this.analyzeCommandType(input);\n\n    // Delete/Modifyは手動選択を優先、自動切り替えしない\n    if (this.currentMode === 'delete' || this.currentMode === 'modify') {\n      return; // 現在のモードを維持\n    }\n    // Generate/Importのみ自動切り替え\n    this.selectMode(commandType.type, false, commandType.detectedKeyword);\n  }\n\n  /**\n   * ルールベースコマンド分析\n   */\n  analyzeCommandType(text, hasSelectedObject) {\n    const trimmedText = text.trim();\n    \n    this.logDebug(`🔍 Analyzing command: \"${text}\"`);\n    this.logDebug(`📋 Selected object: ${hasSelectedObject ? 'Yes' : 'No'}`);\n    \n    // 空コマンド\n    if (!trimmedText) {\n      return { type: 'empty', reason: '空のコマンド' };\n    }\n\n    // メディアタイプの検出\n    const mediaInfo = this.detectMediaType(text);\n    \n    // 1. 削除コマンドの検出（最優先）\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除' },\n      { pattern: /消去/, keyword: '消去' },\n      { pattern: /消して/, keyword: '消して' },\n      { pattern: /消す/, keyword: '消す' },\n      { pattern: /取り除/, keyword: '取り除' },\n      { pattern: /除去/, keyword: '除去' },\n      { pattern: /削除して/, keyword: '削除して' },\n      { pattern: /delete/i, keyword: 'delete' },\n      { pattern: /remove/i, keyword: 'remove' },\n      { pattern: /clear/i, keyword: 'clear' },\n      { pattern: /erase/i, keyword: 'erase' }\n    ];\n    \n    for (const { pattern, keyword } of deletePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Delete pattern matched: ${keyword}`);\n        return {\n          type: 'delete',\n          confidence: 0.9,\n          reason: '削除キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: true,\n          detectedKeyword: keyword,\n          needsTarget: true\n        };\n      }\n    }\n    \n    // 2. 明確な生成コマンドの検出（選択状態に関係なく）\n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って' },\n      { pattern: /つくって/, keyword: 'つくって' },\n      { pattern: /生成/, keyword: '生成' },\n      { pattern: /作成/, keyword: '作成' },\n      { pattern: /描いて/, keyword: '描いて' },\n      { pattern: /書いて/, keyword: '書いて' },\n      { pattern: /create/i, keyword: 'create' },\n      { pattern: /generate/i, keyword: 'generate' },\n      { pattern: /make/i, keyword: 'make' },\n      { pattern: /draw/i, keyword: 'draw' }\n    ];\n    \n    for (const { pattern, keyword } of generatePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Generate pattern matched: ${keyword}`);\n        return {\n          type: 'generate',\n          confidence: mediaInfo.confidence,\n          reason: '生成キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword,\n          needsTarget: false\n        };\n      }\n    }\n    \n    // 3. 自然言語での対象指定（確実にmodify）\n    const targetPatterns = [\n      /インポートした.*を/,\n      /選択した.*を/,\n      /この.*を/,\n      /その.*を/,\n      /あの.*を/,\n      /[0-9]+番目.*を/,\n      /最初.*を/,\n      /初回.*を/,\n      /生成した.*を/,\n      /作った.*を/,\n      /.+の(画像|写真|イメージ|絵|イラスト|ピクチャー)(を|に)/,\n      /.+の(動画|ビデオ|ムービー|映像|クリップ)(を|に)/,\n      /(.+?)(画像|写真|イメージ|絵|イラスト|ピクチャー)を.*(変えて|変更|にして|加工|編集|調整|塗り|並べ|移動|回転|反転|整列)/,\n      /(.+?)(動画|ビデオ|ムービー|映像|クリップ)を.*(変えて|変更|にして|加工|編集|調整|塗り|並べ|移動|回転|反転|整列)/\n    ];\n\n    const explicitTargetMatched = targetPatterns.some(pattern => pattern.test(text));\n    if (explicitTargetMatched) {\n      this.logDebug('✅ Target reference pattern matched');\n      return {\n        type: 'modify',\n        confidence: 0.9,\n        reason: '対象を明示的に指定',\n        mediaType: mediaInfo.type,\n        requiresConfirmation: false,\n        needsTarget: true,\n        hasExplicitTarget: true\n      };\n    }\n\n    // 4. 選択オブジェクトがある場合の処理\n    if (hasSelectedObject && trimmedText) {\n      // 新規作成意図でなければmodify\n      if (!/の画像|の動画|画像を|動画を|画像$|動画$/.test(text)) {\n        this.logDebug(`✅ Selected object + command = modify`);\n        return {\n          type: 'modify',\n          confidence: 0.8,\n          reason: '選択オブジェクトに対する変更',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          needsTarget: false  // 既に選択済み\n        };\n      }\n    }\n\n    // 5. 変更系のキーワードが含まれる場合（対象未選択でもmodify判定）\n    const modificationIndicators = /(にして|に変えて|へ変えて|へ変更|変えて|変更|調整|加工|編集|塗(って|り)|染め|彩色|彩度|明るく|暗く|薄く|濃く|ぼかし|シャープ|左右反転|上下反転|反転|回転|移動|並べ|整列|揃え|寄せて|拡大|縮小|大きく|小さく|伸ばして|縮めて|高く|低く|近づけ|遠ざけ|透明|半透明|不透明|輝かせて|光らせて|暗くして|焼き込み|焼き付け|flip|rotate|move|align|scale|resize|tint|color|brighten|darken|adjust|edit|modify)/i;\n    const mediaReferenceIndicators = /(画像|写真|イメージ|絵|イラスト|ピクチャー|メディア|素材|動画|ビデオ|ムービー|映像|クリップ|オブジェクト|モデル)/i;\n\n    if (modificationIndicators.test(text)) {\n      this.logDebug('✅ Modification indicators detected');\n      return {\n        type: 'modify',\n        confidence: 0.7,\n        reason: '変更キーワードを検出',\n        mediaType: mediaInfo.type,\n        requiresConfirmation: false,\n        needsTarget: !hasSelectedObject,\n        hasExplicitTarget: explicitTargetMatched || mediaReferenceIndicators.test(text)\n      };\n    }\n\n    // 6. デフォルト（安全な生成）\n    this.logDebug(`ℹ️ Defaulting to generate mode`);\n    return {\n      type: 'generate',\n      confidence: mediaInfo.confidence,\n      reason: 'デフォルト動作（新規生成）',\n      mediaType: mediaInfo.type,\n      requiresConfirmation: false,\n      needsTarget: false\n    };\n  }\n\n  /**\n   * Extract all command keywords from the analyzeCommandType patterns\n   * Returns an array of {pattern, keyword, type} objects\n   */\n  getAllCommandKeywords() {\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除', type: 'delete' },\n      { pattern: /消去/, keyword: '消去', type: 'delete' },\n      { pattern: /消して/, keyword: '消して', type: 'delete' },\n      { pattern: /消す/, keyword: '消す', type: 'delete' },\n      { pattern: /取り除/, keyword: '取り除', type: 'delete' },\n      { pattern: /除去/, keyword: '除去', type: 'delete' },\n      { pattern: /削除して/, keyword: '削除して', type: 'delete' },\n      { pattern: /delete/i, keyword: 'delete', type: 'delete' },\n      { pattern: /remove/i, keyword: 'remove', type: 'delete' },\n      { pattern: /clear/i, keyword: 'clear', type: 'delete' },\n      { pattern: /erase/i, keyword: 'erase', type: 'delete' }\n    ];\n    \n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動', type: 'modify' },\n      { pattern: /動かして/, keyword: '動かして', type: 'modify' },\n      { pattern: /変更/, keyword: '変更', type: 'modify' },\n      { pattern: /変えて/, keyword: '変えて', type: 'modify' },\n      { pattern: /修正/, keyword: '修正', type: 'modify' },\n      { pattern: /調整/, keyword: '調整', type: 'modify' },\n      { pattern: /move/i, keyword: 'move', type: 'modify' },\n      { pattern: /change/i, keyword: 'change', type: 'modify' },\n      { pattern: /modify/i, keyword: 'modify', type: 'modify' },\n      { pattern: /edit/i, keyword: 'edit', type: 'modify' }\n    ];\n    \n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って', type: 'generate' },\n      { pattern: /生成/, keyword: '生成', type: 'generate' },\n      { pattern: /作成/, keyword: '作成', type: 'generate' },\n      { pattern: /描いて/, keyword: '描いて', type: 'generate' },\n      { pattern: /書いて/, keyword: '書いて', type: 'generate' },\n      { pattern: /create/i, keyword: 'create', type: 'generate' },\n      { pattern: /generate/i, keyword: 'generate', type: 'generate' },\n      { pattern: /make/i, keyword: 'make', type: 'generate' },\n      { pattern: /draw/i, keyword: 'draw', type: 'generate' }\n    ];\n\n    return [...deletePatterns, ...modifyPatterns, ...generatePatterns];\n  }\n\n  /**\n   * Apply keyword highlighting to the input text\n   */\n  applyKeywordHighlighting() {\n    // TODO: 一時的にキーワードハイライト機能を無効化（リリース後に再検討）\n    return;\n\n    if (!this.input || this.isComposing) {\n      return;\n    }\n\n    const text = this.input.value;\n    if (!text.trim()) {\n      this.clearKeywordHighlighting();\n      return;\n    }\n\n    // Get all keyword patterns\n    const allKeywords = this.getAllCommandKeywords();\n    \n    // Find matches in the text\n    const matches = [];\n    for (const { pattern, keyword, type } of allKeywords) {\n      const match = text.match(pattern);\n      if (match) {\n        const startIndex = match.index;\n        const endIndex = startIndex + match[0].length;\n        matches.push({\n          start: startIndex,\n          end: endIndex,\n          keyword: match[0], // Use actual matched text\n          type: type\n        });\n      }\n    }\n\n    // Sort matches by position to avoid overlaps\n    matches.sort((a, b) => a.start - b.start);\n\n    // Apply highlighting if we have matches\n    if (matches.length > 0) {\n      this.createHighlightOverlay(text, matches);\n    } else {\n      this.clearKeywordHighlighting();\n    }\n  }\n\n  /**\n   * Create a highlighting overlay div that sits behind the textarea\n   */\n  createHighlightOverlay(text, matches) {\n    // Remove existing overlay\n    this.clearKeywordHighlighting();\n\n    // Create highlight overlay div\n    this.highlightOverlay = document.createElement('div');\n    this.highlightOverlay.className = 'keyword-highlight-overlay';\n    \n    // Copy textarea styles to overlay\n    const computedStyle = window.getComputedStyle(this.input);\n\n    if (!this.inputDefaultStyles) {\n      this.captureInputDefaultStyles();\n    }\n    this.highlightOverlay.style.cssText = `\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      overflow: hidden;\n      font-family: ${computedStyle.fontFamily};\n      font-size: ${computedStyle.fontSize};\n      font-weight: ${computedStyle.fontWeight};\n      line-height: ${computedStyle.lineHeight};\n      letter-spacing: ${computedStyle.letterSpacing};\n      padding: ${computedStyle.padding};\n      border: ${computedStyle.borderWidth} solid transparent;\n      margin: 0;\n      z-index: 1;\n      color: transparent;\n      background: transparent;\n    `;\n\n    // Build highlighted HTML\n    let highlightedHTML = '';\n    let lastIndex = 0;\n\n    for (const match of matches) {\n      // Add text before this match\n      highlightedHTML += this.escapeHtml(text.substring(lastIndex, match.start));\n      \n      // Add highlighted keyword\n      const color = this.getKeywordColor(match.type);\n      highlightedHTML += `<span style=\"color: ${color}; font-weight: 600; background: linear-gradient(135deg, ${color}22 0%, ${color}11 100%); border-radius: 3px; padding: 1px 2px;\">${this.escapeHtml(match.keyword)}</span>`;\n      \n      lastIndex = match.end;\n    }\n\n    // Add remaining text\n    highlightedHTML += this.escapeHtml(text.substring(lastIndex));\n\n    this.highlightOverlay.innerHTML = highlightedHTML;\n\n    // Make textarea background transparent so overlay shows through\n    this.input.style.background = 'transparent';\n    this.input.style.backgroundColor = 'transparent';\n    this.input.style.backgroundImage = 'none';\n    this.input.style.color = this.getInputTextColor();\n\n    // Insert overlay before textarea\n    this.inputWrapper.insertBefore(this.highlightOverlay, this.input);\n  }\n\n  /**\n   * Get the appropriate color for each keyword type\n   */\n  getKeywordColor(type) {\n    return KEYWORD_HIGHLIGHT_COLOR;\n  }\n\n  getInputTextColor() {\n    if (this.isWabiSabiMode) {\n      return '#F5F5F5';\n    }\n    return this.isDarkMode ? '#ffffff' : '#1f2937';\n  }\n\n  captureInputDefaultStyles() {\n    if (!this.input) {\n      return;\n    }\n    const computedStyle = window.getComputedStyle(this.input);\n    this.inputDefaultStyles = {\n      background: computedStyle.background,\n      backgroundImage: computedStyle.backgroundImage,\n      backgroundColor: computedStyle.backgroundColor,\n      color: computedStyle.color\n    };\n  }\n\n  /**\n   * Clear keyword highlighting\n   */\n  clearKeywordHighlighting() {\n    if (this.highlightOverlay) {\n      this.highlightOverlay.remove();\n      this.highlightOverlay = null;\n    }\n    \n    // Restore textarea background\n    if (this.input) {\n      if (this.inputDefaultStyles) {\n        this.input.style.background = this.inputDefaultStyles.background;\n        this.input.style.backgroundImage = this.inputDefaultStyles.backgroundImage;\n        this.input.style.backgroundColor = this.inputDefaultStyles.backgroundColor;\n        this.input.style.color = this.inputDefaultStyles.color;\n      } else {\n        this.input.style.background = '';\n        this.input.style.backgroundImage = '';\n        this.input.style.backgroundColor = '';\n        this.input.style.color = '';\n      }\n    }\n  }\n\n  /**\n   * Escape HTML characters\n   */\n  escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  /**\n   * メディアタイプ検出（画像/動画）\n   */\n  detectMediaType(text) {\n    const videoPatterns = [\n      /動画|ビデオ|映像|ムービー/,\n      /video|movie|clip/i\n    ];\n    \n    const imagePatterns = [\n      /画像|写真|絵|イラスト|イメージ/,\n      /image|picture|photo|illustration/i\n    ];\n    \n    if (videoPatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'video',\n        confidence: 0.8,\n        reason: '動画生成コマンド'\n      };\n    }\n    \n    if (imagePatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'image',\n        confidence: 0.8,\n        reason: '画像生成コマンド'\n      };\n    }\n    \n    // デフォルトは画像\n    return {\n      type: 'image',\n      confidence: 0.6,\n      reason: '生成コマンド（画像デフォルト）'\n    };\n  }\n\n  /**\n   * コマンドタイプインジケーター表示\n   */\n  showCommandTypeIndicator(commandInfo) {\n    const { type, confidence, reason } = commandInfo;\n    \n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    // Proactive UX: 低信頼度時に提案表示\n    if (confidence < 0.7) {\n      this.showProactiveSuggestion(type, confidence);\n    } else {\n      this.hideProactiveSuggestion();\n    }\n    \n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[type].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n    // this.commandTypeIndicator.style.display = 'block';\n    // this.commandTypeIndicator.style.cursor = 'default';\n    \n    // スワイプジェスチャー対応\n    this.enableGestureControl();\n  }\n\n  /**\n   * Proactive UX: 低信頼度時の提案表示\n   */\n  showProactiveSuggestion(detectedType, confidence) {\n    if (!this.proactiveSuggestion) {\n      this.proactiveSuggestion = document.createElement('div');\n      this.proactiveSuggestion.id = 'proactive-suggestion';\n      this.proactiveSuggestion.style.cssText = `\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;\n      // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n      // 代わりに入力フィールドの前に挿入\n      this.container.insertBefore(this.proactiveSuggestion, this.input);\n    }\n\n    const alternativeTypes = ['generate', 'modify', 'delete'].filter(t => t !== detectedType);\n    const suggestion = alternativeTypes[0]; // 最初の代替案\n\n    const suggestionLabels = {\n      generate: '🎨 生成',\n      modify: '✏️ 変更', \n      delete: '🗑️ 削除'\n    };\n\n    this.proactiveSuggestion.innerHTML = `\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style=\"margin-top: 4px; font-size: 10px; opacity: 0.8;\">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;\n    \n    this.proactiveSuggestion.style.display = 'block';\n    \n    // クリックで提案モードに変更\n    this.proactiveSuggestion.onclick = () => {\n      this.currentMode = suggestion;\n      this.hideProactiveSuggestion();\n      this.updateIndicatorForMode(suggestion, 0.9);\n    };\n  }\n\n  /**\n   * Proactive UX提案を非表示\n   */\n  hideProactiveSuggestion() {\n    if (this.proactiveSuggestion) {\n      this.proactiveSuggestion.style.display = 'none';\n    }\n  }\n\n  /**\n   * 指定モードでインジケーター更新\n   */\n  updateIndicatorForMode(mode, confidence) {\n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[mode].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n  }\n\n  /**\n   * ジェスチャーコントロール有効化\n   */\n  enableGestureControl() {\n    // 旧スワイプジェスチャー機能は削除（ラジオボタンUIに統合済み）\n    // ラジオボタンで直接モード選択可能になったため、スワイプ操作は不要\n    this.gestureEnabled = true;\n  }\n\n  /**\n   * アクションボタン作成\n   */\n  createActionButtons() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;\n\n    // 履歴ボタン削除 - タスク進行状況に置き換え済み\n\n    // クリアオールボタン\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '🧹 全削除';\n    clearBtn.style.cssText = this.getModernButtonStyles('danger');\n    clearBtn.addEventListener('click', () => this.clearAll());\n\n    // historyBtn削除済み\n    container.appendChild(clearBtn);\n\n    return container;\n  }\n\n  /**\n   * スタイル定義\n   */\n  getContainerStyles() {\n    const positions = {\n      'bottom-right': 'bottom: 20px; right: 20px;',\n      'bottom-left': 'bottom: 20px; left: 20px;',\n      'top-right': 'top: 20px; right: 20px;',\n      'top-left': 'top: 20px; left: 20px;',\n      'center': 'top: 50%; left: 50%; transform: translate(-50%, -50%);'\n    };\n\n    // 2025 Glassmorphism仕様：ダーク・ライト両対応\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(99, 102, 241, 0.2)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)'\n    };\n\n    // 侘び寂びモード - 枯山水の静寂：独自のアイデンティティ\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))',\n      backdropFilter: 'blur(20px) saturate(120%)',\n      border: '1px solid rgba(93, 64, 55, 0.5)',\n      boxShadow: '0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      position: fixed;\n      ${positions[this.config.position] || positions['bottom-right']}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  getHeaderStyles() {\n    // ダークモードと同じ紫グラデーションで統一\n    const gradientColors = 'linear-gradient(135deg, #4f46e5, #7c3aed)';\n\n    return `\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `;\n  }\n\n  getOutputStyles() {\n    // カスタムスクロールバーのCSSを注入\n    this.addScrollbarStyles();\n\n    return `\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.2)'};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)'};\n    `;\n  }\n\n  /**\n   * スクロールバーのカスタムスタイルをページに注入\n   */\n  addScrollbarStyles() {\n    if (document.getElementById('custom-scrollbar-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'custom-scrollbar-styles';\n    style.textContent = `\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.5)'};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* 2025年トレンド: 微細な浮遊感アニメーション */\n      @keyframes gentleFloat {\n        0%, 100% { \n          transform: translateY(0px) scale(1);\n        }\n        25% { \n          transform: translateY(-2px) scale(1.005);\n        }\n        50% { \n          transform: translateY(-1px) scale(1.002);\n        }\n        75% { \n          transform: translateY(-3px) scale(1.008);\n        }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  getInputStyles() {\n    // 2025 Glassmorphism仕様：入力フィールド\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))',\n      border: '1px solid rgba(255, 255, 255, 0.5)',\n      boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)'\n    };\n\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))',\n      border: '1px solid rgba(97, 97, 97, 0.5)',\n      boxShadow: '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(55, 65, 81, 0.6)'};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `;\n  }\n\n  getModernButtonStyles(type) {\n    const styles = {\n      primary: this.isWabiSabiMode ? `\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      ` : `\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,\n      secondary: this.isWabiSabiMode ? `\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,\n      danger: this.isWabiSabiMode ? `\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `\n    };\n\n    return `\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `;\n  }\n\n  getModeButtonStyles(isActive, mode) {\n    // モードカラー設定\n    const modeColors = {\n      generate: 'linear-gradient(135deg, #22c55e, #16a34a)',  // Green - チャット欄と同じ緑色\n      modify: 'linear-gradient(135deg, #22c55e, #16a34a)',    // Green - チャット欄と同じ緑色\n      delete: 'linear-gradient(135deg, #22c55e, #16a34a)'     // Green - チャット欄と同じ緑色\n    };\n    \n    return `\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive ? 'white' : 'rgba(255, 255, 255, 0.7)'};\n      background: ${isActive ? modeColors[mode] : 'transparent'};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `;\n  }\n\n  /**\n   * イベントバインディング\n   */\n  bindEvents() {\n    // キーボードショートカット\n    document.addEventListener('keydown', (e) => {\n      // 設定されたキーでUI表示切替\n      if (e.key === this.config.activationKey) {\n        e.preventDefault();\n        this.toggle();\n        return;\n      }\n      \n      // Enterキー処理はinitUI()内で行うため、ここでは処理しない\n      // （IME対応のため）\n      \n      // Escapeで非表示\n      if (this.isVisible && e.key === 'Escape') {\n        this.hide();\n      }\n      \n      // Ctrl+Z/Ctrl+Y でUndo/Redo\n      if (this.isVisible && e.ctrlKey) {\n        if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault();\n          this.undo();\n        } else if (e.key === 'y' || (e.key === 'z' && e.shiftKey)) {\n          e.preventDefault();\n          this.redo();\n        }\n      }\n    });\n\n    // 入力フィールドのスタイル調整\n    this.input.addEventListener('focus', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8BC34A';\n        this.input.style.boxShadow = '0 0 5px rgba(139, 195, 74, 0.5)';\n      } else {\n        this.input.style.borderColor = '#74b9ff';\n        this.input.style.boxShadow = '0 0 5px rgba(116, 185, 255, 0.5)';\n      }\n    });\n\n    this.input.addEventListener('blur', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8D6E63';\n        this.input.style.boxShadow = 'none';\n      } else {\n        this.input.style.borderColor = '#4a90e2';\n        this.input.style.boxShadow = 'none';\n      }\n    });\n  }\n\n  /**\n   * UI表示/非表示切替\n   */\n  toggle() {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * UI表示\n   */\n  show() {\n    this.container.style.display = 'flex';\n    this.container.style.flexDirection = 'column';\n    this.floatingContainer.style.display = 'flex';\n\n    // UIフォームの位置に合わせて配置（少し遅延して正確な位置を取得）\n    setTimeout(() => {\n      const containerRect = this.container.getBoundingClientRect();\n      this.floatingContainer.style.left = containerRect.left + 'px';\n      this.floatingContainer.style.top = (containerRect.top - 80) + 'px';\n      this.floatingContainer.style.width = containerRect.width + 'px';\n      this.floatingContainer.style.transform = 'none';\n    }, 50);\n\n    this.isVisible = true;\n    this.input.focus();\n\n    // フォーム表示中はチョコアイコンを隠す\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0';\n      this.floatingChocolateIcon.style.pointerEvents = 'none';\n    }\n\n    // コントロールを無効化\n    this.onControlsToggle(true);\n    // コントロール停止時も静かに\n  }\n\n  /**\n   * UI非表示\n   */\n  hide() {\n    this.container.style.display = 'none';\n    this.floatingContainer.style.display = 'none';\n    this.isVisible = false;\n\n    // フォーム非表示時はチョコアイコンを再表示\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.pointerEvents = 'auto';\n    }\n\n    // コントロールを再有効化\n    this.onControlsToggle(false);\n    this.logDebug('🎮 コントロールを再開');\n  }\n\n  /**\n   * モード切り替え\n   */\n  switchMode(mode) {\n    if (this.currentMode === mode) return;\n    \n    this.currentMode = mode;\n    \n    // モードボタンのスタイル更新\n    this.container.querySelectorAll('[data-mode]').forEach(btn => {\n      const isActive = btn.dataset.mode === mode;\n      btn.style.cssText = this.getModeButtonStyles(isActive, btn.dataset.mode);\n    });\n    \n    // 入力フィールドのプレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n    \n    // 実行ボタンのラベルと色更新\n    const executeBtn = this.container.querySelector('#execute-btn');\n    const labels = {\n      generate: '🎨 Generate Object',\n      modify: '✏️ Apply Changes', \n      delete: '🗑️ Delete Objects'\n    };\n    \n    const buttonColors = {\n      generate: 'linear-gradient(135deg, #5b21b6, #4c1d95)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)', \n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    executeBtn.innerHTML = `<span>${labels[mode]}</span>`;\n    executeBtn.style.background = buttonColors[mode];\n    \n    // モード切り替え通知は不要（ボタンで分かるため）\n  }\n  \n  /**\n   * モード別プレースホルダー\n   */\n  getPlaceholderForMode(mode) {\n    const placeholders = {\n      generate: '「猫の画像を作って」と話しかけて ⏎ ✨',\n      import: 'ファイルを選択して ⏎ 📁',\n      modify: '選択後「ピンクに変更」と伝えて ⏎ ✏️',\n      delete: '選択後、コマンドをそのまま送って ⏎ 🗑️'\n    };\n    return placeholders[mode] || placeholders.generate;\n  }\n\n  /**\n   * コマンド実行\n   */\n  async executeCommand() {\n    const command = this.input.value.trim();\n    if (!command) return;\n\n    // 事前バリデーション（2025年UX改善）\n    const preValidation = await this.preValidateCommand(command);\n    if (!preValidation.canExecute) {\n      // バリデーション失敗時はフィードバック表示して終了\n      return;\n    }\n\n    await this.proceedWithExecution(command, preValidation.commandType);\n  }\n\n  /**\n   * 削除確認ダイアログ\n   */\n  async showConfirmationDialog(options) {\n    const {\n      icon = '🗑️',\n      title = '確認',\n      message = 'この操作を実行しますか？',\n      confirmText = '実行',\n      cancelText = 'キャンセル',\n      confirmColor = '#ef4444'\n    } = options;\n\n    return new Promise((resolve) => {\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;\n\n      const dialog = document.createElement('div');\n      dialog.style.cssText = `\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(239, 235, 233, 0.4), rgba(215, 204, 200, 0.3))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.3)' : 'rgba(255, 255, 255, 0.5)')};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isWabiSabiMode\n          ? '0 8px 32px rgba(93, 64, 55, 0.2), 0 0 0 1px rgba(161, 136, 127, 0.2)'\n          : (this.isDarkMode\n            ? '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)'\n            : '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)')};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;\n\n      dialog.innerHTML = `\n        <div style=\"font-size: 56px; margin-bottom: 20px;\">${icon}</div>\n        <h3 style=\"margin: 0 0 16px 0; color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;\">\n          ${title}\n        </h3>\n        <p style=\"margin: 0 0 28px 0; color: ${this.isDarkMode ? '#d1d5db' : '#6b7280'}; line-height: 1.6; font-size: 16px;\">\n          ${message}\n        </p>\n        <div style=\"display: flex; gap: 8px; justify-content: center;\">\n          <button id=\"cancel-btn\" style=\"\n            padding: 14px 24px;\n            background: ${this.isDarkMode \n              ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n              : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))'};\n            border: 1px solid ${this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)'};\n            border-radius: 12px;\n            color: ${this.isDarkMode ? '#d1d5db' : '#374151'};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          \">${cancelText}</button>\n          <button id=\"confirm-btn\" style=\"\n            padding: 14px 24px;\n            background: ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')' \n              : confirmColor === '#ef4444'\n              ? 'linear-gradient(135deg, #ef4444, #dc2626)'\n              : 'linear-gradient(135deg, #ff7b47, #f97316)'};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'rgba(99, 102, 241, 0.3)' \n              : confirmColor === '#ef4444' \n              ? 'rgba(239, 68, 68, 0.3)' \n              : 'rgba(255, 123, 71, 0.3)'};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          \">${confirmText}</button>\n        </div>\n      `;\n\n      modal.appendChild(dialog);\n      document.body.appendChild(modal);\n\n      // アニメーション開始\n      requestAnimationFrame(() => {\n        modal.style.opacity = '1';\n        dialog.style.transform = 'scale(1)';\n        dialog.style.opacity = '1';\n      });\n\n      // イベントリスナー\n      dialog.querySelector('#cancel-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(false);\n      };\n\n      dialog.querySelector('#confirm-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(true);\n      };\n\n      // ESCキーでキャンセル\n      const escHandler = (e) => {\n        if (e.key === 'Escape') {\n          this.closeModalWithAnimation(modal);\n          document.removeEventListener('keydown', escHandler);\n          resolve(false);\n        }\n      };\n      document.addEventListener('keydown', escHandler);\n\n      // モーダル背景クリックでキャンセル\n      modal.onclick = (e) => {\n        if (e.target === modal) {\n          this.closeModalWithAnimation(modal);\n          resolve(false);\n        }\n      };\n    });\n  }\n\n  async showDeleteConfirmation(command) {\n    return this.showConfirmationDialog({\n      icon: '🗑️',\n      title: '削除の確認',\n      message: `「${command}」を実行しますか？<br>この操作は取り消すことができません。`,\n      confirmText: '削除実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#ff7b47'\n    });\n  }\n\n  /**\n   * 出力エリアにメッセージ追加\n   */\n  /**\n   * タスクカード追加（従来のaddOutputを置き換え）\n   */\n  addOutput(message, type = 'default', options = {}) {\n    // タスクカード形式で処理\n    if (type === 'task' || type === 'progress') {\n      return this.addTaskCard(message, options);\n    }\n\n    // エラーとシステムメッセージのみ表示\n    if (type === 'error' || type === 'system') {\n      this.addSystemMessage(message, type);\n    }\n  }\n\n  /**\n   * フローティングタスクカード追加\n   */\n  addTaskCard(taskInfo, options = {}) {\n    if (!this.taskCards) this.taskCards = new Map();\n\n    const taskId = options.taskId || `task_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`;\n    const status = options.status || 'pending';\n    const prompt = taskInfo.prompt || taskInfo.command || taskInfo;\n\n    // フローティングカード作成\n    const card = document.createElement('div');\n    card.className = 'floating-task-card';\n    card.setAttribute('data-task-id', taskId);\n\n    // 2025年トレンド: 待機中のアニメーション効果\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    // iOS 26 Liquid Glass + 2026年トレンドスタイル\n    card.style.cssText = this.getFloatingCardStyles(status);\n    // アニメーション用初期状態（非表示）- 強制設定\n    card.style.setProperty('opacity', '0', 'important');\n    card.style.setProperty('transform', 'translateY(20px) scale(0.95)', 'important');\n    card.style.setProperty('filter', 'blur(4px)', 'important');\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    const statusText = {\n      pending: '待機中',\n      processing: '生成中',\n      progress: '進行中',\n      completed: '完了',\n      error: 'エラー'\n    };\n\n    // 温かみのあるメッセージ表示\n    const friendlyMessage = this.getFriendlyMessage(status, prompt, options.errorMessage);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // フローティングコンテナに追加（最新が上に来るように）\n    this.floatingContainer.insertBefore(card, this.floatingContainer.firstChild);\n    \n    // カード表示制限を適用（最新3個まで表示）\n    this.updateCardDisplayLimit();\n\n    this.taskCards.set(taskId, {\n      element: card,\n      status: status,\n      prompt: prompt,\n      originalPrompt: prompt, // 元のプロンプト\n      startTime: Date.now(),\n      endTime: null,\n      error: null,\n      contentType: 'image', // 'image', 'video', etc.\n      model: null,\n      settings: null\n    });\n\n    // カード詳細モーダル用のイベントリスナー\n    this.addCardDetailEvents(card, taskId);\n    \n    // 入場アニメーション\n    this.animateCardEntrance(card);\n    \n    // 2025年トレンド: シマーエフェクトCSS確保\n    this.ensureShimmerStyles();\n    \n    return taskId;\n  }\n\n  /**\n   * 2025年トレンド: シマーエフェクトスタイルを確保\n   */\n  ensureShimmerStyles() {\n    if (document.querySelector('#chocodrop-shimmer-styles')) return;\n    \n    const styleSheet = document.createElement('style');\n    styleSheet.id = 'chocodrop-shimmer-styles';\n    styleSheet.textContent = `\n      /* 2025年トレンド: シマーエフェクト（強化版） */\n      .chocodrop-shimmer {\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .chocodrop-shimmer::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(255, 255, 255, 0.7)'},\n          transparent\n        );\n        animation: shimmer 1.5s infinite;\n        pointer-events: none;\n        z-index: 1;\n      }\n      \n      .chocodrop-shimmer > * {\n        position: relative;\n        z-index: 2;\n      }\n      \n      /* 2025年トレンド: 微細な浮遊感 */\n      .chocodrop-float {\n        animation: gentleFloat 4s ease-in-out infinite;\n      }\n      \n      /* 待機中の特別なパルス効果（強化版） */\n      .chocodrop-shimmer.floating-task-card {\n        animation: gentleFloat 4s ease-in-out infinite, subtlePulse 3s ease-in-out infinite;\n      }\n      \n      @keyframes subtlePulse {\n        0%, 100% { \n          box-shadow: 0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1);\n        }\n        50% { \n          box-shadow: 0 12px 40px rgba(15, 23, 42, 0.5), 0 0 0 1px rgba(99, 102, 241, 0.3);\n        }\n      }\n    `;\n    \n    document.head.appendChild(styleSheet);\n  }\n\n  /**\n   * フローティングタスクカード更新\n   */\n  updateTaskCard(taskId, status, options = {}) {\n    if (!this.taskCards || !this.taskCards.has(taskId)) return;\n\n    const taskData = this.taskCards.get(taskId);\n    const card = taskData.element;\n\n    // ステータス更新\n    taskData.status = status;\n\n    // エラー情報を保存\n    if (status === 'error' && options.errorMessage) {\n      taskData.error = options.errorMessage;\n    }\n\n    // 2025年トレンド: アニメーション状態管理\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      // 待機中・処理中: シマーエフェクト追加\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    } else {\n      // 完了・エラー: シマーエフェクト削除\n      card.classList.remove('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    // 温かみのあるメッセージ更新（エラー時は理由も含める）\n    const friendlyMessage = this.getFriendlyMessage(status, taskData.prompt, taskData.error);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // スタイル更新（完了状態に応じて）\n    card.style.cssText = this.getFloatingCardStyles(status);\n\n    // 完了時の自動消去アニメーション\n    if (status === 'completed') {\n      this.animateCardSuccess(card, taskId);\n    } else if (status === 'error') {\n      this.animateCardError(card, taskId);\n    }\n  }\n\n  /**\n   * システムメッセージ表示\n   */\n  addSystemMessage(message, type) {\n    const entry = document.createElement('div');\n    entry.className = `system-message ${type}`;\n    entry.style.cssText = `\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type === 'error' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(107, 114, 128, 0.1)'};\n      border: 1px solid ${type === 'error' ? 'rgba(239, 68, 68, 0.3)' : 'rgba(107, 114, 128, 0.3)'};\n      color: ${type === 'error' ? '#fca5a5' : (this.isDarkMode ? '#d1d5db' : '#6b7280')};\n    `;\n    entry.textContent = message;\n    this.outputDiv.appendChild(entry);\n    this.scrollToBottom();\n  }\n\n  /**\n   * 入力フィールド直下のフィードバック表示（2025年トレンド準拠）\n   */\n  showInputFeedback(message, type = 'error', options = {}) {\n    if (type === 'success') {\n      return;\n    }\n\n    if (type === 'error') {\n      this.addOutput(`⚠️ ${message}`, 'error');\n    } else {\n      this.addOutput(`💡 ${message}`, 'system');\n    }\n\n    if (!this.feedbackOverlay) {\n      const overlay = document.createElement('div');\n      overlay.className = 'input-feedback-overlay';\n      overlay.style.cssText = `\n        position: absolute;\n        left: 16px;\n        right: 16px;\n        bottom: 12px;\n        z-index: 1200;\n        pointer-events: auto;\n        display: flex;\n        gap: 8px;\n        align-items: center;\n        padding: 12px 16px;\n        border-radius: 12px;\n        backdrop-filter: blur(10px);\n        -webkit-backdrop-filter: blur(10px);\n        transition: opacity 180ms ease, transform 180ms ease;\n        opacity: 0;\n        transform: translateY(8px);\n      `;\n      this.container.appendChild(overlay);\n      this.feedbackOverlay = overlay;\n    }\n\n    const overlay = this.feedbackOverlay;\n    overlay.innerHTML = '';\n\n    const isError = type === 'error';\n    const background = isError\n      ? (this.isDarkMode ? 'rgba(239, 68, 68, 0.28)' : 'rgba(239, 68, 68, 0.18)')\n      : (this.isDarkMode ? 'rgba(59, 130, 246, 0.25)' : 'rgba(59, 130, 246, 0.18)');\n    const border = isError\n      ? '1px solid rgba(239, 68, 68, 0.45)'\n      : '1px solid rgba(59, 130, 246, 0.35)';\n    const color = isError\n      ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n      : (this.isDarkMode ? '#bfdbfe' : '#1d4ed8');\n\n    overlay.style.background = background;\n    overlay.style.border = border;\n    overlay.style.color = color;\n\n    const messageSpan = document.createElement('span');\n    messageSpan.textContent = message;\n    messageSpan.style.flex = '1';\n    overlay.appendChild(messageSpan);\n\n    if (options.actions && Array.isArray(options.actions) && options.actions.length > 0) {\n      const actionsContainer = document.createElement('div');\n      actionsContainer.style.cssText = `\n        display: flex;\n        gap: 8px;\n      `;\n\n      options.actions.forEach(action => {\n        const button = document.createElement('button');\n        button.type = 'button';\n        button.textContent = action.label;\n        button.style.cssText = `\n          padding: 6px 12px;\n          border-radius: 999px;\n          border: none;\n          cursor: pointer;\n          background: ${isError ? 'rgba(239, 68, 68, 0.28)' : 'rgba(59, 130, 246, 0.25)'};\n          color: inherit;\n          font-size: 11px;\n          transition: background 0.2s ease;\n        `;\n        button.addEventListener('mouseenter', () => {\n          button.style.background = isError ? 'rgba(239, 68, 68, 0.38)' : 'rgba(59, 130, 246, 0.35)';\n        });\n        button.addEventListener('mouseleave', () => {\n          button.style.background = isError ? 'rgba(239, 68, 68, 0.28)' : 'rgba(59, 130, 246, 0.25)';\n        });\n        button.addEventListener('click', () => {\n          if (typeof action.onClick === 'function') {\n            action.onClick();\n          }\n        });\n        actionsContainer.appendChild(button);\n      });\n\n      overlay.appendChild(actionsContainer);\n    }\n\n    if (this.feedbackAutoClearTimer) {\n      clearTimeout(this.feedbackAutoClearTimer);\n      this.feedbackAutoClearTimer = null;\n    }\n\n    overlay.style.pointerEvents = 'auto';\n    overlay.style.opacity = '1';\n    overlay.style.transform = 'translateY(0)';\n\n    this.currentFeedback = overlay;\n\n    if (type === 'info') {\n      this.feedbackAutoClearTimer = setTimeout(() => this.clearInputFeedback(), options.duration || 3000);\n    }\n  }\n\n  /**\n   * 入力フィードバックをクリア\n   */\n  clearInputFeedback() {\n    if (this.feedbackAutoClearTimer) {\n      clearTimeout(this.feedbackAutoClearTimer);\n      this.feedbackAutoClearTimer = null;\n    }\n\n    if (this.currentFeedback) {\n      const element = this.currentFeedback;\n      element.style.pointerEvents = 'none';\n      element.style.opacity = '0';\n      element.style.transform = 'translateY(8px)';\n      this.currentFeedback = null;\n      setTimeout(() => {\n        element.innerHTML = '';\n      }, 180);\n    }\n  }\n\n  /**\n   * フィードバック用CSSスタイルを確保\n   */\n  ensureFeedbackStyles() {\n    if (document.getElementById('feedback-styles')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'feedback-styles';\n    style.textContent = `\n      @keyframes feedbackSlideIn {\n        from {\n          opacity: 0;\n          transform: translateY(-10px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n      \n      @keyframes feedbackSlideOut {\n        from {\n          opacity: 1;\n          transform: translateY(0);\n        }\n        to {\n          opacity: 0;\n          transform: translateY(-10px);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コマンド事前バリデーション（送信前チェック）\n   */\n  async preValidateCommand(command) {\n    // 1. コマンドタイプ判定\n    const hasSelectedObject = this.sceneManager?.selectedObject || this.selectedFile;\n    const commandType = this.analyzeCommandType(command, hasSelectedObject);\n\n    if (this.selectedFile) {\n      commandType.type = 'import';\n      commandType.mediaType = this.selectedFile.type === 'video' ? 'video' : 'image';\n      commandType.needsTarget = false;\n      commandType.requiresConfirmation = false;\n      commandType.hasExplicitTarget = true;\n      commandType.detectedKeyword = commandType.detectedKeyword || 'import';\n    }\n\n    // 最新の解析結果をUIモードへ反映（ユーザー入力優先）\n    if (commandType.type && this.selectMode && commandType.type !== this.currentMode) {\n      this.selectMode(commandType.type, false, commandType.detectedKeyword || null);\n    }\n\n    // 2. 空コマンドの場合\n    if (commandType.type === 'empty') {\n      this.showInputFeedback('💡 何をしましょうか？コマンドを入力してください', 'info');\n      return { canExecute: false, reason: 'empty_command' };\n    }\n    \n    // 3. 対象が必要なコマンドの事前チェック\n    if (commandType.needsTarget && !hasSelectedObject) {\n      const canAttemptSearch = !!this.sceneManager && (commandType.hasExplicitTarget || commandType.type === 'modify');\n      \n      // まず自然言語で対象を探してみる\n      if (canAttemptSearch) {\n        this.logDebug('🔍 Searching for explicitly mentioned target...');\n        try {\n          const foundTarget = await this.sceneManager?.findObjectByKeyword(command);\n          if (foundTarget) {\n            // 対象を発見！選択してアニメーション表示\n            this.sceneManager.selectObject(foundTarget);\n            this.showInputFeedback(`✨ 「${foundTarget.name || foundTarget.userData?.originalPrompt || 'オブジェクト'}」を見つけました！`, 'success');\n            // 1秒待ってから実行継続\n            setTimeout(() => this.executeCommandAfterValidation(command, commandType), 1000);\n            return { canExecute: false, reason: 'target_found_waiting' };\n          } else {\n            // 対象が見つからない場合\n            this.showInputFeedback(\n              '🔍 指定されたオブジェクトが見つかりません',\n              'error',\n              {\n                actions: [\n                  {\n                    label: '選択する',\n                    onClick: () => {\n                      this.clearInputFeedback();\n                      this.showInputFeedback('👆 3Dシーン内のオブジェクトをクリックで選択してください', 'info');\n                    }\n                  },\n                  {\n                    label: '新規作成に変更',\n                    onClick: () => {\n                      // コマンドを生成モード向けに変換\n                      const newCommand = this.convertToGenerateCommand(command);\n                      this.input.value = newCommand;\n                      this.clearInputFeedback();\n                      this.showInputFeedback('✏️ コマンドを新規作成用に変更しました', 'success');\n                    }\n                  }\n                ]\n              }\n            );\n            return { canExecute: false, reason: 'target_not_found' };\n          }\n        } catch (error) {\n          this.logDebug('❌ Error searching for target:', error);\n          this.showInputFeedback('⚠️ 対象の検索中にエラーが発生しました', 'error');\n          return { canExecute: false, reason: 'search_error' };\n        }\n      } else {\n        // 一般的な「対象が必要」エラー\n        this.showInputFeedback(\n          '🎯 操作対象が選択されていません',\n          'error',\n          {\n            actions: [\n              {\n                label: '選択する',\n                onClick: () => {\n                  this.clearInputFeedback();\n                  this.showInputFeedback('👆 3Dシーン内のオブジェクトをクリックで選択してください', 'info');\n                }\n              },\n              {\n                label: 'ヒント',\n                onClick: () => {\n                  this.clearInputFeedback();\n                  this.showInputFeedback('💡 「インポートした猫を」「選択した画像を」のように対象を明示してみてください', 'info');\n                }\n              }\n            ]\n          }\n        );\n        return { canExecute: false, reason: 'no_target_selected' };\n      }\n    }\n    \n    // 4. バリデーション成功\n    return { canExecute: true, commandType };\n  }\n\n  /**\n   * バリデーション後のコマンド実行\n   */\n  async executeCommandAfterValidation(command, commandType) {\n    // 既存のexecuteCommandロジックを継続\n    // フィードバックをクリアしてから実行\n    this.clearInputFeedback();\n    \n    // 元のexecuteCommandの続きを実行\n    await this.proceedWithExecution(command, commandType);\n  }\n\n  async proceedWithExecution(command, commandType) {\n    const hasSelectedObject = this.sceneManager?.selectedObject || this.selectedFile;\n    if (!commandType) {\n      commandType = this.analyzeCommandType(command, hasSelectedObject);\n    }\n\n    if (this.selectedFile) {\n      if (this.currentMode !== 'import') {\n        this.selectMode('import', false);\n      }\n      this.currentMode = 'import';\n    } else {\n      this.currentMode = commandType.type;\n    }\n\n    if (commandType.requiresConfirmation) {\n      const confirmed = await this.showDeleteConfirmation(command);\n      if (!confirmed) {\n        this.addOutput('❌ 削除をキャンセルしました', 'system');\n        return;\n      }\n    }\n\n    this.input.value = '';\n    this.clearInputFeedback();\n    this.hideProactiveSuggestion();\n\n    const taskId = this.addTaskCard(command, { status: 'processing' });\n\n    this.saveCommandToHistory({\n      command: command,\n      mode: this.currentMode,\n      mediaType: commandType.mediaType,\n      timestamp: Date.now()\n    });\n\n    let result;\n\n    try {\n      const modePrefix = this.getModePrefix(this.currentMode);\n      const fullCommand = `${modePrefix}${command}`;\n\n      this.logDebug('🔍 Current mode check:', this.currentMode);\n      if (this.currentMode === 'import') {\n        this.logDebug('📁 Import mode detected - bypassing SceneManager');\n        if (!this.selectedFile) {\n          throw new Error('ファイルが選択されていません。まずファイルを選択してください。');\n        }\n        result = await this.handleImportCommand(command);\n      } else if (this.sceneManager) {\n        result = await this.sceneManager.executeCommand(fullCommand);\n      } else if (this.client) {\n        if (this.currentMode === 'generate') {\n          if (commandType.mediaType === 'video') {\n            result = await this.client.generateVideo(command, {\n              model: this.selectedVideoService || undefined\n            });\n          } else {\n            result = await this.client.generateImage(command, {\n              service: this.selectedImageService || undefined\n            });\n          }\n        } else if (this.currentMode === 'modify') {\n          const selectedObject = this.sceneManager?.selectedObject;\n          if (!selectedObject) {\n            throw new Error('変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。');\n          }\n          result = await this.client.modifySelectedObject(selectedObject, command);\n        } else if (this.currentMode === 'delete') {\n          const selectedObject = this.sceneManager?.selectedObject;\n          if (!selectedObject && !this.sceneManager?.getSelectedObjects()?.length) {\n            this.addOutput('⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。', 'system');\n            return;\n          }\n          const confirmMessage = `本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;\n          if (!confirm(confirmMessage)) {\n            this.addOutput('❌ 削除がキャンセルされました', 'system');\n            return;\n          }\n          result = await this.client.deleteObjects(command);\n        } else {\n          result = await this.client.executeCommand(fullCommand);\n        }\n      } else {\n        throw new Error('SceneManager または Client が設定されていません');\n      }\n\n      if (result && result.taskId) {\n        this.connectToProgress(result.taskId, taskId);\n        this.currentTaskId = result.taskId;\n      }\n\n      if (taskId) {\n        this.updateTaskCard(taskId, 'completed');\n      }\n\n      if (result.modelName) {\n        // モデル情報がある場合はモーダル表示用に保持（必要に応じて拡張）\n      }\n\n      if (result.objectId) {\n        // オブジェクト ID の提示は将来のUI更新で対応\n      }\n\n      if (result.position) {\n        // 位置情報はデバッグ表示のみ（現状は未使用）\n      }\n\n      if (commandType.mediaType) {\n        // メディアタイプ別の追加処理が必要になった場合に備えたフック\n      }\n    } catch (error) {\n      const errorMessages = {\n        generate: `❌ ${commandType.mediaType === 'video' ? '動画' : '画像'}生成エラー`,\n        modify: '❌ 変更エラー',\n        delete: '❌ 削除エラー'\n      };\n\n      if (taskId) {\n        this.updateTaskCard(taskId, 'error', { errorMessage: error.message });\n      }\n\n      this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`, 'error');\n      console.error('Command execution error:', error);\n    }\n\n    if (this.sceneManager && this.sceneManager.selectedObject) {\n      if (this.currentMode === 'modify' || this.currentMode === 'delete') {\n        setTimeout(() => {\n          this.sceneManager.deselectObject();\n        }, 500);\n      }\n    }\n\n    if (this.config.autoScroll) {\n      this.scrollToBottom();\n    }\n  }\n\n  /**\n   * コマンドを生成モード向けに変換\n   */\n  convertToGenerateCommand(command) {\n    // 「猫を大きく」→「大きな猫の画像を作って」のような変換\n    const patterns = [\n      { from: /(.+)を大きく/, to: '大きな$1の画像を作って' },\n      { from: /(.+)を小さく/, to: '小さな$1の画像を作って' },\n      { from: /(.+)を(.+)に/, to: '$2の$1の画像を作って' },\n      { from: /(.+)を(.+)く/, to: '$2い$1の画像を作って' }\n    ];\n    \n    for (const { from, to } of patterns) {\n      if (from.test(command)) {\n        return command.replace(from, to);\n      }\n    }\n    \n    // パターンマッチしない場合はデフォルト\n    return `${command}の画像を作って`;\n  }\n\n  /**\n   * タスクカードスタイル取得\n   */\n  getTaskCardStyles(status) {\n    const baseStyles = `\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(255, 255, 255, 0.15)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.25)'};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;\n\n    const statusBorders = {\n      pending: 'rgba(167, 139, 250, 0.3)',     // 薄紫\n      processing: 'rgba(192, 132, 252, 0.5)',  // 紫（強調）\n      progress: 'rgba(236, 72, 153, 0.4)',     // ピンク\n      completed: 'rgba(167, 139, 250, 0.4)',   // 紫\n      error: 'rgba(239, 68, 68, 0.4)'          // 赤\n    };\n\n    return baseStyles + `border-left: 3px solid ${statusBorders[status] || statusBorders.pending};`;\n  }\n\n  /**\n   * フローティングカードスタイル（iOS 26 Liquid Glass + 2026年トレンド）\n   */\n  getFloatingCardStyles(status) {\n    // 2025年Glassmorphism仕様：フローティングタスクカード\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)',\n      color: '#ffffff'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)',\n      color: '#1f2937'\n    };\n\n    const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n    \n    // 2025年トレンド: 待機中のシマーエフェクト\n    const shimmerEffect = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      position: relative;\n      overflow: hidden;\n      &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'},\n          transparent\n        );\n        animation: shimmer 2s infinite;\n      }\n    ` : '';\n\n    // 2025年トレンド: 微細な浮遊感\n    const floatingAnimation = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      animation: gentleFloat 4s ease-in-out infinite, shimmer 2s infinite;\n    ` : '';\n\n    return `\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      ${shimmerEffect}\n      ${floatingAnimation}\n      position: relative;\n      overflow: hidden;\n    `;\n  }\n\n  /**\n   * カード表示制限を適用（最大3個まで表示、それ以上は「+ N」で表示）\n   */\n  updateCardDisplayLimit() {\n    const maxVisibleCards = 3;\n    const allCards = Array.from(this.floatingContainer.children).filter(child => \n      !child.classList.contains('overflow-counter')\n    );\n    \n    // 既存のカウンターを削除\n    const existingCounter = this.floatingContainer.querySelector('.overflow-counter');\n    if (existingCounter) {\n      existingCounter.remove();\n    }\n    \n    if (allCards.length <= maxVisibleCards) {\n      // カードが3個以下の場合、すべて表示\n      allCards.forEach(card => {\n        card.style.display = 'flex';\n      });\n    } else {\n      // カードが4個以上の場合、最新3個のみ表示し、残りはカウンター表示\n      const visibleCards = allCards.slice(0, maxVisibleCards); // 最初の3個（最新）\n      const hiddenCount = allCards.length - maxVisibleCards;\n      \n      // 古いカードを非表示\n      allCards.forEach((card, index) => {\n        if (index < maxVisibleCards) {\n          card.style.display = 'flex';\n        } else {\n          card.style.display = 'none';\n        }\n      });\n      \n      // 「+ N」カウンターを作成\n      const counter = document.createElement('div');\n      counter.className = 'overflow-counter';\n      // テーマに応じたカウンタースタイル\n      const counterBaseColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.12)';\n      const counterBorderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.15)';\n      const counterTextColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.6)';\n      \n      counter.style.cssText = `\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;\n      counter.innerHTML = `+ ${hiddenCount}`;\n      \n      // カウンターを最後に挿入（最下部に配置）\n      this.floatingContainer.appendChild(counter);\n      \n      // カウンターのホバー効果（テーマ対応）\n      const counterHoverColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.18)';\n      \n      counter.addEventListener('mouseenter', () => {\n        counter.style.background = counterHoverColor;\n        counter.style.transform = 'scale(1.05)';\n      });\n      \n      counter.addEventListener('mouseleave', () => {\n        counter.style.background = counterBaseColor;\n        counter.style.transform = 'scale(1)';\n      });\n    }\n  }\n\n  /**\n   * カードに詳細モーダル用のイベントリスナーを追加\n   */\n  addCardDetailEvents(card, taskId) {\n    // タッチデバイス検出\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    \n    if (isTouchDevice) {\n      // モバイル/タブレット: タップで詳細表示\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    } else {\n      // デスクトップ: ホバーで詳細表示\n      let hoverTimeout;\n      \n      card.addEventListener('mouseenter', () => {\n        hoverTimeout = setTimeout(() => {\n          this.showTaskDetailModal(taskId);\n        }, 800); // 0.8秒ホバーで表示\n      });\n      \n      card.addEventListener('mouseleave', () => {\n        if (hoverTimeout) {\n          clearTimeout(hoverTimeout);\n        }\n      });\n      \n      // クリックでも表示（デスクトップでも使いやすく）\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    }\n  }\n\n  /**\n   * タスク詳細モーダルを表示\n   */\n  showTaskDetailModal(taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData) return;\n    \n    // 既存のモーダルを削除\n    const existingModal = document.querySelector('.task-detail-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n    \n    // モーダル作成\n    const modal = this.createTaskDetailModal(taskData);\n    document.body.appendChild(modal);\n    \n    // 入場アニメーション\n    requestAnimationFrame(() => {\n      modal.style.opacity = '1';\n      modal.querySelector('.modal-content').style.transform = 'translateY(0) scale(1)';\n    });\n  }\n\n  /**\n   * タスク詳細モーダルのHTML要素を作成\n   */\n  createTaskDetailModal(taskData) {\n    const modal = document.createElement('div');\n    modal.className = 'task-detail-modal';\n    \n    // テーマに応じたスタイル\n    const overlayColor = this.isDarkMode ? 'rgba(0, 0, 0, 0.6)' : 'rgba(0, 0, 0, 0.4)';\n    const modalBg = this.isDarkMode ? 'rgba(20, 20, 20, 0.95)' : 'rgba(255, 255, 255, 0.95)';\n    const modalBorder = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n    const textColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(0, 0, 0, 0.9)';\n    const labelColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)';\n    \n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;\n    \n    // 実行時間計算\n    const duration = taskData.endTime \n      ? ((taskData.endTime - taskData.startTime) / 1000).toFixed(1)\n      : ((Date.now() - taskData.startTime) / 1000).toFixed(1);\n    \n    // ステータス表示\n    const statusText = taskData.status === 'pending' ? '待機中' \n                    : taskData.status === 'in-progress' ? '実行中' \n                    : taskData.status === 'completed' ? '完了' \n                    : 'エラー';\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;\">\n        <h3 style=\"margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;\">タスク詳細</h3>\n        <button class=\"close-btn\" style=\"\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        \">×</button>\n      </div>\n      \n      <div style=\"space-y: 16px;\">\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📝 元のプロンプト</div>\n          <div style=\"color: ${textColor}; font-size: 14px; line-height: 1.4;\">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📊 ステータス</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">⏱️ 実行時間</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${duration}秒</div>\n        </div>\n        \n        ${taskData.error ? `\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">❌ エラー詳細</div>\n          <div style=\"color: #ef4444; font-size: 14px; line-height: 1.4;\">${taskData.error}</div>\n        </div>\n        ` : ''}\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">🎨 コンテンツタイプ</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${taskData.contentType || '画像'}</div>\n        </div>\n      </div>\n    `;\n    \n    // イベントリスナー\n    modalContent.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    const closeBtn = modalContent.querySelector('.close-btn');\n    closeBtn.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    closeBtn.addEventListener('mouseenter', () => {\n      closeBtn.style.color = textColor;\n    });\n    \n    closeBtn.addEventListener('mouseleave', () => {\n      closeBtn.style.color = labelColor;\n    });\n    \n    modal.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    modal.appendChild(modalContent);\n    return modal;\n  }\n\n  /**\n   * タスク詳細モーダルを閉じる\n   */\n  closeTaskDetailModal(modal) {\n    modal.style.opacity = '0';\n    modal.querySelector('.modal-content').style.transform = 'translateY(20px) scale(0.95)';\n    \n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    }, 300);\n  }\n\n  /**\n   * カード入場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardEntrance(card) {\n    // iOS 26 Liquid Glass 入場エフェクト\n    card.style.transform = 'translateY(20px) scale(0.95)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(4px)';\n\n    requestAnimationFrame(() => {\n      card.style.transition = 'all 0.6s cubic-bezier(0.16, 1, 0.3, 1)';\n      card.style.transform = 'translateY(0) scale(1)';\n      card.style.opacity = '1';\n      card.style.filter = 'blur(0px)';\n\n      // 2026年トレンド: 微細な光る効果\n      card.style.boxShadow = '0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)';\n    });\n  }\n\n  /**\n   * 成功時アニメーション + 自動消去（iOS 26 Liquid Glass）\n   */\n  animateCardSuccess(card, taskId) {\n    // iOS 26 Liquid Glass 成功エフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(76, 175, 80, 0.6)';\n    card.style.transform = 'scale(1.08)';\n    card.style.boxShadow = '0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)';\n    card.style.filter = 'brightness(1.1) saturate(1.2)';\n\n    // 2026年トレンド: 流体的な戻りアニメーション\n    setTimeout(() => {\n      card.style.transform = 'scale(1.02)';\n      card.style.filter = 'brightness(1.05) saturate(1.1)';\n    }, 150);\n\n    // Liquid Glass風のスムーズなフェードアウト（2秒後に自動削除）\n    setTimeout(() => {\n      this.animateCardExit(card, taskId);\n    }, 2000);\n  }\n\n  /**\n   * エラー時アニメーション（2026年トレンド UX）\n   */\n  animateCardError(card, taskId) {\n    // iOS 26 Liquid Glass エラーエフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(244, 67, 54, 0.7)';\n    card.style.boxShadow = '0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)';\n    card.style.filter = 'saturate(1.3) brightness(1.1)';\n\n    // 2026年トレンド: より自然なpulseアニメーション（shakeより洗練）\n    card.style.animation = 'errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2';\n\n    // UX改善: エラー内容を表示するツールチップ風UI\n    this.addErrorTooltip(card, taskId);\n\n    // エラーは手動で消すまで表示継続（クリックで消去）\n    card.style.cursor = 'pointer';\n    card.onclick = () => this.animateCardExit(card, taskId);\n\n    // 5秒後に自動フェードアウト（UX改善）\n    setTimeout(() => {\n      if (this.taskCards.has(taskId)) {\n        this.animateCardExit(card, taskId);\n      }\n    }, 5000);\n  }\n\n  /**\n   * エラー時のツールチップ表示（UX改善）\n   */\n  addErrorTooltip(card, taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData || !taskData.error) return;\n\n    // ツールチップ要素作成\n    const tooltip = document.createElement('div');\n    tooltip.style.cssText = `\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;\n    tooltip.textContent = taskData.error;\n\n    card.style.position = 'relative';\n    card.appendChild(tooltip);\n\n    // フェードイン\n    requestAnimationFrame(() => {\n      tooltip.style.opacity = '1';\n    });\n\n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      if (tooltip.parentNode) {\n        tooltip.style.opacity = '0';\n        setTimeout(() => {\n          if (tooltip.parentNode) {\n            tooltip.parentNode.removeChild(tooltip);\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * カード退場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardExit(card, taskId) {\n    // iOS 26 Liquid Glass 退場エフェクト - 2026年トレンドの「スッと消える」\n    card.style.transition = 'all 0.28s cubic-bezier(0.4, 0, 0.2, 1)';\n    card.style.transform = 'translateY(-12px) scale(0.92)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(6px) brightness(1.2)';\n\n    // 2026年トレンド: 消去時の微細な光の拡散効果\n    card.style.boxShadow = '0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)';\n\n    setTimeout(() => {\n      if (card.parentNode) {\n        card.parentNode.removeChild(card);\n      }\n      this.taskCards.delete(taskId);\n      // カード削除後に表示制限を再適用\n      this.updateCardDisplayLimit();\n    }, 280);\n  }\n\n  /**\n   * ユーザーの表現スタイルを自然に感知\n   */\n  getResponseType(prompt) {\n    // ユーザーの表現スタイルを自然に感知\n    if (/ちょこっと|ちょこん|少し|軽く/.test(prompt) || prompt.length < 15) {\n      return 'casual';\n    }\n    if (/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)) {\n      return 'magical';\n    }\n    return 'balanced'; // 80%がここに該当\n  }\n\n  /**\n   * 温かみのあるメッセージを生成（マーケ提案ベース）\n   */\n  getFriendlyMessage(status, prompt, errorMessage = null) {\n    const shortPrompt = prompt.length > 15 ? prompt.substring(0, 15) + '...' : prompt;\n\n    // 自然な応答システム適用\n    const responseType = this.getResponseType(prompt);\n\n    switch (status) {\n      case 'pending':\n        return responseType === 'casual' ? 'ちょこっと準備中です...' :\n               responseType === 'magical' ? '魔法をかけようとしています...' :\n               'ちょこっと魔法の準備中...';\n      case 'processing':\n      case 'in-progress':\n      case 'progress':\n        // Modify mode specific messages for processing\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整中です...' :\n                 responseType === 'magical' ? 'イメージを変化させています...' :\n                 'ちょこんと編集中です...';\n        }\n        return responseType === 'casual' ? 'ちょこんと配置中です...' :\n               responseType === 'magical' ? 'あなたの想いを形にしています...' :\n               'ちょこっと魔法をかけています...';\n      case 'completed':\n        // Delete mode specific messages\n        if (this.currentMode === 'delete') {\n          return responseType === 'casual' ? 'ちょこっと削除しました！' :\n                 responseType === 'magical' ? 'すっきりと片付きました！' :\n                 'ちょこんと削除完了！すっきりですね！';\n        }\n        // Modify mode specific messages\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整しました！' :\n                 responseType === 'magical' ? '素敵に変身しました！' :\n                 'ちょこんと編集完了！いい感じですね！';\n        }\n        // Default completion messages for other modes\n        return responseType === 'casual' ? 'ちょこっとドロップしました！' :\n               responseType === 'magical' ? '素敵な世界が完成しました！' :\n               'ちょこんと配置完了！素敵ですね！';\n      case 'error':\n        // エラー理由があれば含める\n        if (errorMessage) {\n          const shortError = errorMessage.length > 30 ? errorMessage.substring(0, 30) + '...' : errorMessage;\n          return `❌ ${shortError}`;\n        }\n        return responseType === 'casual' ? 'おっと、エラーが発生しました' :\n               responseType === 'magical' ? '申し訳ございません、処理に失敗しました' :\n               'エラーが発生しました。もう一度お試しください';\n      default:\n        return shortPrompt;\n    }\n  }\n\n  /**\n   * ステータス色取得\n   */\n  getStatusColor(status) {\n    // ネオンパープル/ピンク系で統一（2025トレンド）\n    const colors = {\n      pending: this.isDarkMode ? '#a78bfa' : '#7c3aed',        // 薄紫\n      processing: this.isDarkMode ? '#c084fc' : '#9333ea',     // 紫（生成中）\n      progress: this.isDarkMode ? '#ec4899' : '#be185d',       // ピンク\n      completed: this.isDarkMode ? '#a78bfa' : '#7c3aed',      // 紫（完了も統一）\n      error: this.isDarkMode ? '#f87171' : '#dc2626'           // 赤（エラーのみ）\n    };\n    return colors[status] || colors.pending;\n  }\n\n  /**\n   * ステータスインジケーター作成（パーセント表示なし）\n   */\n  createStatusIndicator(status) {\n    if (status === 'processing' || status === 'progress') {\n      return `\n        <div class=\"status-indicator\" style=\"\n          background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        \">\n          <div class=\"status-pulse\" style=\"\n            background: linear-gradient(90deg, transparent, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'}, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          \"></div>\n        </div>\n        <div style=\"display: flex; align-items: center; gap: 4px; margin-top: 8px;\">\n          <div class=\"status-dots\" style=\"font-size: 10px; color: ${this.isDarkMode ? '#c084fc' : '#9333ea'};\">\n            処理中<span style=\"animation: dots 1.5s infinite;\">...</span>\n          </div>\n        </div>\n      `;\n    }\n    return '';\n  }\n\n  /**\n   * タスク完了アニメーション\n   */\n  animateTaskCompletion(card) {\n    // 控えめなサクセスアニメーション\n    card.style.animation = 'taskComplete 0.8s ease-out';\n\n    // 微妙なパーティクル効果を追加（控えめ）\n    this.addSubtleParticleEffect(card);\n\n    setTimeout(() => {\n      card.style.animation = '';\n    }, 800);\n\n    this.ensureTaskAnimations();\n  }\n\n  /**\n   * 控えめなパーティクル効果\n   */\n  addSubtleParticleEffect(card) {\n    const particles = 3; // 少ない数のパーティクル\n    const rect = card.getBoundingClientRect();\n\n    for (let i = 0; i < particles; i++) {\n      const particle = document.createElement('div');\n      particle.style.cssText = `\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right - 20}px;\n        top: ${rect.top + 10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;\n\n      // ランダムな方向に少し移動\n      const angle = (i / particles) * Math.PI * 2;\n      const distance = 15; // 控えめな距離\n      particle.style.setProperty('--move-x', `${Math.cos(angle) * distance}px`);\n      particle.style.setProperty('--move-y', `${Math.sin(angle) * distance}px`);\n\n      document.body.appendChild(particle);\n\n      // 自動削除\n      setTimeout(() => particle.remove(), 1200);\n    }\n  }\n\n  /**\n   * タスクアニメーション用CSS確保\n   */\n  ensureTaskAnimations() {\n    if (document.getElementById('task-animations')) return;\n\n    const style = document.createElement('style');\n    style.id = 'task-animations';\n    style.textContent = `\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * プログレス付きタスクステータス表示（互換性のため）\n   */\n  addTaskStatus(message, percent = 0, taskId = null) {\n    const id = taskId || `task_${Date.now()}`;\n    return this.addTaskCard(message, {\n      percent: Math.min(Math.max(percent, 0), 100),\n      taskId: id,\n      status: percent > 0 ? 'progress' : 'pending'\n    });\n  }\n\n  /**\n   * プログレス更新\n   */\n  updateTaskProgress(taskId, percent, newMessage = null) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask && newMessage) {\n      // 既存タスクを更新\n      this.addOutput(newMessage, 'progress', { \n        percent: Math.min(Math.max(percent, 0), 100),\n        taskId\n      });\n    }\n  }\n\n  /**\n   * タスク完了（プログレスバー削除）\n   */\n  completeTask(taskId) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask) {\n      // 完了アニメーション\n      existingTask.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n      existingTask.style.opacity = '0';\n      existingTask.style.transform = 'translateX(20px)';\n      \n      setTimeout(() => {\n        if (existingTask.parentNode) {\n          existingTask.remove();\n        }\n      }, 500);\n    }\n  }\n\n  /**\n   * SSE接続開始（リアルタイム進捗受信）\n   */\n  connectToProgress(serverTaskId, uiTaskId = null) {\n    if (this.activeConnections.has(serverTaskId)) {\n      return;\n    }\n\n    const eventSource = new EventSource(`/api/progress/${serverTaskId}`);\n    this.activeConnections.set(serverTaskId, eventSource);\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        data.uiTaskId = uiTaskId; // UI用タスクIDを追加\n        this.handleProgressUpdate(data);\n      } catch (error) {\n        console.error('SSE data parse error:', error);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error);\n      this.disconnectProgress(serverTaskId);\n    };\n  }\n\n  /**\n   * 進捗更新処理\n   */\n  handleProgressUpdate(data) {\n    switch (data.type) {\n      case 'connected':\n        this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);\n        break;\n\n      case 'progress':\n        if (data.percent !== undefined && data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'progress', { percent: data.percent });\n        }\n        break;\n\n      case 'completed':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'completed');\n        }\n        this.disconnectProgress(data.taskId);\n        break;\n\n      case 'error':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'error', { errorMessage: data.message });\n        }\n        this.addOutput(`❌ ${data.message}`, 'error');\n        this.disconnectProgress(data.taskId);\n        break;\n    }\n  }\n\n  /**\n   * SSE接続終了\n   */\n  disconnectProgress(taskId) {\n    const connection = this.activeConnections.get(taskId);\n    if (connection) {\n      connection.close();\n      this.activeConnections.delete(taskId);\n    }\n  }\n\n  /**\n   * 出力エリアを最下部にスクロール\n   */\n  scrollToBottom() {\n    if (this.outputDiv) {\n      this.outputDiv.scrollTop = this.outputDiv.scrollHeight;\n    }\n  }\n\n  /**\n   * モード別コマンドプレフィックス\n   */\n  getModePrefix(mode) {\n    // サーバー側でモードを区別するためのプレフィックス\n    const prefixes = {\n      generate: '', // デフォルトは生成モード\n      modify: '[変更] ',\n      delete: '[削除] '\n    };\n    return prefixes[mode] || '';\n  }\n\n  /**\n   * コマンド保存 (Undo/Redoシステム)\n   */\n  saveCommandToHistory(commandData) {\n    // 現在のインデックス以降の履歴を削除（新しいコマンドが実行されたため）\n    this.commandHistory = this.commandHistory.slice(0, this.currentHistoryIndex + 1);\n    \n    // 新しいコマンドを履歴に追加\n    this.commandHistory.push(commandData);\n    this.currentHistoryIndex = this.commandHistory.length - 1;\n    \n    // 最大コマンド保存数を超えた場合、古いコマンドを削除\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentHistoryIndex--;\n    }\n    \n    // ボタン状態を更新\n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undo実行\n   */\n  undo() {\n    if (!this.canUndo()) {\n      this.addOutput('↶ Undoできる操作がありません', 'hint');\n      return;\n    }\n    \n    const command = this.commandHistory[this.currentHistoryIndex];\n    this.currentHistoryIndex--;\n    \n    // Undoの逆操作を実行（簡易実装）\n    if (command.mode === 'generate') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の生成を取り消しました`, 'system');\n      // 実際のシーン管理では最後に作成されたオブジェクトを削除\n      if (this.sceneManager && this.sceneManager.undoLastGenerate) {\n        this.sceneManager.undoLastGenerate();\n      }\n    } else if (command.mode === 'modify') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の変更を取り消しました`, 'system');\n      // 実際のシーン管理では前の状態に戻す\n      if (this.sceneManager && this.sceneManager.undoLastModify) {\n        this.sceneManager.undoLastModify();\n      }\n    } else if (command.mode === 'delete') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の削除を取り消しました`, 'system');\n      // 実際のシーン管理では削除されたオブジェクトを復元\n      if (this.sceneManager && this.sceneManager.undoLastDelete) {\n        this.sceneManager.undoLastDelete();\n      }\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Redo実行\n   */\n  redo() {\n    if (!this.canRedo()) {\n      this.addOutput('↷ Redoできる操作がありません', 'hint');\n      return;\n    }\n    \n    this.currentHistoryIndex++;\n    const command = this.commandHistory[this.currentHistoryIndex];\n    \n    // Redoでコマンドを再実行\n    this.addOutput(`↷ Redo: \"${command.command}\" を再実行しました`, 'system');\n    \n    // 実際のシーン管理でのRedo処理\n    if (this.sceneManager && this.sceneManager.redoCommand) {\n      this.sceneManager.redoCommand(command);\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undoが可能かチェック\n   */\n  canUndo() {\n    return this.currentHistoryIndex >= 0;\n  }\n\n  /**\n   * Redoが可能かチェック\n   */\n  canRedo() {\n    return this.currentHistoryIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Undo/Redoボタンの状態更新\n   */\n  updateUndoRedoButtons() {\n    if (this.undoBtn) {\n      this.undoBtn.disabled = !this.canUndo();\n      this.undoBtn.style.opacity = this.canUndo() ? '1' : '0.4';\n      this.undoBtn.style.cursor = this.canUndo() ? 'pointer' : 'not-allowed';\n    }\n    \n    if (this.redoBtn) {\n      this.redoBtn.disabled = !this.canRedo();\n      this.redoBtn.style.opacity = this.canRedo() ? '1' : '0.4';\n      this.redoBtn.style.cursor = this.canRedo() ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  /**\n   * 確認付き全オブジェクト削除\n   */\n  async clearAllWithConfirmation() {\n    const confirmed = await this.showClearAllConfirmation();\n    if (confirmed) {\n      this.clearAll();\n    }\n  }\n\n  /**\n   * Clear All確認ダイアログ\n   */\n  async showClearAllConfirmation() {\n    return this.showConfirmationDialog({\n      icon: '🧹',\n      title: 'Clear All の確認',\n      message: 'すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。',\n      confirmText: 'Clear All 実行',\n      cancelText: 'キャンセル',\n      confirmColor: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n    });\n  }\n\n  /**\n   * モーダルクローズアニメーション\n   */\n  closeModalWithAnimation(modal) {\n    const dialog = modal.querySelector('div:last-child');\n    dialog.style.transform = 'scale(0.9)';\n    dialog.style.opacity = '0';\n    modal.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (modal.parentElement) {\n        document.body.removeChild(modal);\n      }\n    }, 200);\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    if (this.sceneManager) {\n      this.sceneManager.clearAll();\n      this.addOutput('🧹 全ての実験オブジェクトを削除しました', 'system');\n    } else if (this.client) {\n      // サーバー側での削除は未実装\n      this.addOutput('⚠️ サーバー側削除は未実装', 'error');\n    }\n  }\n\n  // showHistory() メソッド完全削除済み\n\n  /**\n   * 利用可能なコマンド例を表示\n   */\n  showExamples() {\n    const examples = [\n      '右上にドラゴンを作って',\n      '中央に大きなユニコーンを生成',\n      '左下に小さな桜を作って',\n      '空に鳳凰を作って',\n      '地面に神社を作って'\n    ];\n\n    this.addOutput('💡 コマンド例:', 'system');\n    examples.forEach(example => {\n      this.addOutput(`   \"${example}\"`, 'hint');\n    });\n  }\n\n  /**\n   * SceneManager設定\n   */\n  setSceneManager(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.applyServiceSelectionToSceneManager();\n  }\n\n  /**\n   * Client設定\n   */\n  setClient(client) {\n    this.client = client;\n  }\n\n  /**\n   * 設定更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n    // 必要に応じてUIを更新\n    if (newConfig.activationKey) {\n      // 新しいキーバインドを反映するため、イベントリスナーを再設定\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  /**\n   * スタイル再適用\n   */\n  refreshStyles() {\n    // Generateモードボタンのスタイルを再適用\n    const generateBtn = this.container?.querySelector('[data-mode=\"generate\"]');\n    if (generateBtn) {\n      generateBtn.style.cssText = this.getModeButtonStyles(true, 'generate');\n    }\n\n    // Executeボタンのスタイルを再適用\n    const executeBtn = this.container?.querySelector('#execute-btn');\n    if (executeBtn) {\n      executeBtn.style.cssText = this.getModernButtonStyles('primary');\n    }\n\n    // サービスモーダルの背景とスタイルを更新\n    if (this.serviceModal) {\n      this.updateServiceModalStyles();\n    }\n\n    // サービスセレクターテーマ更新\n    this.updateServiceSelectorTheme();\n  }\n\n  updateServiceModalStyles() {\n    if (!this.serviceModal) return;\n\n    // モーダルの背景とボーダーを更新（枯山水の静寂）\n    this.serviceModal.style.background = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.4), rgba(189, 189, 189, 0.35))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))');\n\n    this.serviceModal.style.border = this.isWabiSabiMode\n      ? '1px solid rgba(141, 110, 99, 0.4)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.3)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    this.serviceModal.style.color = this.isWabiSabiMode\n      ? '#424242'\n      : (this.isDarkMode ? '#ffffff' : '#1f2937');\n\n    this.serviceModal.style.boxShadow = this.isWabiSabiMode\n      ? '0 20px 40px rgba(93, 64, 55, 0.35)'\n      : '0 20px 40px rgba(15, 23, 42, 0.35)';\n  }\n\n  /**\n   * テーマ切り替え\n   */\n  toggleTheme() {\n    // 3段階サイクル: light → dark → wabisabi → light\n    switch (this.currentTheme) {\n      case 'light':\n        this.currentTheme = 'dark';\n        break;\n      case 'dark':\n        this.currentTheme = 'wabisabi';\n        break;\n      case 'wabisabi':\n        this.currentTheme = 'light';\n        break;\n      default:\n        this.currentTheme = 'light';\n    }\n\n    // 状態更新\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    localStorage.setItem('live-command-theme', this.currentTheme);\n\n    // アイコンボタン更新\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n\n      const config = themeConfig[this.currentTheme];\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n    }\n\n    // 全スタイル再適用\n    this.applyTheme();\n\n    // テーマ切り替え完了（履歴には出力しない）\n  }\n\n  /**\n   * テーマ適用\n   */\n  applyTheme() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isWabiSabiMode ? 'wabisabi-mode' : (this.isDarkMode ? 'dark-mode' : 'light-mode');\n\n    // メインコンテナ（display状態を保持）\n    const currentDisplay = this.container.style.display;\n    const currentFlexDirection = this.container.style.flexDirection;\n    this.container.style.cssText = this.getContainerStyles();\n    this.container.style.display = currentDisplay || 'flex';\n    this.container.style.flexDirection = currentFlexDirection || 'column';\n\n    // フローティングブランドバッジのテーマ再適用\n    const brandBadge = this.container.querySelector('.floating-brand-badge');\n    if (brandBadge) {\n      brandBadge.style.background = this.isDarkMode \n        ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))'\n        : 'linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))';\n      brandBadge.style.border = `1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'}`;\n    }\n\n    // 入力フィールド\n    const hadHighlight = !!this.highlightOverlay;\n    this.inputDefaultStyles = null;\n    this.clearKeywordHighlighting();\n    this.input.style.cssText = this.getInputStyles();\n    this.captureInputDefaultStyles();\n    if (hadHighlight || (this.input && this.input.value.trim())) {\n      this.applyKeywordHighlighting();\n    }\n\n    // スタイル適用\n    this.output.style.cssText = this.getOutputStyles();\n\n    // ラジオボタンモードセレクターの2025年仕様テーマ再適用\n    if (this.radioModeContainer) {\n      this.radioModeContainer.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))');\n      this.radioModeContainer.style.borderColor = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.4)'\n        : (this.isDarkMode\n          ? 'rgba(99, 102, 241, 0.15)'\n          : 'rgba(255, 255, 255, 0.25)');\n\n      // 各ラジオボタンのスタイル更新\n      Object.keys(this.radioModeButtons).forEach(key => {\n        const { button } = this.radioModeButtons[key];\n        if (this.currentMode !== key) {\n          button.style.color = this.isWabiSabiMode\n            ? 'rgba(245, 245, 245, 0.8)'\n            : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n          button.style.background = 'transparent';\n          button.style.border = '1px solid transparent';\n          button.style.boxShadow = 'none';\n        }\n      });\n\n      // 現在選択されているモードのスタイルも更新\n      this.selectMode(this.currentMode, false);\n    }\n\n    // アクションボタンのテーマ再適用\n    if (this.clearBtn) {\n      this.clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    }\n    if (this.historyBtn) {\n      this.historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n      this.historyBtn.style.opacity = '0.5';\n    }\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n      const config = themeConfig[this.currentTheme] || themeConfig.light;\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n      this.themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    }\n    if (this.settingsButton) {\n      this.settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    }\n\n    this.updateServiceSelectorTheme();\n\n    // 閉じるボタンのテーマ更新\n    const closeButton = this.container.querySelector('.close-button');\n    if (closeButton) {\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.background = this.isDarkMode \n        ? 'rgba(255, 255, 255, 0.1)' \n        : 'rgba(0, 0, 0, 0.1)';\n    }\n\n    // フローティングコンテナとタスクカードのテーマ更新\n    this.updateFloatingContainerTheme();\n\n    // 既存の出力テキストの色を更新\n    this.updateExistingTextColors();\n  }\n\n  /**\n   * フローティングコンテナとタスクカードのテーマ更新\n   */\n  updateFloatingContainerTheme() {\n    if (!this.floatingContainer) return;\n\n    // フローティングコンテナの表示状態を保持\n    const currentDisplay = this.floatingContainer.style.display;\n\n    // 既存のタスクカードの色だけをテーマに合わせて更新（レイアウトは保持）\n    if (this.taskCards && this.taskCards.size > 0) {\n      this.taskCards.forEach((taskData, taskId) => {\n        const card = taskData.element;\n        if (card) {\n          // テーマ関連の色のみ更新（位置やアニメーション状態は保持）\n          // 2025年Glassmorphism仕様適用\n          const glassmorphismDark = {\n            background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n            border: '1px solid rgba(99, 102, 241, 0.25)',\n            color: '#ffffff'\n          };\n\n          const glassmorphismLight = {\n            background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n            border: '1px solid rgba(255, 255, 255, 0.4)',\n            color: '#1f2937'\n          };\n\n          const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n\n          card.style.setProperty('background', theme.background, 'important');\n          card.style.setProperty('border', theme.border, 'important');\n          card.style.setProperty('color', theme.color, 'important');\n        }\n      });\n    }\n\n    // テーマ切り替え時は位置は変更せず、表示状態のみ復元\n    this.floatingContainer.style.display = currentDisplay;\n  }\n\n  /**\n   * 既存のテキスト色を現在のテーマに合わせて更新\n   */\n  updateExistingTextColors() {\n    const colors = this.isDarkMode ? {\n      system: '#60a5fa',\n      command: '#93c5fd',\n      success: '#f472b6',\n      error: '#f87171',\n      processing: '#fbbf24',\n      info: '#d1d5db',\n      hint: '#d1d5db'\n    } : {\n      system: '#1e40af',\n      command: '#1d4ed8',\n      success: '#be185d',\n      error: '#dc2626',\n      processing: '#d97706',\n      info: '#7c3aed',\n      hint: '#374151'\n    };\n\n    const defaultTextColor = this.isDarkMode ? '#d1d5db' : '#374151';\n\n    // output内の全てのdivの色を更新\n    this.output.querySelectorAll('div').forEach(line => {\n      const text = line.textContent;\n      let type = 'default';\n      \n      // テキストの内容からタイプを判定\n      if (text.includes('📋') || text.includes('🎨') || text.includes('🎮') || text.includes('UI起動')) {\n        type = 'system';\n      } else if (text.startsWith('> ')) {\n        type = 'command';\n      } else if (text.includes('✅') || text.includes('⭐') || text.includes('生成しました')) {\n        type = 'success';\n      } else if (text.includes('❌') || text.includes('エラー')) {\n        type = 'error';\n      } else if (text.includes('中...')) {\n        type = 'processing';\n      } else if (text.includes('📍') || text.includes('使用モデル:') || text.includes('位置:')) {\n        type = 'info';\n      } else if (text.includes('   ')) {\n        type = 'hint';\n      }\n\n      line.style.color = colors[type] || defaultTextColor;\n    });\n  }\n\n  /**\n   * Importインターフェース表示\n   */\n  showImportInterface() {\n    // 隠しファイル入力を作成（Importボタンから直接選択できるので、ボタンは不要）\n    if (!this.fileInput) {\n      this.fileInput = document.createElement('input');\n      this.fileInput.type = 'file';\n      this.fileInput.accept = '.glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov';\n      this.fileInput.style.display = 'none';\n      this.fileInput.onchange = (e) => this.handleFileSelection(e);\n      document.body.appendChild(this.fileInput);\n    }\n\n    // ドラッグ&ドロップ機能を有効化\n    this.enableDragAndDrop();\n  }\n\n  /**\n   * Importインターフェース非表示\n   */\n  hideImportInterface() {\n    if (this.fileSelectButton && this.fileSelectButton.parentNode) {\n      this.fileSelectButton.parentNode.removeChild(this.fileSelectButton);\n    }\n    this.disableDragAndDrop();\n  }\n\n  /**\n   * ファイル選択ダイアログを開く\n   */\n  openFileSelector() {\n    if (this.fileInput) {\n      this.fileInput.click();\n    }\n  }\n\n  /**\n   * Importボタンから直接ファイル選択を実行\n   */\n  triggerFileSelection() {\n    // ファイル入力要素が存在しない場合は作成\n    if (!this.fileInput) {\n      this.showImportInterface(); // 既存のファイル入力作成処理を呼び出し\n    }\n\n    // 直接ファイル選択ダイアログを開く\n    this.openFileSelector();\n\n    // Import モードに切り替え（UI反映）\n    this.selectMode('import', true);\n  }\n\n  /**\n   * ファイル選択処理\n   */\n  async handleFileSelection(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      // 前回のObjectURLをクリーンアップ（メモリリーク防止）\n      if (this.selectedFile && this.selectedFile.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n\n      // ファイルタイプを判定\n      const fileType = this.detectFileType(file.name);\n\n      // ファイルをローカルURLとして処理\n      const fileUrl = URL.createObjectURL(file);\n\n      // ファイル情報を保存\n      this.selectedFile = {\n        file: file,\n        url: fileUrl,\n        type: fileType,\n        name: file.name\n      };\n\n      this.selectMode('import', true);\n\n      // 自動的にデフォルトプロンプトで実行\n      const defaultPrompt = `中央に設置 (${file.name})`;\n      this.input.value = defaultPrompt;\n\n      this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`, 'system');\n      this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`, 'system');\n\n      // 自動実行（少し遅延を入れてUX向上）\n      setTimeout(() => {\n        this.executeCommand();\n      }, 500);\n\n    } catch (error) {\n      console.error('File selection error:', error);\n      this.addOutput(`❌ ファイル選択エラー: ${error.message}`, 'error');\n    } finally {\n      // IMPORTANT: ファイル入力をリセットして同じファイルの再選択を可能にする\n      if (event.target) {\n        event.target.value = '';\n      }\n    }\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を有効化\n   */\n  enableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.addEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.addEventListener('drop', this.handleDrop.bind(this));\n    this.input.addEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.addEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を無効化\n   */\n  disableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.removeEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.removeEventListener('drop', this.handleDrop.bind(this));\n    this.input.removeEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.removeEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグオーバー処理\n   */\n  handleDragOver(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグエンター処理\n   */\n  handleDragEnter(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグリーブ処理\n   */\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n  }\n\n  /**\n   * ドロップ処理\n   */\n  async handleDrop(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length === 0) return;\n\n    const file = files[0]; // 最初のファイルのみ処理\n\n    // ファイルタイプをチェック\n    const fileType = this.detectFileType(file.name);\n    if (!fileType) {\n      this.addOutput('❌ サポートされていないファイル形式です', 'error');\n      return;\n    }\n\n    // ファイル選択処理と同じ流れ\n    this.handleFileSelection({ target: { files: [file] } });\n  }\n\n  /**\n   * ファイルタイプ判定\n   */\n  detectFileType(fileName) {\n    const ext = fileName.toLowerCase().split('.').pop();\n\n    if (['glb', 'gltf'].includes(ext)) return '3d';\n    if (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) return 'image';\n    if (['mp4', 'mov', 'webm'].includes(ext)) return 'video';\n\n    return null;\n  }\n\n  /**\n   * Importコマンド処理\n   */\n  async handleImportCommand(command) {\n    if (!this.selectedFile) {\n      throw new Error('ファイルが選択されていません');\n    }\n\n    try {\n      // プロンプトから位置情報を解析\n      const position = this.sceneManager ? this.sceneManager.parsePosition(command) : { x: 0, y: 5, z: -10 };\n\n      let result;\n\n      switch (this.selectedFile.type) {\n        case '3d':\n          // 3Dモデルを読み込み\n          if (this.sceneManager) {\n            result = await this.sceneManager.load3DModel(this.selectedFile.url, {\n              position: position,\n              // scale: 自動調整に任せる\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'image':\n          // 画像をテクスチャプレーンとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadImageFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'video':\n          // 動画をビデオテクスチャとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadVideoFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        default:\n          throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`);\n      }\n\n      // ファイル情報をクリーンアップ\n      const processedFileName = this.selectedFile?.name;\n      const importedType = this.selectedFile?.type;\n      const importedUrl = this.selectedFile?.url;\n\n      if (importedType !== 'video' && importedUrl) {\n        URL.revokeObjectURL(importedUrl);\n      }\n\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n\n      return {\n        success: true,\n        message: `${processedFileName || 'ファイル'} を ${position.x}, ${position.y}, ${position.z} に配置しました`,\n        objectId: result.objectId\n      };\n\n    } catch (error) {\n      // エラー時もファイル情報をクリーンアップ\n      if (this.selectedFile?.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n      throw error;\n    }\n  }\n\n  /**\n   * 削除モードが選択された時の処理\n   */\n  handleDeleteModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：削除コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を削除 ⏎`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 削除対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 削除するオブジェクトを選択後、削除ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('delete');\n      \n      // DELETEモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 修正モードが選択された時の処理\n   */\n  handleModifyModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：修正コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 修正対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 修正するオブジェクトを選択後、修正ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('modify');\n      \n      // Modifyモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Attention Animation\n   * オブジェクト未選択時の注意喚起アニメーション\n   */\n  triggerAttentionAnimation(mode) {\n    const chatOutput = this.chatOutput;\n    const inputField = this.input;\n    \n    // 2025年トレンド1: Micro-Shake Effect（微細な震え）\n    this.addMicroShakeEffect(chatOutput);\n    \n    // 2025年トレンド2: Context-Aware Glow（状況認識グロー）\n    this.addContextGlow(inputField, mode);\n    \n    // 2025年トレンド3: Emotional Pulse（感情的パルス）\n    this.addEmotionalPulse(chatOutput, mode);\n    \n    // 2025年トレンド4: 3D Depth Shadow（立体的影効果）\n    this.add3DDepthEffect(chatOutput);\n  }\n\n  /**\n   * 2025年トレンド：Micro-Shake Effect\n   */\n  addMicroShakeEffect(element) {\n    element.style.animation = 'microShake2025 0.5s ease-in-out';\n    \n    // CSSアニメーションを動的追加\n    this.ensureMicroShakeAnimation();\n    \n    // アニメーション後クリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 500);\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Glow\n   */\n  addContextGlow(element, mode) {\n    const glowColor = mode === 'delete' ? 'rgba(239, 68, 68, 0.4)' : 'rgba(99, 102, 241, 0.4)';\n    \n    element.style.transition = 'all 0.3s ease';\n    element.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n    \n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      element.style.boxShadow = '';\n    }, 3000);\n  }\n\n  /**\n   * 2025年トレンド：Emotional Pulse\n   */\n  addEmotionalPulse(element, mode) {\n    const pulseColor = mode === 'delete' ? '#ef4444' : (this.isWabiSabiMode ? '#8BC34A' : '#6366f1');\n    \n    element.style.borderLeft = `4px solid ${pulseColor}`;\n    element.style.animation = 'emotionalPulse2025 2s ease-in-out infinite';\n    \n    // CSSアニメーションを動的追加\n    this.ensureEmotionalPulseAnimation();\n    \n    // 6秒後にアニメーション停止\n    setTimeout(() => {\n      element.style.animation = '';\n      element.style.borderLeft = '';\n    }, 6000);\n  }\n\n  /**\n   * 2025年トレンド：3D Depth Effect\n   */\n  add3DDepthEffect(element) {\n    element.style.transform = 'translateZ(8px) rotateX(1deg)';\n    element.style.transition = 'transform 0.3s ease';\n    \n    // 2秒後に元に戻す\n    setTimeout(() => {\n      element.style.transform = '';\n    }, 2000);\n  }\n\n  /**\n   * Micro-Shake CSSアニメーション確保\n   */\n  ensureMicroShakeAnimation() {\n    if (document.getElementById('micro-shake-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'micro-shake-2025';\n    style.textContent = `\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Emotional Pulse CSSアニメーション確保\n   */\n  ensureEmotionalPulseAnimation() {\n    if (document.getElementById('emotional-pulse-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'emotional-pulse-2025';\n    style.textContent = `\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * モード切り替え時の入力欄メッセージ上書き機能\n   * ユーザビリティ向上：他モードのメッセージを新モードの初期状態にクリア\n   */\n  clearInputOnModeSwitch(newMode) {\n    // 現在の入力欄に内容がある場合のみ処理\n    if (this.input.value.trim()) {\n      // 以前のモードのメッセージかどうかを判定\n      const isPreviousModeMessage = this.isPreviousModeMessage(this.input.value, newMode);\n      \n      if (isPreviousModeMessage) {\n        // 以前のモードのメッセージの場合、新モードの初期メッセージに置き換え\n        this.input.value = '';\n        this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`, 'system');\n      }\n    }\n  }\n\n  /**\n   * 入力内容が以前のモードのメッセージかどうかを判定\n   */\n  isPreviousModeMessage(inputValue, currentMode) {\n    // Delete/Modifyモードの特徴的なメッセージパターンを検出\n    const deletePatterns = [\n      /.*を削除$/,\n      /削除$/\n    ];\n    \n    const modifyPatterns = [\n      /.*を$/,\n      /.*を変更/,\n      /.*をピンク/,\n      /.*を大きく/,\n      /.*を小さく/,\n      /.*を移動/,\n      /回転/,\n      /反転/,\n      /ミラー/,\n      /傾け/,\n      /向きを変え/,\n      /.*を.*色/,\n      /.*を.*サイズ/\n    ];\n    \n    const importPatterns = [\n      /ファイル/,\n      /画像/,\n      /インポート/\n    ];\n\n    // 現在のモードと異なるパターンにマッチする場合は上書き対象\n    switch (currentMode) {\n      case 'delete':\n        return modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'modify':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'import':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'generate':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      default:\n        return false;\n    }\n  }\n\n  /**\n   * モード表示名を取得\n   */\n  getModeDisplayName(mode) {\n    const modeNames = {\n      'generate': '生成',\n      'import': 'インポート',\n      'modify': '修正',\n      'delete': '削除'\n    };\n    return modeNames[mode] || mode;\n  }\n\n  /**\n   * 常時表示フローティングチョコアイコンを作成\n   */\n  createFloatingChocolateIcon() {\n    // 既存のアイコンがあれば削除\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.remove();\n    }\n\n    this.floatingChocolateIcon = document.createElement('div');\n    this.floatingChocolateIcon.innerHTML = '🍫';\n    this.floatingChocolateIcon.title = 'ChocoDrop を開く (@キーでも開けます)';\n    this.floatingChocolateIcon.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;\n\n    // ホバー効果\n    this.floatingChocolateIcon.addEventListener('mouseover', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1.1) translateY(-2px)';\n      this.floatingChocolateIcon.style.boxShadow = '0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)';\n      this.floatingChocolateIcon.style.opacity = '1';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    this.floatingChocolateIcon.addEventListener('mouseout', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1) translateY(0)';\n      this.floatingChocolateIcon.style.boxShadow = '0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)';\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    // クリックで ChocoDrop を開く\n    this.floatingChocolateIcon.addEventListener('click', () => {\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // 右クリックメニュー\n    this.floatingChocolateIcon.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.showFloatingIconContextMenu(e);\n    });\n\n    // DOM に追加\n    document.body.appendChild(this.floatingChocolateIcon);\n  }\n\n  /**\n   * フローティングアイコンの右クリックメニューを表示\n   */\n  showFloatingIconContextMenu(event) {\n    // 既存のメニューがあれば削除\n    const existingMenu = document.querySelector('.floating-icon-context-menu');\n    if (existingMenu) {\n      existingMenu.remove();\n    }\n\n    // コンテキストメニュー作成\n    const menu = document.createElement('div');\n    menu.className = 'floating-icon-context-menu';\n    menu.style.cssText = `\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isWabiSabiMode\n        ? 'rgba(239, 235, 233, 0.9)'\n        : (this.isDarkMode ? 'rgba(17, 24, 39, 0.85)' : 'rgba(255, 255, 255, 0.85)')};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.2)')};\n      border-radius: 12px;\n      box-shadow: ${this.isWabiSabiMode\n        ? '0 8px 24px rgba(93, 64, 55, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'\n        : '0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'};\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n    `;\n\n    // メニューアイテム1: フォームを開く\n    const openFormItem = document.createElement('div');\n    openFormItem.innerHTML = '📄 フォームを開く';\n    openFormItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    openFormItem.addEventListener('mouseover', () => {\n      openFormItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    openFormItem.addEventListener('mouseout', () => {\n      openFormItem.style.background = 'transparent';\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    openFormItem.addEventListener('click', () => {\n      menu.remove();\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // メニューアイテム2: アイコンを非表示\n    const hideIconItem = document.createElement('div');\n    hideIconItem.innerHTML = '✕ アイコンを非表示';\n    hideIconItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    hideIconItem.addEventListener('mouseover', () => {\n      hideIconItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    hideIconItem.addEventListener('mouseout', () => {\n      hideIconItem.style.background = 'transparent';\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    hideIconItem.addEventListener('click', () => {\n      menu.remove();\n      this.hideFloatingIcon();\n    });\n\n    // メニューに追加\n    menu.appendChild(openFormItem);\n    menu.appendChild(hideIconItem);\n\n    // DOM に追加\n    document.body.appendChild(menu);\n\n    // 画面外に出ないように調整\n    const rect = menu.getBoundingClientRect();\n    if (rect.right > window.innerWidth) {\n      menu.style.left = `${event.clientX - rect.width}px`;\n    }\n    if (rect.bottom > window.innerHeight) {\n      menu.style.top = `${event.clientY - rect.height}px`;\n    }\n\n    // 外部クリックで閉じる\n    const closeMenu = (e) => {\n      if (!menu.contains(e.target)) {\n        menu.remove();\n        document.removeEventListener('click', closeMenu);\n      }\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', closeMenu);\n    }, 10);\n  }\n\n  /**\n   * フローティングアイコンを非表示にする\n   */\n  hideFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * フローティングアイコンを表示する\n   */\n  showFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'flex';\n    }\n  }\n\n  dispose() {\n    // キーワードハイライトのクリーンアップ\n    this.clearKeywordHighlighting();\n\n    // ファイル選択関連のクリーンアップ\n    if (this.fileInput && this.fileInput.parentNode) {\n      this.fileInput.parentNode.removeChild(this.fileInput);\n    }\n    if (this.selectedFile && this.selectedFile.url) {\n      URL.revokeObjectURL(this.selectedFile.url);\n    }\n\n    // フローティングチョコアイコンのクリーンアップ\n    if (this.floatingChocolateIcon && this.floatingChocolateIcon.parentNode) {\n      this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon);\n    }\n\n    if (this.container && this.container.parentElement) {\n      this.container.parentElement.removeChild(this.container);\n    }\n  }\n\n  showOverlayTextarea() {\n    if (this.overlayTextarea) return;\n\n    this.isExpanded = true;\n    \n    // オーバーレイテキストエリアを作成\n    this.overlayTextarea = document.createElement('textarea');\n    this.overlayTextarea.value = this.input.value;\n    this.overlayTextarea.placeholder = this.input.placeholder;\n    \n    // フォームの位置とサイズを取得\n    const containerRect = this.container.getBoundingClientRect();\n    \n    // 画面境界を考慮した位置調整\n    const overlayHeight = 300;\n    const padding = 20;\n    \n    let top = containerRect.top + 60;\n    let left = containerRect.left;\n    let width = containerRect.width;\n    \n    // 右端がはみ出る場合\n    if (left + width > window.innerWidth - padding) {\n      left = window.innerWidth - width - padding;\n    }\n    \n    // 左端がはみ出る場合\n    if (left < padding) {\n      left = padding;\n      width = Math.min(width, window.innerWidth - 2 * padding);\n    }\n    \n    // 下端がはみ出る場合\n    if (top + overlayHeight > window.innerHeight - padding) {\n      top = Math.max(padding, window.innerHeight - overlayHeight - padding);\n    }\n\n    const overlayBackground = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))');\n\n    const overlayBorder = this.isWabiSabiMode\n      ? '1px solid rgba(93, 64, 55, 0.5)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.25)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    const overlayInnerShadow = this.isWabiSabiMode\n      ? '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n      : (this.isDarkMode\n        ? '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n        : '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)');\n\n    const overlayTextColor = this.getInputTextColor();\n\n    // オーバーレイのスタイル設定\n    this.overlayTextarea.style.cssText = `\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${overlayBackground};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${overlayBorder};\n      box-shadow: ${overlayInnerShadow};\n      border-radius: 16px;\n      color: ${overlayTextColor};\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;\n    \n    // ドキュメントに追加\n    document.body.appendChild(this.overlayTextarea);\n    \n    // アニメーション開始\n    requestAnimationFrame(() => {\n      this.overlayTextarea.style.opacity = '1';\n    });\n    \n    // フォーカス設定\n    this.overlayTextarea.focus();\n    \n    // 入力同期\n    this.overlayTextarea.addEventListener('input', (e) => {\n      this.input.value = e.target.value;\n    });\n    \n    // Escapeキーで閉じる\n    this.overlayTextarea.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.hideOverlayTextarea();\n      }\n    });\n    \n    // 外側クリックで閉じる\n    this.overlayTextarea.addEventListener('blur', () => {\n      setTimeout(() => this.hideOverlayTextarea(), 100);\n    });\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n}\n","import { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\nimport { SceneManager } from './SceneManager.js';\nimport { CommandUI } from './CommandUI.js';\n\n/**\n * ChocoDrop ワンステップ初期化ヘルパー\n * 共有フォルダから複数の Three.js プロジェクトへ使い回すことを想定\n *\n * @param {THREE.Scene} scene - 既存 Three.js シーン\n * @param {Object} options - 初期化オプション\n * @param {THREE.Camera} [options.camera] - 相対配置計算に使用するカメラ\n * @param {THREE.WebGLRenderer} [options.renderer] - マウス操作を有効化する場合に使用\n * @param {string} [options.serverUrl] - ChocoDrop サーバーの明示的 URL\n * @param {ChocoDropClient} [options.client] - 既存のクライアントを注入する場合（旧 LiveCommandClient）\n * @param {Function} [options.onControlsToggle] - UI 開閉時に呼ばれるコールバック\n * @param {Object} [options.sceneOptions] - SceneManager へ渡す追加オプション\n * @param {Object} [options.uiOptions] - CommandUI へ渡す追加オプション\n * @returns {Object} - 初期化済みのコンポーネント群と dispose ヘルパー\n */\nexport function createChocoDrop(scene, options = {}) {\n  if (!scene) {\n    throw new Error('THREE.Scene インスタンスが必要です');\n  }\n\n  const {\n    camera = null,\n    renderer = null,\n    serverUrl = null,\n    client = null,\n    onControlsToggle = () => {},\n    sceneOptions = {},\n    uiOptions = {}\n  } = options;\n\n  const resolvedServerUrl = serverUrl || sceneOptions.serverUrl || null;\n  const chocoDropClient = client || new ChocoDropClient(resolvedServerUrl);\n\n  const sceneManager = new SceneManager(scene, {\n    camera,\n    renderer,\n    serverUrl: resolvedServerUrl,\n    client: chocoDropClient,\n    ...sceneOptions\n  });\n\n  const commandUI = new CommandUI({\n    sceneManager,\n    client: chocoDropClient,\n    onControlsToggle,\n    ...uiOptions\n  });\n\n  return {\n    client: chocoDropClient,\n    sceneManager,\n    ui: commandUI,\n    dispose() {\n      commandUI.dispose?.();\n      sceneManager.dispose?.();\n    }\n  };\n}\n\n// 旧API名の互換エクスポート\nexport const createChocoDro = createChocoDrop;\nexport const createLiveCommand = createChocoDrop;\n","/**\n * ChocoDrop UMD Bundle\n * Browser-compatible script tag version\n */\n\n// Import all client components\nimport { ChocoDropClient, ChocoDroClient, LiveCommandClient } from '../client/LiveCommandClient.js';\nimport { SceneManager } from '../client/SceneManager.js';\nimport { CommandUI } from '../client/CommandUI.js';\nimport { createChocoDrop, createChocoDro, createLiveCommand } from '../client/bootstrap.js';\n\n// Export everything for UMD\nexport {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUI,\n  createChocoDrop,\n  createChocoDro,\n  createLiveCommand\n};\n\n// Default export for convenience\nexport default {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUI,\n  createChocoDrop,\n  createChocoDro,\n  createLiveCommand\n};"],"mappings":"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","ignoreList":[]}