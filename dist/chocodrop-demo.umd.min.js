(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(exports,require("three")):typeof define==="function"&&define.amd?define(["exports","three"],factory):(global=typeof globalThis!=="undefined"?globalThis:global||self,factory(global.ChocoDrop={},global.THREE))})(this,function(exports,THREE){"use strict";function _interopNamespaceDefault(e){var n=Object.create(null);if(e){Object.keys(e).forEach(function(k){if(k!=="default"){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:function(){return e[k]}})}})}n.default=e;return Object.freeze(n)}var THREE__namespace=_interopNamespaceDefault(THREE);class ChocoDropClient{constructor(serverUrl=null){this.serverUrl=null;this.initialized=false;this.initPromise=null;if(serverUrl){this.serverUrl=serverUrl;this.initialized=true;console.log("🍫 ChocoDropClient initialized:",serverUrl)}else{this.initPromise=this.initializeWithConfig()}}async initializeWithConfig(){try{const baseUrl=`${window.location.protocol}//${window.location.hostname}:${window.location.port}`;const response=await fetch(`${baseUrl}/api/config`);if(response.ok){const config=await response.json();this.serverUrl=config.serverUrl;console.log("🍫 ChocoDropClient initialized from config:",this.serverUrl)}else{this.serverUrl=this.detectServerUrl();console.log("🍫 ChocoDropClient fallback to detected URL:",this.serverUrl)}}catch(error){console.warn("⚠️ ChocoDrop config fetch failed, using fallback:",error);this.serverUrl=this.detectServerUrl()}this.initialized=true}detectServerUrl(){const currentPort=window.location.port;const protocol=window.location.protocol;const hostname=window.location.hostname;if(!currentPort){return`${protocol}//${hostname}:3011`}return`${protocol}//${hostname}:${currentPort}`}async ensureInitialized(){if(this.initialized)return;if(this.initPromise){await this.initPromise;return}throw new Error("ChocoDropClient not initialized")}async generateImage(prompt,options={}){await this.ensureInitialized();console.log(`🎨 Requesting image generation: "${prompt}"`);try{const payload={prompt:prompt,width:options.width||512,height:options.height||512};if(options.service){payload.service=options.service}const response=await fetch(`${this.serverUrl}/api/generate`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(payload)});if(!response.ok){throw new Error(`Server error: ${response.status}`)}const result=await response.json();console.log("✅ Image generation result:",result);return result}catch(error){console.error("❌ Image generation request failed:",error);throw error}}async generateVideo(prompt,options={}){await this.ensureInitialized();console.log(`🎬 Requesting video generation: "${prompt}"`);try{const safeDefaults={resolution:"720p",enable_safety_checker:true,enable_prompt_expansion:true};const payload={prompt:prompt,duration:typeof options.duration==="number"&&options.duration>0?options.duration:3,resolution:options.resolution||safeDefaults.resolution,enable_safety_checker:options.enable_safety_checker??safeDefaults.enable_safety_checker,enable_prompt_expansion:options.enable_prompt_expansion??safeDefaults.enable_prompt_expansion};if(options.aspect_ratio){payload.aspect_ratio=options.aspect_ratio}if(options.model){payload.model=options.model}if(typeof options.width==="number"&&options.width>0){payload.width=options.width}if(typeof options.height==="number"&&options.height>0){payload.height=options.height}if(typeof options.seed==="number"){payload.seed=options.seed}if(options.negative_prompt){payload.negative_prompt=options.negative_prompt}if(typeof options.frames_per_second==="number"&&options.frames_per_second>0){payload.frames_per_second=options.frames_per_second}if(typeof options.guidance_scale==="number"){payload.guidance_scale=options.guidance_scale}const response=await fetch(`${this.serverUrl}/api/generate-video`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(payload)});if(!response.ok){throw new Error(`Server error: ${response.status}`)}const result=await response.json();console.log("✅ Video generation result:",result);return result}catch(error){console.error("❌ Video generation request failed:",error);throw error}}async executeCommand(command){await this.ensureInitialized();console.log(`🎯 Executing command: "${command}"`);try{const response=await fetch(`${this.serverUrl}/api/command`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({command:command})});if(!response.ok){throw new Error(`Server error: ${response.status}`)}const result=await response.json();console.log("✅ Command execution result:",result);return result}catch(error){console.error("❌ Command execution failed:",error);throw error}}async getAvailableServices(){await this.ensureInitialized();try{const response=await fetch(`${this.serverUrl}/api/services`);if(!response.ok){throw new Error(`Server error: ${response.status}`)}return await response.json()}catch(error){console.error("❌ Failed to get services:",error);return[]}}}const LiveCommandClient=ChocoDropClient;const ChocoDroClient=ChocoDropClient;class SceneManager{constructor(scene,options={}){if(!scene){throw new Error("THREE.Scene is required")}this.scene=scene;this.camera=options.camera||null;this.renderer=options.renderer||null;this.labelRenderer=null;this.client=options.client||new ChocoDropClient(options.serverUrl);this.experimentGroup=new THREE__namespace.Group;this.experimentGroup.name="LiveExperiments";this.scene.add(this.experimentGroup);this.commandHistory=[];this.spawnedObjects=new Map;this.objectCounter=0;this.selectedObject=null;this.selectedImageService=options.selectedImageService||null;this.selectedVideoService=options.selectedVideoService||null;this.clock=new THREE__namespace.Clock;this.raycaster=new THREE__namespace.Raycaster;this.mouse=new THREE__namespace.Vector2;this.lastHoveredObject=null;this.config={showLocationIndicator:options.showLocationIndicator!==false,indicatorDuration:options.indicatorDuration||3e3,defaultObjectScale:options.defaultObjectScale||1,enableObjectSelection:options.enableObjectSelection!==false,enableMouseInteraction:options.enableMouseInteraction,enableDebugLogging:options.enableDebugLogging===true,...options.config};this.setupClickEvents();console.log("🧪 SceneManager initialized with click selection");if(typeof globalThis!=="undefined"){globalThis.sceneManager=this}}setupClickEvents(){if(this.config.enableMouseInteraction===true&&this.renderer){this.setupObjectDragging();console.log("🖱️ Mouse interaction enabled - Click to select, Shift+drag to move objects")}else if(this.config.enableMouseInteraction===true&&!this.renderer){console.warn("⚠️ Mouse interaction requested but renderer not provided. Mouse interaction disabled.")}else{console.log("🖱️ Mouse interaction disabled (safe mode). Set enableMouseInteraction: true to enable.")}}debugSceneInfo(){console.log("🔍 === SCENE DEBUG INFO ===");if(this.camera){console.log(`📷 Camera:\n        - Position: (${this.camera.position.x.toFixed(2)}, ${this.camera.position.y.toFixed(2)}, ${this.camera.position.z.toFixed(2)})\n        - Rotation: (${(this.camera.rotation.x*180/Math.PI).toFixed(1)}°, ${(this.camera.rotation.y*180/Math.PI).toFixed(1)}°, ${(this.camera.rotation.z*180/Math.PI).toFixed(1)}°)\n        - FOV: ${this.camera.fov||"N/A"}\n        - Near/Far: ${this.camera.near||"N/A"}/${this.camera.far||"N/A"}`)}console.log(`🌳 Scene hierarchy:\n      - Total objects in scene: ${this.scene.children.length}\n      - experimentGroup exists: ${this.scene.getObjectByName("LiveExperiments")?"Yes":"No"}\n      - experimentGroup children: ${this.experimentGroup.children.length}`);console.log(`📦 Spawned objects: ${this.spawnedObjects.size}`);this.spawnedObjects.forEach((obj,id)=>{const worldPos=new THREE__namespace.Vector3;obj.getWorldPosition(worldPos);console.log(`  - ${id} (${obj.userData.type}): \n        Local: (${obj.position.x.toFixed(2)}, ${obj.position.y.toFixed(2)}, ${obj.position.z.toFixed(2)})\n        World: (${worldPos.x.toFixed(2)}, ${worldPos.y.toFixed(2)}, ${worldPos.z.toFixed(2)})\n        Visible: ${obj.visible}, Scale: ${obj.scale.x.toFixed(2)}`);if(obj.userData.type==="generated_3d_model"){const box=(new THREE__namespace.Box3).setFromObject(obj);const size=box.getSize(new THREE__namespace.Vector3);const center=box.getCenter(new THREE__namespace.Vector3);console.log(`    📐 Bounding box - Center: (${center.x.toFixed(2)}, ${center.y.toFixed(2)}, ${center.z.toFixed(2)}), Size: (${size.x.toFixed(2)}, ${size.y.toFixed(2)}, ${size.z.toFixed(2)})`);let meshCount=0;obj.traverse(child=>{if(child.isMesh)meshCount++});console.log(`    🎭 Meshes: ${meshCount}`)}});if(this.camera&&this.spawnedObjects.size>0){console.log(`📏 Distances from camera:`);this.spawnedObjects.forEach((obj,id)=>{const distance=this.camera.position.distanceTo(obj.position);console.log(`  - ${id}: ${distance.toFixed(2)} units`)})}console.log("=========================")}selectObject(object){if(this.selectedObject===object){return}this.deselectObject();this.selectedObject=object;this.createModernSelectionIndicator(object);console.log(`✅ Selected object: ${object.name}`);if(this.commandUI){const objectInfo=object.userData||{};this.commandUI.addOutput(`📍 選択: ${object.name}`,"info");if(objectInfo.prompt){this.commandUI.addOutput(`   プロンプト: ${objectInfo.prompt}`,"hint")}if(objectInfo.modelName){this.commandUI.addOutput(`   モデル: ${objectInfo.modelName}`,"hint")}if(this.commandUI.currentMode==="delete"){const objectName=objectInfo.originalPrompt||object.name||"選択したオブジェクト";this.commandUI.input.value=`${objectName}を削除`;this.commandUI.input.focus();this.commandUI.input.setSelectionRange(this.commandUI.input.value.length,this.commandUI.input.value.length);this.commandUI.addOutput(`🎯 削除対象設定: ${objectName}`,"system")}}}createModernSelectionIndicator(object){const existingIndicator=object.getObjectByName("selectionIndicator");if(existingIndicator){object.remove(existingIndicator)}const indicatorGroup=new THREE__namespace.Group;indicatorGroup.name="selectionIndicator";const box=(new THREE__namespace.Box3).setFromObject(object);const size=box.getSize(new THREE__namespace.Vector3);const center=box.getCenter(new THREE__namespace.Vector3);const margin=.1;const adjustedSize=new THREE__namespace.Vector3(size.x+margin,size.y+margin,size.z+margin);if(object.geometry&&object.geometry.type==="PlaneGeometry"){const width=object.geometry.parameters.width;const height=object.geometry.parameters.height;const shape=new THREE__namespace.Shape;shape.moveTo(-width/2,-height/2);shape.lineTo(width/2,-height/2);shape.lineTo(width/2,height/2);shape.lineTo(-width/2,height/2);shape.lineTo(-width/2,-height/2);const points=shape.getPoints();const geometryLine=(new THREE__namespace.BufferGeometry).setFromPoints(points);const adaptiveColor=this.getAdaptiveSelectionColor();const materialLine=new THREE__namespace.LineBasicMaterial({color:adaptiveColor,linewidth:2,transparent:true,opacity:.9});const line=new THREE__namespace.Line(geometryLine,materialLine);line.position.set(0,0,.01);indicatorGroup.add(line)}else{const edgesGeometry=new THREE__namespace.EdgesGeometry(new THREE__namespace.BoxGeometry(adjustedSize.x,adjustedSize.y,adjustedSize.z));const adaptiveColor=this.getAdaptiveSelectionColor();const edgesMaterial=new THREE__namespace.LineBasicMaterial({color:adaptiveColor,linewidth:2,transparent:true,opacity:.9});const edges=new THREE__namespace.LineSegments(edgesGeometry,edgesMaterial);edges.position.copy(center);indicatorGroup.add(edges)}object.add(indicatorGroup);indicatorGroup.position.set(0,0,0);this.addResizeHandles(indicatorGroup,adjustedSize,center,object)}addResizeHandles(indicatorGroup,size,center,parentObject){console.log("🔧 addResizeHandles called");if(!parentObject){console.log("❌ No parent object provided");return}if(!parentObject.geometry){console.log("❌ Parent has no geometry");return}if(parentObject.geometry.type!=="PlaneGeometry"){console.log(`❌ Geometry type is ${parentObject.geometry.type}, not PlaneGeometry`);return}console.log("✅ PlaneGeometry detected, creating handles");const handleSize=.15;const handleGeometry=new THREE__namespace.BoxGeometry(handleSize,handleSize,handleSize);const adaptiveColor=this.getAdaptiveSelectionColor();const handleMaterial=new THREE__namespace.MeshBasicMaterial({color:adaptiveColor,transparent:true,opacity:.8,depthTest:false,depthWrite:false});const handleHoverMaterial=new THREE__namespace.MeshBasicMaterial({color:this.getAdaptiveHoverColor(),transparent:true,opacity:1,depthTest:false,depthWrite:false});const width=parentObject.geometry.parameters.width;const height=parentObject.geometry.parameters.height;const positions=[{x:width/2,y:height/2,z:.1,corner:"top-right"},{x:-width/2,y:height/2,z:.1,corner:"top-left"},{x:width/2,y:-height/2,z:.1,corner:"bottom-right"},{x:-width/2,y:-height/2,z:.1,corner:"bottom-left"}];positions.forEach((pos,index)=>{const handle=new THREE__namespace.Mesh(handleGeometry,handleMaterial.clone());handle.position.set(pos.x,pos.y,pos.z);handle.userData={isResizeHandle:true,handleIndex:index,corner:pos.corner,defaultMaterial:handle.material,hoverMaterial:handleHoverMaterial.clone()};handle.renderOrder=1001;handle.onHover=()=>{handle.material=handle.userData.hoverMaterial;handle.scale.setScalar(1.5);document.body.style.cursor="nw-resize"};handle.onHoverExit=()=>{handle.material=handle.userData.defaultMaterial;handle.scale.setScalar(1);document.body.style.cursor="default"};indicatorGroup.add(handle);console.log(`🔴 Added resize handle at ${pos.corner}`)})}updateSelectionIndicatorScale(object){}deselectObject(){if(this.selectedObject){const indicator=this.selectedObject.getObjectByName("selectionIndicator");if(indicator){this.selectedObject.remove(indicator);indicator.traverse(child=>{if(child.geometry)child.geometry.dispose();if(child.material){if(Array.isArray(child.material)){child.material.forEach(material=>material.dispose())}else{child.material.dispose()}}})}console.log(`✅ Deselected: ${this.selectedObject.name}`);this.selectedObject=null}}setupObjectDragging(){if(!this.renderer)return;const canvas=this.renderer.domElement;let isDragging=false;let dragObject=null;let dragOffset=new THREE__namespace.Vector3;let mouseStart=new THREE__namespace.Vector2;let dragMode="move";let originalScale=new THREE__namespace.Vector3;canvas.addEventListener("mousedown",event=>{if(event.button!==0)return;const rect=canvas.getBoundingClientRect();this.mouse.x=(event.clientX-rect.left)/rect.width*2-1;this.mouse.y=-((event.clientY-rect.top)/rect.height)*2+1;this.raycaster.setFromCamera(this.mouse,this.camera);const intersects=this.raycaster.intersectObjects(this.experimentGroup.children,true);if(intersects.length>0){const object=intersects[0].object;if(object.userData&&object.userData.isResizeHandle){isDragging=true;dragObject=this.selectedObject;dragMode="resize";this.resizeHandleInfo={corner:object.userData.corner,handleIndex:object.userData.handleIndex};originalScale.copy(dragObject.scale);mouseStart.set(event.clientX,event.clientY);canvas.style.cursor="nw-resize";console.log(`🔄 Started resizing: ${dragObject.name} from ${object.userData.corner}`);return}if(object.userData&&object.userData.isRotateHandle){console.log(`🔄 Rotation handle clicked for: ${this.selectedObject.name}`);return}if(object.userData&&(object.userData.type==="generated_image"||object.userData.type==="generated_video"||object.userData.type==="generated_3d_model"||object.userData.source==="imported_file")){if(this.commandUI&&this.commandUI.currentMode==="delete"){const objectName=object.name;console.log(`🗑️ Delete mode: clicked on ${objectName}`);this.commandUI.showDeleteConfirmation(`オブジェクト「${objectName}」を削除`).then(confirmed=>{if(confirmed){this.removeObject(objectName);this.commandUI.addOutput(`🗑️ 削除完了: ${objectName}`,"success")}else{this.commandUI.addOutput(`❌ 削除キャンセル: ${objectName}`,"info")}}).catch(error=>{console.error("Delete confirmation error:",error);this.commandUI.addOutput(`❌ 削除エラー: ${objectName}`,"error")});return}isDragging=true;dragObject=object;dragMode="move";dragOffset.copy(intersects[0].point).sub(object.position);mouseStart.set(event.clientX,event.clientY);if(object.material);canvas.style.cursor="move";console.log(`🔄 Started moving: ${object.name} (Shift-free interaction)`);this.selectObject(object)}else{this.selectObject(object)}}else{this.deselectObject()}});canvas.addEventListener("mousemove",event=>{if(!isDragging){this.handleHoverEffects(event,canvas);return}if(!dragObject)return;const deltaX=event.clientX-mouseStart.x;const deltaY=event.clientY-mouseStart.y;if(dragMode==="resize"){if(!this.resizeHandleInfo){console.error("❌ Resize handle info missing");return}const corner=this.resizeHandleInfo.corner;let scaleMultiplier=1;switch(corner){case"top-right":scaleMultiplier=deltaX>0&&deltaY<0?1+(Math.abs(deltaX)+Math.abs(deltaY))*.001:1-(Math.abs(deltaX)+Math.abs(deltaY))*.001;break;case"top-left":scaleMultiplier=deltaX<0&&deltaY<0?1+(Math.abs(deltaX)+Math.abs(deltaY))*.001:1-(Math.abs(deltaX)+Math.abs(deltaY))*.001;break;case"bottom-right":scaleMultiplier=deltaX>0&&deltaY>0?1+(Math.abs(deltaX)+Math.abs(deltaY))*.001:1-(Math.abs(deltaX)+Math.abs(deltaY))*.001;break;case"bottom-left":scaleMultiplier=deltaX<0&&deltaY>0?1+(Math.abs(deltaX)+Math.abs(deltaY))*.001:1-(Math.abs(deltaX)+Math.abs(deltaY))*.001;break;default:scaleMultiplier=1+(deltaX+deltaY)*.001}const newScale=Math.max(.1,Math.min(5,originalScale.x*scaleMultiplier));dragObject.scale.setScalar(newScale);this.updateSelectionIndicatorScale(dragObject)}else if(dragMode==="move"){const cameraRight=new THREE__namespace.Vector3;const cameraUp=new THREE__namespace.Vector3;this.camera.getWorldDirection(new THREE__namespace.Vector3);cameraRight.setFromMatrixColumn(this.camera.matrixWorld,0).normalize();cameraUp.setFromMatrixColumn(this.camera.matrixWorld,1).normalize();const moveScale=.01;const worldMove=(new THREE__namespace.Vector3).add(cameraRight.clone().multiplyScalar(deltaX*moveScale)).add(cameraUp.clone().multiplyScalar(-deltaY*moveScale));dragObject.position.add(worldMove);mouseStart.set(event.clientX,event.clientY)}});canvas.addEventListener("mouseup",()=>{if(isDragging&&dragObject){if(dragObject.material){dragObject.material.opacity=1;dragObject.material.transparent=false}console.log(`✅ Finished dragging: ${dragObject.name} to (${dragObject.position.x.toFixed(1)}, ${dragObject.position.y.toFixed(1)}, ${dragObject.position.z.toFixed(1)})`);isDragging=false;dragObject=null;dragMode="move";this.resizeHandleInfo=null;canvas.style.cursor="default"}});canvas.addEventListener("wheel",event=>{event.preventDefault();const rect=canvas.getBoundingClientRect();const mouse=new THREE__namespace.Vector2;mouse.x=(event.clientX-rect.left)/rect.width*2-1;mouse.y=-((event.clientY-rect.top)/rect.height)*2+1;this.raycaster.setFromCamera(mouse,this.camera);const intersects=this.raycaster.intersectObjects(this.experimentGroup.children,true);if(intersects.length>0){const obj=intersects[0].object;if(obj.userData&&(obj.userData.type==="generated_image"||obj.userData.type==="generated_video"||obj.userData.type==="generated_3d_model")){const scaleFactor=event.deltaY>0?.9:1.1;const newScale=obj.scale.x*scaleFactor;if(newScale>=.2&&newScale<=5){obj.scale.setScalar(newScale);if(obj.material){obj.material.emissive.setHex(3355443);setTimeout(()=>{if(obj.material){obj.material.emissive.setHex(0)}},150)}console.log(`🔄 Resized ${obj.userData.type}: ${obj.name} to scale ${newScale.toFixed(2)} (Shift-free interaction)`)}}}});document.addEventListener("keydown",event=>{if(!this.selectedObject)return;const object=this.selectedObject;if(!object.userData||object.userData.type!=="generated_image"&&object.userData.type!=="generated_video"){return}const rotationStep=Math.PI/36;let rotated=false;switch(event.key){case"ArrowLeft":object.rotation.y-=rotationStep;rotated=true;break;case"ArrowRight":object.rotation.y+=rotationStep;rotated=true;break;case"ArrowUp":const newRotationX=object.rotation.x-rotationStep;if(newRotationX>=-Math.PI/6&&newRotationX<=Math.PI/6){object.rotation.x=newRotationX;rotated=true}break;case"ArrowDown":const newRotationXDown=object.rotation.x+rotationStep;if(newRotationXDown>=-Math.PI/6&&newRotationXDown<=Math.PI/6){object.rotation.x=newRotationXDown;rotated=true}break;case"r":case"R":object.rotation.x=0;const cameraDirection=new THREE__namespace.Vector3;this.camera.getWorldDirection(cameraDirection);const targetPoint=object.position.clone().add(cameraDirection.multiplyScalar(-1));object.lookAt(targetPoint);object.rotation.x=0;rotated=true;console.log(`🔄 Reset rotation for: ${object.name}`);break;case"i":case"I":this.debugSceneInfo();event.preventDefault();break}if(rotated){event.preventDefault();const angles={x:(object.rotation.x*180/Math.PI).toFixed(1),y:(object.rotation.y*180/Math.PI).toFixed(1),z:(object.rotation.z*180/Math.PI).toFixed(1)};console.log(`🔄 Rotated ${object.userData.type}: ${object.name} to (${angles.x}°, ${angles.y}°, ${angles.z}°)`)}});console.log("🖱️ Object dragging system enabled (Drag to move objects - Shift-free interaction)");console.log("🔄 Object resizing system enabled (Scroll to resize images/videos - Shift-free interaction)");console.log("🎯 Angle adjustment enabled (Select object + Arrow keys to rotate, R to reset)")}handleHoverEffects(event,canvas){const rect=canvas.getBoundingClientRect();this.mouse.x=(event.clientX-rect.left)/rect.width*2-1;this.mouse.y=-((event.clientY-rect.top)/rect.height)*2+1;this.raycaster.setFromCamera(this.mouse,this.camera);const intersects=this.raycaster.intersectObjects(this.experimentGroup.children,true);if(this.lastHoveredObject&&this.lastHoveredObject.onHoverExit){this.lastHoveredObject.onHoverExit();this.lastHoveredObject=null}if(intersects.length>0){const object=intersects[0].object;if(object.userData&&object.userData.isResizeHandle&&object.onHover){object.onHover();this.lastHoveredObject=object;return}if(object.userData&&(object.userData.type==="generated_image"||object.userData.type==="generated_video")){canvas.style.cursor="move";this.lastHoveredObject={onHoverExit:()=>{canvas.style.cursor="default"}};return}}canvas.style.cursor="default"}async executeCommand(command){const timestamp=Date.now();console.log(`🎯 Executing: "${command}"`);try{const parsed=this.parseCommand(command);console.log("📝 Parsed:",parsed);const result=await this.dispatchCommand(parsed);this.commandHistory.push({timestamp:timestamp,command:command,parsed:parsed,result:result,status:"success"});return result}catch(error){console.error("❌ Command execution failed:",error);this.commandHistory.push({timestamp:timestamp,command:command,error:error.message,status:"error"});throw error}}parseCommand(command){if(command.startsWith("[変更] ")){const actualCommand=command.replace("[変更] ","");return this.parseObjectModificationCommand(actualCommand.toLowerCase().trim())}if(command.startsWith("[削除] ")){const actualCommand=command.replace("[削除] ","");return this.parseDeleteCommand(actualCommand.toLowerCase().trim())}const cmd=command.toLowerCase().trim();const naturalLanguagePattern=this.parseNaturalLanguageCommand(cmd);if(naturalLanguagePattern){return naturalLanguagePattern}const videoKeywords=["動画","ビデオ","ムービー","映像","アニメーション","動く","video","movie","animation","animate","motion","moving","clip"];const isVideoRequest=videoKeywords.some(keyword=>cmd.includes(keyword));if(isVideoRequest){return{type:"video_generation",prompt:command,position:this.parsePosition(cmd),size:this.parseSize(cmd)}}const selectKeywords=["選択","select","オブジェクト選択","既存","existing"];const isSelectRequest=selectKeywords.some(keyword=>cmd.includes(keyword));if(isSelectRequest){return{type:"object_selection",position:this.parsePosition(cmd)}}const importKeywords=["インポート","import","読み込","読込","ファイル","file","画像を選択","動画を選択","選択して配置"];const isImportRequest=importKeywords.some(keyword=>cmd.includes(keyword));if(isImportRequest){const isVideoImport=cmd.includes("動画")||cmd.includes("video")||cmd.includes("mp4");return{type:"file_import",fileType:isVideoImport?"video":"image",position:this.parsePosition(cmd),size:this.parseSize(cmd)}}const imageKeywords=["画像","写真","イメージ","絵","ピクチャー","image","picture","photo","generate","create","make","draw"];imageKeywords.some(keyword=>cmd.includes(keyword));return{type:"image_generation",prompt:command,position:this.parsePosition(cmd),size:this.parseSize(cmd)}}findObjectByKeyword(command){const objectKeywords={"猫":["cat","ネコ","ねこ"],"犬":["dog","イヌ","いぬ"],"ドラゴン":["dragon","龍","りゅう"],"ユニコーン":["unicorn"],"ペガサス":["pegasus"],"鳥":["bird","とり","トリ"],"花":["flower","はな","ハナ"],"城":["castle","しろ","シロ"],"山":["mountain","やま","ヤマ"],"木":["tree","き","キ"]};for(const child of this.scene.children){if(!child.name||!child.name.startsWith("generated_"))continue;child.name.split("_");for(const[keyword,aliases]of Object.entries(objectKeywords)){if(command.includes(keyword)){console.log(`🎯 Found object by keyword "${keyword}": ${child.name}`);return child}for(const alias of aliases){if(command.toLowerCase().includes(alias.toLowerCase())){console.log(`🎯 Found object by alias "${alias}": ${child.name}`);return child}}}if(child.userData&&child.userData.prompt){const prompt=child.userData.prompt.toLowerCase();for(const[keyword,aliases]of Object.entries(objectKeywords)){if(prompt.includes(keyword.toLowerCase())){console.log(`🎯 Found object by prompt "${keyword}": ${child.name}`);return child}}}}if(command.includes("最後")||command.includes("最新")||command.includes("last")){const generatedObjects=this.scene.children.filter(child=>child.name&&child.name.startsWith("generated_"));if(generatedObjects.length>0){const lastObject=generatedObjects[generatedObjects.length-1];console.log(`🎯 Found last created object: ${lastObject.name}`);return lastObject}}return null}parseImageGenerationCommand(command){let prompt=command;const particles=["を","に","で","の"];for(const particle of particles){if(command.includes(particle)){const parts=command.split(particle);if(parts[0]){prompt=parts[0].trim();break}}}prompt=prompt.replace(/(画像|作って|生成|して|ください)/g,"").trim();return{type:"image_generation",prompt:prompt,position:this.parsePosition(command),size:this.parseSize(command)}}parseObjectModificationCommand(command){const cmd=command.toLowerCase().trim();let color=null;const colorMap={"赤":16711680,"青":255,"緑":65280,"黄":16776960,"紫":16711935,"橙":16746496,"オレンジ":16746496,"白":16777215,"黒":0,"灰":8421504,"グレー":8421504,"ピンク":16761035,"茶":9127187,"銀":12632256,"金":16766720};for(const[colorName,colorValue]of Object.entries(colorMap)){if(cmd.includes(colorName)){color=colorValue;break}}let scale=null;if(cmd.includes("大きく")||cmd.includes("拡大")){scale=1.5}else if(cmd.includes("小さく")||cmd.includes("縮小")){scale=.7}else if(cmd.includes("倍")){const match=cmd.match(/(\d+(?:\.\d+)?)\s*倍/);if(match){scale=parseFloat(match[1])}}let movement=null;if(cmd.includes("移動")||cmd.includes("動か")||cmd.includes("へ")){movement=this.parsePositionFromPrompt(cmd)}let rotation=null;if(cmd.includes("回転")||cmd.includes("回す")||cmd.includes("回して")||cmd.includes("rotate")){const degreeMatch=cmd.match(/(\d+)\s*度/);if(degreeMatch){rotation=parseFloat(degreeMatch[1])*Math.PI/180}else{rotation=Math.PI/4}}let opacity=null;if(cmd.includes("透明")||cmd.includes("transparent")){if(cmd.includes("半透明")){opacity=.5}else{opacity=.3}}else if(cmd.includes("不透明")||cmd.includes("opaque")){opacity=1}return{type:"object_modification",command:command,color:color,scale:scale,movement:movement,rotation:rotation,opacity:opacity,requiresSelection:true}}parseDeleteCommand(command){const cmd=command.toLowerCase().trim();if(cmd.includes("選択")||cmd.includes("これ")||cmd.includes("この")){return{type:"delete",target:"selected",requiresSelection:true}}if(cmd.includes("全部")||cmd.includes("すべて")||cmd.includes("全て")){return{type:"delete",target:"all"}}return{type:"delete",target:"selected",requiresSelection:true}}parseNaturalLanguageCommand(command){const movePatterns=["(S+?)を(.+?)に移動","(S+?)を(.+?)へ移動","(S+?)を(.+?)に動か","(S+?)を(.+?)へ動か"];for(const pattern of movePatterns){const regex=new RegExp(pattern);const match=command.match(regex);if(match){const objectName=match[1];const direction=match[2];console.log(`🎯 Natural language move detected: "${objectName}" to "${direction}"`);return{type:"natural_object_modification",targetObjectName:objectName,movement:this.parsePositionFromPrompt(direction),requiresObjectSearch:true}}}const colorPatterns=["(S+?)を(S+?)色に","(S+?)を(S+?)に"];const colorKeywords=["赤","青","緑","黄","紫","橙","オレンジ","白","黒","灰","グレー","ピンク","茶","銀","金"];for(const pattern of colorPatterns){const regex=new RegExp(pattern);const match=command.match(regex);if(match&&colorKeywords.some(color=>match[2].includes(color))){const objectName=match[1];const colorName=match[2];console.log(`🎨 Natural language color change detected: "${objectName}" to "${colorName}"`);const colorMap={"赤":16711680,"青":255,"緑":65280,"黄":16776960,"紫":16711935,"橙":16746496,"オレンジ":16746496,"白":16777215,"黒":0,"灰":8421504,"グレー":8421504,"ピンク":16761035,"茶":9127187,"銀":12632256,"金":16766720};let colorValue=null;for(const[colorKey,value]of Object.entries(colorMap)){if(colorName.includes(colorKey)){colorValue=value;break}}return{type:"natural_object_modification",targetObjectName:objectName,color:colorValue,requiresObjectSearch:true}}}return null}parsePositionFromPrompt(command){let x=0,y=0,z=0;if(command.includes("右へ")||command.includes("右に")||command.includes("右側へ")||command.includes("右側に")){x=5}else if(command.includes("左へ")||command.includes("左に")||command.includes("左側へ")||command.includes("左側に")){x=-5}if(command.includes("上へ")||command.includes("上に")||command.includes("上側へ")){y=3}else if(command.includes("下へ")||command.includes("下に")||command.includes("下側へ")){y=-3}if(command.includes("前へ")||command.includes("手前へ")||command.includes("近くへ")){z=3}else if(command.includes("後ろへ")||command.includes("奥へ")||command.includes("遠くへ")){z=-3}const distanceMatch=command.match(/(\d+(?:\.\d+)?)\s*(?:メートル|m)/);if(distanceMatch){const distance=parseFloat(distanceMatch[1]);if(Math.abs(x)>0)x=x>0?distance:-distance;if(Math.abs(y)>0)y=y>0?distance:-distance;if(Math.abs(z)>0)z=z>0?distance:-distance}if(command.includes("少し")||command.includes("ちょっと")){x*=.5;y*=.5;z*=.5}else if(command.includes("大きく")||command.includes("たくさん")){x*=2;y*=2;z*=2}console.log(`📍 Position movement parsed from "${command}": (${x}, ${y}, ${z})`);return{x:x,y:y,z:z}}parsePosition(command){let x=0,y=5,z=10;if(command.includes("左下")){x=-8;y=0;z=10;console.log(`📍 Position parsed from "${command}": 左下 (${x}, ${y}, ${z})`);return{x:x,y:y,z:z}}else if(command.includes("右上")){x=5;y=4;z=12;console.log(`📍 Position parsed from "${command}": 右上 (${x}, ${y}, ${z})`);return{x:x,y:y,z:z}}else if(command.includes("左上")){x=-8;y=4;z=15;console.log(`📍 Position parsed from "${command}": 左上 (${x}, ${y}, ${z})`);return{x:x,y:y,z:z}}else if(command.includes("右下")){x=8;y=0;z=10;console.log(`📍 Position parsed from "${command}": 右下 (${x}, ${y}, ${z})`);return{x:x,y:y,z:z}}if(command.includes("中央")||command.includes("真ん中")||command.includes("正面")){x=0;y=3;z=12;console.log(`📍 Position parsed from "${command}": 中央 (${x}, ${y}, ${z})`);return{x:x,y:y,z:z}}else if(command.includes("空")||command.includes("天空")){x=0;y=20;z=10;console.log(`📍 Position parsed from "${command}": 空中 (${x}, ${y}, ${z})`);return{x:x,y:y,z:z}}else if(command.includes("地面")||command.includes("足元")){x=0;y=1;z=8;console.log(`📍 Position parsed from "${command}": 地面 (${x}, ${y}, ${z})`);return{x:x,y:y,z:z}}if(command.includes("前に")||command.includes("手前に")){z=5}else if(command.includes("後ろに")||command.includes("奥に")||command.includes("遠くに")){z=20}if(command.includes("右に")||command.includes("右側")||command.includes("画面の右")){x=8}else if(command.includes("左に")||command.includes("左側")||command.includes("画面の左")){x=-8}if(command.includes("上に")||command.includes("上側")||command.includes("画面の上")||command.includes("高い位置に")||command.includes("空中に")){y=8}else if(command.includes("下に")||command.includes("下側")||command.includes("画面の下")||command.includes("低い位置に")||command.includes("地面に")){y=-2}if(command.includes("近くに")||command.includes("すぐ前に")){z=Math.min(z*.5,3)}else if(command.includes("遠くに")||command.includes("向こうに")){z=z*1.5}console.log(`📍 Position parsed from "${command}": (${x}, ${y}, ${z})`);return{x:x,y:y,z:z}}parseSize(command){if(command.includes("大きな")||command.includes("大きい"))return{scale:2};if(command.includes("小さな")||command.includes("小さい"))return{scale:.5};return{scale:this.config.defaultObjectScale}}async dispatchCommand(parsed){switch(parsed.type){case"image_generation":if(!this.client||!this.client.serverUrl){throw new Error("画像生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。")}return await this.executeImageGeneration(parsed);case"video_generation":if(!this.client||!this.client.serverUrl){throw new Error("動画生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。")}return await this.executeVideoGeneration(parsed);case"object_modification":return await this.executeObjectModification(parsed);case"natural_object_modification":return await this.executeNaturalObjectModification(parsed);case"delete":return await this.executeDelete(parsed);case"file_import":return await this.executeFileImport(parsed);case"object_selection":return await this.executeObjectSelection(parsed);default:throw new Error(`Unknown command type: ${parsed.type}`)}}async executeImageGeneration(parsed){try{console.log(`🎨 Generating image: "${parsed.prompt}"`);const fallbackSizes=[{width:512,height:512},{width:768,height:432},{width:1024,height:1024},{width:640,height:480}];let imageResult;let lastError;for(let i=0;i<fallbackSizes.length;i++){const dimensions=fallbackSizes[i];try{console.log(`🔄 Trying ${dimensions.width}x${dimensions.height}...`);imageResult=await this.client.generateImage(parsed.prompt,{width:dimensions.width,height:dimensions.height,service:this.selectedImageService||undefined});if(imageResult.success){console.log(`✅ Success with ${dimensions.width}x${dimensions.height}`);break}}catch(error){lastError=error;console.log(`⚠️ Failed with ${dimensions.width}x${dimensions.height}: ${error.message}`);if(i<fallbackSizes.length-1){console.log(`🔄 Retrying with next size...`);continue}}}if(imageResult&&imageResult.modelName){console.log(`📡 Used model: ${imageResult.modelName}`)}const loader=new THREE__namespace.TextureLoader;let texture;if(imageResult&&imageResult.success&&(imageResult.imageUrl||imageResult.localPath)){let imageUrl=imageResult.imageUrl;if(!imageUrl&&imageResult.localPath){const filename=imageResult.localPath.split("/").pop();imageUrl=`${this.client.serverUrl}/generated/${filename}`}console.log(`✅ Image generated successfully: ${imageUrl}`);texture=await loader.loadAsync(imageUrl);texture.colorSpace=THREE__namespace.SRGBColorSpace}else{console.log(`⚠️ Using fallback image (last error: ${lastError?.message||"unknown"})`);texture=this.createFallbackTexture(parsed.prompt)}const sizeScale=parsed.size?.scale??this.config.defaultObjectScale??1;const baseSize=6*sizeScale;const imageWidth=texture.image?.naturalWidth||texture.image?.width||texture.source?.data?.width||1;const imageHeight=texture.image?.naturalHeight||texture.image?.height||texture.source?.data?.height||1;const aspectRatio=imageWidth/imageHeight||1;let planeWidth=baseSize;let planeHeight=baseSize;if(aspectRatio>=1){planeWidth=baseSize;planeHeight=baseSize/aspectRatio}else{planeWidth=baseSize*aspectRatio;planeHeight=baseSize}const geometry=new THREE__namespace.PlaneGeometry(planeWidth,planeHeight);const material=new THREE__namespace.MeshBasicMaterial({map:texture,transparent:false,side:THREE__namespace.DoubleSide,toneMapped:false});const plane=new THREE__namespace.Mesh(geometry,material);plane.renderOrder=1e3;material.depthTest=true;material.depthWrite=true;if(this.camera){const finalPosition=this.calculateCameraRelativePosition(parsed.position);plane.position.copy(finalPosition);this.alignPlaneToCamera(plane)}else{plane.position.set(parsed.position.x,parsed.position.y,parsed.position.z)}plane.scale.setScalar(1);const objectId=`generated_${++this.objectCounter}`;plane.name=objectId;plane.userData={id:objectId,prompt:parsed.prompt,createdAt:Date.now(),type:"generated_image",modelName:imageResult?.modelName||this.selectedImageService||null};this.experimentGroup.add(plane);this.spawnedObjects.set(objectId,plane);console.log(`✅ Created object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);if(this.config.showLocationIndicator){this.createLocationIndicator(parsed.position)}return{objectId:objectId,position:parsed.position,prompt:parsed.prompt,modelName:imageResult?.modelName,success:true}}catch(error){console.error("🎨 Image generation failed:",error);throw error}}async executeVideoGeneration(parsed){try{console.log(`🎬 Generating video: "${parsed.prompt}"`);console.log("🔍 Video generation - selectedVideoService:",this.selectedVideoService);const videoResult=await this.client.generateVideo(parsed.prompt,{duration:3,model:this.selectedVideoService||undefined});if(videoResult.modelName){console.log(`📡 Used model: ${videoResult.modelName}`)}let videoTexture;let video=null;if(videoResult.success&&videoResult.videoUrl){console.log(`✅ Video generated successfully: ${videoResult.videoUrl}`);video=document.createElement("video");video.src=videoResult.videoUrl;video.crossOrigin="anonymous";video.loop=true;video.muted=true;video.playsInline=true;videoTexture=new THREE__namespace.VideoTexture(video);videoTexture.colorSpace=THREE__namespace.SRGBColorSpace;video.addEventListener("loadeddata",()=>{video.play().catch(console.error)})}else{console.log(`⚠️ Using fallback video texture`);videoTexture=this.createFallbackVideoTexture(parsed.prompt)}const sizeScale=parsed.size?.scale??this.config.defaultObjectScale??1;const baseSize=6*sizeScale;const requestedWidth=videoResult.metadata?.width||512;const requestedHeight=videoResult.metadata?.height||512;const planeAspect=requestedWidth&&requestedHeight?requestedWidth/requestedHeight:1;let planeWidth=baseSize;let planeHeight=baseSize;if(planeAspect>=1){planeHeight=baseSize/planeAspect}else{planeWidth=baseSize*planeAspect}const geometry=new THREE__namespace.PlaneGeometry(planeWidth,planeHeight);const material=new THREE__namespace.MeshBasicMaterial({map:videoTexture,transparent:false,side:THREE__namespace.DoubleSide,toneMapped:false});const plane=new THREE__namespace.Mesh(geometry,material);plane.renderOrder=1e3;material.depthTest=true;material.depthWrite=true;if(this.camera){const finalPosition=this.calculateCameraRelativePosition(parsed.position);plane.position.copy(finalPosition);this.alignPlaneToCamera(plane)}else{plane.position.set(parsed.position.x,parsed.position.y,parsed.position.z)}plane.scale.setScalar(1);const objectId=`generated_video_${++this.objectCounter}`;plane.name=objectId;plane.userData={id:objectId,prompt:parsed.prompt,createdAt:Date.now(),type:"generated_video",videoUrl:videoResult.videoUrl,modelName:videoResult.modelName||this.selectedVideoService||null,width:requestedWidth,height:requestedHeight,videoElement:video};this.createAudioControl(plane);this.experimentGroup.add(plane);this.spawnedObjects.set(objectId,plane);console.log(`✅ Created video object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);if(this.config.showLocationIndicator){this.createLocationIndicator(parsed.position)}return{objectId:objectId,position:parsed.position,prompt:parsed.prompt,modelName:videoResult.modelName,videoUrl:videoResult.videoUrl,success:true}}catch(error){console.error("🎬 Video generation failed:",error);console.log("🔄 Creating fallback video plane due to generation error");const fallbackVideoTexture=this.createFallbackVideoTexture(parsed.prompt);const sizeScale=parsed.size?.scale??this.config.defaultObjectScale??1;const baseSize=6*sizeScale;const geometry=new THREE__namespace.PlaneGeometry(baseSize,baseSize);const material=new THREE__namespace.MeshBasicMaterial({map:fallbackVideoTexture,transparent:false,side:THREE__namespace.DoubleSide,toneMapped:false});const plane=new THREE__namespace.Mesh(geometry,material);if(this.camera){const finalPosition=this.calculateCameraRelativePosition(parsed.position);plane.position.copy(finalPosition);this.alignPlaneToCamera(plane)}else{plane.position.set(parsed.position.x,parsed.position.y,parsed.position.z)}plane.scale.setScalar(1);const objectId=`generated_video_${++this.objectCounter}`;plane.name=objectId;plane.userData={id:objectId,prompt:parsed.prompt,createdAt:Date.now(),type:"generated_video",videoUrl:null,modelName:"Error Fallback",width:512,height:512,videoElement:null,error:error.message};this.scene.add(plane);console.log("📍 Fallback video plane added to scene");return{success:false,error:error.message,object:plane,prompt:parsed.prompt}}}async loadImageFile(fileUrl,options={}){try{const{position:position={x:0,y:5,z:-10},fileName:fileName=null}=options;console.log(`📁 Loading image file: ${fileUrl}`);const loader=new THREE__namespace.TextureLoader;const texture=await loader.loadAsync(fileUrl);texture.colorSpace=THREE__namespace.SRGBColorSpace;const imageWidth=texture.image?.naturalWidth||texture.image?.width||texture.source?.data?.width||1;const imageHeight=texture.image?.naturalHeight||texture.image?.height||texture.source?.data?.height||1;const aspectRatio=imageWidth/imageHeight||1;const baseSize=6;let width=baseSize;let height=baseSize;if(aspectRatio>=1){width=baseSize;height=baseSize/aspectRatio}else{width=baseSize*aspectRatio;height=baseSize}const geometry=new THREE__namespace.PlaneGeometry(width,height);const material=new THREE__namespace.MeshBasicMaterial({map:texture,transparent:false,side:THREE__namespace.DoubleSide,toneMapped:false});const plane=new THREE__namespace.Mesh(geometry,material);plane.renderOrder=1e3;material.depthTest=true;material.depthWrite=true;if(this.camera){const finalPosition=this.calculateCameraRelativePosition(position);plane.position.copy(finalPosition);this.alignPlaneToCamera(plane)}else{plane.position.set(position.x,position.y,position.z)}plane.scale.setScalar(1);const prompt=fileName?fileName.replace(/\.[^/.]+$/,""):"imported_image";const objectId=`imported_image_${++this.objectCounter}`;plane.name=objectId;plane.userData={id:objectId,source:"imported_file",createdAt:Date.now(),type:"generated_image",prompt:prompt,fileName:fileName,importOrder:this.objectCounter};this.experimentGroup.add(plane);this.spawnedObjects.set(objectId,plane);console.log(`✅ Created imported image: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);if(this.config.showLocationIndicator){this.createLocationIndicator(position)}return{objectId:objectId,position:position,success:true}}catch(error){console.error("📁 Image file loading failed:",error);throw error}}async loadVideoFile(fileUrl,options={}){try{const{position:position={x:0,y:5,z:-10},fileName:fileName=null}=options;console.log(`🎬 Loading video file: ${fileUrl}`);const video=document.createElement("video");video.src=fileUrl;video.loop=true;video.muted=true;video.playsInline=true;video.autoplay=true;video.preload="auto";const videoTexture=new THREE__namespace.VideoTexture(video);videoTexture.colorSpace=THREE__namespace.SRGBColorSpace;await new Promise((resolve,reject)=>{const handleLoaded=()=>{console.log(`🎬 Video loaded: ${video.videoWidth}x${video.videoHeight}`);resolve()};const handleError=event=>{reject(event?.error||new Error("Video failed to load"))};video.addEventListener("loadedmetadata",handleLoaded,{once:true});video.addEventListener("error",handleError,{once:true});video.load()});try{await video.play()}catch(playError){console.warn("🎬 Video autoplay could not start automatically. Playback will require user interaction.",playError)}const aspectRatio=video.videoWidth/video.videoHeight;const baseSize=6;let width=baseSize;let height=baseSize;if(aspectRatio>1){height=baseSize/aspectRatio}else{width=baseSize*aspectRatio}const geometry=new THREE__namespace.PlaneGeometry(width,height);const material=new THREE__namespace.MeshBasicMaterial({map:videoTexture,transparent:false,side:THREE__namespace.DoubleSide,toneMapped:false});const plane=new THREE__namespace.Mesh(geometry,material);plane.renderOrder=1e3;material.depthTest=true;material.depthWrite=true;if(this.camera){const finalPosition=this.calculateCameraRelativePosition(position);plane.position.copy(finalPosition);this.alignPlaneToCamera(plane)}else{plane.position.set(position.x,position.y,position.z)}plane.scale.setScalar(1);const prompt=fileName?fileName.replace(/\.[^/.]+$/,""):"imported_video";const objectId=`imported_video_${++this.objectCounter}`;plane.name=objectId;plane.userData={id:objectId,source:"imported_file",createdAt:Date.now(),type:"generated_video",videoElement:video,objectUrl:fileUrl,prompt:prompt,fileName:fileName,importOrder:this.objectCounter};this.createAudioControl(plane);this.experimentGroup.add(plane);this.spawnedObjects.set(objectId,plane);console.log(`✅ Created imported video: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);if(this.config.showLocationIndicator){this.createLocationIndicator(position)}return{objectId:objectId,position:position,success:true}}catch(error){console.error("🎬 Video file loading failed:",error);throw error}}async executeNaturalObjectModification(parsed){const targetObjects=this.findObjectsByName(parsed.targetObjectName);if(targetObjects.length===0){return{success:false,message:`オブジェクト「${parsed.targetObjectName}」が見つかりませんでした`}}console.log(`🔍 Found ${targetObjects.length} object(s) matching "${parsed.targetObjectName}"`);const targetObject=this.selectObjectFromMultiple(targetObjects,parsed.targetObjectName);console.log(`🎯 Operating on object: ${targetObject.name}`);let modified=false;if(parsed.color!==null&&targetObject.material){if(targetObject.material.map){targetObject.material.color.setHex(parsed.color);console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`)}else{targetObject.material.color.setHex(parsed.color);console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`)}modified=true}if(parsed.movement!==null){const currentPos=targetObject.position;const newPos={x:currentPos.x+parsed.movement.x,y:currentPos.y+parsed.movement.y,z:currentPos.z+parsed.movement.z};targetObject.position.set(newPos.x,newPos.y,newPos.z);console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);modified=true}if(modified){targetObject.userData.lastModified=Date.now();targetObject.userData.modifications=targetObject.userData.modifications||[];targetObject.userData.modifications.push({timestamp:Date.now(),color:parsed.color,movement:parsed.movement,command:`Natural language: ${parsed.targetObjectName}`});return{success:true,message:`オブジェクト「${targetObject.name}」を変更しました`,objectId:targetObject.name,modifications:{color:parsed.color,movement:parsed.movement}}}else{return{success:false,message:"変更可能な属性が見つかりませんでした"}}}findObjectsByName(searchName){const results=[];const searchLower=searchName.toLowerCase();for(const[objectId,object]of this.spawnedObjects){if(object.userData.prompt){const promptLower=object.userData.prompt.toLowerCase();if(promptLower.includes(searchLower)){results.push(object);console.log(`✅ Object match found: ${objectId} (prompt: "${object.userData.prompt}")`)}}if(object.name&&object.name.toLowerCase().includes(searchLower)){results.push(object);console.log(`✅ Object match found: ${objectId} (name: "${object.name}")`)}}return results}selectObjectFromMultiple(objects,originalCommand){const ordinalPatterns=[/(\d+)つ目の/,/(\d+)番目の/,/(\d+)個目の/,/最初の|1つ目の|1番目の|1個目の/,/最後の|最終の/,/2つ目の|2番目の|2個目の/,/3つ目の|3番目の|3個目の/];for(const pattern of ordinalPatterns){const match=originalCommand.match(pattern);if(match){let index;if(match[1]){index=parseInt(match[1])-1}else{const matchedText=match[0];if(matchedText.includes("最初")||matchedText.includes("1つ目")||matchedText.includes("1番目")||matchedText.includes("1個目")){index=0}else if(matchedText.includes("最後")||matchedText.includes("最終")){index=objects.length-1}else if(matchedText.includes("2つ目")||matchedText.includes("2番目")||matchedText.includes("2個目")){index=1}else if(matchedText.includes("3つ目")||matchedText.includes("3番目")||matchedText.includes("3個目")){index=2}}if(index>=0&&index<objects.length){console.log(`🔢 Selected object by ordinal: index ${index+1} of ${objects.length}`);return objects[index]}else{console.warn(`⚠️ Invalid ordinal index: ${index+1} (available: 1-${objects.length})`)}}}console.log(`🔢 No ordinal specified, using first object`);return objects[0]}async executeObjectModification(parsed){let targetObject=this.findObjectByKeyword(parsed.command);if(!targetObject){if(!this.selectedObject){return{success:false,message:"オブジェクトを選択するか、対象を指定してください（例：「猫を赤くして」）"}}targetObject=this.selectedObject}else{this.selectObject(targetObject)}console.log(`🔧 Modifying object: ${targetObject.name}`);console.log(`🔍 Debug - parsed.movement:`,parsed.movement);let modified=false;if(parsed.color!==null&&targetObject.material){if(targetObject.material.map){targetObject.material.color.setHex(parsed.color);console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`)}else{targetObject.material.color.setHex(parsed.color);console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`)}modified=true}if(parsed.scale!==null){const currentScale=targetObject.scale.x;const newScale=currentScale*parsed.scale;targetObject.scale.setScalar(newScale);console.log(`📏 Scale changed from ${currentScale} to ${newScale}`);modified=true}if(parsed.movement!==null){const currentPos=targetObject.position;const newPos={x:currentPos.x+parsed.movement.x,y:currentPos.y+parsed.movement.y,z:currentPos.z+parsed.movement.z};targetObject.position.set(newPos.x,newPos.y,newPos.z);console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);modified=true}if(parsed.rotation!==null){const currentRotation=targetObject.rotation.y;const newRotation=currentRotation+parsed.rotation;targetObject.rotation.y=newRotation;const degrees=(parsed.rotation*180/Math.PI).toFixed(1);console.log(`🔄 Rotation changed by ${degrees}° (new Y rotation: ${(newRotation*180/Math.PI).toFixed(1)}°)`);modified=true}if(parsed.opacity!==null&&targetObject.material){const currentOpacity=targetObject.material.opacity||1;targetObject.material.opacity=parsed.opacity;targetObject.material.transparent=parsed.opacity<1;console.log(`🔍 Opacity changed from ${currentOpacity.toFixed(2)} to ${parsed.opacity.toFixed(2)}`);modified=true}if(modified){targetObject.userData.lastModified=Date.now();targetObject.userData.modifications=targetObject.userData.modifications||[];targetObject.userData.modifications.push({timestamp:Date.now(),color:parsed.color,scale:parsed.scale,movement:parsed.movement,rotation:parsed.rotation,opacity:parsed.opacity,command:parsed.command});return{success:true,message:`オブジェクト「${targetObject.name}」を変更しました`,objectId:targetObject.name,modifications:{color:parsed.color,scale:parsed.scale,movement:parsed.movement,rotation:parsed.rotation,opacity:parsed.opacity}}}else{return{success:false,message:"変更可能な属性が見つかりませんでした"}}}async executeDelete(parsed){const command=parsed.command||"";if(parsed.target==="all"||command.includes("すべて")||command.includes("全部")){this.clearAll();return{success:true,message:"すべてのオブジェクトを削除しました"}}const targetByKeyword=this.findObjectByKeyword(command);let targetObject=null;let deleteReason="";const isSimpleDeleteCommand=command.match(/^(削除|消して|消す|delete|remove)$/i);if(isSimpleDeleteCommand&&this.selectedObject){targetObject=this.selectedObject;deleteReason="選択されたオブジェクト"}else if(targetByKeyword){targetObject=targetByKeyword;deleteReason="コマンドで指定されたオブジェクト"}else if(this.selectedObject){targetObject=this.selectedObject;deleteReason="選択されたオブジェクト"}if(targetObject){const objectId=targetObject.name;console.log(`🗑️ Deleting ${deleteReason}: ${objectId}`);if(targetObject===this.selectedObject){this.deselectObject()}const success=this.removeObject(objectId);if(success){return{success:true,message:`${deleteReason}「${objectId}」を削除しました`,deletedObjectId:objectId}}else{return{success:false,message:"オブジェクトの削除に失敗しました"}}}return{success:false,message:"削除対象が見つかりませんでした。オブジェクトを選択するか、対象を指定してください"}}async executeFileImport(parsed){try{console.log("🍫 Starting file import process...");const input=document.createElement("input");input.type="file";input.style.display="none";if(parsed.fileType==="video"){input.accept="video/*"}else{input.accept="image/*"}document.body.appendChild(input);return new Promise((resolve,reject)=>{input.onchange=async event=>{try{const file=event.target.files[0];if(!file){reject(new Error("ファイルが選択されませんでした"));return}console.log(`📁 Selected file: ${file.name}`);const fileUrl=URL.createObjectURL(file);let result;if(parsed.fileType==="video"||file.type.startsWith("video/")){result=await this.loadVideoFile(fileUrl,{position:parsed.position})}else{result=await this.loadImageFile(fileUrl,{position:parsed.position})}console.log("✅ File import completed:",result);resolve(result)}catch(error){console.error("❌ File import failed:",error);reject(error)}finally{document.body.removeChild(input)}};input.oncancel=()=>{document.body.removeChild(input);reject(new Error("ファイル選択がキャンセルされました"))};input.click()})}catch(error){console.error("❌ File import execution failed:",error);throw error}}async executeObjectSelection(parsed){try{console.log("🎯 Starting object selection...");const objects=this.getSpawnedObjects();if(objects.length===0){throw new Error("選択可能なオブジェクトがありません。まずファイルをインポートしてください。")}console.log(`📋 Available objects: ${objects.length}`);const modal=document.createElement("div");modal.style.cssText=`\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.8);\n        z-index: 10000;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;const container=document.createElement("div");container.style.cssText=`\n        background: #1a1a2e;\n        border-radius: 12px;\n        padding: 24px;\n        max-width: 500px;\n        max-height: 70vh;\n        overflow-y: auto;\n        color: white;\n        font-family: Arial, sans-serif;\n      `;const title=document.createElement("h3");title.textContent="🎯 オブジェクトを選択してください";title.style.cssText="margin: 0 0 16px 0; color: #ec4899;";container.appendChild(title);const objectList=document.createElement("div");objectList.style.cssText="margin-bottom: 16px;";objects.forEach((obj,index)=>{const item=document.createElement("div");item.style.cssText=`\n          padding: 12px;\n          margin: 8px 0;\n          background: #2a2a3e;\n          border-radius: 8px;\n          cursor: pointer;\n          border: 2px solid transparent;\n          transition: all 0.3s ease;\n        `;const name=obj.userData?.type==="generated_image"?"🖼️ 画像":obj.userData?.type==="generated_video"?"🎬 動画":"📄 ファイル";const time=new Date(obj.userData?.createdAt).toLocaleTimeString();item.innerHTML=`\n          <div style="font-weight: bold;">${name} #${index+1}</div>\n          <div style="font-size: 12px; color: #94a3b8;">作成: ${time}</div>\n          <div style="font-size: 12px; color: #94a3b8;">位置: (${Math.round(obj.position.x)}, ${Math.round(obj.position.y)}, ${Math.round(obj.position.z)})</div>\n        `;item.onmouseover=()=>{item.style.borderColor="#ec4899";item.style.background="#3a3a4e"};item.onmouseout=()=>{item.style.borderColor="transparent";item.style.background="#2a2a3e"};item.onclick=()=>{resolve({selectedObjectId:obj.id,selectedObject:obj});document.body.removeChild(modal)};objectList.appendChild(item)});container.appendChild(objectList);const cancelBtn=document.createElement("button");cancelBtn.textContent="キャンセル";cancelBtn.style.cssText=`\n        background: #666;\n        color: white;\n        border: none;\n        padding: 8px 16px;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 14px;\n      `;cancelBtn.onclick=()=>{document.body.removeChild(modal);reject(new Error("オブジェクト選択がキャンセルされました"))};container.appendChild(cancelBtn);modal.appendChild(container);document.body.appendChild(modal);return new Promise((resolve,reject)=>{})}catch(error){console.error("❌ Object selection failed:",error);throw error}}createFallbackTexture(prompt){const canvas=document.createElement("canvas");canvas.width=512;canvas.height=512;const ctx=canvas.getContext("2d");const hash=this.hashString(prompt);const hue=hash%360;const gradient=ctx.createLinearGradient(0,0,512,512);gradient.addColorStop(0,`hsl(${hue}, 70%, 60%)`);gradient.addColorStop(1,`hsl(${(hue+60)%360}, 70%, 40%)`);ctx.fillStyle=gradient;ctx.fillRect(0,0,512,512);ctx.fillStyle="white";ctx.font="24px Arial";ctx.textAlign="center";ctx.fillText("🎨",256,230);ctx.font="16px Arial";ctx.fillText(prompt.slice(0,20),256,270);ctx.font="14px Arial";ctx.fillStyle="rgba(255,255,255,0.7)";ctx.fillText("Placeholder Image",256,300);return new THREE__namespace.CanvasTexture(canvas)}createFallbackVideoTexture(prompt){const canvas=document.createElement("canvas");canvas.width=512;canvas.height=512;const ctx=canvas.getContext("2d");const hash=this.hashString(prompt);const hue=hash%360;let animationFrame=0;const animate=()=>{const gradient=ctx.createLinearGradient(0,0,512,512);const offset=animationFrame*2%360;gradient.addColorStop(0,`hsl(${(hue+offset)%360}, 70%, 60%)`);gradient.addColorStop(1,`hsl(${(hue+offset+60)%360}, 70%, 40%)`);ctx.fillStyle=gradient;ctx.fillRect(0,0,512,512);ctx.fillStyle="white";ctx.font="24px Arial";ctx.textAlign="center";const icons=["🎬","🎥","📹","🎞️"];const iconIndex=Math.floor(animationFrame/10)%icons.length;ctx.fillText(icons[iconIndex],256,230);ctx.font="16px Arial";ctx.fillText(prompt.slice(0,20),256,270);ctx.font="14px Arial";ctx.fillStyle="rgba(255,255,255,0.7)";ctx.fillText("Placeholder Video",256,300);animationFrame++;setTimeout(()=>requestAnimationFrame(animate),1e3/60)};animate();return new THREE__namespace.CanvasTexture(canvas)}hashString(str){let hash=0;for(let i=0;i<str.length;i++){const char=str.charCodeAt(i);hash=(hash<<5)-hash+char;hash=hash&hash}return Math.abs(hash)}getSpawnedObjects(){return Array.from(this.spawnedObjects.entries()).map(([id,object])=>({id:id,name:object.name,userData:object.userData,position:object.position.clone()}))}removeObject(objectId){const object=this.spawnedObjects.get(objectId);if(object){if(object.userData?.videoElement){const videoElement=object.userData.videoElement;try{videoElement.pause();if(typeof videoElement.removeAttribute==="function"){videoElement.removeAttribute("src")}else{videoElement.src=""}if(typeof videoElement.load==="function"){videoElement.load()}}catch(error){console.warn("🎬 Failed to release video element resources:",error)}}if(object.userData?.objectUrl){try{URL.revokeObjectURL(object.userData.objectUrl)}catch(error){console.warn("🎬 Failed to revoke object URL:",error)}}this.experimentGroup.remove(object);this.spawnedObjects.delete(objectId);if(object.geometry)object.geometry.dispose();if(object.material){const materials=Array.isArray(object.material)?object.material:[object.material];materials.forEach(mat=>{if(mat.map&&typeof mat.map.dispose==="function"){mat.map.dispose()}mat.dispose()})}console.log(`🗑️ Removed object: ${objectId}`);return true}return false}clearAll(){const objectIds=Array.from(this.spawnedObjects.keys());objectIds.forEach(id=>this.removeObject(id));console.log("🧹 Cleared all experimental objects")}getCommandHistory(){return[...this.commandHistory]}createLocationIndicator(relativePosition){const geometry=new THREE__namespace.SphereGeometry(1,16,16);const material=new THREE__namespace.MeshBasicMaterial({color:65280,transparent:true,opacity:.9});const indicator=new THREE__namespace.Mesh(geometry,material);if(this.camera){const indicatorPos=this.calculateCameraRelativePosition({x:relativePosition.x,y:relativePosition.y+2,z:relativePosition.z});indicator.position.copy(indicatorPos)}else{indicator.position.set(relativePosition.x,relativePosition.y+2,relativePosition.z)}console.log(`🟢 インジケーター表示: (${indicator.position.x.toFixed(1)}, ${indicator.position.y.toFixed(1)}, ${indicator.position.z.toFixed(1)})`);this.scene.add(indicator);setTimeout(()=>{this.scene.remove(indicator);geometry.dispose();material.dispose()},this.config.indicatorDuration);let opacity=.8;let direction=-1;const animate=()=>{opacity+=direction*.05;if(opacity<=.3)direction=1;if(opacity>=.8)direction=-1;material.opacity=opacity;if(indicator.parent){requestAnimationFrame(animate)}};animate()}calculateCameraRelativePosition(relativePosition){if(!this.camera){if(this.config.enableDebugLogging){console.warn("📷 Camera not available, using fallback positioning")}return new THREE__namespace.Vector3(relativePosition.x,relativePosition.y,relativePosition.z)}try{const cameraPos=this.camera.position.clone();const cameraDirection=new THREE__namespace.Vector3;this.camera.getWorldDirection(cameraDirection);const cameraRight=new THREE__namespace.Vector3;const cameraUp=new THREE__namespace.Vector3(0,1,0);cameraRight.crossVectors(cameraDirection,cameraUp).normalize();const cameraUpActual=new THREE__namespace.Vector3;cameraUpActual.crossVectors(cameraRight,cameraDirection).normalize();const finalPosition=cameraPos.clone();finalPosition.add(cameraDirection.clone().multiplyScalar(relativePosition.z));finalPosition.add(cameraRight.clone().multiplyScalar(relativePosition.x));finalPosition.add(cameraUpActual.clone().multiplyScalar(relativePosition.y));this.logDebug(`📍 Camera relative position calculated: (${finalPosition.x.toFixed(1)}, ${finalPosition.y.toFixed(1)}, ${finalPosition.z.toFixed(1)})`);return finalPosition}catch(error){console.error("❌ Camera relative position calculation failed:",error);return new THREE__namespace.Vector3(relativePosition.x,relativePosition.y,relativePosition.z)}}alignPlaneToCamera(plane){if(!this.camera){return}const forward=new THREE__namespace.Vector3;this.camera.getWorldDirection(forward);forward.negate();let up=(new THREE__namespace.Vector3).copy(this.camera.up).applyQuaternion(this.camera.quaternion).normalize();if(Math.abs(forward.dot(up))>.999){up=new THREE__namespace.Vector3(0,1,0);if(Math.abs(forward.dot(up))>.999){up=new THREE__namespace.Vector3(0,0,1)}}const right=(new THREE__namespace.Vector3).crossVectors(up,forward).normalize();up=(new THREE__namespace.Vector3).crossVectors(forward,right).normalize();const orientation=new THREE__namespace.Matrix4;orientation.makeBasis(right,up,forward);plane.quaternion.setFromRotationMatrix(orientation)}setCamera(camera){this.camera=camera}updateConfig(newConfig){this.config={...this.config,...newConfig}}setImageService(serviceId){this.selectedImageService=serviceId||null;this.logDebug("🎯 Updated image service:",this.selectedImageService)}getImageService(){return this.selectedImageService}setVideoService(serviceId){this.selectedVideoService=serviceId||null;this.logDebug("🎬 Updated video service:",this.selectedVideoService)}getVideoService(){return this.selectedVideoService}createAudioControl(videoObject){const videoElement=videoObject.userData.videoElement;if(!videoElement)return;const audioButton=document.createElement("div");audioButton.className="chocodrop-audio-control";audioButton.innerHTML="♪";const createTooltip=()=>{const tooltip=document.createElement("div");tooltip.className="chocodrop-audio-tooltip";tooltip.textContent="音声のオン/オフ切り替え";tooltip.style.cssText=`\n        position: absolute !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 8px !important;\n        padding: 8px 12px !important;\n        color: white !important;\n        font-size: 11px !important;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n        font-weight: 500 !important;\n        white-space: nowrap !important;\n        pointer-events: none !important;\n        z-index: 1000000 !important;\n        opacity: 0 !important;\n        transform: translateY(-100%) translateX(-50%) !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        margin-bottom: 8px !important;\n      `;return tooltip};const tooltip=createTooltip();document.body.appendChild(tooltip);const createVolumeSlider=()=>{const sliderContainer=document.createElement("div");sliderContainer.className="chocodrop-volume-slider";sliderContainer.style.cssText=`\n        position: absolute !important;\n        width: 30px !important;\n        height: 100px !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 15px !important;\n        padding: 10px 8px !important;\n        z-index: 1000001 !important;\n        opacity: 0 !important;\n        pointer-events: none !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        display: flex !important;\n        flex-direction: column !important;\n        align-items: center !important;\n        justify-content: center !important;\n      `;const slider=document.createElement("input");slider.type="range";slider.min="0";slider.max="100";slider.value="100";slider.style.cssText=`\n        width: 80px !important;\n        height: 12px !important;\n        background: rgba(255, 255, 255, 0.2) !important;\n        border-radius: 6px !important;\n        outline: none !important;\n        cursor: pointer !important;\n        -webkit-appearance: none !important;\n        appearance: none !important;\n        transform: rotate(-90deg) !important;\n        transform-origin: center !important;\n      `;const style=document.createElement("style");style.textContent=`\n        .chocodrop-volume-slider input[type="range"]::-webkit-slider-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n        }\n        .chocodrop-volume-slider input[type="range"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n        .chocodrop-volume-slider input[type="range"]::-moz-range-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n          border: none;\n        }\n        .chocodrop-volume-slider input[type="range"]::-moz-range-thumb {\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          border: none;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n      `;document.head.appendChild(style);slider.addEventListener("input",e=>{const value=e.target.value;videoElement.volume=value/100;if(value==0){audioButton.innerHTML='<span style="position: relative;">♪<span style="position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;">⃠</span></span>';audioButton.style.background="rgba(99, 102, 241, 0.6) !important";audioButton.title="ミュート中"}else{audioButton.innerHTML="♪";audioButton.style.background="rgba(0, 0, 0, 0.4) !important";audioButton.style.color="white !important";audioButton.title="音声ON"}});sliderContainer.appendChild(slider);return sliderContainer};const volumeSlider=createVolumeSlider();document.body.appendChild(volumeSlider);audioButton.style.cssText=`\n      position: absolute !important;\n      width: 18px !important;\n      height: 18px !important;\n      background: rgba(0, 0, 0, 0.4) !important;\n      border: 1px solid rgba(255, 255, 255, 0.3) !important;\n      border-radius: 50% !important;\n      color: white !important;\n      font-size: 9px !important;\n      cursor: pointer !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      z-index: 999999 !important;\n      transition: all 0.2s ease !important;\n      user-select: none !important;\n      box-shadow: 0 1px 4px rgba(0,0,0,0.2) !important;\n      backdrop-filter: blur(8px) !important;\n      pointer-events: auto !important;\n      opacity: 1 !important;\n    `;let isSliderVisible=false;audioButton.addEventListener("mouseenter",()=>{audioButton.style.background="rgba(0, 0, 0, 0.7)";audioButton.style.transform="scale(1.05)";audioButton.style.borderColor="rgba(255, 255, 255, 0.5)";if(!isSliderVisible){const buttonRect=audioButton.getBoundingClientRect();tooltip.style.left=`${buttonRect.left+buttonRect.width/2}px`;tooltip.style.top=`${buttonRect.top-8}px`;tooltip.style.opacity="1"}});audioButton.addEventListener("mouseleave",()=>{audioButton.style.background="rgba(0, 0, 0, 0.5)";audioButton.style.transform="scale(1.0)";audioButton.style.borderColor="rgba(255, 255, 255, 0.4)";tooltip.style.opacity="0"});audioButton.addEventListener("click",e=>{e.stopPropagation();if(isSliderVisible){isSliderVisible=false;volumeSlider.style.opacity="0";volumeSlider.style.pointerEvents="none";return}if(videoElement.muted||videoElement.volume===0){videoElement.muted=false;videoElement.volume=volumeSlider.querySelector("input").value/100;audioButton.innerHTML="♪";audioButton.style.background="rgba(0, 0, 0, 0.4) !important";audioButton.style.color="white !important";audioButton.title="音声ON"}else{videoElement.muted=true;audioButton.innerHTML='<span style="position: relative;">♪<span style="position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;">⃠</span></span>';audioButton.style.background="rgba(99, 102, 241, 0.6) !important";audioButton.title="ミュート中"}});audioButton.addEventListener("contextmenu",e=>{e.preventDefault();e.stopPropagation();isSliderVisible=!isSliderVisible;if(isSliderVisible){const buttonRect=audioButton.getBoundingClientRect();volumeSlider.style.left=`${buttonRect.left+buttonRect.width/2-15}px`;volumeSlider.style.top=`${buttonRect.top-110}px`;volumeSlider.style.opacity="1";volumeSlider.style.pointerEvents="auto";tooltip.style.opacity="0"}else{volumeSlider.style.opacity="0";volumeSlider.style.pointerEvents="none"}});document.addEventListener("click",e=>{if(isSliderVisible&&!audioButton.contains(e.target)&&!volumeSlider.contains(e.target)){isSliderVisible=false;volumeSlider.style.opacity="0";volumeSlider.style.pointerEvents="none"}});document.body.appendChild(audioButton);videoObject.userData.audioControlElement=audioButton;videoObject.userData.updateAudioControlPosition=()=>{this.updateAudioControlPosition(videoObject,audioButton)};this.updateAudioControlPosition(videoObject,audioButton);if(!this.audioControlUpdateInterval){this.audioControlUpdateInterval=setInterval(()=>{this.spawnedObjects.forEach(obj=>{if(obj.userData.updateAudioControlPosition){obj.userData.updateAudioControlPosition()}})},100)}videoObject.userData.cleanupCallbacks=videoObject.userData.cleanupCallbacks||[];videoObject.userData.cleanupCallbacks.push(()=>{if(audioButton.parentNode){audioButton.parentNode.removeChild(audioButton)}});console.log("🔊 Audio control created for video:",videoObject.userData.id)}updateAudioControlPosition(videoObject,audioButton){if(!this.camera||!this.renderer||!audioButton.parentNode)return;const vector=new THREE__namespace.Vector3;videoObject.getWorldPosition(vector);vector.project(this.camera);const canvas=this.renderer.domElement;const rect=canvas.getBoundingClientRect();const x=(vector.x*.5+.5)*rect.width+rect.left;const y=-(vector.y*.5-.5)*rect.height+rect.top;const geometry=videoObject.geometry;if(geometry&&geometry.parameters){geometry.parameters.width*videoObject.scale.x;const offsetX=150;const offsetY=-50;audioButton.style.left=`${x+offsetX}px`;audioButton.style.top=`${y+offsetY}px`}else{audioButton.style.left=`${x+50}px`;audioButton.style.top=`${y-20}px`}}toggleVideoAudio(videoObject,audioButton){const videoElement=videoObject.userData.videoElement;if(!videoElement)return;if(videoElement.muted){videoElement.muted=false;audioButton.innerHTML="🔈";console.log("🔊 Audio enabled for video:",videoObject.userData.id)}else{videoElement.muted=true;audioButton.innerHTML="🔊";console.log("🔇 Audio muted for video:",videoObject.userData.id)}}initializeLabelRenderer(){if(this.labelRenderer){return}this.loadAndInitializeCSS2DRenderer()}async ensureCSS2DRenderer(){if(this.labelRenderer){return}if(!this.css2dInitPromise){this.css2dInitPromise=this.loadAndInitializeCSS2DRenderer()}await this.css2dInitPromise}async loadAndInitializeCSS2DRenderer(){try{if(window.THREE&&window.THREE.CSS2DRenderer){this.setupCSS2DRenderer();return}console.log("🏷️ Loading CSS2DRenderer dynamically...");const module=await import("https://cdn.skypack.dev/three@0.158.0/examples/jsm/renderers/CSS2DRenderer.js");if(!window.THREE)window.THREE={};window.THREE.CSS2DRenderer=module.CSS2DRenderer;window.THREE.CSS2DObject=module.CSS2DObject;console.log("✅ CSS2DRenderer loaded successfully");this.setupCSS2DRenderer()}catch(error){console.warn("⚠️ Failed to load CSS2DRenderer:",error);console.warn("🔧 Audio controls will not be visible. Please include CSS2DRenderer in your project.")}}setupCSS2DRenderer(){try{this.labelRenderer=new window.THREE.CSS2DRenderer;this.labelRenderer.setSize(window.innerWidth,window.innerHeight);this.labelRenderer.domElement.style.position="absolute";this.labelRenderer.domElement.style.top="0px";this.labelRenderer.domElement.style.pointerEvents="none";if(this.renderer&&this.renderer.domElement.parentNode){this.renderer.domElement.parentNode.appendChild(this.labelRenderer.domElement)}else{document.body.appendChild(this.labelRenderer.domElement)}console.log("🏷️ CSS2DRenderer initialized for UI overlays");this.addLabelRendererResizeHandler()}catch(error){console.warn("⚠️ Failed to setup CSS2DRenderer:",error)}}addLabelRendererResizeHandler(){if(!this.labelRendererResizeHandler){this.labelRendererResizeHandler=()=>{if(this.labelRenderer){this.labelRenderer.setSize(window.innerWidth,window.innerHeight)}};window.addEventListener("resize",this.labelRendererResizeHandler)}}updateRenderer(){if(this.labelRenderer&&this.scene&&this.camera){this.labelRenderer.render(this.scene,this.camera)}}logDebug(...args){if(!this.config.enableDebugLogging){return}console.log(...args)}getAdaptiveSelectionColor(){const backgroundColor=this.scene.background;let bgColor={r:.5,g:.5,b:.5};if(backgroundColor){if(backgroundColor.isColor){bgColor={r:backgroundColor.r,g:backgroundColor.g,b:backgroundColor.b}}}const getLuminance=color=>{const{r:r,g:g,b:b}=color;const rs=r<=.03928?r/12.92:Math.pow((r+.055)/1.055,2.4);const gs=g<=.03928?g/12.92:Math.pow((g+.055)/1.055,2.4);const bs=b<=.03928?b/12.92:Math.pow((b+.055)/1.055,2.4);return.2126*rs+.7152*gs+.0722*bs};const bgLuminance=getLuminance(bgColor);if(bgLuminance<.5){return 65416}else{return 1710638}}getAdaptiveHoverColor(){const backgroundColor=this.scene.background;let bgColor={r:.5,g:.5,b:.5};if(backgroundColor&&backgroundColor.isColor){bgColor={r:backgroundColor.r,g:backgroundColor.g,b:backgroundColor.b}}const getLuminance=color=>{const{r:r,g:g,b:b}=color;const rs=r<=.03928?r/12.92:Math.pow((r+.055)/1.055,2.4);const gs=g<=.03928?g/12.92:Math.pow((g+.055)/1.055,2.4);const bs=b<=.03928?b/12.92:Math.pow((b+.055)/1.055,2.4);return.2126*rs+.7152*gs+.0722*bs};const bgLuminance=getLuminance(bgColor);if(bgLuminance<.5){return 65535}else{return 16724838}}dispose(){this.clearAll();if(this.experimentGroup.parent){this.experimentGroup.parent.remove(this.experimentGroup)}}}const IMAGE_SERVICE_STORAGE_KEY$1="chocodrop-service-image";const VIDEO_SERVICE_STORAGE_KEY$1="chocodrop-service-video";class CommandUIDemo{constructor(options={}){this.sceneManager=options.sceneManager||null;this.client=options.client||null;this.onControlsToggle=options.onControlsToggle||(()=>{});this.isVisible=false;this.container=null;this.input=null;this.output=null;this.currentMode="generate";this.activeConnections=new Map;this.currentTaskId=null;this.config={activationKey:options.activationKey||"@",position:options.position||"bottom-right",width:options.width||450,maxHeight:options.maxHeight||600,theme:options.theme||"dark",showExamples:options.showExamples!==false,autoScroll:options.autoScroll!==false,enableDebugLogging:options.enableDebugLogging===true,...options.config};this.availableImageServices=[];this.availableVideoServices=[];this.selectedImageService=null;this.selectedVideoService=null;this.imageServiceSelect=null;this.videoServiceSelect=null;this.serviceSelectorContainer=null;this.serviceSelectorStatus=null;this.serviceSelectorContent=null;this.serviceSelectorRetryButton=null;this.serviceSelectorSaveButton=null;this.serviceSelectorCancelButton=null;this.serviceModalOverlay=null;this.serviceModal=null;this.servicesLoading=false;this.isExpanded=false;this.overlayTextarea=null;this.pendingImageService=null;this.pendingVideoService=null;try{const storedImage=localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY$1);const storedVideo=localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY$1);if(storedImage){this.selectedImageService=storedImage}if(storedVideo){this.selectedVideoService=storedVideo}}catch(error){console.warn("⚠️ Failed to load stored service selections:",error)}this.pendingImageService=this.selectedImageService;this.pendingVideoService=this.selectedVideoService;this.applyServiceSelectionToSceneManager();this.currentTheme=localStorage.getItem("live-command-theme")||"light";this.isDarkMode=this.currentTheme==="dark";this.isWabiSabiMode=this.currentTheme==="wabisabi";this.commandHistory=[];this.currentHistoryIndex=-1;this.maxHistorySize=50;this.initUI();this.bindEvents();if(!this.client&&this.sceneManager&&this.sceneManager.client){this.client=this.sceneManager.client}this.createServiceModal();this.createFloatingChocolateIcon();document.addEventListener("DOMContentLoaded",()=>{this.refreshStyles()});this.logDebug("🎮 CommandUI initialized");if(!this.selectedImageService||!this.selectedVideoService){this.openServiceModal(true)}}logDebug(...args){if(!this.config.enableDebugLogging){return}console.log(...args)}showDemoMessage(){this.showCompactToast("デモページでは利用できません")}showCompactToast(message){const existingToast=document.getElementById("demo-toast");if(existingToast){existingToast.remove()}const buttonContainer=this.radioModeContainer;if(!buttonContainer)return;const toast=document.createElement("div");toast.id="demo-toast";toast.textContent=message;toast.style.cssText=`\n      position: absolute;\n      top: -35px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: ${this.isDarkMode?"rgba(139, 92, 246, 0.9)":"rgba(139, 92, 246, 0.85)"};\n      color: white;\n      padding: 6px 12px;\n      border-radius: 6px;\n      font-size: 12px;\n      font-weight: 500;\n      white-space: nowrap;\n      z-index: 1000;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      box-shadow: 0 2px 8px rgba(139, 92, 246, 0.3);\n    `;buttonContainer.style.position="relative";buttonContainer.appendChild(toast);setTimeout(()=>{toast.style.opacity="1"},10);setTimeout(()=>{if(toast.parentNode){toast.style.opacity="0";setTimeout(()=>{if(toast.parentNode){toast.remove()}},300)}},3e3)}initUI(){this.container=document.createElement("div");this.container.id="live-command-ui";this.container.style.cssText=this.getContainerStyles();const brandIndicator=document.createElement("div");brandIndicator.className="progressive-brand-indicator";brandIndicator.style.cssText=`\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, #6366f1, #8b5cf6);\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;const brandText=document.createElement("div");brandText.className="progressive-brand-text";brandText.style.cssText=`\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode?"rgba(129, 140, 248, 0.3)":"rgba(99, 102, 241, 0.25)"};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937"};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;brandText.innerHTML='<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">🍫</span> <span style="color: #6366f1;">ChocoDrop</span>';brandIndicator.addEventListener("mouseenter",()=>{brandText.style.opacity="1";brandText.style.transform="translateY(0) scale(1)";brandIndicator.style.transform="scale(1.2)";brandIndicator.style.opacity="1"});brandIndicator.addEventListener("mouseleave",()=>{brandText.style.opacity="0";brandText.style.transform="translateY(5px) scale(0.9)";brandIndicator.style.transform="scale(1)";brandIndicator.style.opacity="0.7"});brandIndicator.appendChild(brandText);this.container.appendChild(brandIndicator);this.output=document.createElement("div");this.outputDiv=this.output;this.output.id="command-output";this.output.className="command-output";this.output.style.cssText=this.getOutputStyles();this.floatingContainer=document.createElement("div");this.floatingContainer.id="floating-cards-container";this.floatingContainer.style.cssText=`\n      position: fixed;\n      top: var(--floating-top, 20px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column-reverse;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-end;\n    `;this.taskCards=new Map;this.inputWrapper=document.createElement("div");this.inputWrapper.style.cssText=`\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;this.input=document.createElement("textarea");this.input.rows=1;this.input.id="command-input";this.input.placeholder="「右上にドラゴンを」「美しい桜の森を中央に」など... ✨";this.input.style.cssText=this.getInputStyles();this.expandButton=document.createElement("div");this.expandButton.innerHTML="⤢";this.expandButton.title="テキスト全体を表示";this.expandButton.style.cssText=`\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)"};\n      border: 1px solid ${this.isDarkMode?"rgba(255, 255, 255, 0.2)":"rgba(0, 0, 0, 0.2)"};\n      border-radius: 6px;\n      color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937"};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;this.expandButton.addEventListener("mouseenter",()=>{this.expandButton.style.background=this.isDarkMode?"rgba(255, 255, 255, 0.2)":"rgba(0, 0, 0, 0.2)";this.expandButton.style.transform="scale(1.1)"});this.expandButton.addEventListener("mouseleave",()=>{this.expandButton.style.background=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)";this.expandButton.style.transform="scale(1)"});this.expandButton.addEventListener("click",()=>{if(this.isExpanded){this.hideOverlayTextarea()}else{this.showOverlayTextarea()}});this.inputWrapper.appendChild(this.input);this.inputWrapper.appendChild(this.expandButton);const modeSelector=this.createRadioModeSelector();const actionContainer=this.createMinimalActions();const closeButton=document.createElement("div");closeButton.innerHTML="×";closeButton.style.cssText=`\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)"};\n      color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937"};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;closeButton.addEventListener("mouseover",()=>{closeButton.style.background=this.isDarkMode?"rgba(255, 255, 255, 0.2)":"rgba(0, 0, 0, 0.2)";closeButton.style.transform="scale(1.1)"});closeButton.addEventListener("mouseout",()=>{closeButton.style.background=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)";closeButton.style.color=this.isDarkMode?"#ffffff":"#1f2937";closeButton.style.transform="scale(1)"});closeButton.addEventListener("click",()=>{this.hide()});this.container.appendChild(closeButton);this.container.appendChild(modeSelector);this.container.appendChild(this.inputWrapper);this.container.appendChild(actionContainer);document.body.appendChild(this.floatingContainer);document.body.appendChild(this.container);this.applyTheme();this.isComposing=false;this.hasCompositionJustEnded=false;this.input.addEventListener("input",()=>{if(this.isComposing){return}this.autoResizeTextarea();this.detectCommandType()});this.input.addEventListener("compositionstart",()=>{this.isComposing=true});this.input.addEventListener("compositionend",()=>{this.isComposing=false;const isSafari=/Safari/.test(navigator.userAgent)&&/Version/.test(navigator.userAgent);if(isSafari){this.hasCompositionJustEnded=true}setTimeout(()=>{this.autoResizeTextarea();this.detectCommandType()},10)});const isSafari=/Safari/.test(navigator.userAgent)&&/Version/.test(navigator.userAgent);this.input.addEventListener("keydown",e=>{if(e.key==="Enter"){if(isSafari&&this.hasCompositionJustEnded){this.hasCompositionJustEnded=false;return}if(!isSafari&&(e.isComposing||this.isComposing)){return}if(this.currentMode==="generate"){e.preventDefault();this.showDemoMessage();return}e.preventDefault();this.executeCommand()}});if(this.config.showExamples);}createMinimalActions(){const container=document.createElement("div");container.style.cssText=`\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;const leftSection=document.createElement("div");leftSection.style.cssText="display: flex; gap: 8px; align-items: center;";const clearBtn=document.createElement("button");clearBtn.innerHTML='<span style="filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);">🧹</span> Clear All';clearBtn.style.cssText=this.getActionButtonStyles("secondary");clearBtn.addEventListener("click",()=>this.clearAllWithConfirmation());const historyBtn=document.createElement("button");historyBtn.innerHTML='<span style="filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);">📚</span> History';historyBtn.style.cssText=this.getActionButtonStyles("secondary");historyBtn.style.opacity="0.5";historyBtn.disabled=true;historyBtn.title="履歴機能（開発中）";leftSection.appendChild(clearBtn);leftSection.appendChild(historyBtn);const rightSection=document.createElement("div");rightSection.style.cssText="display: flex; gap: 6px; align-items: center;";const themeToggle=document.createElement("button");const getThemeIcon=()=>{const themeConfig={light:"🌙",dark:"🍵",wabisabi:"☀️"};return themeConfig[this.currentTheme]||"🌙"};const getThemeTitle=()=>{const titleConfig={light:"ダークモードに切り替え",dark:"侘び寂びモードに切り替え",wabisabi:"ライトモードに切り替え"};return titleConfig[this.currentTheme]||"ダークモードに切り替え"};const getThemeIconWithFilter=()=>{const icon=getThemeIcon();if(icon==="☀️"){return`<span style="filter: saturate(1.2) brightness(1.1);">${icon}</span>`}else if(icon==="🍵"){return`<span style="filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);">${icon}</span>`}else{return`<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">${icon}</span>`}};themeToggle.innerHTML=getThemeIconWithFilter();themeToggle.style.cssText=this.getActionButtonStyles("icon");themeToggle.title=getThemeTitle();themeToggle.addEventListener("click",()=>this.toggleTheme());const settingsButton=document.createElement("button");settingsButton.innerHTML='<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">⚙️</span>';settingsButton.style.cssText=this.getActionButtonStyles("icon");settingsButton.title="サービス設定を開く";settingsButton.addEventListener("click",()=>this.openServiceModal());rightSection.appendChild(themeToggle);rightSection.appendChild(settingsButton);container.appendChild(leftSection);container.appendChild(rightSection);this.clearBtn=clearBtn;this.historyBtn=historyBtn;this.themeToggle=themeToggle;this.settingsButton=settingsButton;return container}createServiceSelectorSection(){this.serviceSelectorContainer=document.createElement("div");this.serviceSelectorContainer.id="service-selector";this.serviceSelectorContainer.style.cssText=`\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;this.serviceSelectorStatus=document.createElement("div");this.serviceSelectorStatus.textContent="サービス情報を読み込んでいます...";this.serviceSelectorStatus.style.fontSize="12px";this.serviceSelectorStatus.style.opacity="0.8";this.serviceSelectorStatus.style.marginBottom="8px";this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);this.serviceSelectorContent=document.createElement("div");this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);this.updateServiceSelectorTheme();return this.serviceSelectorContainer}createServiceModal(){if(this.serviceModalOverlay){this.serviceModalOverlay.remove();this.serviceModalOverlay=null;this.serviceModal=null}this.serviceModalOverlay=document.createElement("div");this.serviceModalOverlay.id="chocodrop-service-modal-overlay";this.serviceModalOverlay.style.cssText=`\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;this.serviceModalOverlay.addEventListener("click",event=>{if(event.target===this.serviceModalOverlay){this.closeServiceModal()}});this.serviceModal=document.createElement("div");this.serviceModal.className="chocodrop-service-modal";this.serviceModal.style.cssText=`\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;const title=document.createElement("h2");title.textContent="サービス設定";title.style.cssText=`\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;const subtitle=document.createElement("p");subtitle.textContent="利用するサービスを選択してください。";subtitle.style.cssText=`\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;const selector=this.createServiceSelectorSection();const actionRow=document.createElement("div");actionRow.style.cssText=`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;this.serviceSelectorRetryButton=document.createElement("button");this.serviceSelectorRetryButton.textContent="再読み込み";this.serviceSelectorRetryButton.style.cssText=`\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;this.serviceSelectorRetryButton.addEventListener("click",()=>this.initializeServiceSelector(true));const actionButtons=document.createElement("div");actionButtons.style.cssText="display: flex; gap: 8px;";this.serviceSelectorCancelButton=document.createElement("button");this.serviceSelectorCancelButton.textContent="Cancel";this.serviceSelectorCancelButton.style.cssText=`\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;this.serviceSelectorCancelButton.addEventListener("click",()=>this.closeServiceModal());this.serviceSelectorSaveButton=document.createElement("button");this.serviceSelectorSaveButton.textContent="Save";this.serviceSelectorSaveButton.style.cssText=`\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, #6366f1, #8b5cf6);\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;this.serviceSelectorSaveButton.addEventListener("click",()=>this.handleServiceSave());actionButtons.appendChild(this.serviceSelectorCancelButton);actionButtons.appendChild(this.serviceSelectorSaveButton);actionRow.appendChild(this.serviceSelectorRetryButton);actionRow.appendChild(actionButtons);this.serviceModal.appendChild(title);this.serviceModal.appendChild(subtitle);this.serviceModal.appendChild(selector);this.serviceModal.appendChild(actionRow);this.serviceModalOverlay.appendChild(this.serviceModal);document.body.appendChild(this.serviceModalOverlay);this.updateServiceSelectorTheme();this.toggleServiceRetryButton(false)}openServiceModal(forceFetch=false){if(!this.serviceModalOverlay){this.createServiceModal()}this.serviceModalOverlay.style.display="flex";requestAnimationFrame(()=>{if(this.serviceModalOverlay){this.serviceModalOverlay.style.opacity="1"}});this.resetPendingSelections();this.initializeServiceSelector(forceFetch)}closeServiceModal(){if(!this.serviceModalOverlay){return}this.serviceModalOverlay.style.opacity="0";setTimeout(()=>{if(this.serviceModalOverlay){this.serviceModalOverlay.style.display="none"}this.resetPendingSelections()},150)}async initializeServiceSelector(force=false){if(this.servicesLoading&&!force){return}if(!this.client||typeof this.client.getAvailableServices!=="function"){this.setServiceSelectorStatus("サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。","error");this.toggleServiceRetryButton(true);this.setServiceButtonsEnabled(false);return}this.servicesLoading=true;this.setServiceSelectorStatus("サービス情報を読み込んでいます...","info");this.toggleServiceRetryButton(false);this.setServiceButtonsEnabled(false);try{if(typeof this.client.ensureInitialized==="function"){await this.client.ensureInitialized()}const response=await this.client.getAvailableServices();if(!response||response.success===false||!response.metadata){throw new Error(response?.error||"サービス情報が取得できませんでした")}this.availableImageServices=Array.isArray(response.metadata?.image)?response.metadata.image:[];this.availableVideoServices=Array.isArray(response.metadata?.video)?response.metadata.video:[];this.selectedImageService=this.resolveServiceSelection("image",this.availableImageServices,response.default?.image);this.selectedVideoService=this.resolveServiceSelection("video",this.availableVideoServices,response.default?.video);this.pendingImageService=this.selectedImageService;this.pendingVideoService=this.selectedVideoService;this.populateServiceSelector();this.applyServiceSelectionToSceneManager();this.setServiceButtonsEnabled(true)}catch(error){console.error("❌ Failed to initialize service selector:",error);this.setServiceSelectorStatus("サービス情報を取得できませんでした。サーバーが起動しているか確認のうえ、再読み込みしてください。","error");this.toggleServiceRetryButton(true);this.setServiceButtonsEnabled(false)}finally{this.servicesLoading=false}}setServiceSelectorStatus(message,type="info"){if(!this.serviceSelectorStatus){return}this.serviceSelectorStatus.textContent=message;this.serviceSelectorStatus.dataset.statusType=type;this.serviceSelectorStatus.classList.toggle("service-selector-helper",type!=="error");this.updateServiceSelectorTheme()}toggleServiceRetryButton(visible){if(!this.serviceSelectorRetryButton){return}this.serviceSelectorRetryButton.style.display=visible?"inline-flex":"none";this.updateServiceSelectorTheme()}resolveServiceSelection(type,services,defaultId){if(!services||services.length===0){return null}const storageKey=type==="image"?IMAGE_SERVICE_STORAGE_KEY$1:VIDEO_SERVICE_STORAGE_KEY$1;let storedId=null;try{storedId=localStorage.getItem(storageKey)}catch(error){console.warn("⚠️ Failed to access localStorage:",error)}const isStoredValid=storedId&&services.some(service=>service.id===storedId);let resolvedId=isStoredValid?storedId:null;if(!resolvedId&&defaultId&&services.some(service=>service.id===defaultId)){resolvedId=defaultId}if(!resolvedId){resolvedId=services[0]?.id||null}try{if(resolvedId){localStorage.setItem(storageKey,resolvedId)}else{localStorage.removeItem(storageKey)}}catch(error){console.warn("⚠️ Failed to persist service selection:",error)}return resolvedId}populateServiceSelector(){if(!this.serviceSelectorContent){return}this.serviceSelectorContent.innerHTML="";const hasImage=this.availableImageServices.length>0;const hasVideo=this.availableVideoServices.length>0;if(!hasImage&&!hasVideo){this.setServiceSelectorStatus("利用可能なサービスが見つかりませんでした。","error");return}this.setServiceSelectorStatus("利用するサービスを選択してください。","info");if(hasImage){const imageRow=this.buildServiceRow("image","画像 (T2I)",this.availableImageServices,this.pendingImageService||this.selectedImageService);this.serviceSelectorContent.appendChild(imageRow)}if(hasVideo){const videoRow=this.buildServiceRow("video","動画 (T2V)",this.availableVideoServices,this.pendingVideoService||this.selectedVideoService);this.serviceSelectorContent.appendChild(videoRow)}this.updateServiceSelectorTheme()}buildServiceRow(type,labelText,services,selectedId){const row=document.createElement("div");row.className=`service-row service-row-${type}`;row.style.cssText=`\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;const label=document.createElement("label");label.textContent=labelText;label.style.fontSize="13px";label.style.fontWeight="600";row.appendChild(label);const select=document.createElement("select");select.dataset.serviceType=type;select.style.fontFamily="inherit";select.style.width="100%";services.forEach(service=>{const option=document.createElement("option");option.value=service.id;option.textContent=service.name||service.id;if(service.description){option.title=service.description}select.appendChild(option)});if(selectedId&&services.some(service=>service.id===selectedId)){select.value=selectedId}select.addEventListener("change",event=>{this.onServiceSelectionChange(type,event.target.value)});row.appendChild(select);const description=document.createElement("div");description.className="service-description";description.textContent=this.findServiceInfo(type,select.value)?.description||"";description.style.fontSize="11px";description.style.opacity="0.75";description.style.lineHeight="1.4";description.style.minHeight="14px";row.appendChild(description);select.addEventListener("change",()=>{description.textContent=this.findServiceInfo(type,select.value)?.description||""});if(type==="image"){this.imageServiceSelect=select}else{this.videoServiceSelect=select}return row}onServiceSelectionChange(type,serviceId){if(type==="image"){this.pendingImageService=serviceId}else{this.pendingVideoService=serviceId}const info=this.findServiceInfo(type,serviceId);const description=type==="image"?this.imageServiceSelect?.parentElement?.querySelector(".service-description"):this.videoServiceSelect?.parentElement?.querySelector(".service-description");if(description){description.textContent=info?.description||""}}handleServiceSave(){const newImageId=this.pendingImageService||this.selectedImageService;const newVideoId=this.pendingVideoService||this.selectedVideoService;if(newImageId){try{localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY$1,newImageId)}catch(error){console.warn("⚠️ Failed to persist image service selection:",error)}this.selectedImageService=newImageId;this.sceneManager?.setImageService(newImageId)}if(newVideoId){try{localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY$1,newVideoId)}catch(error){console.warn("⚠️ Failed to persist video service selection:",error)}this.selectedVideoService=newVideoId;this.sceneManager?.setVideoService(newVideoId)}const imageInfo=this.findServiceInfo("image",newImageId);const videoInfo=this.findServiceInfo("video",newVideoId);if(imageInfo){this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`,"system")}if(videoInfo){this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`,"system")}this.closeServiceModal()}setServiceButtonsEnabled(enabled){if(this.serviceSelectorSaveButton){this.serviceSelectorSaveButton.disabled=!enabled;this.serviceSelectorSaveButton.style.opacity=enabled?"1":"0.6";this.serviceSelectorSaveButton.style.cursor=enabled?"pointer":"not-allowed"}}resetPendingSelections(){this.pendingImageService=this.selectedImageService;this.pendingVideoService=this.selectedVideoService;if(this.imageServiceSelect&&this.selectedImageService){this.imageServiceSelect.value=this.selectedImageService}if(this.videoServiceSelect&&this.selectedVideoService){this.videoServiceSelect.value=this.selectedVideoService}if(this.serviceSelectorContent&&this.serviceSelectorContent.childElementCount>0){this.populateServiceSelector()}}findServiceInfo(type,serviceId){const list=type==="image"?this.availableImageServices:this.availableVideoServices;return list.find(service=>service.id===serviceId)||null}applyServiceSelectionToSceneManager(){if(!this.sceneManager){return}this.sceneManager.setImageService(this.selectedImageService);this.sceneManager.setVideoService(this.selectedVideoService)}updateServiceSelectorTheme(){if(this.serviceModalOverlay){this.serviceModalOverlay.style.background=this.isDarkMode?"rgba(8, 11, 26, 0.55)":"rgba(229, 231, 255, 0.45)"}if(this.serviceModal){this.serviceModal.style.background=this.isDarkMode?"rgba(17, 24, 39, 0.15)":"rgba(255, 255, 255, 0.15)";this.serviceModal.style.border=this.isDarkMode?"1px solid rgba(129, 140, 248, 0.4)":"1px solid rgba(99, 102, 241, 0.25)";this.serviceModal.style.color=this.isDarkMode?"#e5e7ff":"#1f2937"}if(this.serviceSelectorStatus){const type=this.serviceSelectorStatus.dataset?.statusType;const statusColor=type==="error"?this.isDarkMode?"#fca5a5":"#b91c1c":this.isDarkMode?"rgba(209, 213, 219, 0.8)":"rgba(55, 65, 81, 0.75)";this.serviceSelectorStatus.style.color=statusColor}if(this.serviceSelectorContainer){const labels=this.serviceSelectorContainer.querySelectorAll("label");labels.forEach(label=>{label.style.color=this.isDarkMode?"rgba(255, 255, 255, 0.9)":"rgba(31, 41, 55, 0.9)"});const selects=this.serviceSelectorContainer.querySelectorAll("select");selects.forEach(select=>{select.style.background=this.isDarkMode?"rgba(99, 102, 241, 0.18)":"rgba(99, 102, 241, 0.12)";select.style.border=this.isDarkMode?"1px solid rgba(129, 140, 248, 0.45)":"1px solid rgba(99, 102, 241, 0.45)";select.style.color=this.isDarkMode?"#ffffff":"#1f2937";select.style.padding="10px 12px";select.style.borderRadius="10px";select.style.fontSize="13px";select.style.outline="none";select.style.boxShadow=this.isDarkMode?"0 12px 28px rgba(15, 23, 42, 0.5)":"0 12px 24px rgba(99, 102, 241, 0.2)"});const descriptions=this.serviceSelectorContainer.querySelectorAll(".service-description");descriptions.forEach(desc=>{desc.style.color=this.isDarkMode?"rgba(209, 213, 219, 0.8)":"rgba(55, 65, 81, 0.7)"})}if(this.serviceSelectorRetryButton){this.serviceSelectorRetryButton.style.background=this.isDarkMode?"rgba(129, 140, 248, 0.35)":"rgba(99, 102, 241, 0.15)";this.serviceSelectorRetryButton.style.border=this.isDarkMode?"1px solid rgba(129, 140, 248, 0.5)":"1px solid rgba(99, 102, 241, 0.45)";this.serviceSelectorRetryButton.style.color=this.isDarkMode?"#f9fafb":"#1e1b4b";this.serviceSelectorRetryButton.style.boxShadow=this.isDarkMode?"0 0 8px rgba(129, 140, 248, 0.45)":"0 0 8px rgba(99, 102, 241, 0.35)"}if(this.serviceSelectorCancelButton){this.serviceSelectorCancelButton.style.border=this.isDarkMode?"1px solid rgba(209, 213, 219, 0.3)":"1px solid rgba(148, 163, 184, 0.5)";this.serviceSelectorCancelButton.style.color=this.isDarkMode?"rgba(226, 232, 240, 0.85)":"rgba(30, 41, 59, 0.85)"}if(this.serviceSelectorSaveButton){this.serviceSelectorSaveButton.style.background=this.isDarkMode?"linear-gradient(135deg, #6366f1, #8b5cf6)":"linear-gradient(135deg, #818cf8, #a855f7)";this.serviceSelectorSaveButton.style.boxShadow=this.isDarkMode?"0 16px 28px rgba(99, 102, 241, 0.4)":"0 16px 28px rgba(129, 140, 248, 0.35)"}}createRadioModeSelector(){const container=document.createElement("div");container.className="radio-mode-selector";container.style.cssText=`\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode?"linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))":this.isDarkMode?"linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))":"linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))"};\n      border: 1px solid ${this.isWabiSabiMode?"rgba(141, 110, 99, 0.4)":this.isDarkMode?"rgba(99, 102, 241, 0.15)":"rgba(255, 255, 255, 0.25)"};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;const modes=[{value:"generate",label:"Generate",icon:"🚫",disabled:true},{value:"import",label:"Import",icon:"📥"},{value:"modify",label:"Modify",icon:"🔧"},{value:"delete",label:"Delete",icon:"🗑️"}];this.radioModeButtons={};modes.forEach(mode=>{const button=document.createElement("div");button.className=`mode-option ${mode.value}`;button.style.cssText=`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: ${mode.disabled?"not-allowed":"pointer"};\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${mode.disabled?"rgba(139, 92, 246, 0.6)":this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"rgba(255, 255, 255, 0.7)":"rgba(55, 65, 81, 0.8)"};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n        opacity: ${mode.disabled?"0.6":"1"};\n      `;const icon=document.createElement("div");icon.textContent=mode.icon;icon.style.cssText=`\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${mode.disabled?"hue-rotate(240deg) saturate(0.8) brightness(1.1)":this.isDarkMode?"hue-rotate(220deg) saturate(0.8) brightness(1.2)":"hue-rotate(240deg) saturate(0.7) brightness(0.9)"};\n        transition: filter 0.2s ease;\n      `;const label=document.createElement("span");label.textContent=mode.label;const autoBadge=document.createElement("div");autoBadge.className="auto-badge";autoBadge.textContent="AUTO";autoBadge.style.cssText=`\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;button.appendChild(icon);button.appendChild(label);button.appendChild(autoBadge);if(mode.disabled){button.addEventListener("click",e=>{e.preventDefault();e.stopPropagation();this.showDemoMessage()})}else{button.addEventListener("click",()=>{if(mode.value==="import"){this.triggerFileSelection()}else{this.selectMode(mode.value,true)}})}this.radioModeButtons[mode.value]={button:button,autoBadge:autoBadge};container.appendChild(button)});this.radioModeContainer=container;this.selectMode("import",false);return container}selectMode(mode,isManual=false,detectedKeyword=null){this.currentMode=mode;Object.keys(this.radioModeButtons).forEach(key=>{const{button:button,autoBadge:autoBadge}=this.radioModeButtons[key];button.style.color=this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"rgba(255, 255, 255, 0.7)":"rgba(55, 65, 81, 0.8)";button.style.background="transparent";button.style.border="1px solid transparent";button.style.transform="scale(1)";button.style.boxShadow="none";autoBadge.style.display="none";autoBadge.style.opacity="0"});const{button:button,autoBadge:autoBadge}=this.radioModeButtons[mode];const selectedGlass=this.isWabiSabiMode?{background:"linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))",border:"1px solid rgba(109, 76, 65, 0.4)",boxShadow:"0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)",color:"#F5F5F5"}:this.isDarkMode?{background:"linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))",border:"1px solid rgba(99, 102, 241, 0.4)",boxShadow:"0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)",color:"#a5b4fc"}:{background:"linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))",border:"1px solid rgba(99, 102, 241, 0.3)",boxShadow:"0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)",color:"#6366f1"};button.style.color=selectedGlass.color;button.style.background=selectedGlass.background;button.style.border=selectedGlass.border;button.style.boxShadow=selectedGlass.boxShadow;button.style.transform="scale(1.02)";if(!isManual&&detectedKeyword){autoBadge.style.display="inline-block";setTimeout(()=>{autoBadge.style.opacity="1";autoBadge.style.transform="scale(1)"},100);setTimeout(()=>{autoBadge.style.opacity="0";autoBadge.style.transform="scale(0.8)";setTimeout(()=>{autoBadge.style.display="none"},200)},3e3)}if(!isManual){this.addPulseEffect(button);this.addContainerGlow(mode)}this.input.placeholder=this.getPlaceholderForMode(mode);if(isManual){this.clearInputOnModeSwitch(mode)}if(mode==="import"||this.selectedFile){this.showImportInterface()}else{this.hideImportInterface()}if(mode==="delete"&&isManual){this.handleDeleteModeSelection()}if(mode==="modify"&&isManual){this.handleModifyModeSelection()}}addPulseEffect(element){element.style.animation="none";setTimeout(()=>{element.style.animation="smartModePulse 0.6s ease-out"},10);setTimeout(()=>{element.style.animation=""},610);this.ensurePulseAnimation()}ensurePulseAnimation(){if(document.getElementById("smart-mode-pulse-animation"))return;const style=document.createElement("style");style.id="smart-mode-pulse-animation";style.textContent=`\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;document.head.appendChild(style)}addContainerGlow(mode){const container=this.radioModeContainer;if(!container)return;const glowColors=this.isWabiSabiMode?{generate:"rgba(139, 195, 74, 0.4)",import:"rgba(139, 195, 74, 0.4)",modify:"rgba(139, 195, 74, 0.4)",delete:"rgba(139, 195, 74, 0.4)"}:{generate:"rgba(79, 70, 229, 0.4)",import:"rgba(34, 197, 94, 0.4)",modify:"rgba(236, 72, 153, 0.4)",delete:"rgba(107, 114, 128, 0.3)"};const glowColor=glowColors[mode];if(glowColor){container.style.boxShadow=`0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;container.style.borderColor=glowColor.replace("0.4","0.6").replace("0.3","0.5")}setTimeout(()=>{container.style.boxShadow="";container.style.borderColor=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(255, 255, 255, 0.15)"},1e3)}getActionButtonStyles(variant="secondary"){const baseStyles=`\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;if(variant==="secondary"){return baseStyles+`\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode?"linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))":this.isDarkMode?"linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))":"linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))"};\n        border: 1px solid ${this.isWabiSabiMode?"rgba(93, 64, 55, 0.6)":this.isDarkMode?"rgba(156, 163, 175, 0.2)":"rgba(255, 255, 255, 0.3)"};\n        color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#d1d5db":"#374151"};\n        text-align: center;\n        white-space: nowrap;\n      `}else if(variant==="icon"){return baseStyles+`\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode?"linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))":"linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))"};\n        border: 1px solid ${this.isDarkMode?"rgba(99, 102, 241, 0.2)":"rgba(255, 255, 255, 0.4)"};\n        color: ${this.isDarkMode?"#a5b4fc":"#6366f1"};\n      `}}getDestructiveButtonStyles(){return`\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode?"rgba(220, 38, 127, 0.4)":"rgba(190, 24, 93, 0.35)"};\n      border-radius: 6px;\n      background: ${this.isDarkMode?"rgba(220, 38, 127, 0.3)":"rgba(190, 24, 93, 0.25)"};\n      color: ${this.isDarkMode?"#fca5a5":"#dc2626"};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `}getCommandTypeIndicatorStyles(){return`\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode?"rgba(255, 255, 255, 0.6)":"rgba(0, 0, 0, 0.6)"};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `}autoResizeTextarea(){this.input.style.height="auto";const lineHeight=22;const padding=28;const maxLines=2;const maxHeight=lineHeight*maxLines+padding;const newHeight=Math.min(this.input.scrollHeight,maxHeight);this.input.style.height=newHeight+"px";if(this.input.scrollHeight>maxHeight){this.input.style.overflowY="auto";if(this.expandButton){this.expandButton.style.display="flex"}}else{this.input.style.overflowY="hidden";if(this.expandButton){this.expandButton.style.display="none"}}}detectCommandType(){const input=this.input.value.trim();if(!input){this.selectMode("generate",false);return}const commandType=this.analyzeCommandType(input);if(this.currentMode==="delete"||this.currentMode==="modify"){return}this.selectMode(commandType.type,false,commandType.detectedKeyword)}analyzeCommandType(text){this.logDebug(`🔍 Analyzing command: "${text}"`);const mediaInfo=this.detectMediaType(text);const deletePatterns=[{pattern:/削除/,keyword:"削除"},{pattern:/消去/,keyword:"消去"},{pattern:/消して/,keyword:"消して"},{pattern:/消す/,keyword:"消す"},{pattern:/取り除/,keyword:"取り除"},{pattern:/除去/,keyword:"除去"},{pattern:/削除して/,keyword:"削除して"},{pattern:/delete/i,keyword:"delete"},{pattern:/remove/i,keyword:"remove"},{pattern:/clear/i,keyword:"clear"},{pattern:/erase/i,keyword:"erase"}];const modifyPatterns=[{pattern:/移動/,keyword:"移動"},{pattern:/動かして/,keyword:"動かして"},{pattern:/変更/,keyword:"変更"},{pattern:/変えて/,keyword:"変えて"},{pattern:/修正/,keyword:"修正"},{pattern:/調整/,keyword:"調整"},{pattern:/回転/,keyword:"回転"},{pattern:/反転/,keyword:"反転"},{pattern:/ミラー/,keyword:"ミラー"},{pattern:/傾け/,keyword:"傾け"},{pattern:/向きを変え/,keyword:"向きを変え"},{pattern:/向きを変更/,keyword:"向きを変更"},{pattern:/左右(逆|反転)/,keyword:"左右反転"},{pattern:/上下(逆|反転)/,keyword:"上下反転"},{pattern:/逆さ/,keyword:"逆さ"},{pattern:/ひっくり返/,keyword:"ひっくり返す"},{pattern:/.*を.*色/,keyword:"色変更"},{pattern:/.*を.*サイズ/,keyword:"サイズ変更"},{pattern:/を.*に.*して/,keyword:"変更"},{pattern:/move/i,keyword:"move"},{pattern:/change/i,keyword:"change"},{pattern:/modify/i,keyword:"modify"},{pattern:/edit/i,keyword:"edit"}];const generatePatterns=[{pattern:/作って/,keyword:"作って"},{pattern:/生成/,keyword:"生成"},{pattern:/作成/,keyword:"作成"},{pattern:/描いて/,keyword:"描いて"},{pattern:/書いて/,keyword:"書いて"},{pattern:/create/i,keyword:"create"},{pattern:/generate/i,keyword:"generate"},{pattern:/make/i,keyword:"make"},{pattern:/draw/i,keyword:"draw"}];for(const{pattern:pattern,keyword:keyword}of deletePatterns){if(pattern.test(text)){this.logDebug(`✅ Delete pattern matched: ${keyword}`);return{type:"delete",confidence:.9,reason:"削除キーワードを検出",mediaType:mediaInfo.type,requiresConfirmation:true,detectedKeyword:keyword}}}for(const{pattern:pattern,keyword:keyword}of modifyPatterns){if(pattern.test(text)){this.logDebug(`✅ Modify pattern matched: ${keyword}`);return{type:"modify",confidence:.8,reason:"変更キーワードを検出",mediaType:mediaInfo.type,requiresConfirmation:false,detectedKeyword:keyword}}}for(const{pattern:pattern,keyword:keyword}of generatePatterns){if(pattern.test(text)){return{type:"generate",confidence:mediaInfo.confidence,reason:mediaInfo.reason,mediaType:mediaInfo.type,requiresConfirmation:false,detectedKeyword:keyword}}}this.logDebug(`ℹ️ No specific pattern matched, defaulting to generate mode`);return{type:"generate",confidence:mediaInfo.confidence,reason:mediaInfo.reason,mediaType:mediaInfo.type,requiresConfirmation:false,detectedKeyword:null}}detectMediaType(text){const videoPatterns=[/動画|ビデオ|映像|ムービー/,/video|movie|clip/i];const imagePatterns=[/画像|写真|絵|イラスト|イメージ/,/image|picture|photo|illustration/i];if(videoPatterns.some(pattern=>pattern.test(text))){return{type:"video",confidence:.8,reason:"動画生成コマンド"}}if(imagePatterns.some(pattern=>pattern.test(text))){return{type:"image",confidence:.8,reason:"画像生成コマンド"}}return{type:"image",confidence:.6,reason:"生成コマンド（画像デフォルト）"}}showCommandTypeIndicator(commandInfo){const{type:type,confidence:confidence,reason:reason}=commandInfo;if(confidence<.7){this.showProactiveSuggestion(type,confidence)}else{this.hideProactiveSuggestion()}this.enableGestureControl()}showProactiveSuggestion(detectedType,confidence){if(!this.proactiveSuggestion){this.proactiveSuggestion=document.createElement("div");this.proactiveSuggestion.id="proactive-suggestion";this.proactiveSuggestion.style.cssText=`\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;this.container.insertBefore(this.proactiveSuggestion,this.input)}const alternativeTypes=["generate","modify","delete"].filter(t=>t!==detectedType);const suggestion=alternativeTypes[0];const suggestionLabels={generate:"🎨 生成",modify:"✏️ 変更",delete:"🗑️ 削除"};this.proactiveSuggestion.innerHTML=`\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style="margin-top: 4px; font-size: 10px; opacity: 0.8;">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;this.proactiveSuggestion.style.display="block";this.proactiveSuggestion.onclick=()=>{this.currentMode=suggestion;this.hideProactiveSuggestion();this.updateIndicatorForMode(suggestion,.9)}}hideProactiveSuggestion(){if(this.proactiveSuggestion){this.proactiveSuggestion.style.display="none"}}updateIndicatorForMode(mode,confidence){}enableGestureControl(){this.gestureEnabled=true}createActionButtons(){const container=document.createElement("div");container.style.cssText=`\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;const clearBtn=document.createElement("button");clearBtn.innerHTML="🧹 全削除";clearBtn.style.cssText=this.getModernButtonStyles("danger");clearBtn.addEventListener("click",()=>this.clearAll());container.appendChild(clearBtn);return container}getContainerStyles(){const positions={"bottom-right":"bottom: 20px; right: 20px;","bottom-left":"bottom: 20px; left: 20px;","top-right":"top: 20px; right: 20px;","top-left":"top: 20px; left: 20px;",center:"top: 50%; left: 50%; transform: translate(-50%, -50%);"};const glassmorphismDark={background:"linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))",backdropFilter:"blur(24px) saturate(180%)",border:"1px solid rgba(99, 102, 241, 0.2)",boxShadow:"0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)"};const glassmorphismLight={background:"linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))",backdropFilter:"blur(24px) saturate(180%)",border:"1px solid rgba(255, 255, 255, 0.4)",boxShadow:"0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)"};const glassmorphismWabiSabi={background:"linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))",backdropFilter:"blur(20px) saturate(120%)",border:"1px solid rgba(93, 64, 55, 0.5)",boxShadow:"0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)"};const theme=this.isWabiSabiMode?glassmorphismWabiSabi:this.isDarkMode?glassmorphismDark:glassmorphismLight;return`\n      position: fixed;\n      ${positions[this.config.position]||positions["bottom-right"]}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937"};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `}getHeaderStyles(){const gradientColors="linear-gradient(135deg, #4f46e5, #7c3aed)";return`\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `}getOutputStyles(){this.addScrollbarStyles();return`\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode?"rgba(255, 255, 255, 0.05)":"rgba(255, 255, 255, 0.1)"};\n      border: 1px solid ${this.isDarkMode?"rgba(255, 255, 255, 0.15)":"rgba(255, 255, 255, 0.2)"};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode?"rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)"};\n    `}addScrollbarStyles(){if(document.getElementById("custom-scrollbar-styles"))return;const style=document.createElement("style");style.id="custom-scrollbar-styles";style.textContent=`\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)"};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode?"rgba(255, 255, 255, 0.3)":"rgba(0, 0, 0, 0.3)"};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode?"rgba(255, 255, 255, 0.5)":"rgba(0, 0, 0, 0.5)"};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      /* wabi-sabiモード用の入力フィールドフォーカススタイル */\n      .wabisabi-mode textarea:focus,\n      .wabisabi-mode input:focus {\n        background: linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3)) !important;\n        border: 1px solid rgba(141, 110, 99, 0.6) !important;\n        box-shadow: 0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2), 0 0 0 2px rgba(141, 110, 99, 0.2) !important;\n        color: #F5F5F5 !important;\n        outline: none !important;\n      }\n    `;document.head.appendChild(style)}getInputStyles(){const glassmorphismDark={background:"linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))",border:"1px solid rgba(99, 102, 241, 0.25)",boxShadow:"0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)"};const glassmorphismLight={background:"linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))",border:"1px solid rgba(255, 255, 255, 0.5)",boxShadow:"0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)"};const glassmorphismWabiSabi={background:"linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))",border:"1px solid rgba(97, 97, 97, 0.5)",boxShadow:"0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)"};const theme=this.isWabiSabiMode?glassmorphismWabiSabi:this.isDarkMode?glassmorphismDark:glassmorphismLight;return`\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937"};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode?"rgba(255, 255, 255, 0.5)":"rgba(55, 65, 81, 0.6)"};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `}getModernButtonStyles(type){const styles={primary:this.isWabiSabiMode?`\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `:`\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,secondary:this.isWabiSabiMode?`\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      `:`\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,danger:this.isWabiSabiMode?`\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      `:`\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `};return`\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `}getModeButtonStyles(isActive,mode){const modeColors={generate:"linear-gradient(135deg, #22c55e, #16a34a)",import:"linear-gradient(135deg, #22c55e, #16a34a)",modify:"linear-gradient(135deg, #22c55e, #16a34a)",delete:"linear-gradient(135deg, #22c55e, #16a34a)"};return`\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive?"white":this.isWabiSabiMode?"#F5F5F5":"rgba(255, 255, 255, 0.7)"};\n      background: ${isActive?modeColors[mode]:"transparent"};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `}bindEvents(){document.addEventListener("keydown",e=>{if(e.key===this.config.activationKey){e.preventDefault();this.toggle();return}if(this.isVisible&&e.key==="Escape"){this.hide()}if(this.isVisible&&e.ctrlKey){if(e.key==="z"&&!e.shiftKey){e.preventDefault();this.undo()}else if(e.key==="y"||e.key==="z"&&e.shiftKey){e.preventDefault();this.redo()}}});this.input.addEventListener("focus",()=>{this.input.style.borderColor="#74b9ff";this.input.style.boxShadow="0 0 5px rgba(116, 185, 255, 0.5)"});this.input.addEventListener("blur",()=>{this.input.style.borderColor="#4a90e2";this.input.style.boxShadow="none"})}toggle(){if(this.isVisible){this.hide()}else{this.show()}}show(){this.container.style.display="flex";this.container.style.flexDirection="column";this.floatingContainer.style.display="flex";setTimeout(()=>{const containerRect=this.container.getBoundingClientRect();this.floatingContainer.style.left=containerRect.left+"px";this.floatingContainer.style.top=containerRect.top-80+"px";this.floatingContainer.style.width=containerRect.width+"px";this.floatingContainer.style.transform="none"},50);this.isVisible=true;this.input.focus();if(this.floatingChocolateIcon){this.floatingChocolateIcon.style.opacity="0";this.floatingChocolateIcon.style.pointerEvents="none"}this.onControlsToggle(true)}hide(){this.container.style.display="none";this.floatingContainer.style.display="none";this.isVisible=false;if(this.floatingChocolateIcon){this.floatingChocolateIcon.style.opacity="0.8";this.floatingChocolateIcon.style.pointerEvents="auto"}this.onControlsToggle(false);this.logDebug("🎮 コントロールを再開")}switchMode(mode){if(this.currentMode===mode)return;this.currentMode=mode;this.container.querySelectorAll("[data-mode]").forEach(btn=>{const isActive=btn.dataset.mode===mode;btn.style.cssText=this.getModeButtonStyles(isActive,btn.dataset.mode)});this.input.placeholder=this.getPlaceholderForMode(mode);const executeBtn=this.container.querySelector("#execute-btn");const labels={generate:"🎨 Generate Object",modify:"✏️ Apply Changes",delete:"🗑️ Delete Objects"};const buttonColors={generate:"linear-gradient(135deg, #5b21b6, #4c1d95)",modify:"linear-gradient(135deg, #ec4899, #be185d)",delete:"rgba(107, 114, 128, 0.15)"};executeBtn.innerHTML=`<span>${labels[mode]}</span>`;executeBtn.style.background=buttonColors[mode]}getPlaceholderForMode(mode){const placeholders={generate:"「猫の画像を作って」と話しかけて ⏎ ✨",import:"ファイルを選択して ⏎ 📁",modify:"選択後「ピンクに変更」と伝えて ⏎ ✏️",delete:"選択後、コマンドをそのまま送って ⏎ 🗑️"};return placeholders[mode]||placeholders.generate}handleDemoOrientationCommand(command){if(!this.sceneManager){return null}const normalized=command.toLowerCase();const wantsVerticalFlip=/上下|逆さ|さかさ|ひっくり返/.test(normalized);const wantsHorizontalFlip=/左右|向きを変え|向きを変更|横向き|ミラー|反転/.test(normalized);const wantsRotateRight=/右向き|右を向|右に向け/.test(normalized);const wantsRotateLeft=/左向き|左を向|左に向け/.test(normalized);const wantsRotateBack=/後ろ向き|反対向き|背中|180度|半回転/.test(normalized);const hasOrientationKeyword=wantsVerticalFlip||wantsHorizontalFlip||wantsRotateRight||wantsRotateLeft||wantsRotateBack;if(!hasOrientationKeyword){return null}let targetObject=this.sceneManager.selectedObject;if(!targetObject&&typeof this.sceneManager.findObjectByKeyword==="function"){targetObject=this.sceneManager.findObjectByKeyword(normalized);if(targetObject){this.sceneManager.selectObject(targetObject)}}if(!targetObject){this.addOutput("⚠️ 変更したいオブジェクトを先に選択してください。","warning");return{handled:true,result:{success:false,message:"対象オブジェクトが見つかりませんでした"}}}const operations=[];if(wantsHorizontalFlip){const currentX=targetObject.scale.x===0?1:targetObject.scale.x;targetObject.scale.x=-currentX;operations.push("左右反転")}if(wantsVerticalFlip){const currentY=targetObject.scale.y===0?1:targetObject.scale.y;targetObject.scale.y=-currentY;operations.push("上下反転")}if(wantsRotateRight){targetObject.rotation.y=Math.PI/2;operations.push("右向き")}if(wantsRotateLeft){targetObject.rotation.y=-Math.PI/2;operations.push("左向き")}if(wantsRotateBack){targetObject.rotation.y=Math.PI;operations.push("背面向き")}if(operations.length===0){return{handled:false}}targetObject.userData=targetObject.userData||{};targetObject.userData.modifications=targetObject.userData.modifications||[];targetObject.userData.modifications.push({timestamp:Date.now(),type:"orientation",operations:operations,command:command});if(typeof this.sceneManager.createModernSelectionIndicator==="function"){this.sceneManager.createModernSelectionIndicator(targetObject)}const message=`✏️ ${operations.join("・")} を適用しました`;this.addOutput(message,"success");return{handled:true,result:{success:true,message:message,objectId:targetObject.name,operations:operations}}}async executeCommand(){const command=this.input.value.trim();if(!command)return;const commandType=this.analyzeCommandType(command);if(this.selectedFile){if(this.currentMode!=="import"){this.selectMode("import",false)}this.currentMode="import"}else{this.currentMode=commandType.type}if(commandType.requiresConfirmation){const confirmed=await this.showDeleteConfirmation(command);if(!confirmed){this.addOutput("❌ 削除をキャンセルしました","system");return}}this.input.value="";this.hideProactiveSuggestion();commandType.mediaType==="video"?"🎬":"🖼️";const taskId=this.addTaskCard(command,{status:"processing"});this.saveCommandToHistory({command:command,mode:this.currentMode,mediaType:commandType.mediaType,timestamp:Date.now()});try{let result;const modePrefix=this.getModePrefix(this.currentMode);const fullCommand=`${modePrefix}${command}`;this.logDebug("🔍 Current mode check:",this.currentMode);if(this.currentMode==="import"){this.logDebug("📁 Import mode detected - bypassing SceneManager");if(!this.selectedFile){throw new Error("ファイルが選択されていません。まずファイルを選択してください。")}result=await this.handleImportCommand(command)}else if(this.sceneManager){if(this.currentMode==="modify"){const orientationResult=this.handleDemoOrientationCommand(command);if(orientationResult&&orientationResult.handled){result=orientationResult.result}else{result=await this.sceneManager.executeCommand(fullCommand)}}else{result=await this.sceneManager.executeCommand(fullCommand)}}else if(this.client){if(this.currentMode==="generate"){if(commandType.mediaType==="video"){result=await this.client.generateVideo(command,{model:this.selectedVideoService||undefined})}else{result=await this.client.generateImage(command,{service:this.selectedImageService||undefined})}}else if(this.currentMode==="modify"){if(!this.selectedObject){throw new Error("変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。")}result=await this.client.modifySelectedObject(this.selectedObject,command)}else if(this.currentMode==="delete"){if(!this.selectedObject&&!this.sceneManager?.getSelectedObjects()?.length){this.addOutput("⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。","system");return}const confirmMessage=`本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;if(!confirm(confirmMessage)){this.addOutput("❌ 削除がキャンセルされました","system");return}result=await this.client.deleteObjects(command)}else{result=await this.client.executeCommand(fullCommand)}}else{throw new Error("SceneManager または Client が設定されていません")}if(result&&result.taskId){this.connectToProgress(result.taskId,taskId);this.currentTaskId=result.taskId}const successMessages={generate:``,modify:"✅ 変更を適用しました",delete:"🗑️ 削除しました"};if(taskId){this.updateTaskCard(taskId,"completed")}if(result.modelName){}if(result.objectId){}if(result.position){}if(commandType.mediaType){}}catch(error){const errorMessages={generate:`❌ ${commandType.mediaType==="video"?"動画":"画像"}生成エラー`,modify:"❌ 変更エラー",delete:"❌ 削除エラー"};if(taskId){this.updateTaskCard(taskId,"error")}this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`,"error");console.error("Command execution error:",error)}if(this.sceneManager&&this.sceneManager.selectedObject){if(this.currentMode==="modify"||this.currentMode==="delete"){setTimeout(()=>{this.sceneManager.deselectObject()},500)}}if(this.config.autoScroll){this.scrollToBottom()}}async showConfirmationDialog(options){const{icon:icon="🗑️",title:title="確認",message:message="この操作を実行しますか？",confirmText:confirmText="実行",cancelText:cancelText="キャンセル",confirmColor:confirmColor="#ef4444"}=options;return new Promise(resolve=>{const modal=document.createElement("div");modal.style.cssText=`\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;const dialog=document.createElement("div");dialog.style.cssText=`\n        background: ${this.isDarkMode?"linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))":"linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))"};\n        border: 1px solid ${this.isDarkMode?"rgba(99, 102, 241, 0.3)":"rgba(255, 255, 255, 0.5)"};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937"};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isDarkMode?"0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)":"0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)"};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;dialog.innerHTML=`\n        <div style="font-size: 56px; margin-bottom: 20px;">${icon}</div>\n        <h3 style="margin: 0 0 16px 0; color: ${this.isDarkMode?"#a5b4fc":"#6366f1"}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;">\n          ${title}\n        </h3>\n        <p style="margin: 0 0 28px 0; color: ${this.isDarkMode?"#d1d5db":"#6b7280"}; line-height: 1.6; font-size: 16px;">\n          ${message}\n        </p>\n        <div style="display: flex; gap: 8px; justify-content: center;">\n          <button id="cancel-btn" style="\n            padding: 14px 24px;\n            background: ${this.isDarkMode?"linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))":"linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))"};\n            border: 1px solid ${this.isDarkMode?"rgba(156, 163, 175, 0.2)":"rgba(255, 255, 255, 0.3)"};\n            border-radius: 12px;\n            color: ${this.isDarkMode?"#d1d5db":"#374151"};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          ">${cancelText}</button>\n          <button id="confirm-btn" style="\n            padding: 14px 24px;\n            background: ${confirmColor==="#6366f1"?"linear-gradient(135deg, #6366f1, #8b5cf6)":confirmColor==="#ef4444"?"linear-gradient(135deg, #ef4444, #dc2626)":"linear-gradient(135deg, #ff7b47, #f97316)"};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor==="#6366f1"?"rgba(99, 102, 241, 0.3)":confirmColor==="#ef4444"?"rgba(239, 68, 68, 0.3)":"rgba(255, 123, 71, 0.3)"};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          ">${confirmText}</button>\n        </div>\n      `;modal.appendChild(dialog);document.body.appendChild(modal);requestAnimationFrame(()=>{modal.style.opacity="1";dialog.style.transform="scale(1)";dialog.style.opacity="1"});dialog.querySelector("#cancel-btn").onclick=()=>{this.closeModalWithAnimation(modal);resolve(false)};dialog.querySelector("#confirm-btn").onclick=()=>{this.closeModalWithAnimation(modal);resolve(true)};const escHandler=e=>{if(e.key==="Escape"){this.closeModalWithAnimation(modal);document.removeEventListener("keydown",escHandler);resolve(false)}};document.addEventListener("keydown",escHandler);modal.onclick=e=>{if(e.target===modal){this.closeModalWithAnimation(modal);resolve(false)}}})}async showDeleteConfirmation(command){return this.showConfirmationDialog({icon:"🗑️",title:"削除の確認",message:`「${command}」を実行しますか？<br>この操作は取り消すことができません。`,confirmText:"削除実行",cancelText:"キャンセル",confirmColor:"#ff7b47"})}addOutput(message,type="default",options={}){if(type==="task"||type==="progress"){return this.addTaskCard(message,options)}if(type==="error"||type==="system"){this.addSystemMessage(message,type)}}addTaskCard(taskInfo,options={}){if(!this.taskCards)this.taskCards=new Map;const taskId=options.taskId||`task_${Date.now()}_${Math.random().toString(36).substr(2,5)}`;const status=options.status||"pending";const prompt=taskInfo.prompt||taskInfo.command||taskInfo;const card=document.createElement("div");card.className="floating-task-card";card.setAttribute("data-task-id",taskId);card.style.cssText=this.getFloatingCardStyles(status);card.style.setProperty("opacity","0","important");card.style.setProperty("transform","translateY(20px) scale(0.95)","important");card.style.setProperty("filter","blur(4px)","important");const iconMap={pending:"⏳",processing:"🎨",progress:"⚡",completed:"✅",error:"❌"};const friendlyMessage=this.getFriendlyMessage(status,prompt);card.innerHTML=`\n      <span style="font-size: 14px;">${iconMap[status]}</span>\n      <span style="font-size: 13px; margin-left: 6px;">${friendlyMessage}</span>\n    `;this.floatingContainer.appendChild(card);this.updateCardDisplayLimit();this.taskCards.set(taskId,{element:card,status:status,prompt:prompt,originalPrompt:prompt,startTime:Date.now(),endTime:null,error:null,contentType:"image",model:null,settings:null});this.addCardDetailEvents(card,taskId);this.animateCardEntrance(card);return taskId}updateTaskCard(taskId,status,options={}){if(!this.taskCards||!this.taskCards.has(taskId))return;const taskData=this.taskCards.get(taskId);const card=taskData.element;taskData.status=status;const iconMap={pending:"⏳",processing:"🎨",progress:"⚡",completed:"✅",error:"❌"};const friendlyMessage=this.getFriendlyMessage(status,taskData.prompt);card.innerHTML=`\n      <span style="font-size: 14px;">${iconMap[status]}</span>\n      <span style="font-size: 13px; margin-left: 6px;">${friendlyMessage}</span>\n    `;if(status==="completed"){this.animateCardSuccess(card,taskId)}else if(status==="error"){this.animateCardError(card,taskId)}}addSystemMessage(message,type){const entry=document.createElement("div");entry.className=`system-message ${type}`;entry.style.cssText=`\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type==="error"?"rgba(239, 68, 68, 0.1)":"rgba(107, 114, 128, 0.1)"};\n      border: 1px solid ${type==="error"?"rgba(239, 68, 68, 0.3)":"rgba(107, 114, 128, 0.3)"};\n      color: ${type==="error"?"#fca5a5":this.isDarkMode?"#d1d5db":"#6b7280"};\n    `;entry.textContent=message;this.outputDiv.appendChild(entry);this.scrollToBottom()}getTaskCardStyles(status){const baseStyles=`\n      background: ${this.isDarkMode?"rgba(255, 255, 255, 0.08)":"rgba(255, 255, 255, 0.15)"};\n      border: 1px solid ${this.isDarkMode?"rgba(255, 255, 255, 0.15)":"rgba(255, 255, 255, 0.25)"};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;const statusBorders={pending:"rgba(167, 139, 250, 0.3)",processing:"rgba(192, 132, 252, 0.5)",progress:"rgba(236, 72, 153, 0.4)",completed:"rgba(167, 139, 250, 0.4)",error:"rgba(239, 68, 68, 0.4)"};return baseStyles+`border-left: 3px solid ${statusBorders[status]||statusBorders.pending};`}getFloatingCardStyles(status){const glassmorphismDark={background:"linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))",border:"1px solid rgba(99, 102, 241, 0.25)",boxShadow:"0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)",color:"#ffffff"};const glassmorphismLight={background:"linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))",border:"1px solid rgba(255, 255, 255, 0.4)",boxShadow:"0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)",color:"#1f2937"};const theme=this.isDarkMode?glassmorphismDark:glassmorphismLight;return`\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `}updateCardDisplayLimit(){const maxVisibleCards=3;const allCards=Array.from(this.floatingContainer.children).filter(child=>!child.classList.contains("overflow-counter"));const existingCounter=this.floatingContainer.querySelector(".overflow-counter");if(existingCounter){existingCounter.remove()}if(allCards.length<=maxVisibleCards){allCards.forEach(card=>{card.style.display="flex"})}else{allCards.slice(-maxVisibleCards);const hiddenCount=allCards.length-maxVisibleCards;allCards.forEach((card,index)=>{if(index<allCards.length-maxVisibleCards){card.style.display="none"}else{card.style.display="flex"}});const counter=document.createElement("div");counter.className="overflow-counter";const counterBaseColor=this.isDarkMode?"rgba(255, 255, 255, 0.08)":"rgba(0, 0, 0, 0.12)";const counterBorderColor=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.15)";const counterTextColor=this.isDarkMode?"rgba(255, 255, 255, 0.7)":"rgba(0, 0, 0, 0.6)";counter.style.cssText=`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;counter.innerHTML=`+ ${hiddenCount}`;this.floatingContainer.insertBefore(counter,this.floatingContainer.firstChild);const counterHoverColor=this.isDarkMode?"rgba(255, 255, 255, 0.12)":"rgba(0, 0, 0, 0.18)";counter.addEventListener("mouseenter",()=>{counter.style.background=counterHoverColor;counter.style.transform="scale(1.05)"});counter.addEventListener("mouseleave",()=>{counter.style.background=counterBaseColor;counter.style.transform="scale(1)"})}}addCardDetailEvents(card,taskId){const isTouchDevice="ontouchstart"in window||navigator.maxTouchPoints>0;if(isTouchDevice){card.addEventListener("click",e=>{e.preventDefault();e.stopPropagation();this.showTaskDetailModal(taskId)})}else{let hoverTimeout;card.addEventListener("mouseenter",()=>{hoverTimeout=setTimeout(()=>{this.showTaskDetailModal(taskId)},800)});card.addEventListener("mouseleave",()=>{if(hoverTimeout){clearTimeout(hoverTimeout)}});card.addEventListener("click",e=>{e.preventDefault();e.stopPropagation();this.showTaskDetailModal(taskId)})}}showTaskDetailModal(taskId){const taskData=this.taskCards.get(taskId);if(!taskData)return;const existingModal=document.querySelector(".task-detail-modal");if(existingModal){existingModal.remove()}const modal=this.createTaskDetailModal(taskData);document.body.appendChild(modal);requestAnimationFrame(()=>{modal.style.opacity="1";modal.querySelector(".modal-content").style.transform="translateY(0) scale(1)"})}createTaskDetailModal(taskData){const modal=document.createElement("div");modal.className="task-detail-modal";const overlayColor=this.isDarkMode?"rgba(0, 0, 0, 0.6)":"rgba(0, 0, 0, 0.4)";const modalBg=this.isDarkMode?"rgba(20, 20, 20, 0.95)":"rgba(255, 255, 255, 0.95)";const modalBorder=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)";const textColor=this.isDarkMode?"rgba(255, 255, 255, 0.9)":"rgba(0, 0, 0, 0.9)";const labelColor=this.isDarkMode?"rgba(255, 255, 255, 0.6)":"rgba(0, 0, 0, 0.6)";modal.style.cssText=`\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;const duration=taskData.endTime?((taskData.endTime-taskData.startTime)/1e3).toFixed(1):((Date.now()-taskData.startTime)/1e3).toFixed(1);const statusText=taskData.status==="pending"?"待機中":taskData.status==="in-progress"?"実行中":taskData.status==="completed"?"完了":"エラー";const modalContent=document.createElement("div");modalContent.className="modal-content";modalContent.style.cssText=`\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;modalContent.innerHTML=`\n      <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;">\n        <h3 style="margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;">タスク詳細</h3>\n        <button class="close-btn" style="\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        ">×</button>\n      </div>\n      \n      <div style="space-y: 16px;">\n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">📝 元のプロンプト</div>\n          <div style="color: ${textColor}; font-size: 14px; line-height: 1.4;">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">📊 ステータス</div>\n          <div style="color: ${textColor}; font-size: 14px;">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">⏱️ 実行時間</div>\n          <div style="color: ${textColor}; font-size: 14px;">${duration}秒</div>\n        </div>\n        \n        ${taskData.error?`\n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">❌ エラー詳細</div>\n          <div style="color: #ef4444; font-size: 14px; line-height: 1.4;">${taskData.error}</div>\n        </div>\n        `:""}\n        \n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">🎨 コンテンツタイプ</div>\n          <div style="color: ${textColor}; font-size: 14px;">${taskData.contentType||"画像"}</div>\n        </div>\n      </div>\n    `;modalContent.addEventListener("click",e=>{e.stopPropagation()});const closeBtn=modalContent.querySelector(".close-btn");closeBtn.addEventListener("click",()=>{this.closeTaskDetailModal(modal)});closeBtn.addEventListener("mouseenter",()=>{closeBtn.style.color=textColor});closeBtn.addEventListener("mouseleave",()=>{closeBtn.style.color=labelColor});modal.addEventListener("click",()=>{this.closeTaskDetailModal(modal)});modal.appendChild(modalContent);return modal}closeTaskDetailModal(modal){modal.style.opacity="0";modal.querySelector(".modal-content").style.transform="translateY(20px) scale(0.95)";setTimeout(()=>{if(modal.parentNode){modal.parentNode.removeChild(modal)}},300)}animateCardEntrance(card){card.style.transform="translateY(20px) scale(0.95)";card.style.opacity="0";card.style.filter="blur(4px)";requestAnimationFrame(()=>{card.style.transition="all 0.6s cubic-bezier(0.16, 1, 0.3, 1)";card.style.transform="translateY(0) scale(1)";card.style.opacity="1";card.style.filter="blur(0px)";card.style.boxShadow="0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)"})}animateCardSuccess(card,taskId){card.style.transition="all 0.3s cubic-bezier(0.16, 1, 0.3, 1)";card.style.borderColor="rgba(76, 175, 80, 0.6)";card.style.transform="scale(1.08)";card.style.boxShadow="0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)";card.style.filter="brightness(1.1) saturate(1.2)";setTimeout(()=>{card.style.transform="scale(1.02)";card.style.filter="brightness(1.05) saturate(1.1)"},150);setTimeout(()=>{this.animateCardExit(card,taskId)},2e3)}animateCardError(card,taskId){card.style.transition="all 0.3s cubic-bezier(0.16, 1, 0.3, 1)";card.style.borderColor="rgba(244, 67, 54, 0.7)";card.style.boxShadow="0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)";card.style.filter="saturate(1.3) brightness(1.1)";card.style.animation="errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2";this.addErrorTooltip(card,taskId);card.style.cursor="pointer";card.onclick=()=>this.animateCardExit(card,taskId);setTimeout(()=>{if(this.taskCards.has(taskId)){this.animateCardExit(card,taskId)}},5e3)}addErrorTooltip(card,taskId){const taskData=this.taskCards.get(taskId);if(!taskData||!taskData.error)return;const tooltip=document.createElement("div");tooltip.style.cssText=`\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;tooltip.textContent=taskData.error;card.style.position="relative";card.appendChild(tooltip);requestAnimationFrame(()=>{tooltip.style.opacity="1"});setTimeout(()=>{if(tooltip.parentNode){tooltip.style.opacity="0";setTimeout(()=>{if(tooltip.parentNode){tooltip.parentNode.removeChild(tooltip)}},300)}},3e3)}animateCardExit(card,taskId){card.style.transition="all 0.28s cubic-bezier(0.4, 0, 0.2, 1)";card.style.transform="translateY(-12px) scale(0.92)";card.style.opacity="0";card.style.filter="blur(6px) brightness(1.2)";card.style.boxShadow="0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)";setTimeout(()=>{if(card.parentNode){card.parentNode.removeChild(card)}this.taskCards.delete(taskId);this.updateCardDisplayLimit()},280)}getResponseType(prompt){if(/ちょこっと|ちょこん|少し|軽く/.test(prompt)||prompt.length<15){return"casual"}if(/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)){return"magical"}return"balanced"}getFriendlyMessage(status,prompt,errorMessage=null){const shortPrompt=prompt.length>15?prompt.substring(0,15)+"...":prompt;const responseType=this.getResponseType(prompt);switch(status){case"pending":return responseType==="casual"?"ちょこっと準備中です...":responseType==="magical"?"魔法をかけようとしています...":"ちょこっと魔法の準備中...";case"processing":case"in-progress":case"progress":if(this.currentMode==="modify"){return responseType==="casual"?"ちょこっと調整中です...":responseType==="magical"?"イメージを変化させています...":"ちょこんと編集中です..."}return responseType==="casual"?"ちょこんと配置中です...":responseType==="magical"?"あなたの想いを形にしています...":"ちょこっと魔法をかけています...";case"completed":if(this.currentMode==="delete"){return responseType==="casual"?"ちょこっと削除しました！":responseType==="magical"?"すっきりと片付きました！":"ちょこんと削除完了！すっきりですね！"}if(this.currentMode==="modify"){return responseType==="casual"?"ちょこっと調整しました！":responseType==="magical"?"素敵に変身しました！":"ちょこんと編集完了！いい感じですね！"}return responseType==="casual"?"ちょこっとドロップしました！":responseType==="magical"?"素敵な世界が完成しました！":"ちょこんと配置完了！素敵ですね！";case"error":if(errorMessage){const shortError=errorMessage.length>30?errorMessage.substring(0,30)+"...":errorMessage;return`❌ ${shortError}`}return responseType==="casual"?"おっと、エラーが発生しました":responseType==="magical"?"申し訳ございません、処理に失敗しました":"エラーが発生しました。もう一度お試しください";default:return shortPrompt}}getStatusColor(status){const colors={pending:this.isDarkMode?"#a78bfa":"#7c3aed",processing:this.isDarkMode?"#c084fc":"#9333ea",progress:this.isDarkMode?"#ec4899":"#be185d",completed:this.isDarkMode?"#a78bfa":"#7c3aed",error:this.isDarkMode?"#f87171":"#dc2626"};return colors[status]||colors.pending}createStatusIndicator(status){if(status==="processing"||status==="progress"){return`\n        <div class="status-indicator" style="\n          background: ${this.isDarkMode?"rgba(255, 255, 255, 0.08)":"rgba(0, 0, 0, 0.08)"};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        ">\n          <div class="status-pulse" style="\n            background: linear-gradient(90deg, transparent, #6366f1, #8b5cf6, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          "></div>\n        </div>\n        <div style="display: flex; align-items: center; gap: 4px; margin-top: 8px;">\n          <div class="status-dots" style="font-size: 10px; color: ${this.isDarkMode?"#c084fc":"#9333ea"};">\n            処理中<span style="animation: dots 1.5s infinite;">...</span>\n          </div>\n        </div>\n      `}return""}animateTaskCompletion(card){card.style.animation="taskComplete 0.8s ease-out";this.addSubtleParticleEffect(card);setTimeout(()=>{card.style.animation=""},800);this.ensureTaskAnimations()}addSubtleParticleEffect(card){const particles=3;const rect=card.getBoundingClientRect();for(let i=0;i<particles;i++){const particle=document.createElement("div");particle.style.cssText=`\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right-20}px;\n        top: ${rect.top+10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;const angle=i/particles*Math.PI*2;const distance=15;particle.style.setProperty("--move-x",`${Math.cos(angle)*distance}px`);particle.style.setProperty("--move-y",`${Math.sin(angle)*distance}px`);document.body.appendChild(particle);setTimeout(()=>particle.remove(),1200)}}ensureTaskAnimations(){if(document.getElementById("task-animations"))return;const style=document.createElement("style");style.id="task-animations";style.textContent=`\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;document.head.appendChild(style)}addTaskStatus(message,percent=0,taskId=null){const id=taskId||`task_${Date.now()}`;return this.addTaskCard(message,{percent:Math.min(Math.max(percent,0),100),taskId:id,status:percent>0?"progress":"pending"})}updateTaskProgress(taskId,percent,newMessage=null){const existingTask=this.output.querySelector(`[data-task-id="${taskId}"]`);if(existingTask&&newMessage){this.addOutput(newMessage,"progress",{percent:Math.min(Math.max(percent,0),100),taskId:taskId})}}completeTask(taskId){const existingTask=this.output.querySelector(`[data-task-id="${taskId}"]`);if(existingTask){existingTask.style.transition="opacity 0.5s ease, transform 0.5s ease";existingTask.style.opacity="0";existingTask.style.transform="translateX(20px)";setTimeout(()=>{if(existingTask.parentNode){existingTask.remove()}},500)}}connectToProgress(serverTaskId,uiTaskId=null){if(this.activeConnections.has(serverTaskId)){return}const eventSource=new EventSource(`/api/progress/${serverTaskId}`);this.activeConnections.set(serverTaskId,eventSource);eventSource.onmessage=event=>{try{const data=JSON.parse(event.data);data.uiTaskId=uiTaskId;this.handleProgressUpdate(data)}catch(error){console.error("SSE data parse error:",error)}};eventSource.onerror=error=>{console.error("SSE connection error:",error);this.disconnectProgress(serverTaskId)}}handleProgressUpdate(data){switch(data.type){case"connected":this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);break;case"progress":if(data.percent!==undefined&&data.uiTaskId){this.updateTaskCard(data.uiTaskId,"progress",{percent:data.percent})}break;case"completed":if(data.uiTaskId){this.updateTaskCard(data.uiTaskId,"completed")}this.disconnectProgress(data.taskId);break;case"error":if(data.uiTaskId){this.updateTaskCard(data.uiTaskId,"error")}this.addOutput(`❌ ${data.message}`,"error");this.disconnectProgress(data.taskId);break}}disconnectProgress(taskId){const connection=this.activeConnections.get(taskId);if(connection){connection.close();this.activeConnections.delete(taskId)}}scrollToBottom(){if(this.outputDiv){this.outputDiv.scrollTop=this.outputDiv.scrollHeight}}getModePrefix(mode){const prefixes={generate:"",modify:"[変更] ",delete:"[削除] "};return prefixes[mode]||""}saveCommandToHistory(commandData){this.commandHistory=this.commandHistory.slice(0,this.currentHistoryIndex+1);this.commandHistory.push(commandData);this.currentHistoryIndex=this.commandHistory.length-1;if(this.commandHistory.length>this.maxHistorySize){this.commandHistory.shift();this.currentHistoryIndex--}this.updateUndoRedoButtons()}undo(){if(!this.canUndo()){this.addOutput("↶ Undoできる操作がありません","hint");return}const command=this.commandHistory[this.currentHistoryIndex];this.currentHistoryIndex--;if(command.mode==="generate"){this.addOutput(`↶ Undo: "${command.command}" の生成を取り消しました`,"system");if(this.sceneManager&&this.sceneManager.undoLastGenerate){this.sceneManager.undoLastGenerate()}}else if(command.mode==="modify"){this.addOutput(`↶ Undo: "${command.command}" の変更を取り消しました`,"system");if(this.sceneManager&&this.sceneManager.undoLastModify){this.sceneManager.undoLastModify()}}else if(command.mode==="delete"){this.addOutput(`↶ Undo: "${command.command}" の削除を取り消しました`,"system");if(this.sceneManager&&this.sceneManager.undoLastDelete){this.sceneManager.undoLastDelete()}}this.updateUndoRedoButtons()}redo(){if(!this.canRedo()){this.addOutput("↷ Redoできる操作がありません","hint");return}this.currentHistoryIndex++;const command=this.commandHistory[this.currentHistoryIndex];this.addOutput(`↷ Redo: "${command.command}" を再実行しました`,"system");if(this.sceneManager&&this.sceneManager.redoCommand){this.sceneManager.redoCommand(command)}this.updateUndoRedoButtons()}canUndo(){return this.currentHistoryIndex>=0}canRedo(){return this.currentHistoryIndex<this.commandHistory.length-1}updateUndoRedoButtons(){if(this.undoBtn){this.undoBtn.disabled=!this.canUndo();this.undoBtn.style.opacity=this.canUndo()?"1":"0.4";this.undoBtn.style.cursor=this.canUndo()?"pointer":"not-allowed"}if(this.redoBtn){this.redoBtn.disabled=!this.canRedo();this.redoBtn.style.opacity=this.canRedo()?"1":"0.4";this.redoBtn.style.cursor=this.canRedo()?"pointer":"not-allowed"}}async clearAllWithConfirmation(){const confirmed=await this.showClearAllConfirmation();if(confirmed){this.clearAll()}}async showClearAllConfirmation(){return this.showConfirmationDialog({icon:"🧹",title:"Clear All の確認",message:"すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。",confirmText:"Clear All 実行",cancelText:"キャンセル",confirmColor:"#6366f1"})}closeModalWithAnimation(modal){const dialog=modal.querySelector("div:last-child");dialog.style.transform="scale(0.9)";dialog.style.opacity="0";modal.style.opacity="0";setTimeout(()=>{if(modal.parentElement){document.body.removeChild(modal)}},200)}clearAll(){if(this.sceneManager){this.sceneManager.clearAll();this.addOutput("🧹 全ての実験オブジェクトを削除しました","system")}else if(this.client){this.addOutput("⚠️ サーバー側削除は未実装","error")}}showExamples(){const examples=["右上にドラゴンを作って","中央に大きなユニコーンを生成","左下に小さな桜を作って","空に鳳凰を作って","地面に神社を作って"];this.addOutput("💡 コマンド例:","system");examples.forEach(example=>{this.addOutput(`   "${example}"`,"hint")})}setSceneManager(sceneManager){this.sceneManager=sceneManager;this.applyServiceSelectionToSceneManager()}setClient(client){this.client=client}updateConfig(newConfig){this.config={...this.config,...newConfig};if(newConfig.activationKey){this.bindEvents()}}refreshStyles(){document.body.className=this.isWabiSabiMode?"wabisabi-mode":this.isDarkMode?"dark-mode":"light-mode";const generateBtn=this.container?.querySelector('[data-mode="generate"]');if(generateBtn){generateBtn.style.cssText=this.getModeButtonStyles(true,"generate")}const executeBtn=this.container?.querySelector("#execute-btn");if(executeBtn){executeBtn.style.cssText=this.getModernButtonStyles("primary")}}toggleTheme(){const themeOrder=["light","dark","wabisabi"];const currentIndex=themeOrder.indexOf(this.currentTheme);const nextIndex=(currentIndex+1)%themeOrder.length;this.currentTheme=themeOrder[nextIndex];this.isDarkMode=this.currentTheme==="dark";this.isWabiSabiMode=this.currentTheme==="wabisabi";localStorage.setItem("live-command-theme",this.currentTheme);if(this.themeToggle){const getThemeIcon=()=>{const themeConfig={light:"🌙",dark:"🍵",wabisabi:"☀️"};return themeConfig[this.currentTheme]||"🌙"};const getThemeTitle=()=>{const titleConfig={light:"ダークモードに切り替え",dark:"侘び寂びモードに切り替え",wabisabi:"ライトモードに切り替え"};return titleConfig[this.currentTheme]||"ダークモードに切り替え"};const getThemeIconWithFilter=()=>{const icon=getThemeIcon();if(icon==="☀️"){return`<span style="filter: saturate(1.2) brightness(1.1);">${icon}</span>`}else if(icon==="🍵"){return`<span style="filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);">${icon}</span>`}else{return`<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">${icon}</span>`}};this.themeToggle.innerHTML=getThemeIconWithFilter();this.themeToggle.title=getThemeTitle()}this.applyTheme()}applyTheme(){document.body.className=this.isDarkMode?"dark-mode":"light-mode";const currentDisplay=this.container.style.display;const currentFlexDirection=this.container.style.flexDirection;this.container.style.cssText=this.getContainerStyles();this.container.style.display=currentDisplay||"flex";this.container.style.flexDirection=currentFlexDirection||"column";const brandBadge=this.container.querySelector(".floating-brand-badge");if(brandBadge){brandBadge.style.background=this.isDarkMode?"linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))":"linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))";brandBadge.style.border=`1px solid ${this.isDarkMode?"rgba(255, 255, 255, 0.2)":"rgba(255, 255, 255, 0.4)"}`}this.input.style.cssText=this.getInputStyles();this.output.style.cssText=this.getOutputStyles();if(this.radioModeContainer){this.radioModeContainer.style.background=this.isWabiSabiMode?"linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))":this.isDarkMode?"linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))":"linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))";this.radioModeContainer.style.borderColor=this.isWabiSabiMode?"rgba(93, 64, 55, 0.4)":this.isDarkMode?"rgba(99, 102, 241, 0.15)":"rgba(255, 255, 255, 0.25)";Object.keys(this.radioModeButtons).forEach(key=>{const{button:button}=this.radioModeButtons[key];if(this.currentMode!==key){button.style.color=this.isWabiSabiMode?"rgba(245, 245, 245, 0.8)":this.isDarkMode?"rgba(255, 255, 255, 0.7)":"rgba(55, 65, 81, 0.8)";button.style.background="transparent";button.style.border="1px solid transparent";button.style.boxShadow="none"}});this.selectMode(this.currentMode,false)}if(this.clearBtn){this.clearBtn.style.cssText=this.getActionButtonStyles("secondary")}if(this.historyBtn){this.historyBtn.style.cssText=this.getActionButtonStyles("secondary");this.historyBtn.style.opacity="0.5"}if(this.themeToggle){const getThemeIcon=()=>{const themeConfig={light:"🌙",dark:"🍵",wabisabi:"☀️"};return themeConfig[this.currentTheme]||"🌙"};const getThemeTitle=()=>{const titleConfig={light:"ダークモードに切り替え",dark:"侘び寂びモードに切り替え",wabisabi:"ライトモードに切り替え"};return titleConfig[this.currentTheme]||"ダークモードに切り替え"};const getThemeIconWithFilter=()=>{const icon=getThemeIcon();if(icon==="☀️"){return`<span style="filter: saturate(1.2) brightness(1.1);">${icon}</span>`}else if(icon==="🍵"){return`<span style="filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);">${icon}</span>`}else{return`<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">${icon}</span>`}};this.themeToggle.innerHTML=getThemeIconWithFilter();this.themeToggle.title=getThemeTitle();this.themeToggle.style.cssText=this.getActionButtonStyles("icon")}if(this.settingsButton){this.settingsButton.style.cssText=this.getActionButtonStyles("icon")}this.updateServiceSelectorTheme();const closeButton=this.container.querySelector(".close-button");if(closeButton){closeButton.style.color=this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937";closeButton.style.background=this.isWabiSabiMode?"rgba(245, 245, 245, 0.1)":this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)"}this.updateFloatingContainerTheme();this.updateExistingTextColors()}updateFloatingContainerTheme(){if(!this.floatingContainer)return;const currentDisplay=this.floatingContainer.style.display;if(this.taskCards&&this.taskCards.size>0){this.taskCards.forEach((taskData,taskId)=>{const card=taskData.element;if(card){const glassmorphismDark={background:"linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))",border:"1px solid rgba(99, 102, 241, 0.25)",color:"#ffffff"};const glassmorphismLight={background:"linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))",border:"1px solid rgba(255, 255, 255, 0.4)",color:"#1f2937"};const theme=this.isDarkMode?glassmorphismDark:glassmorphismLight;card.style.setProperty("background",theme.background,"important");card.style.setProperty("border",theme.border,"important");card.style.setProperty("color",theme.color,"important")}})}this.floatingContainer.style.display=currentDisplay}updateExistingTextColors(){const colors=this.isDarkMode?{system:"#60a5fa",command:"#93c5fd",success:"#f472b6",error:"#f87171",processing:"#fbbf24",info:"#d1d5db",hint:"#d1d5db"}:{system:"#1e40af",command:"#1d4ed8",success:"#be185d",error:"#dc2626",processing:"#d97706",info:"#7c3aed",hint:"#374151"};const defaultTextColor=this.isDarkMode?"#d1d5db":"#374151";this.output.querySelectorAll("div").forEach(line=>{const text=line.textContent;let type="default";if(text.includes("📋")||text.includes("🎨")||text.includes("🎮")||text.includes("UI起動")){type="system"}else if(text.startsWith("> ")){type="command"}else if(text.includes("✅")||text.includes("⭐")||text.includes("生成しました")){type="success"}else if(text.includes("❌")||text.includes("エラー")){type="error"}else if(text.includes("中...")){type="processing"}else if(text.includes("📍")||text.includes("使用モデル:")||text.includes("位置:")){type="info"}else if(text.includes("   ")){type="hint"}line.style.color=colors[type]||defaultTextColor})}showImportInterface(){if(!this.fileInput){this.fileInput=document.createElement("input");this.fileInput.type="file";this.fileInput.accept=".glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov";this.fileInput.style.display="none";this.fileInput.onchange=e=>this.handleFileSelection(e);document.body.appendChild(this.fileInput)}this.enableDragAndDrop()}hideImportInterface(){if(this.fileSelectButton&&this.fileSelectButton.parentNode){this.fileSelectButton.parentNode.removeChild(this.fileSelectButton)}this.disableDragAndDrop()}openFileSelector(){if(this.fileInput){this.fileInput.click()}}triggerFileSelection(){if(!this.fileInput){this.showImportInterface()}this.openFileSelector();this.selectMode("import",true)}async handleFileSelection(event){const file=event.target.files[0];if(!file)return;try{const fileType=this.detectFileType(file.name);const fileUrl=URL.createObjectURL(file);this.selectedFile={file:file,url:fileUrl,type:fileType,name:file.name};this.selectMode("import",true);const defaultPrompt=`中央に設置 (${file.name})`;this.input.value=defaultPrompt;this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`,"system");this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`,"system");setTimeout(()=>{this.executeCommand()},500)}catch(error){console.error("File selection error:",error);this.addOutput(`❌ ファイル選択エラー: ${error.message}`,"error")}}enableDragAndDrop(){if(!this.input)return;this.input.addEventListener("dragover",this.handleDragOver.bind(this));this.input.addEventListener("drop",this.handleDrop.bind(this));this.input.addEventListener("dragenter",this.handleDragEnter.bind(this));this.input.addEventListener("dragleave",this.handleDragLeave.bind(this))}disableDragAndDrop(){if(!this.input)return;this.input.removeEventListener("dragover",this.handleDragOver.bind(this));this.input.removeEventListener("drop",this.handleDrop.bind(this));this.input.removeEventListener("dragenter",this.handleDragEnter.bind(this));this.input.removeEventListener("dragleave",this.handleDragLeave.bind(this))}handleDragOver(e){e.preventDefault();this.input.style.background=this.isDarkMode?"rgba(236, 72, 153, 0.1)":"rgba(236, 72, 153, 0.05)"}handleDragEnter(e){e.preventDefault();this.input.style.background=this.isDarkMode?"rgba(236, 72, 153, 0.1)":"rgba(236, 72, 153, 0.05)"}handleDragLeave(e){e.preventDefault();this.input.style.background=""}async handleDrop(e){e.preventDefault();this.input.style.background="";const files=Array.from(e.dataTransfer.files);if(files.length===0)return;const file=files[0];const fileType=this.detectFileType(file.name);if(!fileType){this.addOutput("❌ サポートされていないファイル形式です","error");return}this.handleFileSelection({target:{files:[file]}})}detectFileType(fileName){const ext=fileName.toLowerCase().split(".").pop();if(["glb","gltf"].includes(ext))return"3d";if(["jpg","jpeg","png","webp"].includes(ext))return"image";if(["mp4","mov","webm"].includes(ext))return"video";return null}async handleImportCommand(command){if(!this.selectedFile){throw new Error("ファイルが選択されていません")}try{const position=this.sceneManager?this.sceneManager.parsePosition(command):{x:0,y:5,z:-10};let result;switch(this.selectedFile.type){case"3d":if(this.sceneManager){result=await this.sceneManager.load3DModel(this.selectedFile.url,{position:position})}else{throw new Error("SceneManager が利用できません")}break;case"image":if(this.sceneManager){result=await this.sceneManager.loadImageFile(this.selectedFile.url,{position:position,fileName:this.selectedFile.name})}else{throw new Error("SceneManager が利用できません")}break;case"video":if(this.sceneManager){result=await this.sceneManager.loadVideoFile(this.selectedFile.url,{position:position,fileName:this.selectedFile.name})}else{throw new Error("SceneManager が利用できません")}break;default:throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`)}const processedFileName=this.selectedFile?.name;const importedType=this.selectedFile?.type;const importedUrl=this.selectedFile?.url;if(importedType!=="video"&&importedUrl){URL.revokeObjectURL(importedUrl)}this.selectedFile=null;this.selectMode("generate",false);return{success:true,message:`${processedFileName||"ファイル"} を ${position.x}, ${position.y}, ${position.z} に配置しました`,objectId:result.objectId}}catch(error){if(this.selectedFile?.url){URL.revokeObjectURL(this.selectedFile.url)}this.selectedFile=null;this.selectMode("generate",false);throw error}}handleDeleteModeSelection(){const selectedObject=this.sceneManager?.selectedObject;if(selectedObject){const objectName=selectedObject.userData?.originalPrompt||selectedObject.name||"選択したオブジェクト";this.input.value=`${objectName}を削除 ⏎`;this.input.focus();this.input.setSelectionRange(this.input.value.length,this.input.value.length);this.addOutput(`🎯 削除対象: ${objectName}`,"system")}else{this.input.value="";this.addOutput("❗ 削除するオブジェクトを選択後、削除ボタンを押してください","system");this.triggerAttentionAnimation("delete")}}handleModifyModeSelection(){const selectedObject=this.sceneManager?.selectedObject;if(selectedObject){const objectName=selectedObject.userData?.originalPrompt||selectedObject.name||"選択したオブジェクト";this.input.value=`${objectName}を`;this.input.focus();this.input.setSelectionRange(this.input.value.length,this.input.value.length);this.addOutput(`🎯 修正対象: ${objectName}`,"system")}else{this.input.value="";this.addOutput("❗ 修正するオブジェクトを選択後、修正ボタンを押してください","system");this.triggerAttentionAnimation("modify")}}triggerAttentionAnimation(mode){const chatOutput=this.chatOutput;const inputField=this.input;this.addMicroShakeEffect(chatOutput);this.addContextGlow(inputField,mode);this.addEmotionalPulse(chatOutput,mode);this.add3DDepthEffect(chatOutput)}addMicroShakeEffect(element){element.style.animation="microShake2025 0.5s ease-in-out";this.ensureMicroShakeAnimation();setTimeout(()=>{element.style.animation=""},500)}addContextGlow(element,mode){const glowColor=mode==="delete"?"rgba(239, 68, 68, 0.4)":"rgba(99, 102, 241, 0.4)";element.style.transition="all 0.3s ease";element.style.boxShadow=`0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;setTimeout(()=>{element.style.boxShadow=""},3e3)}addEmotionalPulse(element,mode){const pulseColor=mode==="delete"?"#ef4444":"#6366f1";element.style.borderLeft=`4px solid ${pulseColor}`;element.style.animation="emotionalPulse2025 2s ease-in-out infinite";this.ensureEmotionalPulseAnimation();setTimeout(()=>{element.style.animation="";element.style.borderLeft=""},6e3)}add3DDepthEffect(element){element.style.transform="translateZ(8px) rotateX(1deg)";element.style.transition="transform 0.3s ease";setTimeout(()=>{element.style.transform=""},2e3)}ensureMicroShakeAnimation(){if(document.getElementById("micro-shake-2025"))return;const style=document.createElement("style");style.id="micro-shake-2025";style.textContent=`\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;document.head.appendChild(style)}ensureEmotionalPulseAnimation(){if(document.getElementById("emotional-pulse-2025"))return;const style=document.createElement("style");style.id="emotional-pulse-2025";style.textContent=`\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;document.head.appendChild(style)}clearInputOnModeSwitch(newMode){if(this.input.value.trim()){const isPreviousModeMessage=this.isPreviousModeMessage(this.input.value,newMode);if(isPreviousModeMessage){this.input.value="";this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`,"system")}}}isPreviousModeMessage(inputValue,currentMode){const deletePatterns=[/.*を削除$/,/削除$/];const modifyPatterns=[/.*を$/,/.*を変更/,/.*をピンク/,/.*を大きく/,/.*を小さく/,/.*を移動/,/回転/,/反転/,/ミラー/,/傾け/,/向きを変え/,/.*を.*色/,/.*を.*サイズ/];const importPatterns=[/ファイル/,/画像/,/インポート/];switch(currentMode){case"delete":return modifyPatterns.some(pattern=>pattern.test(inputValue))||importPatterns.some(pattern=>pattern.test(inputValue));case"modify":return deletePatterns.some(pattern=>pattern.test(inputValue))||importPatterns.some(pattern=>pattern.test(inputValue));case"import":return deletePatterns.some(pattern=>pattern.test(inputValue))||modifyPatterns.some(pattern=>pattern.test(inputValue));case"generate":return deletePatterns.some(pattern=>pattern.test(inputValue))||modifyPatterns.some(pattern=>pattern.test(inputValue))||importPatterns.some(pattern=>pattern.test(inputValue));default:return false}}getModeDisplayName(mode){const modeNames={generate:"生成",import:"インポート",modify:"修正",delete:"削除"};return modeNames[mode]||mode}createFloatingChocolateIcon(){if(this.floatingChocolateIcon){this.floatingChocolateIcon.remove()}this.floatingChocolateIcon=document.createElement("div");this.floatingChocolateIcon.innerHTML="🍫";this.floatingChocolateIcon.title="ChocoDrop を開く (@キーでも開けます)";this.floatingChocolateIcon.style.cssText=`\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;this.floatingChocolateIcon.addEventListener("mouseover",()=>{this.floatingChocolateIcon.style.transform="scale(1.1) translateY(-2px)";this.floatingChocolateIcon.style.boxShadow="0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)";this.floatingChocolateIcon.style.opacity="1";this.floatingChocolateIcon.style.filter="none"});this.floatingChocolateIcon.addEventListener("mouseout",()=>{this.floatingChocolateIcon.style.transform="scale(1) translateY(0)";this.floatingChocolateIcon.style.boxShadow="0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)";this.floatingChocolateIcon.style.opacity="0.8";this.floatingChocolateIcon.style.filter="none"});this.floatingChocolateIcon.addEventListener("click",()=>{if(this.isVisible){this.hide()}else{this.show()}});this.floatingChocolateIcon.addEventListener("contextmenu",e=>{e.preventDefault();this.showFloatingIconContextMenu(e)});document.body.appendChild(this.floatingChocolateIcon)}showFloatingIconContextMenu(event){const existingMenu=document.querySelector(".floating-icon-context-menu");if(existingMenu){existingMenu.remove()}const menu=document.createElement("div");menu.className="floating-icon-context-menu";menu.style.cssText=`\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isDarkMode?"rgba(17, 24, 39, 0.85)":"rgba(255, 255, 255, 0.85)"};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isDarkMode?"rgba(129, 140, 248, 0.3)":"rgba(99, 102, 241, 0.2)"};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937"};\n    `;const openFormItem=document.createElement("div");openFormItem.innerHTML="📄 フォームを開く";openFormItem.style.cssText=`\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: #6366f1;\n      text-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);\n    `;openFormItem.addEventListener("mouseover",()=>{openFormItem.style.background=this.isDarkMode?"rgba(99, 102, 241, 0.15)":"rgba(99, 102, 241, 0.1)";openFormItem.style.textShadow="0 2px 6px rgba(99, 102, 241, 0.5)"});openFormItem.addEventListener("mouseout",()=>{openFormItem.style.background="transparent";openFormItem.style.textShadow="0 2px 4px rgba(99, 102, 241, 0.3)"});openFormItem.addEventListener("click",()=>{menu.remove();if(this.isVisible){this.hide()}else{this.show()}});const hideIconItem=document.createElement("div");hideIconItem.innerHTML="✕ アイコンを非表示";hideIconItem.style.cssText=`\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: #6366f1;\n      text-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);\n    `;hideIconItem.addEventListener("mouseover",()=>{hideIconItem.style.background=this.isDarkMode?"rgba(99, 102, 241, 0.15)":"rgba(99, 102, 241, 0.1)";hideIconItem.style.textShadow="0 2px 6px rgba(99, 102, 241, 0.5)"});hideIconItem.addEventListener("mouseout",()=>{hideIconItem.style.background="transparent";hideIconItem.style.textShadow="0 2px 4px rgba(99, 102, 241, 0.3)"});hideIconItem.addEventListener("click",()=>{menu.remove();this.hideFloatingIcon()});menu.appendChild(openFormItem);menu.appendChild(hideIconItem);document.body.appendChild(menu);const rect=menu.getBoundingClientRect();if(rect.right>window.innerWidth){menu.style.left=`${event.clientX-rect.width}px`}if(rect.bottom>window.innerHeight){menu.style.top=`${event.clientY-rect.height}px`}const closeMenu=e=>{if(!menu.contains(e.target)){menu.remove();document.removeEventListener("click",closeMenu)}};setTimeout(()=>{document.addEventListener("click",closeMenu)},10)}hideFloatingIcon(){if(this.floatingChocolateIcon){this.floatingChocolateIcon.style.display="none"}}showFloatingIcon(){if(this.floatingChocolateIcon){this.floatingChocolateIcon.style.display="flex"}}dispose(){if(this.fileInput&&this.fileInput.parentNode){this.fileInput.parentNode.removeChild(this.fileInput)}if(this.selectedFile&&this.selectedFile.url){URL.revokeObjectURL(this.selectedFile.url)}if(this.floatingChocolateIcon&&this.floatingChocolateIcon.parentNode){this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon)}if(this.container&&this.container.parentElement){this.container.parentElement.removeChild(this.container)}}showOverlayTextarea(){if(this.overlayTextarea)return;this.isExpanded=true;this.overlayTextarea=document.createElement("textarea");this.overlayTextarea.value=this.input.value;this.overlayTextarea.placeholder=this.input.placeholder;const containerRect=this.container.getBoundingClientRect();const overlayHeight=300;const padding=20;let top=containerRect.top+60;let left=containerRect.left;let width=containerRect.width;if(left+width>window.innerWidth-padding){left=window.innerWidth-width-padding}if(left<padding){left=padding;width=Math.min(width,window.innerWidth-2*padding)}if(top+overlayHeight>window.innerHeight-padding){top=Math.max(padding,window.innerHeight-overlayHeight-padding)}const overlayBackground=this.isWabiSabiMode?"linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))":this.isDarkMode?"linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))":"linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))";const overlayBorder=this.isWabiSabiMode?"1px solid rgba(93, 64, 55, 0.5)":this.isDarkMode?"1px solid rgba(99, 102, 241, 0.25)":"1px solid rgba(255, 255, 255, 0.5)";const overlayInnerShadow=this.isWabiSabiMode?"0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)":this.isDarkMode?"0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)":"0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)";const overlayTextColor=this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937";this.overlayTextarea.style.cssText=`\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${overlayBackground};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${overlayBorder};\n      box-shadow: ${overlayInnerShadow};\n      border-radius: 16px;\n      color: ${overlayTextColor};\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;document.body.appendChild(this.overlayTextarea);requestAnimationFrame(()=>{this.overlayTextarea.style.opacity="1"});this.overlayTextarea.focus();this.overlayTextarea.addEventListener("input",e=>{this.input.value=e.target.value});this.overlayTextarea.addEventListener("keydown",e=>{if(e.key==="Escape"){this.hideOverlayTextarea()}});this.overlayTextarea.addEventListener("blur",()=>{setTimeout(()=>this.hideOverlayTextarea(),100)})}hideOverlayTextarea(){if(!this.overlayTextarea)return;this.isExpanded=false;this.overlayTextarea.style.opacity="0";setTimeout(()=>{if(this.overlayTextarea){document.body.removeChild(this.overlayTextarea);this.overlayTextarea=null}},200)}hideOverlayTextarea(){if(!this.overlayTextarea)return;this.isExpanded=false;this.overlayTextarea.style.opacity="0";setTimeout(()=>{if(this.overlayTextarea){document.body.removeChild(this.overlayTextarea);this.overlayTextarea=null}},200)}}const IMAGE_SERVICE_STORAGE_KEY="chocodrop-service-image";const VIDEO_SERVICE_STORAGE_KEY="chocodrop-service-video";const KEYWORD_HIGHLIGHT_COLOR="#ff6ad5";class CommandUI{constructor(options={}){this.sceneManager=options.sceneManager||null;this.client=options.client||null;this.onControlsToggle=options.onControlsToggle||(()=>{});this.isVisible=false;this.container=null;this.input=null;this.output=null;this.currentMode="generate";this.activeConnections=new Map;this.currentTaskId=null;this.config={activationKey:options.activationKey||"@",position:options.position||"bottom-right",width:options.width||450,maxHeight:options.maxHeight||600,theme:options.theme||"dark",showExamples:options.showExamples!==false,autoScroll:options.autoScroll!==false,enableDebugLogging:options.enableDebugLogging===true,...options.config};this.availableImageServices=[];this.availableVideoServices=[];this.selectedImageService=null;this.selectedVideoService=null;this.highlightOverlay=null;this.inputDefaultStyles=null;this.imageServiceSelect=null;this.videoServiceSelect=null;this.serviceSelectorContainer=null;this.serviceSelectorStatus=null;this.serviceSelectorContent=null;this.serviceSelectorRetryButton=null;this.serviceSelectorSaveButton=null;this.serviceSelectorCancelButton=null;this.serviceModalOverlay=null;this.serviceModal=null;this.servicesLoading=false;this.isExpanded=false;this.overlayTextarea=null;this.pendingImageService=null;this.pendingVideoService=null;try{const storedImage=localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY);const storedVideo=localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY);console.log("🔍 Debug localStorage read:",{storedImage:storedImage,storedVideo:storedVideo,IMAGE_SERVICE_STORAGE_KEY:IMAGE_SERVICE_STORAGE_KEY,VIDEO_SERVICE_STORAGE_KEY:VIDEO_SERVICE_STORAGE_KEY});if(storedImage){this.selectedImageService=storedImage;console.log("✅ Set selectedImageService:",this.selectedImageService)}if(storedVideo){this.selectedVideoService=storedVideo;console.log("✅ Set selectedVideoService:",this.selectedVideoService)}console.log("🔍 Final values:",{selectedImageService:this.selectedImageService,selectedVideoService:this.selectedVideoService})}catch(error){console.warn("⚠️ Failed to load stored service selections:",error)}this.pendingImageService=this.selectedImageService;this.pendingVideoService=this.selectedVideoService;this.applyServiceSelectionToSceneManager();console.log("🔍 After applyServiceSelectionToSceneManager - UI:",{selectedImageService:this.selectedImageService,selectedVideoService:this.selectedVideoService});console.log("🔍 After applyServiceSelectionToSceneManager - SceneManager:",{selectedImageService:this.sceneManager?.selectedImageService,selectedVideoService:this.sceneManager?.selectedVideoService});this.currentTheme=localStorage.getItem("live-command-theme")||"light";this.isDarkMode=this.currentTheme==="dark";this.isWabiSabiMode=this.currentTheme==="wabisabi";this.commandHistory=[];this.currentHistoryIndex=-1;this.maxHistorySize=50;this.initUI();this.bindEvents();if(!this.client&&this.sceneManager&&this.sceneManager.client){this.client=this.sceneManager.client}this.createServiceModal();this.createFloatingChocolateIcon();document.addEventListener("DOMContentLoaded",()=>{this.refreshStyles()});this.logDebug("🎮 CommandUI initialized");if(!this.selectedImageService||!this.selectedVideoService){this.openServiceModal(true)}}logDebug(...args){if(!this.config.enableDebugLogging){return}console.log(...args)}initUI(){this.container=document.createElement("div");this.container.id="live-command-ui";this.container.style.cssText=this.getContainerStyles();const brandIndicator=document.createElement("div");brandIndicator.className="progressive-brand-indicator";brandIndicator.style.cssText=`\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode?"#8BC34A, #689F38":"#6366f1, #8b5cf6"});\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;const brandText=document.createElement("div");brandText.className="progressive-brand-text";brandText.style.cssText=`\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode?"rgba(129, 140, 248, 0.3)":"rgba(99, 102, 241, 0.25)"};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isDarkMode?"#ffffff":"#1f2937"};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;brandText.innerHTML='<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">🍫</span> <span style="color: #6366f1;">ChocoDrop</span>';brandIndicator.addEventListener("mouseenter",()=>{brandText.style.opacity="1";brandText.style.transform="translateY(0) scale(1)";brandIndicator.style.transform="scale(1.2)";brandIndicator.style.opacity="1"});brandIndicator.addEventListener("mouseleave",()=>{brandText.style.opacity="0";brandText.style.transform="translateY(5px) scale(0.9)";brandIndicator.style.transform="scale(1)";brandIndicator.style.opacity="0.7"});brandIndicator.appendChild(brandText);this.container.appendChild(brandIndicator);this.output=document.createElement("div");this.outputDiv=this.output;this.output.id="command-output";this.output.className="command-output";this.output.style.cssText=this.getOutputStyles();this.floatingContainer=document.createElement("div");this.floatingContainer.id="floating-cards-container";this.floatingContainer.style.cssText=`\n      position: fixed;\n      bottom: var(--floating-bottom, 120px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-start;\n    `;this.taskCards=new Map;this.inputWrapper=document.createElement("div");this.inputWrapper.style.cssText=`\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;this.input=document.createElement("textarea");this.input.rows=1;this.input.id="command-input";this.input.placeholder="「右上にドラゴンを」「美しい桜の森を中央に」など... ✨";this.input.style.cssText=this.getInputStyles();this.expandButton=document.createElement("div");this.expandButton.innerHTML="⤢";this.expandButton.title="テキスト全体を表示";this.expandButton.style.cssText=`\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)"};\n      border: 1px solid ${this.isDarkMode?"rgba(255, 255, 255, 0.2)":"rgba(0, 0, 0, 0.2)"};\n      border-radius: 6px;\n      color: ${this.isDarkMode?"#ffffff":"#1f2937"};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;this.expandButton.addEventListener("mouseenter",()=>{this.expandButton.style.background=this.isDarkMode?"rgba(255, 255, 255, 0.2)":"rgba(0, 0, 0, 0.2)";this.expandButton.style.transform="scale(1.1)"});this.expandButton.addEventListener("mouseleave",()=>{this.expandButton.style.background=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)";this.expandButton.style.transform="scale(1)"});this.expandButton.addEventListener("click",()=>{if(this.isExpanded){this.hideOverlayTextarea()}else{this.showOverlayTextarea()}});this.inputWrapper.appendChild(this.input);this.inputWrapper.appendChild(this.expandButton);const modeSelector=this.createRadioModeSelector();const actionContainer=this.createMinimalActions();const closeButton=document.createElement("div");closeButton.innerHTML="×";closeButton.style.cssText=`\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)"};\n      color: ${this.isDarkMode?"#ffffff":"#1f2937"};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;closeButton.addEventListener("mouseover",()=>{closeButton.style.background=this.isDarkMode?"rgba(255, 255, 255, 0.2)":"rgba(0, 0, 0, 0.2)";closeButton.style.transform="scale(1.1)"});closeButton.addEventListener("mouseout",()=>{closeButton.style.background=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)";closeButton.style.color=this.isDarkMode?"#ffffff":"#1f2937";closeButton.style.transform="scale(1)"});closeButton.addEventListener("click",()=>{this.hide()});this.container.appendChild(closeButton);this.container.appendChild(modeSelector);this.container.appendChild(this.inputWrapper);this.container.appendChild(actionContainer);document.body.appendChild(this.floatingContainer);document.body.appendChild(this.container);this.applyTheme();this.isComposing=false;this.hasCompositionJustEnded=false;this.input.addEventListener("input",()=>{if(this.isComposing){return}this.autoResizeTextarea();this.applyKeywordHighlighting();this.detectCommandType()});this.input.addEventListener("compositionstart",()=>{this.isComposing=true});this.input.addEventListener("compositionend",()=>{this.isComposing=false;const isSafari=/Safari/.test(navigator.userAgent)&&/Version/.test(navigator.userAgent);if(isSafari){this.hasCompositionJustEnded=true}setTimeout(()=>{this.autoResizeTextarea();this.detectCommandType()},10)});const isSafari=/Safari/.test(navigator.userAgent)&&/Version/.test(navigator.userAgent);this.input.addEventListener("keydown",e=>{if(e.key==="Enter"){if(isSafari&&this.hasCompositionJustEnded){this.hasCompositionJustEnded=false;return}if(!isSafari&&(e.isComposing||this.isComposing)){return}e.preventDefault();this.executeCommand()}});if(this.config.showExamples);}createMinimalActions(){const container=document.createElement("div");container.style.cssText=`\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;const leftSection=document.createElement("div");leftSection.style.cssText="display: flex; gap: 8px; align-items: center;";const clearBtn=document.createElement("button");clearBtn.innerHTML='<span style="filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);">🧹</span> Clear All';clearBtn.style.cssText=this.getActionButtonStyles("secondary");clearBtn.addEventListener("click",()=>this.clearAllWithConfirmation());const historyBtn=document.createElement("button");historyBtn.innerHTML='<span style="filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);">📚</span> History';historyBtn.style.cssText=this.getActionButtonStyles("secondary");historyBtn.style.opacity="0.5";historyBtn.disabled=true;historyBtn.title="履歴機能（開発中）";leftSection.appendChild(clearBtn);leftSection.appendChild(historyBtn);const rightSection=document.createElement("div");rightSection.style.cssText="display: flex; gap: 6px; align-items: center;";const themeToggle=document.createElement("button");const getThemeIcon=()=>{const themeConfig={light:"🌙",dark:"🍵",wabisabi:"☀️"};return themeConfig[this.currentTheme]||"🌙"};const getThemeTitle=()=>{const titleConfig={light:"ダークモードに切り替え",dark:"侘び寂びモードに切り替え",wabisabi:"ライトモードに切り替え"};return titleConfig[this.currentTheme]||"ダークモードに切り替え"};const getThemeIconWithFilter=()=>{const icon=getThemeIcon();if(icon==="☀️"){return`<span style="filter: saturate(1.2) brightness(1.1);">${icon}</span>`}else if(icon==="🍵"){return`<span style="filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);">${icon}</span>`}else{return`<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">${icon}</span>`}};themeToggle.innerHTML=getThemeIconWithFilter();themeToggle.style.cssText=this.getActionButtonStyles("icon");themeToggle.title=getThemeTitle();themeToggle.addEventListener("click",()=>this.toggleTheme());const settingsButton=document.createElement("button");settingsButton.innerHTML='<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">⚙️</span>';settingsButton.style.cssText=this.getActionButtonStyles("icon");settingsButton.title="サービス設定を開く";settingsButton.addEventListener("click",()=>this.openServiceModal());rightSection.appendChild(themeToggle);rightSection.appendChild(settingsButton);container.appendChild(leftSection);container.appendChild(rightSection);this.clearBtn=clearBtn;this.historyBtn=historyBtn;this.themeToggle=themeToggle;this.settingsButton=settingsButton;return container}createServiceSelectorSection(){this.serviceSelectorContainer=document.createElement("div");this.serviceSelectorContainer.id="service-selector";this.serviceSelectorContainer.style.cssText=`\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;this.serviceSelectorStatus=document.createElement("div");this.serviceSelectorStatus.textContent="サービス情報を読み込んでいます...";this.serviceSelectorStatus.style.fontSize="12px";this.serviceSelectorStatus.style.opacity="0.8";this.serviceSelectorStatus.style.marginBottom="8px";this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);this.serviceSelectorContent=document.createElement("div");this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);this.updateServiceSelectorTheme();return this.serviceSelectorContainer}createServiceModal(){if(this.serviceModalOverlay){this.serviceModalOverlay.remove();this.serviceModalOverlay=null;this.serviceModal=null}this.serviceModalOverlay=document.createElement("div");this.serviceModalOverlay.id="chocodrop-service-modal-overlay";this.serviceModalOverlay.style.cssText=`\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;this.serviceModalOverlay.addEventListener("click",event=>{if(event.target===this.serviceModalOverlay){this.closeServiceModal()}});this.serviceModal=document.createElement("div");this.serviceModal.className="chocodrop-service-modal";this.serviceModal.style.cssText=`\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;const title=document.createElement("h2");title.textContent="サービス設定";title.style.cssText=`\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;const subtitle=document.createElement("p");subtitle.textContent="利用するサービスを選択してください。";subtitle.style.cssText=`\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;const selector=this.createServiceSelectorSection();const actionRow=document.createElement("div");actionRow.style.cssText=`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;this.serviceSelectorRetryButton=document.createElement("button");this.serviceSelectorRetryButton.textContent="再読み込み";this.serviceSelectorRetryButton.style.cssText=`\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;this.serviceSelectorRetryButton.addEventListener("click",()=>this.initializeServiceSelector(true));const actionButtons=document.createElement("div");actionButtons.style.cssText="display: flex; gap: 8px;";this.serviceSelectorCancelButton=document.createElement("button");this.serviceSelectorCancelButton.textContent="Cancel";this.serviceSelectorCancelButton.style.cssText=`\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;this.serviceSelectorCancelButton.addEventListener("click",()=>this.closeServiceModal());this.serviceSelectorSaveButton=document.createElement("button");this.serviceSelectorSaveButton.textContent="Save";this.serviceSelectorSaveButton.style.cssText=`\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode?"#8BC34A, #689F38":"#6366f1, #8b5cf6"});\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;this.serviceSelectorSaveButton.addEventListener("click",()=>this.handleServiceSave());actionButtons.appendChild(this.serviceSelectorCancelButton);actionButtons.appendChild(this.serviceSelectorSaveButton);actionRow.appendChild(this.serviceSelectorRetryButton);actionRow.appendChild(actionButtons);this.serviceModal.appendChild(title);this.serviceModal.appendChild(subtitle);this.serviceModal.appendChild(selector);this.serviceModal.appendChild(actionRow);this.serviceModalOverlay.appendChild(this.serviceModal);document.body.appendChild(this.serviceModalOverlay);this.updateServiceSelectorTheme();this.toggleServiceRetryButton(false)}openServiceModal(forceFetch=false){if(!this.serviceModalOverlay){this.createServiceModal()}this.serviceModalOverlay.style.display="flex";requestAnimationFrame(()=>{if(this.serviceModalOverlay){this.serviceModalOverlay.style.opacity="1"}});this.resetPendingSelections();this.initializeServiceSelector(forceFetch)}closeServiceModal(){if(!this.serviceModalOverlay){return}this.serviceModalOverlay.style.opacity="0";setTimeout(()=>{if(this.serviceModalOverlay){this.serviceModalOverlay.style.display="none"}this.resetPendingSelections()},150)}async initializeServiceSelector(force=false){if(this.servicesLoading&&!force){return}if(!this.client||typeof this.client.getAvailableServices!=="function"){this.setServiceSelectorStatus("サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。","error");this.toggleServiceRetryButton(true);this.setServiceButtonsEnabled(false);return}this.servicesLoading=true;this.setServiceSelectorStatus("サービス情報を読み込んでいます...","info");this.toggleServiceRetryButton(false);this.setServiceButtonsEnabled(false);try{if(typeof this.client.ensureInitialized==="function"){await this.client.ensureInitialized()}const response=await this.client.getAvailableServices();if(!response||response.success===false||!response.metadata){throw new Error(response?.error||"サービス情報が取得できませんでした")}this.availableImageServices=Array.isArray(response.metadata?.image)?response.metadata.image:[];this.availableVideoServices=Array.isArray(response.metadata?.video)?response.metadata.video:[];this.selectedImageService=this.resolveServiceSelection("image",this.availableImageServices,response.default?.image);this.selectedVideoService=this.resolveServiceSelection("video",this.availableVideoServices,response.default?.video);this.pendingImageService=this.selectedImageService;this.pendingVideoService=this.selectedVideoService;this.populateServiceSelector();this.applyServiceSelectionToSceneManager();this.setServiceButtonsEnabled(true)}catch(error){console.error("❌ Failed to initialize service selector:",error);this.setServiceSelectorStatus("サービス情報を取得できませんでした。サーバーが起動しているか確認のうえ、再読み込みしてください。","error");this.toggleServiceRetryButton(true);this.setServiceButtonsEnabled(false)}finally{this.servicesLoading=false}}setServiceSelectorStatus(message,type="info"){if(!this.serviceSelectorStatus){return}this.serviceSelectorStatus.textContent=message;this.serviceSelectorStatus.dataset.statusType=type;this.serviceSelectorStatus.classList.toggle("service-selector-helper",type!=="error");this.updateServiceSelectorTheme()}toggleServiceRetryButton(visible){if(!this.serviceSelectorRetryButton){return}this.serviceSelectorRetryButton.style.display=visible?"inline-flex":"none";this.updateServiceSelectorTheme()}resolveServiceSelection(type,services,defaultId){if(!services||services.length===0){return null}const storageKey=type==="image"?IMAGE_SERVICE_STORAGE_KEY:VIDEO_SERVICE_STORAGE_KEY;let storedId=null;try{storedId=localStorage.getItem(storageKey)}catch(error){console.warn("⚠️ Failed to access localStorage:",error)}const isStoredValid=storedId&&services.some(service=>service.id===storedId);let resolvedId=isStoredValid?storedId:null;if(!resolvedId&&defaultId&&services.some(service=>service.id===defaultId)){resolvedId=defaultId}if(!resolvedId){resolvedId=services[0]?.id||null}try{if(resolvedId){localStorage.setItem(storageKey,resolvedId)}else{localStorage.removeItem(storageKey)}}catch(error){console.warn("⚠️ Failed to persist service selection:",error)}return resolvedId}populateServiceSelector(){if(!this.serviceSelectorContent){return}this.serviceSelectorContent.innerHTML="";const hasImage=this.availableImageServices.length>0;const hasVideo=this.availableVideoServices.length>0;if(!hasImage&&!hasVideo){this.setServiceSelectorStatus("利用可能なサービスが見つかりませんでした。","error");return}this.setServiceSelectorStatus("利用するサービスを選択してください。","info");if(hasImage){const imageRow=this.buildServiceRow("image","画像 (T2I)",this.availableImageServices,this.pendingImageService||this.selectedImageService);this.serviceSelectorContent.appendChild(imageRow)}if(hasVideo){const videoRow=this.buildServiceRow("video","動画 (T2V)",this.availableVideoServices,this.pendingVideoService||this.selectedVideoService);this.serviceSelectorContent.appendChild(videoRow)}this.updateServiceSelectorTheme()}buildServiceRow(type,labelText,services,selectedId){const row=document.createElement("div");row.className=`service-row service-row-${type}`;row.style.cssText=`\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;const label=document.createElement("label");label.textContent=labelText;label.style.fontSize="13px";label.style.fontWeight="600";row.appendChild(label);const select=document.createElement("select");select.dataset.serviceType=type;select.style.fontFamily="inherit";select.style.width="100%";services.forEach(service=>{const option=document.createElement("option");option.value=service.id;option.textContent=service.name||service.id;if(service.description){option.title=service.description}select.appendChild(option)});if(selectedId&&services.some(service=>service.id===selectedId)){select.value=selectedId}select.addEventListener("change",event=>{this.onServiceSelectionChange(type,event.target.value)});row.appendChild(select);const description=document.createElement("div");description.className="service-description";description.textContent=this.findServiceInfo(type,select.value)?.description||"";description.style.fontSize="11px";description.style.opacity="0.75";description.style.lineHeight="1.4";description.style.minHeight="14px";row.appendChild(description);select.addEventListener("change",()=>{description.textContent=this.findServiceInfo(type,select.value)?.description||""});if(type==="image"){this.imageServiceSelect=select}else{this.videoServiceSelect=select}return row}onServiceSelectionChange(type,serviceId){if(type==="image"){this.pendingImageService=serviceId}else{this.pendingVideoService=serviceId}const info=this.findServiceInfo(type,serviceId);const description=type==="image"?this.imageServiceSelect?.parentElement?.querySelector(".service-description"):this.videoServiceSelect?.parentElement?.querySelector(".service-description");if(description){description.textContent=info?.description||""}}handleServiceSave(){const newImageId=this.pendingImageService||this.selectedImageService;const newVideoId=this.pendingVideoService||this.selectedVideoService;if(newImageId){try{localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY,newImageId)}catch(error){console.warn("⚠️ Failed to persist image service selection:",error)}this.selectedImageService=newImageId;this.sceneManager?.setImageService(newImageId)}if(newVideoId){try{localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY,newVideoId)}catch(error){console.warn("⚠️ Failed to persist video service selection:",error)}this.selectedVideoService=newVideoId;this.sceneManager?.setVideoService(newVideoId)}const imageInfo=this.findServiceInfo("image",newImageId);const videoInfo=this.findServiceInfo("video",newVideoId);if(imageInfo){this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`,"system")}if(videoInfo){this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`,"system")}this.closeServiceModal()}setServiceButtonsEnabled(enabled){if(this.serviceSelectorSaveButton){this.serviceSelectorSaveButton.disabled=!enabled;this.serviceSelectorSaveButton.style.opacity=enabled?"1":"0.6";this.serviceSelectorSaveButton.style.cursor=enabled?"pointer":"not-allowed"}}resetPendingSelections(){this.pendingImageService=this.selectedImageService;this.pendingVideoService=this.selectedVideoService;if(this.imageServiceSelect&&this.selectedImageService){this.imageServiceSelect.value=this.selectedImageService}if(this.videoServiceSelect&&this.selectedVideoService){this.videoServiceSelect.value=this.selectedVideoService}if(this.serviceSelectorContent&&this.serviceSelectorContent.childElementCount>0){this.populateServiceSelector()}}findServiceInfo(type,serviceId){const list=type==="image"?this.availableImageServices:this.availableVideoServices;return list.find(service=>service.id===serviceId)||null}applyServiceSelectionToSceneManager(){if(!this.sceneManager){return}this.sceneManager.setImageService(this.selectedImageService);this.sceneManager.setVideoService(this.selectedVideoService)}updateServiceSelectorTheme(){if(this.serviceModalOverlay){this.serviceModalOverlay.style.background=this.isDarkMode?"rgba(8, 11, 26, 0.55)":"rgba(229, 231, 255, 0.45)"}if(this.serviceModal){this.serviceModal.style.background=this.isDarkMode?"rgba(17, 24, 39, 0.15)":"rgba(255, 255, 255, 0.15)";this.serviceModal.style.border=this.isDarkMode?"1px solid rgba(129, 140, 248, 0.4)":"1px solid rgba(99, 102, 241, 0.25)";this.serviceModal.style.color=this.isDarkMode?"#e5e7ff":"#1f2937"}if(this.serviceSelectorStatus){const type=this.serviceSelectorStatus.dataset?.statusType;const statusColor=type==="error"?this.isDarkMode?"#fca5a5":"#b91c1c":this.isDarkMode?"rgba(209, 213, 219, 0.8)":"rgba(55, 65, 81, 0.75)";this.serviceSelectorStatus.style.color=statusColor}if(this.serviceSelectorContainer){const labels=this.serviceSelectorContainer.querySelectorAll("label");labels.forEach(label=>{label.style.color=this.isWabiSabiMode?"#5D4037":this.isDarkMode?"rgba(255, 255, 255, 0.9)":"rgba(31, 41, 55, 0.9)"});const selects=this.serviceSelectorContainer.querySelectorAll("select");selects.forEach(select=>{select.style.background=this.isWabiSabiMode?"rgba(161, 136, 127, 0.15)":this.isDarkMode?"rgba(99, 102, 241, 0.18)":"rgba(99, 102, 241, 0.12)";select.style.border=this.isWabiSabiMode?"1px solid rgba(161, 136, 127, 0.4)":this.isDarkMode?"1px solid rgba(129, 140, 248, 0.45)":"1px solid rgba(99, 102, 241, 0.45)";select.style.color=this.isWabiSabiMode?"#5D4037":this.isDarkMode?"#ffffff":"#1f2937";select.style.padding="10px 12px";select.style.borderRadius="10px";select.style.fontSize="13px";select.style.outline="none";select.style.boxShadow=this.isWabiSabiMode?"0 12px 24px rgba(93, 64, 55, 0.25)":this.isDarkMode?"0 12px 28px rgba(15, 23, 42, 0.5)":"0 12px 24px rgba(99, 102, 241, 0.2)"});const descriptions=this.serviceSelectorContainer.querySelectorAll(".service-description");descriptions.forEach(desc=>{desc.style.color=this.isWabiSabiMode?"rgba(93, 64, 55, 0.7)":this.isDarkMode?"rgba(209, 213, 219, 0.8)":"rgba(55, 65, 81, 0.7)"})}if(this.serviceSelectorRetryButton){this.serviceSelectorRetryButton.style.background=this.isWabiSabiMode?"rgba(161, 136, 127, 0.25)":this.isDarkMode?"rgba(129, 140, 248, 0.35)":"rgba(99, 102, 241, 0.15)";this.serviceSelectorRetryButton.style.border=this.isWabiSabiMode?"1px solid rgba(161, 136, 127, 0.5)":this.isDarkMode?"1px solid rgba(129, 140, 248, 0.5)":"1px solid rgba(99, 102, 241, 0.45)";this.serviceSelectorRetryButton.style.color=this.isWabiSabiMode?"#5D4037":this.isDarkMode?"#f9fafb":"#1e1b4b";this.serviceSelectorRetryButton.style.boxShadow=this.isWabiSabiMode?"0 0 8px rgba(161, 136, 127, 0.4)":this.isDarkMode?"0 0 8px rgba(129, 140, 248, 0.45)":"0 0 8px rgba(99, 102, 241, 0.35)"}if(this.serviceSelectorCancelButton){this.serviceSelectorCancelButton.style.border=this.isWabiSabiMode?"1px solid rgba(161, 136, 127, 0.4)":this.isDarkMode?"1px solid rgba(209, 213, 219, 0.3)":"1px solid rgba(148, 163, 184, 0.5)";this.serviceSelectorCancelButton.style.color=this.isWabiSabiMode?"rgba(93, 64, 55, 0.85)":this.isDarkMode?"rgba(226, 232, 240, 0.85)":"rgba(30, 41, 59, 0.85)"}if(this.serviceSelectorSaveButton){this.serviceSelectorSaveButton.style.background=this.isWabiSabiMode?"linear-gradient(135deg, #6D4C41, #5D4037)":this.isDarkMode?"linear-gradient(135deg, "+(this.isWabiSabiMode?"#8BC34A, #689F38":"#6366f1, #8b5cf6")+")":"linear-gradient(135deg, #818cf8, #a855f7)";this.serviceSelectorSaveButton.style.boxShadow=this.isWabiSabiMode?"0 16px 28px rgba(93, 64, 55, 0.35)":this.isDarkMode?"0 16px 28px rgba(99, 102, 241, 0.4)":"0 16px 28px rgba(129, 140, 248, 0.35)"}}createRadioModeSelector(){const container=document.createElement("div");container.className="radio-mode-selector";container.style.cssText=`\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode?"linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))":this.isDarkMode?"linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))":"linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))"};\n      border: 1px solid ${this.isWabiSabiMode?"rgba(141, 110, 99, 0.4)":this.isDarkMode?"rgba(99, 102, 241, 0.15)":"rgba(255, 255, 255, 0.25)"};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;const modes=[{value:"generate",label:"Generate",icon:"✨"},{value:"import",label:"Import",icon:"📥"},{value:"modify",label:"Modify",icon:"🔧"},{value:"delete",label:"Delete",icon:"🗑️"}];this.radioModeButtons={};modes.forEach(mode=>{const button=document.createElement("div");button.className=`mode-option ${mode.value}`;button.style.cssText=`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"rgba(255, 255, 255, 0.7)":"rgba(55, 65, 81, 0.8)"};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n      `;const icon=document.createElement("div");icon.textContent=mode.icon;icon.style.cssText=`\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${this.isDarkMode?"hue-rotate(220deg) saturate(0.8) brightness(1.2)":"hue-rotate(240deg) saturate(0.7) brightness(0.9)"};\n        transition: filter 0.2s ease;\n      `;const label=document.createElement("span");label.textContent=mode.label;const autoBadge=document.createElement("div");autoBadge.className="auto-badge";autoBadge.textContent="AUTO";autoBadge.style.cssText=`\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;button.appendChild(icon);button.appendChild(label);button.appendChild(autoBadge);button.addEventListener("click",()=>{if(mode.value==="import"){this.triggerFileSelection()}else{this.selectMode(mode.value,true)}});this.radioModeButtons[mode.value]={button:button,autoBadge:autoBadge};container.appendChild(button)});this.radioModeContainer=container;this.selectMode("generate",false);return container}selectMode(mode,isManual=false,detectedKeyword=null){this.currentMode=mode;Object.keys(this.radioModeButtons).forEach(key=>{const{button:button,autoBadge:autoBadge}=this.radioModeButtons[key];button.style.color=this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"rgba(255, 255, 255, 0.7)":"rgba(55, 65, 81, 0.8)";button.style.background="transparent";button.style.border="1px solid transparent";button.style.transform="scale(1)";button.style.boxShadow="none";autoBadge.style.display="none";autoBadge.style.opacity="0"});const{button:button,autoBadge:autoBadge}=this.radioModeButtons[mode];const selectedGlass=this.isWabiSabiMode?{background:"linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))",border:"1px solid rgba(109, 76, 65, 0.4)",boxShadow:"0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)",color:"#F5F5F5"}:this.isDarkMode?{background:"linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))",border:"1px solid rgba(99, 102, 241, 0.4)",boxShadow:"0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)",color:"#a5b4fc"}:{background:"linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))",border:"1px solid rgba(99, 102, 241, 0.3)",boxShadow:"0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)",color:this.isWabiSabiMode?"#8BC34A":"#6366f1"};button.style.color=selectedGlass.color;button.style.background=selectedGlass.background;button.style.border=selectedGlass.border;button.style.boxShadow=selectedGlass.boxShadow;button.style.transform="scale(1.02)";if(!isManual&&detectedKeyword){autoBadge.style.display="inline-block";setTimeout(()=>{autoBadge.style.opacity="1";autoBadge.style.transform="scale(1)"},100);setTimeout(()=>{autoBadge.style.opacity="0";autoBadge.style.transform="scale(0.8)";setTimeout(()=>{autoBadge.style.display="none"},200)},3e3)}if(!isManual){this.addPulseEffect(button);this.addContainerGlow(mode)}this.input.placeholder=this.getPlaceholderForMode(mode);if(isManual){this.clearInputOnModeSwitch(mode)}if(mode==="import"||this.selectedFile){this.showImportInterface()}else{this.hideImportInterface()}if(mode==="delete"&&isManual){this.handleDeleteModeSelection()}if(mode==="modify"&&isManual){this.handleModifyModeSelection()}}addPulseEffect(element){element.style.animation="none";setTimeout(()=>{element.style.animation="smartModePulse 0.6s ease-out"},10);setTimeout(()=>{element.style.animation=""},610);this.ensurePulseAnimation()}ensurePulseAnimation(){if(document.getElementById("smart-mode-pulse-animation"))return;const style=document.createElement("style");style.id="smart-mode-pulse-animation";style.textContent=`\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;document.head.appendChild(style)}addContainerGlow(mode){const container=this.radioModeContainer;if(!container)return;const glowColors=this.isWabiSabiMode?{generate:"rgba(139, 195, 74, 0.4)",modify:"rgba(139, 195, 74, 0.4)",delete:"rgba(139, 195, 74, 0.4)"}:{generate:"rgba(79, 70, 229, 0.4)",modify:"rgba(236, 72, 153, 0.4)",delete:"rgba(107, 114, 128, 0.3)"};container.style.boxShadow=`0 0 20px ${glowColors[mode]}, 0 0 40px ${glowColors[mode]}`;container.style.borderColor=glowColors[mode].replace("0.4","0.6").replace("0.3","0.5");setTimeout(()=>{container.style.boxShadow="";container.style.borderColor=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(255, 255, 255, 0.15)"},1e3)}getActionButtonStyles(variant="secondary"){const baseStyles=`\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;if(variant==="secondary"){return baseStyles+`\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode?"linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))":this.isDarkMode?"linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))":"linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))"};\n        border: 1px solid ${this.isWabiSabiMode?"rgba(93, 64, 55, 0.6)":this.isDarkMode?"rgba(156, 163, 175, 0.2)":"rgba(255, 255, 255, 0.3)"};\n        color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#d1d5db":"#374151"};\n        text-align: center;\n        white-space: nowrap;\n      `}else if(variant==="icon"){return baseStyles+`\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode?"linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))":"linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))"};\n        border: 1px solid ${this.isDarkMode?"rgba(99, 102, 241, 0.2)":"rgba(255, 255, 255, 0.4)"};\n        color: ${this.isDarkMode?"#a5b4fc":"#6366f1"};\n      `}}getDestructiveButtonStyles(){return`\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode?"rgba(220, 38, 127, 0.4)":"rgba(190, 24, 93, 0.35)"};\n      border-radius: 6px;\n      background: ${this.isDarkMode?"rgba(220, 38, 127, 0.3)":"rgba(190, 24, 93, 0.25)"};\n      color: ${this.isDarkMode?"#fca5a5":"#dc2626"};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `}getCommandTypeIndicatorStyles(){return`\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode?"rgba(255, 255, 255, 0.6)":"rgba(0, 0, 0, 0.6)"};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `}autoResizeTextarea(){this.input.style.height="auto";const lineHeight=22;const padding=28;const maxLines=2;const maxHeight=lineHeight*maxLines+padding;const newHeight=Math.min(this.input.scrollHeight,maxHeight);this.input.style.height=newHeight+"px";if(this.input.scrollHeight>maxHeight){this.input.style.overflowY="auto";if(this.expandButton){this.expandButton.style.display="flex"}}else{this.input.style.overflowY="hidden";if(this.expandButton){this.expandButton.style.display="none"}}}detectCommandType(){const input=this.input.value.trim();if(!input){this.selectMode("generate",false);return}const commandType=this.analyzeCommandType(input);if(this.currentMode==="delete"||this.currentMode==="modify"){return}this.selectMode(commandType.type,false,commandType.detectedKeyword)}analyzeCommandType(text){this.logDebug(`🔍 Analyzing command: "${text}"`);const mediaInfo=this.detectMediaType(text);const deletePatterns=[{pattern:/削除/,keyword:"削除"},{pattern:/消去/,keyword:"消去"},{pattern:/消して/,keyword:"消して"},{pattern:/消す/,keyword:"消す"},{pattern:/取り除/,keyword:"取り除"},{pattern:/除去/,keyword:"除去"},{pattern:/削除して/,keyword:"削除して"},{pattern:/delete/i,keyword:"delete"},{pattern:/remove/i,keyword:"remove"},{pattern:/clear/i,keyword:"clear"},{pattern:/erase/i,keyword:"erase"}];const modifyPatterns=[{pattern:/移動/,keyword:"移動"},{pattern:/動かして/,keyword:"動かして"},{pattern:/変更/,keyword:"変更"},{pattern:/変えて/,keyword:"変えて"},{pattern:/修正/,keyword:"修正"},{pattern:/調整/,keyword:"調整"},{pattern:/回転/,keyword:"回転"},{pattern:/反転/,keyword:"反転"},{pattern:/ミラー/,keyword:"ミラー"},{pattern:/傾け/,keyword:"傾け"},{pattern:/向きを変え/,keyword:"向きを変え"},{pattern:/.*を.*色/,keyword:"色変更"},{pattern:/.*を.*サイズ/,keyword:"サイズ変更"},{pattern:/を.*に.*して/,keyword:"変更"},{pattern:/move/i,keyword:"move"},{pattern:/change/i,keyword:"change"},{pattern:/modify/i,keyword:"modify"},{pattern:/edit/i,keyword:"edit"}];const generatePatterns=[{pattern:/作って/,keyword:"作って"},{pattern:/生成/,keyword:"生成"},{pattern:/作成/,keyword:"作成"},{pattern:/描いて/,keyword:"描いて"},{pattern:/書いて/,keyword:"書いて"},{pattern:/create/i,keyword:"create"},{pattern:/generate/i,keyword:"generate"},{pattern:/make/i,keyword:"make"},{pattern:/draw/i,keyword:"draw"}];for(const{pattern:pattern,keyword:keyword}of deletePatterns){if(pattern.test(text)){this.logDebug(`✅ Delete pattern matched: ${keyword}`);return{type:"delete",confidence:.9,reason:"削除キーワードを検出",mediaType:mediaInfo.type,requiresConfirmation:true,detectedKeyword:keyword}}}for(const{pattern:pattern,keyword:keyword}of modifyPatterns){if(pattern.test(text)){this.logDebug(`✅ Modify pattern matched: ${keyword}`);return{type:"modify",confidence:.8,reason:"変更キーワードを検出",mediaType:mediaInfo.type,requiresConfirmation:false,detectedKeyword:keyword}}}for(const{pattern:pattern,keyword:keyword}of generatePatterns){if(pattern.test(text)){return{type:"generate",confidence:mediaInfo.confidence,reason:mediaInfo.reason,mediaType:mediaInfo.type,requiresConfirmation:false,detectedKeyword:keyword}}}this.logDebug(`ℹ️ No specific pattern matched, defaulting to generate mode`);return{type:"generate",confidence:mediaInfo.confidence,reason:mediaInfo.reason,mediaType:mediaInfo.type,requiresConfirmation:false,detectedKeyword:null}}getAllCommandKeywords(){const deletePatterns=[{pattern:/削除/,keyword:"削除",type:"delete"},{pattern:/消去/,keyword:"消去",type:"delete"},{pattern:/消して/,keyword:"消して",type:"delete"},{pattern:/消す/,keyword:"消す",type:"delete"},{pattern:/取り除/,keyword:"取り除",type:"delete"},{pattern:/除去/,keyword:"除去",type:"delete"},{pattern:/削除して/,keyword:"削除して",type:"delete"},{pattern:/delete/i,keyword:"delete",type:"delete"},{pattern:/remove/i,keyword:"remove",type:"delete"},{pattern:/clear/i,keyword:"clear",type:"delete"},{pattern:/erase/i,keyword:"erase",type:"delete"}];const modifyPatterns=[{pattern:/移動/,keyword:"移動",type:"modify"},{pattern:/動かして/,keyword:"動かして",type:"modify"},{pattern:/変更/,keyword:"変更",type:"modify"},{pattern:/変えて/,keyword:"変えて",type:"modify"},{pattern:/修正/,keyword:"修正",type:"modify"},{pattern:/調整/,keyword:"調整",type:"modify"},{pattern:/move/i,keyword:"move",type:"modify"},{pattern:/change/i,keyword:"change",type:"modify"},{pattern:/modify/i,keyword:"modify",type:"modify"},{pattern:/edit/i,keyword:"edit",type:"modify"}];const generatePatterns=[{pattern:/作って/,keyword:"作って",type:"generate"},{pattern:/生成/,keyword:"生成",type:"generate"},{pattern:/作成/,keyword:"作成",type:"generate"},{pattern:/描いて/,keyword:"描いて",type:"generate"},{pattern:/書いて/,keyword:"書いて",type:"generate"},{pattern:/create/i,keyword:"create",type:"generate"},{pattern:/generate/i,keyword:"generate",type:"generate"},{pattern:/make/i,keyword:"make",type:"generate"},{pattern:/draw/i,keyword:"draw",type:"generate"}];return[...deletePatterns,...modifyPatterns,...generatePatterns]}applyKeywordHighlighting(){return}createHighlightOverlay(text,matches){this.clearKeywordHighlighting();this.highlightOverlay=document.createElement("div");this.highlightOverlay.className="keyword-highlight-overlay";const computedStyle=window.getComputedStyle(this.input);if(!this.inputDefaultStyles){this.captureInputDefaultStyles()}this.highlightOverlay.style.cssText=`\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      overflow: hidden;\n      font-family: ${computedStyle.fontFamily};\n      font-size: ${computedStyle.fontSize};\n      font-weight: ${computedStyle.fontWeight};\n      line-height: ${computedStyle.lineHeight};\n      letter-spacing: ${computedStyle.letterSpacing};\n      padding: ${computedStyle.padding};\n      border: ${computedStyle.borderWidth} solid transparent;\n      margin: 0;\n      z-index: 1;\n      color: transparent;\n      background: transparent;\n    `;let highlightedHTML="";let lastIndex=0;for(const match of matches){highlightedHTML+=this.escapeHtml(text.substring(lastIndex,match.start));const color=this.getKeywordColor(match.type);highlightedHTML+=`<span style="color: ${color}; font-weight: 600; background: linear-gradient(135deg, ${color}22 0%, ${color}11 100%); border-radius: 3px; padding: 1px 2px;">${this.escapeHtml(match.keyword)}</span>`;lastIndex=match.end}highlightedHTML+=this.escapeHtml(text.substring(lastIndex));this.highlightOverlay.innerHTML=highlightedHTML;this.input.style.background="transparent";this.input.style.backgroundColor="transparent";this.input.style.backgroundImage="none";this.input.style.color=this.getInputTextColor();this.inputWrapper.insertBefore(this.highlightOverlay,this.input)}getKeywordColor(type){return KEYWORD_HIGHLIGHT_COLOR}getInputTextColor(){if(this.isWabiSabiMode){return"#F5F5F5"}return this.isDarkMode?"#ffffff":"#1f2937"}captureInputDefaultStyles(){if(!this.input){return}const computedStyle=window.getComputedStyle(this.input);this.inputDefaultStyles={background:computedStyle.background,backgroundImage:computedStyle.backgroundImage,backgroundColor:computedStyle.backgroundColor,color:computedStyle.color}}clearKeywordHighlighting(){if(this.highlightOverlay){this.highlightOverlay.remove();this.highlightOverlay=null}if(this.input){if(this.inputDefaultStyles){this.input.style.background=this.inputDefaultStyles.background;this.input.style.backgroundImage=this.inputDefaultStyles.backgroundImage;this.input.style.backgroundColor=this.inputDefaultStyles.backgroundColor;this.input.style.color=this.inputDefaultStyles.color}else{this.input.style.background="";this.input.style.backgroundImage="";this.input.style.backgroundColor="";this.input.style.color=""}}}escapeHtml(text){const div=document.createElement("div");div.textContent=text;return div.innerHTML}detectMediaType(text){const videoPatterns=[/動画|ビデオ|映像|ムービー/,/video|movie|clip/i];const imagePatterns=[/画像|写真|絵|イラスト|イメージ/,/image|picture|photo|illustration/i];if(videoPatterns.some(pattern=>pattern.test(text))){return{type:"video",confidence:.8,reason:"動画生成コマンド"}}if(imagePatterns.some(pattern=>pattern.test(text))){return{type:"image",confidence:.8,reason:"画像生成コマンド"}}return{type:"image",confidence:.6,reason:"生成コマンド（画像デフォルト）"}}showCommandTypeIndicator(commandInfo){const{type:type,confidence:confidence,reason:reason}=commandInfo;if(confidence<.7){this.showProactiveSuggestion(type,confidence)}else{this.hideProactiveSuggestion()}this.enableGestureControl()}showProactiveSuggestion(detectedType,confidence){if(!this.proactiveSuggestion){this.proactiveSuggestion=document.createElement("div");this.proactiveSuggestion.id="proactive-suggestion";this.proactiveSuggestion.style.cssText=`\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;this.container.insertBefore(this.proactiveSuggestion,this.input)}const alternativeTypes=["generate","modify","delete"].filter(t=>t!==detectedType);const suggestion=alternativeTypes[0];const suggestionLabels={generate:"🎨 生成",modify:"✏️ 変更",delete:"🗑️ 削除"};this.proactiveSuggestion.innerHTML=`\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style="margin-top: 4px; font-size: 10px; opacity: 0.8;">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;this.proactiveSuggestion.style.display="block";this.proactiveSuggestion.onclick=()=>{this.currentMode=suggestion;this.hideProactiveSuggestion();this.updateIndicatorForMode(suggestion,.9)}}hideProactiveSuggestion(){if(this.proactiveSuggestion){this.proactiveSuggestion.style.display="none"}}updateIndicatorForMode(mode,confidence){}enableGestureControl(){this.gestureEnabled=true}createActionButtons(){const container=document.createElement("div");container.style.cssText=`\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;const clearBtn=document.createElement("button");clearBtn.innerHTML="🧹 全削除";clearBtn.style.cssText=this.getModernButtonStyles("danger");clearBtn.addEventListener("click",()=>this.clearAll());container.appendChild(clearBtn);return container}getContainerStyles(){const positions={"bottom-right":"bottom: 20px; right: 20px;","bottom-left":"bottom: 20px; left: 20px;","top-right":"top: 20px; right: 20px;","top-left":"top: 20px; left: 20px;",center:"top: 50%; left: 50%; transform: translate(-50%, -50%);"};const glassmorphismDark={background:"linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))",backdropFilter:"blur(24px) saturate(180%)",border:"1px solid rgba(99, 102, 241, 0.2)",boxShadow:"0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)"};const glassmorphismLight={background:"linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))",backdropFilter:"blur(24px) saturate(180%)",border:"1px solid rgba(255, 255, 255, 0.4)",boxShadow:"0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)"};const glassmorphismWabiSabi={background:"linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))",backdropFilter:"blur(20px) saturate(120%)",border:"1px solid rgba(93, 64, 55, 0.5)",boxShadow:"0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)"};const theme=this.isWabiSabiMode?glassmorphismWabiSabi:this.isDarkMode?glassmorphismDark:glassmorphismLight;return`\n      position: fixed;\n      ${positions[this.config.position]||positions["bottom-right"]}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isDarkMode?"#ffffff":"#1f2937"};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `}getHeaderStyles(){const gradientColors="linear-gradient(135deg, #4f46e5, #7c3aed)";return`\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `}getOutputStyles(){this.addScrollbarStyles();return`\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode?"rgba(255, 255, 255, 0.05)":"rgba(255, 255, 255, 0.1)"};\n      border: 1px solid ${this.isDarkMode?"rgba(255, 255, 255, 0.15)":"rgba(255, 255, 255, 0.2)"};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode?"rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)"};\n    `}addScrollbarStyles(){if(document.getElementById("custom-scrollbar-styles"))return;const style=document.createElement("style");style.id="custom-scrollbar-styles";style.textContent=`\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)"};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode?"rgba(255, 255, 255, 0.3)":"rgba(0, 0, 0, 0.3)"};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode?"rgba(255, 255, 255, 0.5)":"rgba(0, 0, 0, 0.5)"};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* 2025年トレンド: 微細な浮遊感アニメーション */\n      @keyframes gentleFloat {\n        0%, 100% { \n          transform: translateY(0px) scale(1);\n        }\n        25% { \n          transform: translateY(-2px) scale(1.005);\n        }\n        50% { \n          transform: translateY(-1px) scale(1.002);\n        }\n        75% { \n          transform: translateY(-3px) scale(1.008);\n        }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n    `;document.head.appendChild(style)}getInputStyles(){const glassmorphismDark={background:"linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))",border:"1px solid rgba(99, 102, 241, 0.25)",boxShadow:"0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)"};const glassmorphismLight={background:"linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))",border:"1px solid rgba(255, 255, 255, 0.5)",boxShadow:"0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)"};const glassmorphismWabiSabi={background:"linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))",border:"1px solid rgba(97, 97, 97, 0.5)",boxShadow:"0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)"};const theme=this.isWabiSabiMode?glassmorphismWabiSabi:this.isDarkMode?glassmorphismDark:glassmorphismLight;return`\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode?"#F5F5F5":this.isDarkMode?"#ffffff":"#1f2937"};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode?"rgba(255, 255, 255, 0.5)":"rgba(55, 65, 81, 0.6)"};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `}getModernButtonStyles(type){const styles={primary:this.isWabiSabiMode?`\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `:`\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,secondary:this.isWabiSabiMode?`\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      `:`\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,danger:this.isWabiSabiMode?`\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      `:`\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `};return`\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `}getModeButtonStyles(isActive,mode){const modeColors={generate:"linear-gradient(135deg, #22c55e, #16a34a)",modify:"linear-gradient(135deg, #22c55e, #16a34a)",delete:"linear-gradient(135deg, #22c55e, #16a34a)"};return`\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive?"white":"rgba(255, 255, 255, 0.7)"};\n      background: ${isActive?modeColors[mode]:"transparent"};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `}bindEvents(){document.addEventListener("keydown",e=>{if(e.key===this.config.activationKey){e.preventDefault();this.toggle();return}if(this.isVisible&&e.key==="Escape"){this.hide()}if(this.isVisible&&e.ctrlKey){if(e.key==="z"&&!e.shiftKey){e.preventDefault();this.undo()}else if(e.key==="y"||e.key==="z"&&e.shiftKey){e.preventDefault();this.redo()}}});this.input.addEventListener("focus",()=>{if(this.isWabiSabiMode){this.input.style.borderColor="#8BC34A";this.input.style.boxShadow="0 0 5px rgba(139, 195, 74, 0.5)"}else{this.input.style.borderColor="#74b9ff";this.input.style.boxShadow="0 0 5px rgba(116, 185, 255, 0.5)"}});this.input.addEventListener("blur",()=>{if(this.isWabiSabiMode){this.input.style.borderColor="#8D6E63";this.input.style.boxShadow="none"}else{this.input.style.borderColor="#4a90e2";this.input.style.boxShadow="none"}})}toggle(){if(this.isVisible){this.hide()}else{this.show()}}show(){this.container.style.display="flex";this.container.style.flexDirection="column";this.floatingContainer.style.display="flex";setTimeout(()=>{const containerRect=this.container.getBoundingClientRect();this.floatingContainer.style.left=containerRect.left+"px";this.floatingContainer.style.top=containerRect.top-80+"px";this.floatingContainer.style.width=containerRect.width+"px";this.floatingContainer.style.transform="none"},50);this.isVisible=true;this.input.focus();if(this.floatingChocolateIcon){this.floatingChocolateIcon.style.opacity="0";this.floatingChocolateIcon.style.pointerEvents="none"}this.onControlsToggle(true)}hide(){this.container.style.display="none";this.floatingContainer.style.display="none";this.isVisible=false;if(this.floatingChocolateIcon){this.floatingChocolateIcon.style.opacity="0.8";this.floatingChocolateIcon.style.pointerEvents="auto"}this.onControlsToggle(false);this.logDebug("🎮 コントロールを再開")}switchMode(mode){if(this.currentMode===mode)return;this.currentMode=mode;this.container.querySelectorAll("[data-mode]").forEach(btn=>{const isActive=btn.dataset.mode===mode;btn.style.cssText=this.getModeButtonStyles(isActive,btn.dataset.mode)});this.input.placeholder=this.getPlaceholderForMode(mode);const executeBtn=this.container.querySelector("#execute-btn");const labels={generate:"🎨 Generate Object",modify:"✏️ Apply Changes",delete:"🗑️ Delete Objects"};const buttonColors={generate:"linear-gradient(135deg, #5b21b6, #4c1d95)",modify:"linear-gradient(135deg, #ec4899, #be185d)",delete:"rgba(107, 114, 128, 0.15)"};executeBtn.innerHTML=`<span>${labels[mode]}</span>`;executeBtn.style.background=buttonColors[mode]}getPlaceholderForMode(mode){const placeholders={generate:"「猫の画像を作って」と話しかけて ⏎ ✨",import:"ファイルを選択して ⏎ 📁",modify:"選択後「ピンクに変更」と伝えて ⏎ ✏️",delete:"選択後、コマンドをそのまま送って ⏎ 🗑️"};return placeholders[mode]||placeholders.generate}async executeCommand(){const command=this.input.value.trim();if(!command)return;const commandType=this.analyzeCommandType(command);if(this.selectedFile){if(this.currentMode!=="import"){this.selectMode("import",false)}this.currentMode="import"}else{this.currentMode=commandType.type}if(commandType.requiresConfirmation){const confirmed=await this.showDeleteConfirmation(command);if(!confirmed){this.addOutput("❌ 削除をキャンセルしました","system");return}}this.input.value="";this.hideProactiveSuggestion();commandType.mediaType==="video"?"🎬":"🖼️";const taskId=this.addTaskCard(command,{status:"processing"});this.saveCommandToHistory({command:command,mode:this.currentMode,mediaType:commandType.mediaType,timestamp:Date.now()});try{let result;const modePrefix=this.getModePrefix(this.currentMode);const fullCommand=`${modePrefix}${command}`;this.logDebug("🔍 Current mode check:",this.currentMode);if(this.currentMode==="import"){this.logDebug("📁 Import mode detected - bypassing SceneManager");if(!this.selectedFile){throw new Error("ファイルが選択されていません。まずファイルを選択してください。")}result=await this.handleImportCommand(command)}else if(this.sceneManager){result=await this.sceneManager.executeCommand(fullCommand)}else if(this.client){if(this.currentMode==="generate"){if(commandType.mediaType==="video"){result=await this.client.generateVideo(command,{model:this.selectedVideoService||undefined})}else{result=await this.client.generateImage(command,{service:this.selectedImageService||undefined})}}else if(this.currentMode==="modify"){if(!this.selectedObject){throw new Error("変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。")}result=await this.client.modifySelectedObject(this.selectedObject,command)}else if(this.currentMode==="delete"){if(!this.selectedObject&&!this.sceneManager?.getSelectedObjects()?.length){this.addOutput("⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。","system");return}const confirmMessage=`本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;if(!confirm(confirmMessage)){this.addOutput("❌ 削除がキャンセルされました","system");return}result=await this.client.deleteObjects(command)}else{result=await this.client.executeCommand(fullCommand)}}else{throw new Error("SceneManager または Client が設定されていません")}if(result&&result.taskId){this.connectToProgress(result.taskId,taskId);this.currentTaskId=result.taskId}const successMessages={generate:``,modify:"✅ 変更を適用しました",delete:"🗑️ 削除しました"};if(taskId){this.updateTaskCard(taskId,"completed")}if(result.modelName){}if(result.objectId){}if(result.position){}if(commandType.mediaType){}}catch(error){const errorMessages={generate:`❌ ${commandType.mediaType==="video"?"動画":"画像"}生成エラー`,modify:"❌ 変更エラー",delete:"❌ 削除エラー"};if(taskId){this.updateTaskCard(taskId,"error",{errorMessage:error.message})}this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`,"error");console.error("Command execution error:",error)}if(this.sceneManager&&this.sceneManager.selectedObject){if(this.currentMode==="modify"||this.currentMode==="delete"){setTimeout(()=>{this.sceneManager.deselectObject()},500)}}if(this.config.autoScroll){this.scrollToBottom()}}async showConfirmationDialog(options){const{icon:icon="🗑️",title:title="確認",message:message="この操作を実行しますか？",confirmText:confirmText="実行",cancelText:cancelText="キャンセル",confirmColor:confirmColor="#ef4444"}=options;return new Promise(resolve=>{const modal=document.createElement("div");modal.style.cssText=`\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;const dialog=document.createElement("div");dialog.style.cssText=`\n        background: ${this.isWabiSabiMode?"linear-gradient(135deg, rgba(239, 235, 233, 0.4), rgba(215, 204, 200, 0.3))":this.isDarkMode?"linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))":"linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))"};\n        border: 1px solid ${this.isWabiSabiMode?"rgba(161, 136, 127, 0.4)":this.isDarkMode?"rgba(99, 102, 241, 0.3)":"rgba(255, 255, 255, 0.5)"};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode?"#5D4037":this.isDarkMode?"#ffffff":"#1f2937"};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isWabiSabiMode?"0 8px 32px rgba(93, 64, 55, 0.2), 0 0 0 1px rgba(161, 136, 127, 0.2)":this.isDarkMode?"0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)":"0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)"};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;dialog.innerHTML=`\n        <div style="font-size: 56px; margin-bottom: 20px;">${icon}</div>\n        <h3 style="margin: 0 0 16px 0; color: ${this.isDarkMode?"#a5b4fc":"#6366f1"}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;">\n          ${title}\n        </h3>\n        <p style="margin: 0 0 28px 0; color: ${this.isDarkMode?"#d1d5db":"#6b7280"}; line-height: 1.6; font-size: 16px;">\n          ${message}\n        </p>\n        <div style="display: flex; gap: 8px; justify-content: center;">\n          <button id="cancel-btn" style="\n            padding: 14px 24px;\n            background: ${this.isDarkMode?"linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))":"linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))"};\n            border: 1px solid ${this.isDarkMode?"rgba(156, 163, 175, 0.2)":"rgba(255, 255, 255, 0.3)"};\n            border-radius: 12px;\n            color: ${this.isDarkMode?"#d1d5db":"#374151"};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          ">${cancelText}</button>\n          <button id="confirm-btn" style="\n            padding: 14px 24px;\n            background: ${confirmColor===(this.isWabiSabiMode?"#8BC34A":"#6366f1")?"linear-gradient(135deg, "+(this.isWabiSabiMode?"#8BC34A, #689F38":"#6366f1, #8b5cf6")+")":confirmColor==="#ef4444"?"linear-gradient(135deg, #ef4444, #dc2626)":"linear-gradient(135deg, #ff7b47, #f97316)"};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor===(this.isWabiSabiMode?"#8BC34A":"#6366f1")?"rgba(99, 102, 241, 0.3)":confirmColor==="#ef4444"?"rgba(239, 68, 68, 0.3)":"rgba(255, 123, 71, 0.3)"};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          ">${confirmText}</button>\n        </div>\n      `;modal.appendChild(dialog);document.body.appendChild(modal);requestAnimationFrame(()=>{modal.style.opacity="1";dialog.style.transform="scale(1)";dialog.style.opacity="1"});dialog.querySelector("#cancel-btn").onclick=()=>{this.closeModalWithAnimation(modal);resolve(false)};dialog.querySelector("#confirm-btn").onclick=()=>{this.closeModalWithAnimation(modal);resolve(true)};const escHandler=e=>{if(e.key==="Escape"){this.closeModalWithAnimation(modal);document.removeEventListener("keydown",escHandler);resolve(false)}};document.addEventListener("keydown",escHandler);modal.onclick=e=>{if(e.target===modal){this.closeModalWithAnimation(modal);resolve(false)}}})}async showDeleteConfirmation(command){return this.showConfirmationDialog({icon:"🗑️",title:"削除の確認",message:`「${command}」を実行しますか？<br>この操作は取り消すことができません。`,confirmText:"削除実行",cancelText:"キャンセル",confirmColor:"#ff7b47"})}addOutput(message,type="default",options={}){if(type==="task"||type==="progress"){return this.addTaskCard(message,options)}if(type==="error"||type==="system"){this.addSystemMessage(message,type)}}addTaskCard(taskInfo,options={}){if(!this.taskCards)this.taskCards=new Map;const taskId=options.taskId||`task_${Date.now()}_${Math.random().toString(36).substr(2,5)}`;const status=options.status||"pending";const prompt=taskInfo.prompt||taskInfo.command||taskInfo;const card=document.createElement("div");card.className="floating-task-card";card.setAttribute("data-task-id",taskId);if(status==="pending"||status==="processing"||status==="progress"){card.classList.add("chocodrop-shimmer","chocodrop-float")}card.style.cssText=this.getFloatingCardStyles(status);card.style.setProperty("opacity","0","important");card.style.setProperty("transform","translateY(20px) scale(0.95)","important");card.style.setProperty("filter","blur(4px)","important");const iconMap={pending:"⏳",processing:"🎨",progress:"⚡",completed:"✅",error:"❌"};const friendlyMessage=this.getFriendlyMessage(status,prompt,options.errorMessage);card.innerHTML=`\n      <span style="font-size: 14px;">${iconMap[status]}</span>\n      <span style="font-size: 13px; margin-left: 6px;">${friendlyMessage}</span>\n    `;this.floatingContainer.insertBefore(card,this.floatingContainer.firstChild);this.updateCardDisplayLimit();this.taskCards.set(taskId,{element:card,status:status,prompt:prompt,originalPrompt:prompt,startTime:Date.now(),endTime:null,error:null,contentType:"image",model:null,settings:null});this.addCardDetailEvents(card,taskId);this.animateCardEntrance(card);this.ensureShimmerStyles();return taskId}ensureShimmerStyles(){if(document.querySelector("#chocodrop-shimmer-styles"))return;const styleSheet=document.createElement("style");styleSheet.id="chocodrop-shimmer-styles";styleSheet.textContent=`\n      /* 2025年トレンド: シマーエフェクト（強化版） */\n      .chocodrop-shimmer {\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .chocodrop-shimmer::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode?"rgba(255, 255, 255, 0.5)":"rgba(255, 255, 255, 0.7)"},\n          transparent\n        );\n        animation: shimmer 1.5s infinite;\n        pointer-events: none;\n        z-index: 1;\n      }\n      \n      .chocodrop-shimmer > * {\n        position: relative;\n        z-index: 2;\n      }\n      \n      /* 2025年トレンド: 微細な浮遊感 */\n      .chocodrop-float {\n        animation: gentleFloat 4s ease-in-out infinite;\n      }\n      \n      /* 待機中の特別なパルス効果（強化版） */\n      .chocodrop-shimmer.floating-task-card {\n        animation: gentleFloat 4s ease-in-out infinite, subtlePulse 3s ease-in-out infinite;\n      }\n      \n      @keyframes subtlePulse {\n        0%, 100% { \n          box-shadow: 0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1);\n        }\n        50% { \n          box-shadow: 0 12px 40px rgba(15, 23, 42, 0.5), 0 0 0 1px rgba(99, 102, 241, 0.3);\n        }\n      }\n    `;document.head.appendChild(styleSheet)}updateTaskCard(taskId,status,options={}){if(!this.taskCards||!this.taskCards.has(taskId))return;const taskData=this.taskCards.get(taskId);const card=taskData.element;taskData.status=status;if(status==="error"&&options.errorMessage){taskData.error=options.errorMessage}if(status==="pending"||status==="processing"||status==="progress"){card.classList.add("chocodrop-shimmer","chocodrop-float")}else{card.classList.remove("chocodrop-shimmer","chocodrop-float")}const iconMap={pending:"⏳",processing:"🎨",progress:"⚡",completed:"✅",error:"❌"};const friendlyMessage=this.getFriendlyMessage(status,taskData.prompt,taskData.error);card.innerHTML=`\n      <span style="font-size: 14px;">${iconMap[status]}</span>\n      <span style="font-size: 13px; margin-left: 6px;">${friendlyMessage}</span>\n    `;card.style.cssText=this.getFloatingCardStyles(status);if(status==="completed"){this.animateCardSuccess(card,taskId)}else if(status==="error"){this.animateCardError(card,taskId)}}addSystemMessage(message,type){const entry=document.createElement("div");entry.className=`system-message ${type}`;entry.style.cssText=`\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type==="error"?"rgba(239, 68, 68, 0.1)":"rgba(107, 114, 128, 0.1)"};\n      border: 1px solid ${type==="error"?"rgba(239, 68, 68, 0.3)":"rgba(107, 114, 128, 0.3)"};\n      color: ${type==="error"?"#fca5a5":this.isDarkMode?"#d1d5db":"#6b7280"};\n    `;entry.textContent=message;this.outputDiv.appendChild(entry);this.scrollToBottom()}getTaskCardStyles(status){const baseStyles=`\n      background: ${this.isDarkMode?"rgba(255, 255, 255, 0.08)":"rgba(255, 255, 255, 0.15)"};\n      border: 1px solid ${this.isDarkMode?"rgba(255, 255, 255, 0.15)":"rgba(255, 255, 255, 0.25)"};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;const statusBorders={pending:"rgba(167, 139, 250, 0.3)",processing:"rgba(192, 132, 252, 0.5)",progress:"rgba(236, 72, 153, 0.4)",completed:"rgba(167, 139, 250, 0.4)",error:"rgba(239, 68, 68, 0.4)"};return baseStyles+`border-left: 3px solid ${statusBorders[status]||statusBorders.pending};`}getFloatingCardStyles(status){const glassmorphismDark={background:"linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))",border:"1px solid rgba(99, 102, 241, 0.25)",boxShadow:"0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)",color:"#ffffff"};const glassmorphismLight={background:"linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))",border:"1px solid rgba(255, 255, 255, 0.4)",boxShadow:"0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)",color:"#1f2937"};const theme=this.isDarkMode?glassmorphismDark:glassmorphismLight;const shimmerEffect=status==="pending"||status==="processing"||status==="progress"?`\n      position: relative;\n      overflow: hidden;\n      &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode?"rgba(255, 255, 255, 0.2)":"rgba(255, 255, 255, 0.4)"},\n          transparent\n        );\n        animation: shimmer 2s infinite;\n      }\n    `:"";const floatingAnimation=status==="pending"||status==="processing"||status==="progress"?`\n      animation: gentleFloat 4s ease-in-out infinite, shimmer 2s infinite;\n    `:"";return`\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      ${shimmerEffect}\n      ${floatingAnimation}\n      position: relative;\n      overflow: hidden;\n    `}updateCardDisplayLimit(){const maxVisibleCards=3;const allCards=Array.from(this.floatingContainer.children).filter(child=>!child.classList.contains("overflow-counter"));const existingCounter=this.floatingContainer.querySelector(".overflow-counter");if(existingCounter){existingCounter.remove()}if(allCards.length<=maxVisibleCards){allCards.forEach(card=>{card.style.display="flex"})}else{allCards.slice(0,maxVisibleCards);const hiddenCount=allCards.length-maxVisibleCards;allCards.forEach((card,index)=>{if(index<maxVisibleCards){card.style.display="flex"}else{card.style.display="none"}});const counter=document.createElement("div");counter.className="overflow-counter";const counterBaseColor=this.isDarkMode?"rgba(255, 255, 255, 0.08)":"rgba(0, 0, 0, 0.12)";const counterBorderColor=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.15)";const counterTextColor=this.isDarkMode?"rgba(255, 255, 255, 0.7)":"rgba(0, 0, 0, 0.6)";counter.style.cssText=`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;counter.innerHTML=`+ ${hiddenCount}`;this.floatingContainer.appendChild(counter);const counterHoverColor=this.isDarkMode?"rgba(255, 255, 255, 0.12)":"rgba(0, 0, 0, 0.18)";counter.addEventListener("mouseenter",()=>{counter.style.background=counterHoverColor;counter.style.transform="scale(1.05)"});counter.addEventListener("mouseleave",()=>{counter.style.background=counterBaseColor;counter.style.transform="scale(1)"})}}addCardDetailEvents(card,taskId){const isTouchDevice="ontouchstart"in window||navigator.maxTouchPoints>0;if(isTouchDevice){card.addEventListener("click",e=>{e.preventDefault();e.stopPropagation();this.showTaskDetailModal(taskId)})}else{let hoverTimeout;card.addEventListener("mouseenter",()=>{hoverTimeout=setTimeout(()=>{this.showTaskDetailModal(taskId)},800)});card.addEventListener("mouseleave",()=>{if(hoverTimeout){clearTimeout(hoverTimeout)}});card.addEventListener("click",e=>{e.preventDefault();e.stopPropagation();this.showTaskDetailModal(taskId)})}}showTaskDetailModal(taskId){const taskData=this.taskCards.get(taskId);if(!taskData)return;const existingModal=document.querySelector(".task-detail-modal");if(existingModal){existingModal.remove()}const modal=this.createTaskDetailModal(taskData);document.body.appendChild(modal);requestAnimationFrame(()=>{modal.style.opacity="1";modal.querySelector(".modal-content").style.transform="translateY(0) scale(1)"})}createTaskDetailModal(taskData){const modal=document.createElement("div");modal.className="task-detail-modal";const overlayColor=this.isDarkMode?"rgba(0, 0, 0, 0.6)":"rgba(0, 0, 0, 0.4)";const modalBg=this.isDarkMode?"rgba(20, 20, 20, 0.95)":"rgba(255, 255, 255, 0.95)";const modalBorder=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)";const textColor=this.isDarkMode?"rgba(255, 255, 255, 0.9)":"rgba(0, 0, 0, 0.9)";const labelColor=this.isDarkMode?"rgba(255, 255, 255, 0.6)":"rgba(0, 0, 0, 0.6)";modal.style.cssText=`\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;const duration=taskData.endTime?((taskData.endTime-taskData.startTime)/1e3).toFixed(1):((Date.now()-taskData.startTime)/1e3).toFixed(1);const statusText=taskData.status==="pending"?"待機中":taskData.status==="in-progress"?"実行中":taskData.status==="completed"?"完了":"エラー";const modalContent=document.createElement("div");modalContent.className="modal-content";modalContent.style.cssText=`\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;modalContent.innerHTML=`\n      <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;">\n        <h3 style="margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;">タスク詳細</h3>\n        <button class="close-btn" style="\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        ">×</button>\n      </div>\n      \n      <div style="space-y: 16px;">\n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">📝 元のプロンプト</div>\n          <div style="color: ${textColor}; font-size: 14px; line-height: 1.4;">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">📊 ステータス</div>\n          <div style="color: ${textColor}; font-size: 14px;">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">⏱️ 実行時間</div>\n          <div style="color: ${textColor}; font-size: 14px;">${duration}秒</div>\n        </div>\n        \n        ${taskData.error?`\n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">❌ エラー詳細</div>\n          <div style="color: #ef4444; font-size: 14px; line-height: 1.4;">${taskData.error}</div>\n        </div>\n        `:""}\n        \n        <div>\n          <div style="color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;">🎨 コンテンツタイプ</div>\n          <div style="color: ${textColor}; font-size: 14px;">${taskData.contentType||"画像"}</div>\n        </div>\n      </div>\n    `;modalContent.addEventListener("click",e=>{e.stopPropagation()});const closeBtn=modalContent.querySelector(".close-btn");closeBtn.addEventListener("click",()=>{this.closeTaskDetailModal(modal)});closeBtn.addEventListener("mouseenter",()=>{closeBtn.style.color=textColor});closeBtn.addEventListener("mouseleave",()=>{closeBtn.style.color=labelColor});modal.addEventListener("click",()=>{this.closeTaskDetailModal(modal)});modal.appendChild(modalContent);return modal}closeTaskDetailModal(modal){modal.style.opacity="0";modal.querySelector(".modal-content").style.transform="translateY(20px) scale(0.95)";setTimeout(()=>{if(modal.parentNode){modal.parentNode.removeChild(modal)}},300)}animateCardEntrance(card){card.style.transform="translateY(20px) scale(0.95)";card.style.opacity="0";card.style.filter="blur(4px)";requestAnimationFrame(()=>{card.style.transition="all 0.6s cubic-bezier(0.16, 1, 0.3, 1)";card.style.transform="translateY(0) scale(1)";card.style.opacity="1";card.style.filter="blur(0px)";card.style.boxShadow="0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)"})}animateCardSuccess(card,taskId){card.style.transition="all 0.3s cubic-bezier(0.16, 1, 0.3, 1)";card.style.borderColor="rgba(76, 175, 80, 0.6)";card.style.transform="scale(1.08)";card.style.boxShadow="0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)";card.style.filter="brightness(1.1) saturate(1.2)";setTimeout(()=>{card.style.transform="scale(1.02)";card.style.filter="brightness(1.05) saturate(1.1)"},150);setTimeout(()=>{this.animateCardExit(card,taskId)},2e3)}animateCardError(card,taskId){card.style.transition="all 0.3s cubic-bezier(0.16, 1, 0.3, 1)";card.style.borderColor="rgba(244, 67, 54, 0.7)";card.style.boxShadow="0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)";card.style.filter="saturate(1.3) brightness(1.1)";card.style.animation="errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2";this.addErrorTooltip(card,taskId);card.style.cursor="pointer";card.onclick=()=>this.animateCardExit(card,taskId);setTimeout(()=>{if(this.taskCards.has(taskId)){this.animateCardExit(card,taskId)}},5e3)}addErrorTooltip(card,taskId){const taskData=this.taskCards.get(taskId);if(!taskData||!taskData.error)return;const tooltip=document.createElement("div");tooltip.style.cssText=`\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;tooltip.textContent=taskData.error;card.style.position="relative";card.appendChild(tooltip);requestAnimationFrame(()=>{tooltip.style.opacity="1"});setTimeout(()=>{if(tooltip.parentNode){tooltip.style.opacity="0";setTimeout(()=>{if(tooltip.parentNode){tooltip.parentNode.removeChild(tooltip)}},300)}},3e3)}animateCardExit(card,taskId){card.style.transition="all 0.28s cubic-bezier(0.4, 0, 0.2, 1)";card.style.transform="translateY(-12px) scale(0.92)";card.style.opacity="0";card.style.filter="blur(6px) brightness(1.2)";card.style.boxShadow="0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)";setTimeout(()=>{if(card.parentNode){card.parentNode.removeChild(card)}this.taskCards.delete(taskId);this.updateCardDisplayLimit()},280)}getResponseType(prompt){if(/ちょこっと|ちょこん|少し|軽く/.test(prompt)||prompt.length<15){return"casual"}if(/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)){return"magical"}return"balanced"}getFriendlyMessage(status,prompt,errorMessage=null){const shortPrompt=prompt.length>15?prompt.substring(0,15)+"...":prompt;const responseType=this.getResponseType(prompt);switch(status){case"pending":return responseType==="casual"?"ちょこっと準備中です...":responseType==="magical"?"魔法をかけようとしています...":"ちょこっと魔法の準備中...";case"processing":case"in-progress":case"progress":if(this.currentMode==="modify"){return responseType==="casual"?"ちょこっと調整中です...":responseType==="magical"?"イメージを変化させています...":"ちょこんと編集中です..."}return responseType==="casual"?"ちょこんと配置中です...":responseType==="magical"?"あなたの想いを形にしています...":"ちょこっと魔法をかけています...";case"completed":if(this.currentMode==="delete"){return responseType==="casual"?"ちょこっと削除しました！":responseType==="magical"?"すっきりと片付きました！":"ちょこんと削除完了！すっきりですね！"}if(this.currentMode==="modify"){return responseType==="casual"?"ちょこっと調整しました！":responseType==="magical"?"素敵に変身しました！":"ちょこんと編集完了！いい感じですね！"}return responseType==="casual"?"ちょこっとドロップしました！":responseType==="magical"?"素敵な世界が完成しました！":"ちょこんと配置完了！素敵ですね！";case"error":if(errorMessage){const shortError=errorMessage.length>30?errorMessage.substring(0,30)+"...":errorMessage;return`❌ ${shortError}`}return responseType==="casual"?"おっと、エラーが発生しました":responseType==="magical"?"申し訳ございません、処理に失敗しました":"エラーが発生しました。もう一度お試しください";default:return shortPrompt}}getStatusColor(status){const colors={pending:this.isDarkMode?"#a78bfa":"#7c3aed",processing:this.isDarkMode?"#c084fc":"#9333ea",progress:this.isDarkMode?"#ec4899":"#be185d",completed:this.isDarkMode?"#a78bfa":"#7c3aed",error:this.isDarkMode?"#f87171":"#dc2626"};return colors[status]||colors.pending}createStatusIndicator(status){if(status==="processing"||status==="progress"){return`\n        <div class="status-indicator" style="\n          background: ${this.isDarkMode?"rgba(255, 255, 255, 0.08)":"rgba(0, 0, 0, 0.08)"};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        ">\n          <div class="status-pulse" style="\n            background: linear-gradient(90deg, transparent, ${this.isWabiSabiMode?"#8BC34A, #689F38":"#6366f1, #8b5cf6"}, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          "></div>\n        </div>\n        <div style="display: flex; align-items: center; gap: 4px; margin-top: 8px;">\n          <div class="status-dots" style="font-size: 10px; color: ${this.isDarkMode?"#c084fc":"#9333ea"};">\n            処理中<span style="animation: dots 1.5s infinite;">...</span>\n          </div>\n        </div>\n      `}return""}animateTaskCompletion(card){card.style.animation="taskComplete 0.8s ease-out";this.addSubtleParticleEffect(card);setTimeout(()=>{card.style.animation=""},800);this.ensureTaskAnimations()}addSubtleParticleEffect(card){const particles=3;const rect=card.getBoundingClientRect();for(let i=0;i<particles;i++){const particle=document.createElement("div");particle.style.cssText=`\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right-20}px;\n        top: ${rect.top+10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;const angle=i/particles*Math.PI*2;const distance=15;particle.style.setProperty("--move-x",`${Math.cos(angle)*distance}px`);particle.style.setProperty("--move-y",`${Math.sin(angle)*distance}px`);document.body.appendChild(particle);setTimeout(()=>particle.remove(),1200)}}ensureTaskAnimations(){if(document.getElementById("task-animations"))return;const style=document.createElement("style");style.id="task-animations";style.textContent=`\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;document.head.appendChild(style)}addTaskStatus(message,percent=0,taskId=null){const id=taskId||`task_${Date.now()}`;return this.addTaskCard(message,{percent:Math.min(Math.max(percent,0),100),taskId:id,status:percent>0?"progress":"pending"})}updateTaskProgress(taskId,percent,newMessage=null){const existingTask=this.output.querySelector(`[data-task-id="${taskId}"]`);if(existingTask&&newMessage){this.addOutput(newMessage,"progress",{percent:Math.min(Math.max(percent,0),100),taskId:taskId})}}completeTask(taskId){const existingTask=this.output.querySelector(`[data-task-id="${taskId}"]`);if(existingTask){existingTask.style.transition="opacity 0.5s ease, transform 0.5s ease";existingTask.style.opacity="0";existingTask.style.transform="translateX(20px)";setTimeout(()=>{if(existingTask.parentNode){existingTask.remove()}},500)}}connectToProgress(serverTaskId,uiTaskId=null){if(this.activeConnections.has(serverTaskId)){return}const eventSource=new EventSource(`/api/progress/${serverTaskId}`);this.activeConnections.set(serverTaskId,eventSource);eventSource.onmessage=event=>{try{const data=JSON.parse(event.data);data.uiTaskId=uiTaskId;this.handleProgressUpdate(data)}catch(error){console.error("SSE data parse error:",error)}};eventSource.onerror=error=>{console.error("SSE connection error:",error);this.disconnectProgress(serverTaskId)}}handleProgressUpdate(data){switch(data.type){case"connected":this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);break;case"progress":if(data.percent!==undefined&&data.uiTaskId){this.updateTaskCard(data.uiTaskId,"progress",{percent:data.percent})}break;case"completed":if(data.uiTaskId){this.updateTaskCard(data.uiTaskId,"completed")}this.disconnectProgress(data.taskId);break;case"error":if(data.uiTaskId){this.updateTaskCard(data.uiTaskId,"error",{errorMessage:data.message})}this.addOutput(`❌ ${data.message}`,"error");this.disconnectProgress(data.taskId);break}}disconnectProgress(taskId){const connection=this.activeConnections.get(taskId);if(connection){connection.close();this.activeConnections.delete(taskId)}}scrollToBottom(){if(this.outputDiv){this.outputDiv.scrollTop=this.outputDiv.scrollHeight}}getModePrefix(mode){const prefixes={generate:"",modify:"[変更] ",delete:"[削除] "};return prefixes[mode]||""}saveCommandToHistory(commandData){this.commandHistory=this.commandHistory.slice(0,this.currentHistoryIndex+1);this.commandHistory.push(commandData);this.currentHistoryIndex=this.commandHistory.length-1;if(this.commandHistory.length>this.maxHistorySize){this.commandHistory.shift();this.currentHistoryIndex--}this.updateUndoRedoButtons()}undo(){if(!this.canUndo()){this.addOutput("↶ Undoできる操作がありません","hint");return}const command=this.commandHistory[this.currentHistoryIndex];this.currentHistoryIndex--;if(command.mode==="generate"){this.addOutput(`↶ Undo: "${command.command}" の生成を取り消しました`,"system");if(this.sceneManager&&this.sceneManager.undoLastGenerate){this.sceneManager.undoLastGenerate()}}else if(command.mode==="modify"){this.addOutput(`↶ Undo: "${command.command}" の変更を取り消しました`,"system");if(this.sceneManager&&this.sceneManager.undoLastModify){this.sceneManager.undoLastModify()}}else if(command.mode==="delete"){this.addOutput(`↶ Undo: "${command.command}" の削除を取り消しました`,"system");if(this.sceneManager&&this.sceneManager.undoLastDelete){this.sceneManager.undoLastDelete()}}this.updateUndoRedoButtons()}redo(){if(!this.canRedo()){this.addOutput("↷ Redoできる操作がありません","hint");return}this.currentHistoryIndex++;const command=this.commandHistory[this.currentHistoryIndex];this.addOutput(`↷ Redo: "${command.command}" を再実行しました`,"system");if(this.sceneManager&&this.sceneManager.redoCommand){this.sceneManager.redoCommand(command)}this.updateUndoRedoButtons()}canUndo(){return this.currentHistoryIndex>=0}canRedo(){return this.currentHistoryIndex<this.commandHistory.length-1}updateUndoRedoButtons(){if(this.undoBtn){this.undoBtn.disabled=!this.canUndo();this.undoBtn.style.opacity=this.canUndo()?"1":"0.4";this.undoBtn.style.cursor=this.canUndo()?"pointer":"not-allowed"}if(this.redoBtn){this.redoBtn.disabled=!this.canRedo();this.redoBtn.style.opacity=this.canRedo()?"1":"0.4";this.redoBtn.style.cursor=this.canRedo()?"pointer":"not-allowed"}}async clearAllWithConfirmation(){const confirmed=await this.showClearAllConfirmation();if(confirmed){this.clearAll()}}async showClearAllConfirmation(){return this.showConfirmationDialog({icon:"🧹",title:"Clear All の確認",message:"すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。",confirmText:"Clear All 実行",cancelText:"キャンセル",confirmColor:this.isWabiSabiMode?"#8BC34A":"#6366f1"})}closeModalWithAnimation(modal){const dialog=modal.querySelector("div:last-child");dialog.style.transform="scale(0.9)";dialog.style.opacity="0";modal.style.opacity="0";setTimeout(()=>{if(modal.parentElement){document.body.removeChild(modal)}},200)}clearAll(){if(this.sceneManager){this.sceneManager.clearAll();this.addOutput("🧹 全ての実験オブジェクトを削除しました","system")}else if(this.client){this.addOutput("⚠️ サーバー側削除は未実装","error")}}showExamples(){const examples=["右上にドラゴンを作って","中央に大きなユニコーンを生成","左下に小さな桜を作って","空に鳳凰を作って","地面に神社を作って"];this.addOutput("💡 コマンド例:","system");examples.forEach(example=>{this.addOutput(`   "${example}"`,"hint")})}setSceneManager(sceneManager){this.sceneManager=sceneManager;this.applyServiceSelectionToSceneManager()}setClient(client){this.client=client}updateConfig(newConfig){this.config={...this.config,...newConfig};if(newConfig.activationKey){this.bindEvents()}}refreshStyles(){const generateBtn=this.container?.querySelector('[data-mode="generate"]');if(generateBtn){generateBtn.style.cssText=this.getModeButtonStyles(true,"generate")}const executeBtn=this.container?.querySelector("#execute-btn");if(executeBtn){executeBtn.style.cssText=this.getModernButtonStyles("primary")}if(this.serviceModal){this.updateServiceModalStyles()}this.updateServiceSelectorTheme()}updateServiceModalStyles(){if(!this.serviceModal)return;this.serviceModal.style.background=this.isWabiSabiMode?"linear-gradient(135deg, rgba(158, 158, 158, 0.4), rgba(189, 189, 189, 0.35))":this.isDarkMode?"linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))":"linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))";this.serviceModal.style.border=this.isWabiSabiMode?"1px solid rgba(141, 110, 99, 0.4)":this.isDarkMode?"1px solid rgba(99, 102, 241, 0.3)":"1px solid rgba(255, 255, 255, 0.5)";this.serviceModal.style.color=this.isWabiSabiMode?"#424242":this.isDarkMode?"#ffffff":"#1f2937";this.serviceModal.style.boxShadow=this.isWabiSabiMode?"0 20px 40px rgba(93, 64, 55, 0.35)":"0 20px 40px rgba(15, 23, 42, 0.35)"}toggleTheme(){switch(this.currentTheme){case"light":this.currentTheme="dark";break;case"dark":this.currentTheme="wabisabi";break;case"wabisabi":this.currentTheme="light";break;default:this.currentTheme="light"}this.isDarkMode=this.currentTheme==="dark";this.isWabiSabiMode=this.currentTheme==="wabisabi";localStorage.setItem("live-command-theme",this.currentTheme);if(this.themeToggle){const themeConfig={light:{icon:"🌙",title:"ダークモードに切り替え"},dark:{icon:"🍵",title:"侘び寂びモードに切り替え"},wabisabi:{icon:"☀️",title:"ライトモードに切り替え"}};const config=themeConfig[this.currentTheme];if(config.icon==="☀️"){this.themeToggle.innerHTML=`<span style="filter: saturate(1.2) brightness(1.1);">${config.icon}</span>`}else if(config.icon==="🍵"){this.themeToggle.innerHTML=`<span style="filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);">${config.icon}</span>`}else{this.themeToggle.innerHTML=`<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">${config.icon}</span>`}this.themeToggle.title=config.title}this.applyTheme()}applyTheme(){document.body.className=this.isWabiSabiMode?"wabisabi-mode":this.isDarkMode?"dark-mode":"light-mode";const currentDisplay=this.container.style.display;const currentFlexDirection=this.container.style.flexDirection;this.container.style.cssText=this.getContainerStyles();this.container.style.display=currentDisplay||"flex";this.container.style.flexDirection=currentFlexDirection||"column";const brandBadge=this.container.querySelector(".floating-brand-badge");if(brandBadge){brandBadge.style.background=this.isDarkMode?"linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))":"linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))";brandBadge.style.border=`1px solid ${this.isDarkMode?"rgba(255, 255, 255, 0.2)":"rgba(255, 255, 255, 0.4)"}`}const hadHighlight=!!this.highlightOverlay;this.inputDefaultStyles=null;this.clearKeywordHighlighting();this.input.style.cssText=this.getInputStyles();this.captureInputDefaultStyles();if(hadHighlight||this.input&&this.input.value.trim()){this.applyKeywordHighlighting()}this.output.style.cssText=this.getOutputStyles();if(this.radioModeContainer){this.radioModeContainer.style.background=this.isWabiSabiMode?"linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))":this.isDarkMode?"linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))":"linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))";this.radioModeContainer.style.borderColor=this.isWabiSabiMode?"rgba(93, 64, 55, 0.4)":this.isDarkMode?"rgba(99, 102, 241, 0.15)":"rgba(255, 255, 255, 0.25)";Object.keys(this.radioModeButtons).forEach(key=>{const{button:button}=this.radioModeButtons[key];if(this.currentMode!==key){button.style.color=this.isWabiSabiMode?"rgba(245, 245, 245, 0.8)":this.isDarkMode?"rgba(255, 255, 255, 0.7)":"rgba(55, 65, 81, 0.8)";button.style.background="transparent";button.style.border="1px solid transparent";button.style.boxShadow="none"}});this.selectMode(this.currentMode,false)}if(this.clearBtn){this.clearBtn.style.cssText=this.getActionButtonStyles("secondary")}if(this.historyBtn){this.historyBtn.style.cssText=this.getActionButtonStyles("secondary");this.historyBtn.style.opacity="0.5"}if(this.themeToggle){const themeConfig={light:{icon:"🌙",title:"ダークモードに切り替え"},dark:{icon:"🍵",title:"侘び寂びモードに切り替え"},wabisabi:{icon:"☀️",title:"ライトモードに切り替え"}};const config=themeConfig[this.currentTheme]||themeConfig.light;if(config.icon==="☀️"){this.themeToggle.innerHTML=`<span style="filter: saturate(1.2) brightness(1.1);">${config.icon}</span>`}else if(config.icon==="🍵"){this.themeToggle.innerHTML=`<span style="filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);">${config.icon}</span>`}else{this.themeToggle.innerHTML=`<span style="filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);">${config.icon}</span>`}this.themeToggle.title=config.title;this.themeToggle.style.cssText=this.getActionButtonStyles("icon")}if(this.settingsButton){this.settingsButton.style.cssText=this.getActionButtonStyles("icon")}this.updateServiceSelectorTheme();const closeButton=this.container.querySelector(".close-button");if(closeButton){closeButton.style.color=this.isDarkMode?"#ffffff":"#1f2937";closeButton.style.background=this.isDarkMode?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.1)"}this.updateFloatingContainerTheme();this.updateExistingTextColors()}updateFloatingContainerTheme(){if(!this.floatingContainer)return;const currentDisplay=this.floatingContainer.style.display;if(this.taskCards&&this.taskCards.size>0){this.taskCards.forEach((taskData,taskId)=>{const card=taskData.element;if(card){const glassmorphismDark={background:"linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))",border:"1px solid rgba(99, 102, 241, 0.25)",color:"#ffffff"};const glassmorphismLight={background:"linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))",border:"1px solid rgba(255, 255, 255, 0.4)",color:"#1f2937"};const theme=this.isDarkMode?glassmorphismDark:glassmorphismLight;card.style.setProperty("background",theme.background,"important");card.style.setProperty("border",theme.border,"important");card.style.setProperty("color",theme.color,"important")}})}this.floatingContainer.style.display=currentDisplay}updateExistingTextColors(){const colors=this.isDarkMode?{system:"#60a5fa",command:"#93c5fd",success:"#f472b6",error:"#f87171",processing:"#fbbf24",info:"#d1d5db",hint:"#d1d5db"}:{system:"#1e40af",command:"#1d4ed8",success:"#be185d",error:"#dc2626",processing:"#d97706",info:"#7c3aed",hint:"#374151"};const defaultTextColor=this.isDarkMode?"#d1d5db":"#374151";this.output.querySelectorAll("div").forEach(line=>{const text=line.textContent;let type="default";if(text.includes("📋")||text.includes("🎨")||text.includes("🎮")||text.includes("UI起動")){type="system"}else if(text.startsWith("> ")){type="command"}else if(text.includes("✅")||text.includes("⭐")||text.includes("生成しました")){type="success"}else if(text.includes("❌")||text.includes("エラー")){type="error"}else if(text.includes("中...")){type="processing"}else if(text.includes("📍")||text.includes("使用モデル:")||text.includes("位置:")){type="info"}else if(text.includes("   ")){type="hint"}line.style.color=colors[type]||defaultTextColor})}showImportInterface(){if(!this.fileInput){this.fileInput=document.createElement("input");this.fileInput.type="file";this.fileInput.accept=".glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov";this.fileInput.style.display="none";this.fileInput.onchange=e=>this.handleFileSelection(e);document.body.appendChild(this.fileInput)}this.enableDragAndDrop()}hideImportInterface(){if(this.fileSelectButton&&this.fileSelectButton.parentNode){this.fileSelectButton.parentNode.removeChild(this.fileSelectButton)}this.disableDragAndDrop()}openFileSelector(){if(this.fileInput){this.fileInput.click()}}triggerFileSelection(){if(!this.fileInput){this.showImportInterface()}this.openFileSelector();this.selectMode("import",true)}async handleFileSelection(event){const file=event.target.files[0];if(!file)return;try{if(this.selectedFile&&this.selectedFile.url){URL.revokeObjectURL(this.selectedFile.url)}const fileType=this.detectFileType(file.name);const fileUrl=URL.createObjectURL(file);this.selectedFile={file:file,url:fileUrl,type:fileType,name:file.name};this.selectMode("import",true);const defaultPrompt=`中央に設置 (${file.name})`;this.input.value=defaultPrompt;this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`,"system");this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`,"system");setTimeout(()=>{this.executeCommand()},500)}catch(error){console.error("File selection error:",error);this.addOutput(`❌ ファイル選択エラー: ${error.message}`,"error")}finally{if(event.target){event.target.value=""}}}enableDragAndDrop(){if(!this.input)return;this.input.addEventListener("dragover",this.handleDragOver.bind(this));this.input.addEventListener("drop",this.handleDrop.bind(this));this.input.addEventListener("dragenter",this.handleDragEnter.bind(this));this.input.addEventListener("dragleave",this.handleDragLeave.bind(this))}disableDragAndDrop(){if(!this.input)return;this.input.removeEventListener("dragover",this.handleDragOver.bind(this));this.input.removeEventListener("drop",this.handleDrop.bind(this));this.input.removeEventListener("dragenter",this.handleDragEnter.bind(this));this.input.removeEventListener("dragleave",this.handleDragLeave.bind(this))}handleDragOver(e){e.preventDefault();this.input.style.background=this.isDarkMode?"rgba(236, 72, 153, 0.1)":"rgba(236, 72, 153, 0.05)"}handleDragEnter(e){e.preventDefault();this.input.style.background=this.isDarkMode?"rgba(236, 72, 153, 0.1)":"rgba(236, 72, 153, 0.05)"}handleDragLeave(e){e.preventDefault();this.input.style.background=""}async handleDrop(e){e.preventDefault();this.input.style.background="";const files=Array.from(e.dataTransfer.files);if(files.length===0)return;const file=files[0];const fileType=this.detectFileType(file.name);if(!fileType){this.addOutput("❌ サポートされていないファイル形式です","error");return}this.handleFileSelection({target:{files:[file]}})}detectFileType(fileName){const ext=fileName.toLowerCase().split(".").pop();if(["glb","gltf"].includes(ext))return"3d";if(["jpg","jpeg","png","webp"].includes(ext))return"image";if(["mp4","mov","webm"].includes(ext))return"video";return null}async handleImportCommand(command){if(!this.selectedFile){throw new Error("ファイルが選択されていません")}try{const position=this.sceneManager?this.sceneManager.parsePosition(command):{x:0,y:5,z:-10};let result;switch(this.selectedFile.type){case"3d":if(this.sceneManager){result=await this.sceneManager.load3DModel(this.selectedFile.url,{position:position})}else{throw new Error("SceneManager が利用できません")}break;case"image":if(this.sceneManager){result=await this.sceneManager.loadImageFile(this.selectedFile.url,{position:position,fileName:this.selectedFile.name})}else{throw new Error("SceneManager が利用できません")}break;case"video":if(this.sceneManager){result=await this.sceneManager.loadVideoFile(this.selectedFile.url,{position:position,fileName:this.selectedFile.name})}else{throw new Error("SceneManager が利用できません")}break;default:throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`)}const processedFileName=this.selectedFile?.name;const importedType=this.selectedFile?.type;const importedUrl=this.selectedFile?.url;if(importedType!=="video"&&importedUrl){URL.revokeObjectURL(importedUrl)}this.selectedFile=null;this.selectMode("generate",false);return{success:true,message:`${processedFileName||"ファイル"} を ${position.x}, ${position.y}, ${position.z} に配置しました`,objectId:result.objectId}}catch(error){if(this.selectedFile?.url){URL.revokeObjectURL(this.selectedFile.url)}this.selectedFile=null;this.selectMode("generate",false);throw error}}handleDeleteModeSelection(){const selectedObject=this.sceneManager?.selectedObject;if(selectedObject){const objectName=selectedObject.userData?.originalPrompt||selectedObject.name||"選択したオブジェクト";this.input.value=`${objectName}を削除 ⏎`;this.input.focus();this.input.setSelectionRange(this.input.value.length,this.input.value.length);this.addOutput(`🎯 削除対象: ${objectName}`,"system")}else{this.input.value="";this.addOutput("❗ 削除するオブジェクトを選択後、削除ボタンを押してください","system");this.triggerAttentionAnimation("delete")}}handleModifyModeSelection(){const selectedObject=this.sceneManager?.selectedObject;if(selectedObject){const objectName=selectedObject.userData?.originalPrompt||selectedObject.name||"選択したオブジェクト";this.input.value=`${objectName}を`;this.input.focus();this.input.setSelectionRange(this.input.value.length,this.input.value.length);this.addOutput(`🎯 修正対象: ${objectName}`,"system")}else{this.input.value="";this.addOutput("❗ 修正するオブジェクトを選択後、修正ボタンを押してください","system");this.triggerAttentionAnimation("modify")}}triggerAttentionAnimation(mode){const chatOutput=this.chatOutput;const inputField=this.input;this.addMicroShakeEffect(chatOutput);this.addContextGlow(inputField,mode);this.addEmotionalPulse(chatOutput,mode);this.add3DDepthEffect(chatOutput)}addMicroShakeEffect(element){element.style.animation="microShake2025 0.5s ease-in-out";this.ensureMicroShakeAnimation();setTimeout(()=>{element.style.animation=""},500)}addContextGlow(element,mode){const glowColor=mode==="delete"?"rgba(239, 68, 68, 0.4)":"rgba(99, 102, 241, 0.4)";element.style.transition="all 0.3s ease";element.style.boxShadow=`0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;setTimeout(()=>{element.style.boxShadow=""},3e3)}addEmotionalPulse(element,mode){const pulseColor=mode==="delete"?"#ef4444":this.isWabiSabiMode?"#8BC34A":"#6366f1";element.style.borderLeft=`4px solid ${pulseColor}`;element.style.animation="emotionalPulse2025 2s ease-in-out infinite";this.ensureEmotionalPulseAnimation();setTimeout(()=>{element.style.animation="";element.style.borderLeft=""},6e3)}add3DDepthEffect(element){element.style.transform="translateZ(8px) rotateX(1deg)";element.style.transition="transform 0.3s ease";setTimeout(()=>{element.style.transform=""},2e3)}ensureMicroShakeAnimation(){if(document.getElementById("micro-shake-2025"))return;const style=document.createElement("style");style.id="micro-shake-2025";style.textContent=`\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;document.head.appendChild(style)}ensureEmotionalPulseAnimation(){if(document.getElementById("emotional-pulse-2025"))return;const style=document.createElement("style");style.id="emotional-pulse-2025";style.textContent=`\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;document.head.appendChild(style)}clearInputOnModeSwitch(newMode){if(this.input.value.trim()){const isPreviousModeMessage=this.isPreviousModeMessage(this.input.value,newMode);if(isPreviousModeMessage){this.input.value="";this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`,"system")}}}isPreviousModeMessage(inputValue,currentMode){const deletePatterns=[/.*を削除$/,/削除$/];const modifyPatterns=[/.*を$/,/.*を変更/,/.*をピンク/,/.*を大きく/,/.*を小さく/,/.*を移動/,/回転/,/反転/,/ミラー/,/傾け/,/向きを変え/,/.*を.*色/,/.*を.*サイズ/];const importPatterns=[/ファイル/,/画像/,/インポート/];switch(currentMode){case"delete":return modifyPatterns.some(pattern=>pattern.test(inputValue))||importPatterns.some(pattern=>pattern.test(inputValue));case"modify":return deletePatterns.some(pattern=>pattern.test(inputValue))||importPatterns.some(pattern=>pattern.test(inputValue));case"import":return deletePatterns.some(pattern=>pattern.test(inputValue))||modifyPatterns.some(pattern=>pattern.test(inputValue));case"generate":return deletePatterns.some(pattern=>pattern.test(inputValue))||modifyPatterns.some(pattern=>pattern.test(inputValue))||importPatterns.some(pattern=>pattern.test(inputValue));default:return false}}getModeDisplayName(mode){const modeNames={generate:"生成",import:"インポート",modify:"修正",delete:"削除"};return modeNames[mode]||mode}createFloatingChocolateIcon(){if(this.floatingChocolateIcon){this.floatingChocolateIcon.remove()}this.floatingChocolateIcon=document.createElement("div");this.floatingChocolateIcon.innerHTML="🍫";this.floatingChocolateIcon.title="ChocoDrop を開く (@キーでも開けます)";this.floatingChocolateIcon.style.cssText=`\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;this.floatingChocolateIcon.addEventListener("mouseover",()=>{this.floatingChocolateIcon.style.transform="scale(1.1) translateY(-2px)";this.floatingChocolateIcon.style.boxShadow="0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)";this.floatingChocolateIcon.style.opacity="1";this.floatingChocolateIcon.style.filter="none"});this.floatingChocolateIcon.addEventListener("mouseout",()=>{this.floatingChocolateIcon.style.transform="scale(1) translateY(0)";this.floatingChocolateIcon.style.boxShadow="0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)";this.floatingChocolateIcon.style.opacity="0.8";this.floatingChocolateIcon.style.filter="none"});this.floatingChocolateIcon.addEventListener("click",()=>{if(this.isVisible){this.hide()}else{this.show()}});this.floatingChocolateIcon.addEventListener("contextmenu",e=>{e.preventDefault();this.showFloatingIconContextMenu(e)});document.body.appendChild(this.floatingChocolateIcon)}showFloatingIconContextMenu(event){const existingMenu=document.querySelector(".floating-icon-context-menu");if(existingMenu){existingMenu.remove()}const menu=document.createElement("div");menu.className="floating-icon-context-menu";menu.style.cssText=`\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isWabiSabiMode?"rgba(239, 235, 233, 0.9)":this.isDarkMode?"rgba(17, 24, 39, 0.85)":"rgba(255, 255, 255, 0.85)"};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isWabiSabiMode?"rgba(161, 136, 127, 0.4)":this.isDarkMode?"rgba(129, 140, 248, 0.3)":"rgba(99, 102, 241, 0.2)"};\n      border-radius: 12px;\n      box-shadow: ${this.isWabiSabiMode?"0 8px 24px rgba(93, 64, 55, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)":"0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)"};\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode?"#5D4037":this.isDarkMode?"#ffffff":"#1f2937"};\n    `;const openFormItem=document.createElement("div");openFormItem.innerHTML="📄 フォームを開く";openFormItem.style.cssText=`\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode?"#8D6E63":"#6366f1"};\n      text-shadow: ${this.isWabiSabiMode?"0 2px 4px rgba(141, 110, 99, 0.3)":"0 2px 4px rgba(99, 102, 241, 0.3)"};\n    `;openFormItem.addEventListener("mouseover",()=>{openFormItem.style.background=this.isWabiSabiMode?"rgba(161, 136, 127, 0.15)":this.isDarkMode?"rgba(99, 102, 241, 0.15)":"rgba(99, 102, 241, 0.1)";openFormItem.style.textShadow=this.isWabiSabiMode?"0 2px 6px rgba(141, 110, 99, 0.5)":"0 2px 6px rgba(99, 102, 241, 0.5)"});openFormItem.addEventListener("mouseout",()=>{openFormItem.style.background="transparent";openFormItem.style.textShadow=this.isWabiSabiMode?"0 2px 4px rgba(141, 110, 99, 0.3)":"0 2px 4px rgba(99, 102, 241, 0.3)"});openFormItem.addEventListener("click",()=>{menu.remove();if(this.isVisible){this.hide()}else{this.show()}});const hideIconItem=document.createElement("div");hideIconItem.innerHTML="✕ アイコンを非表示";hideIconItem.style.cssText=`\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode?"#8D6E63":"#6366f1"};\n      text-shadow: ${this.isWabiSabiMode?"0 2px 4px rgba(141, 110, 99, 0.3)":"0 2px 4px rgba(99, 102, 241, 0.3)"};\n    `;hideIconItem.addEventListener("mouseover",()=>{hideIconItem.style.background=this.isWabiSabiMode?"rgba(161, 136, 127, 0.15)":this.isDarkMode?"rgba(99, 102, 241, 0.15)":"rgba(99, 102, 241, 0.1)";hideIconItem.style.textShadow=this.isWabiSabiMode?"0 2px 6px rgba(141, 110, 99, 0.5)":"0 2px 6px rgba(99, 102, 241, 0.5)"});hideIconItem.addEventListener("mouseout",()=>{hideIconItem.style.background="transparent";hideIconItem.style.textShadow=this.isWabiSabiMode?"0 2px 4px rgba(141, 110, 99, 0.3)":"0 2px 4px rgba(99, 102, 241, 0.3)"});hideIconItem.addEventListener("click",()=>{menu.remove();this.hideFloatingIcon()});menu.appendChild(openFormItem);menu.appendChild(hideIconItem);document.body.appendChild(menu);const rect=menu.getBoundingClientRect();if(rect.right>window.innerWidth){menu.style.left=`${event.clientX-rect.width}px`}if(rect.bottom>window.innerHeight){menu.style.top=`${event.clientY-rect.height}px`}const closeMenu=e=>{if(!menu.contains(e.target)){menu.remove();document.removeEventListener("click",closeMenu)}};setTimeout(()=>{document.addEventListener("click",closeMenu)},10)}hideFloatingIcon(){if(this.floatingChocolateIcon){this.floatingChocolateIcon.style.display="none"}}showFloatingIcon(){if(this.floatingChocolateIcon){this.floatingChocolateIcon.style.display="flex"}}dispose(){this.clearKeywordHighlighting();if(this.fileInput&&this.fileInput.parentNode){this.fileInput.parentNode.removeChild(this.fileInput)}if(this.selectedFile&&this.selectedFile.url){URL.revokeObjectURL(this.selectedFile.url)}if(this.floatingChocolateIcon&&this.floatingChocolateIcon.parentNode){this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon)}if(this.container&&this.container.parentElement){this.container.parentElement.removeChild(this.container)}}showOverlayTextarea(){if(this.overlayTextarea)return;this.isExpanded=true;this.overlayTextarea=document.createElement("textarea");this.overlayTextarea.value=this.input.value;this.overlayTextarea.placeholder=this.input.placeholder;const containerRect=this.container.getBoundingClientRect();const overlayHeight=300;const padding=20;let top=containerRect.top+60;let left=containerRect.left;let width=containerRect.width;if(left+width>window.innerWidth-padding){left=window.innerWidth-width-padding}if(left<padding){left=padding;width=Math.min(width,window.innerWidth-2*padding)}if(top+overlayHeight>window.innerHeight-padding){top=Math.max(padding,window.innerHeight-overlayHeight-padding)}const overlayBackground=this.isWabiSabiMode?"linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))":this.isDarkMode?"linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))":"linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))";const overlayBorder=this.isWabiSabiMode?"1px solid rgba(93, 64, 55, 0.5)":this.isDarkMode?"1px solid rgba(99, 102, 241, 0.25)":"1px solid rgba(255, 255, 255, 0.5)";const overlayInnerShadow=this.isWabiSabiMode?"0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)":this.isDarkMode?"0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)":"0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)";const overlayTextColor=this.getInputTextColor();this.overlayTextarea.style.cssText=`\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${overlayBackground};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${overlayBorder};\n      box-shadow: ${overlayInnerShadow};\n      border-radius: 16px;\n      color: ${overlayTextColor};\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;document.body.appendChild(this.overlayTextarea);requestAnimationFrame(()=>{this.overlayTextarea.style.opacity="1"});this.overlayTextarea.focus();this.overlayTextarea.addEventListener("input",e=>{this.input.value=e.target.value});this.overlayTextarea.addEventListener("keydown",e=>{if(e.key==="Escape"){this.hideOverlayTextarea()}});this.overlayTextarea.addEventListener("blur",()=>{setTimeout(()=>this.hideOverlayTextarea(),100)})}hideOverlayTextarea(){if(!this.overlayTextarea)return;this.isExpanded=false;this.overlayTextarea.style.opacity="0";setTimeout(()=>{if(this.overlayTextarea){document.body.removeChild(this.overlayTextarea);this.overlayTextarea=null}},200)}hideOverlayTextarea(){if(!this.overlayTextarea)return;this.isExpanded=false;this.overlayTextarea.style.opacity="0";setTimeout(()=>{if(this.overlayTextarea){document.body.removeChild(this.overlayTextarea);this.overlayTextarea=null}},200)}}function createChocoDrop(scene,options={}){if(!scene){throw new Error("THREE.Scene インスタンスが必要です")}const{camera:camera=null,renderer:renderer=null,serverUrl:serverUrl=null,client:client=null,onControlsToggle:onControlsToggle=()=>{},sceneOptions:sceneOptions={},uiOptions:uiOptions={}}=options;const resolvedServerUrl=serverUrl||sceneOptions.serverUrl||null;const chocoDropClient=client||new ChocoDropClient(resolvedServerUrl);const sceneManager=new SceneManager(scene,{camera:camera,renderer:renderer,serverUrl:resolvedServerUrl,client:chocoDropClient,...sceneOptions});const commandUI=new CommandUI({sceneManager:sceneManager,client:chocoDropClient,onControlsToggle:onControlsToggle,...uiOptions});return{client:chocoDropClient,sceneManager:sceneManager,ui:commandUI,dispose(){commandUI.dispose?.();sceneManager.dispose?.()}}}const createChocoDro=createChocoDrop;const createLiveCommand=createChocoDrop;function createChocoDropDemo(scene,options={}){if(!scene){throw new Error("THREE.Scene インスタンスが必要です")}const{camera:camera=null,renderer:renderer=null,serverUrl:serverUrl=null,client:client=null,onControlsToggle:onControlsToggle=()=>{},sceneOptions:sceneOptions={},uiOptions:uiOptions={},...otherSceneOptions}=options;const resolvedServerUrl=serverUrl||sceneOptions.serverUrl||null;const chocoDropClient=client||new ChocoDropClient(resolvedServerUrl);const mergedSceneOptions={...sceneOptions,...otherSceneOptions};const sceneManager=new SceneManager(scene,{camera:camera,renderer:renderer,serverUrl:resolvedServerUrl,client:chocoDropClient,...mergedSceneOptions});const commandUI=new CommandUIDemo({sceneManager:sceneManager,client:chocoDropClient,onControlsToggle:onControlsToggle,...uiOptions});sceneManager.ui=commandUI;commandUI.setSceneManager(sceneManager);return{sceneManager:sceneManager,ui:commandUI,client:chocoDropClient,dispose:()=>{if(commandUI)commandUI.dispose();if(sceneManager)sceneManager.dispose()}}}var index={ChocoDropClient:ChocoDropClient,ChocoDroClient:ChocoDroClient,LiveCommandClient:LiveCommandClient,SceneManager:SceneManager,CommandUI:CommandUIDemo,CommandUIDemo:CommandUIDemo,createChocoDrop:createChocoDropDemo,createChocoDro:createChocoDro,createLiveCommand:createLiveCommand};exports.ChocoDroClient=ChocoDroClient;exports.ChocoDropClient=ChocoDropClient;exports.CommandUIDemo=CommandUIDemo;exports.LiveCommandClient=LiveCommandClient;exports.SceneManager=SceneManager;exports.createChocoDro=createChocoDro;exports.createChocoDrop=createChocoDropDemo;exports.createChocoDropDemo=createChocoDropDemo;exports.createLiveCommand=createLiveCommand;exports.default=index;Object.defineProperty(exports,"__esModule",{value:true})});
//# sourceMappingURL=chocodrop-demo.umd.min.js.map