{"version":3,"file":"chocodrop-demo.umd.min.js","sources":["../src/client/LiveCommandClient.js","../src/common/translation-dictionary.js","../src/client/SceneManager.js","../src/client/demo/CommandUIDemo.js","../src/client/CommandUI.js","../src/client/bootstrap.js","../src/client/demo/index.js"],"sourcesContent":["/**\n * ChocoDrop Client - サーバーとの通信クライアント\n */\nexport class ChocoDropClient {\n  constructor(serverUrl = null) {\n    this.serverUrl = null;\n    this.initialized = false;\n    this.initPromise = null;\n\n    if (serverUrl) {\n      this.serverUrl = serverUrl;\n      this.initialized = true;\n      console.log('🍫 ChocoDropClient initialized:', serverUrl);\n    } else {\n      // 設定取得を遅延実行（Promiseを保存）\n      this.initPromise = this.initializeWithConfig();\n    }\n  }\n\n  /**\n   * サーバーから設定を取得して初期化\n   */\n  async initializeWithConfig() {\n    try {\n      // 現在のページのホストとポートを基準に設定API呼び出し\n      const baseUrl = `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\n\n      const response = await fetch(`${baseUrl}/api/config`);\n      if (response.ok) {\n        const config = await response.json();\n        this.serverUrl = config.serverUrl;\n        console.log('🍫 ChocoDropClient initialized from config:', this.serverUrl);\n      } else {\n        // フォールバック：ポート推測\n        this.serverUrl = this.detectServerUrl();\n        console.log('🍫 ChocoDropClient fallback to detected URL:', this.serverUrl);\n      }\n    } catch (error) {\n      console.warn('⚠️ ChocoDrop config fetch failed, using fallback:', error);\n      this.serverUrl = this.detectServerUrl();\n    }\n\n    this.initialized = true;\n  }\n\n  /**\n   * サーバーURL自動検出（フォールバック）\n   */\n  detectServerUrl() {\n    const currentPort = window.location.port;\n    const protocol = window.location.protocol;\n    const hostname = window.location.hostname;\n\n    // ポートが未指定の場合（ファイルプロトコル等）は既定の 3011 を使用\n    if (!currentPort) {\n      return `${protocol}//${hostname}:3011`;\n    }\n\n    return `${protocol}//${hostname}:${currentPort}`;\n  }\n\n  /**\n   * 初期化完了を待機\n   */\n  async ensureInitialized() {\n    if (this.initialized) return;\n\n    // initPromiseがあれば待機\n    if (this.initPromise) {\n      await this.initPromise;\n      return;\n    }\n\n    // フォールバック：初期化されていない場合はエラー\n    throw new Error('ChocoDropClient not initialized');\n  }\n\n  /**\n   * 画像生成リクエスト\n   */\n  async generateImage(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎨 Requesting image generation: \"${prompt}\"`);\n\n    try {\n      const payload = {\n        prompt,\n        width: options.width || 512,\n        height: options.height || 512\n      };\n\n      if (options.service) {\n        payload.service = options.service;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Image generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Image generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成リクエスト\n   */\n  async generateVideo(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎬 Requesting video generation: \"${prompt}\"`);\n\n    try {\n      const safeDefaults = {\n        // aspect_ratio: サーバー側で各モデル最適な比率を自動選択\n        resolution: '720p',\n        enable_safety_checker: true,\n        enable_prompt_expansion: true\n      };\n\n      const payload = {\n        prompt,\n        duration: typeof options.duration === 'number' && options.duration > 0 ? options.duration : 3,\n        resolution: options.resolution || safeDefaults.resolution,\n        enable_safety_checker: options.enable_safety_checker ?? safeDefaults.enable_safety_checker,\n        enable_prompt_expansion: options.enable_prompt_expansion ?? safeDefaults.enable_prompt_expansion\n      };\n\n      // ユーザーが明示的にアスペクト比を指定した場合のみ追加\n      if (options.aspect_ratio) {\n        payload.aspect_ratio = options.aspect_ratio;\n      }\n      // それ以外はサーバー側で各モデルに最適な比率を自動選択\n\n      if (options.model) {\n        payload.model = options.model;\n      }\n\n      if (typeof options.width === 'number' && options.width > 0) {\n        payload.width = options.width;\n      }\n\n      if (typeof options.height === 'number' && options.height > 0) {\n        payload.height = options.height;\n      }\n\n      if (typeof options.seed === 'number') {\n        payload.seed = options.seed;\n      }\n\n      if (options.negative_prompt) {\n        payload.negative_prompt = options.negative_prompt;\n      }\n\n      if (typeof options.frames_per_second === 'number' && options.frames_per_second > 0) {\n        payload.frames_per_second = options.frames_per_second;\n      }\n\n      if (typeof options.guidance_scale === 'number') {\n        payload.guidance_scale = options.guidance_scale;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate-video`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Video generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Video generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド実行\n   */\n  async executeCommand(command) {\n    await this.ensureInitialized();\n    console.log(`🎯 Executing command: \"${command}\"`);\n\n    try {\n      const response = await fetch(`${this.serverUrl}/api/command`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ command })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Command execution result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 利用可能なサービス一覧取得\n   */\n  async getAvailableServices() {\n    await this.ensureInitialized();\n    try {\n      const response = await fetch(`${this.serverUrl}/api/services`);\n      \n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      return await response.json();\n\n    } catch (error) {\n      console.error('❌ Failed to get services:', error);\n      return [];\n    }\n  }\n}\n\n// 後方互換のため旧名称もエクスポート\nexport const LiveCommandClient = ChocoDropClient;\nexport const ChocoDroClient = ChocoDropClient;\n","/**\n * ChocoDrop 共通翻訳辞書\n * サーバー・クライアント共通で使用する日本語→英語翻訳辞書\n */\n\nconst TRANSLATION_DICTIONARY = {\n  // ファンタジー・魔法系\n  'ユニコーン': 'unicorn',\n  'ドラゴン': 'dragon',\n  '龍': 'dragon',\n  '怪獣': 'monster',\n  'モンスター': 'monster',\n  '魔法使い': 'wizard',\n  '魔術師': 'sorcerer',\n  '魔女': 'witch',\n  '妖精': 'fairy',\n  '🧚': 'fairy',\n  '🧙': 'wizard',\n  '魔法杖': 'magic wand',\n  '杖': 'wand',\n  'スタッフ': 'staff',\n  '魔法': 'magic',\n  '呪文': 'spell',\n  '魔法陣': 'magic circle',\n  '水晶玉': 'crystal ball',\n  '薬瓶': 'potion bottle',\n  '魔導書': 'grimoire',\n  'フェニックス': 'phoenix',\n  'グリフィン': 'griffin',\n  'ペガサス': 'pegasus',\n  'ケルベロス': 'cerberus',\n\n  // 動物\n  '画像': 'image',\n  '写真': 'photo',\n  'イメージ': 'image',\n  '絵': 'picture',\n  'ファイル': 'file',\n  'メディア': 'media',\n  '素材': 'asset',\n  '動画': 'video',\n  'ビデオ': 'video',\n  'ムービー': 'movie',\n  '映像': 'video',\n  'クリップ': 'clip',\n  '猫': 'cat',\n  'ネコ': 'cat',\n  'ねこ': 'cat',\n  '犬': 'dog',\n  'イヌ': 'dog',\n  'いぬ': 'dog',\n  '狼': 'wolf',\n  '熊': 'bear',\n  'ライオン': 'lion',\n  'トラ': 'tiger',\n  '象': 'elephant',\n  'キリン': 'giraffe',\n  'シマウマ': 'zebra',\n  'パンダ': 'panda',\n  'ウサギ': 'rabbit',\n  'リス': 'squirrel',\n  'ハムスター': 'hamster',\n  'フクロウ': 'owl',\n  'ワシ': 'eagle',\n  'カラス': 'crow',\n  'ハト': 'dove',\n  'ペンギン': 'penguin',\n  'イルカ': 'dolphin',\n  'クジラ': 'whale',\n  'サメ': 'shark',\n  'タコ': 'octopus',\n  'カニ': 'crab',\n  'エビ': 'shrimp',\n\n  // 自然・風景\n  '花': 'flower',\n  'はな': 'flower',\n  'ハナ': 'flower',\n  '桜': 'cherry blossom',\n  'バラ': 'rose',\n  'ひまわり': 'sunflower',\n  'チューリップ': 'tulip',\n  '雲': 'cloud',\n  '空': 'sky',\n  '海': 'ocean',\n  '湖': 'lake',\n  '川': 'river',\n  '山': 'mountain',\n  'やま': 'mountain',\n  'ヤマ': 'mountain',\n  '森': 'forest',\n  '木': 'tree',\n  'き': 'tree',\n  'キ': 'tree',\n  '草原': 'meadow',\n  '砂漠': 'desert',\n  '滝': 'waterfall',\n  '洞窟': 'cave',\n  '島': 'island',\n  '星座': 'constellation',\n  '銀河': 'galaxy',\n  '惑星': 'planet',\n\n  // 建物・場所\n  '城': 'castle',\n  'しろ': 'castle',\n  'シロ': 'castle',\n  '宮殿': 'palace',\n  '家': 'house',\n  '塔': 'tower',\n  '教会': 'church',\n  '神殿': 'temple',\n  '図書館': 'library',\n  '学校': 'school',\n  '病院': 'hospital',\n  '駅': 'station',\n  '空港': 'airport',\n  '港': 'port',\n  '橋': 'bridge',\n  '灯台': 'lighthouse',\n  '風車': 'windmill',\n  '庭': 'garden',\n  '公園': 'park',\n  '遊園地': 'amusement park',\n\n  // 乗り物\n  '車': 'car',\n  '電車': 'train',\n  'バス': 'bus',\n  '飛行機': 'airplane',\n  'ヘリコプター': 'helicopter',\n  '船': 'ship',\n  'ヨット': 'yacht',\n  '自転車': 'bicycle',\n  'バイク': 'motorcycle',\n  'ロケット': 'rocket',\n\n  // 天体・時間\n  '月': 'moon',\n  '太陽': 'sun',\n  '星': 'star',\n  '彗星': 'comet',\n  '流れ星': 'shooting star',\n  '虹': 'rainbow',\n  '雷': 'lightning',\n  '雪': 'snow',\n  '雨': 'rain',\n  '嵐': 'storm',\n  '霧': 'fog',\n  '氷': 'ice',\n  '火': 'fire',\n  '水': 'water',\n  '風': 'wind',\n  '光': 'light',\n  '影': 'shadow',\n  '夜': 'night',\n  '朝': 'morning',\n  '夕方': 'evening',\n\n  // 色・素材\n  '赤': 'red',\n  '青': 'blue',\n  '緑': 'green',\n  '黄色': 'yellow',\n  '白': 'white',\n  '黒': 'black',\n  '紫': 'purple',\n  'ピンク': 'pink',\n  'オレンジ': 'orange',\n  '茶色': 'brown',\n  'グレー': 'gray',\n  '金': 'gold',\n  '銀': 'silver',\n  'プラチナ': 'platinum',\n  '銅': 'copper',\n  '鉄': 'iron',\n  '石': 'stone',\n  '木材': 'wood',\n  'ガラス': 'glass',\n  '水晶': 'crystal',\n  'ダイヤモンド': 'diamond',\n\n  // 鳥類\n  '鳥': 'bird',\n  'とり': 'bird',\n  'トリ': 'bird'\n};\n\n/**\n * オブジェクト識別用のエイリアス辞書（拡張版）\n * 翻訳辞書から逆マッピングを生成し、エイリアスも含める\n */\nfunction createObjectKeywords() {\n  const keywords = {};\n\n  // 翻訳辞書から逆マッピングを作成\n  for (const [japanese, english] of Object.entries(TRANSLATION_DICTIONARY)) {\n    // 英語をキーとして日本語とエイリアスを格納\n    if (!keywords[japanese]) {\n      keywords[japanese] = [];\n    }\n\n    // 英語の翻訳を追加\n    if (!keywords[japanese].includes(english)) {\n      keywords[japanese].push(english);\n    }\n  }\n\n  return keywords;\n}\n\n/**\n * 日本語キーワードを英語に翻訳\n */\nfunction translateKeyword(japanese) {\n  return TRANSLATION_DICTIONARY[japanese] || japanese;\n}\n\n/**\n * ファイル名と日本語キーワードをマッチング\n */\nfunction matchKeywordWithFilename(keyword, filename, keywords) {\n  const lowerFilename = filename.toLowerCase();\n\n  // 直接マッチ\n  if (lowerFilename.includes(keyword.toLowerCase())) {\n    return true;\n  }\n\n  // キーワード辞書での相互マッチ\n  for (const [jp, aliases] of Object.entries(keywords)) {\n    // キーワードが日本語の場合、対応する英語エイリアスをファイル名で探す\n    if (keyword.includes(jp)) {\n      for (const alias of aliases) {\n        if (lowerFilename.includes(alias.toLowerCase())) {\n          return true;\n        }\n      }\n    }\n  }\n\n  // 翻訳辞書での直接マッチ\n  const englishKeyword = translateKeyword(keyword);\n  if (englishKeyword !== keyword && lowerFilename.includes(englishKeyword.toLowerCase())) {\n    return true;\n  }\n\n  return false;\n}\n\n// ES6 Modules (クライアント用)\nexport { TRANSLATION_DICTIONARY, createObjectKeywords, translateKeyword, matchKeywordWithFilename };\n\n// CommonJS (サーバー用)\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = { TRANSLATION_DICTIONARY, createObjectKeywords, translateKeyword, matchKeywordWithFilename };\n}\n","import * as THREE from 'three';\nimport { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\nimport { createObjectKeywords, matchKeywordWithFilename } from '../common/translation-dictionary.js';\n\n/**\n * Scene Manager - 3D scene integration for ChocoDrop System\n * Handles natural language parsing and 3D object management\n */\nexport class SceneManager {\n  constructor(scene, options = {}) {\n    if (!scene) {\n      throw new Error('THREE.Scene is required');\n    }\n    \n    this.scene = scene;\n    this.camera = options.camera || null;\n    this.renderer = options.renderer || null;\n    this.labelRenderer = null; // CSS2DRenderer for UI overlays like audio controls\n    // ChocoDrop Client（共通クライアント注入を優先）\n    // 外部フォルダから共有する場合は options.client でクライアントを再利用\n    this.client = options.client || new ChocoDropClient(options.serverUrl);\n    \n    // 実験オブジェクト管理用グループ\n    this.experimentGroup = new THREE.Group();\n    this.experimentGroup.name = 'LiveExperiments';\n    // 一旦シーンに追加（後でカメラに移動する可能性あり）\n    this.scene.add(this.experimentGroup);\n    \n    // コマンド履歴\n    this.commandHistory = [];\n    \n    // オブジェクト管理\n    this.spawnedObjects = new Map();\n    this.objectCounter = 0;\n    this.selectedObject = null;\n    this.selectedImageService = options.selectedImageService || null;\n    this.selectedVideoService = options.selectedVideoService || null;\n    this.audioControls = new Map();\n    this.audioControlUpdateInterval = null;\n    this.audioControlUpdateListener = null;\n\n    // Animation管理（UI要素用）\n    this.clock = new THREE.Clock();\n    \n    // レイキャスティング用\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    this.lastHoveredObject = null;\n    \n    // 設定\n    this.config = {\n      showLocationIndicator: options.showLocationIndicator !== false,\n      indicatorDuration: options.indicatorDuration || 3000,\n      defaultObjectScale: options.defaultObjectScale || 1.0,\n      enableObjectSelection: options.enableObjectSelection !== false,\n      enableMouseInteraction: options.enableMouseInteraction,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n    \n    // クリックイベントの設定\n    this.setupClickEvents();\n    \n    console.log('🧪 SceneManager initialized with click selection');\n\n    // デバッグやコンソール操作を容易にするためグローバル参照を保持\n    if (typeof globalThis !== 'undefined') {\n      globalThis.sceneManager = this;\n    }\n  }\n  /**\n   * クリックイベントの設定\n   */\n  setupClickEvents() {\n    // enableMouseInteractionが明示的にtrueの場合のみマウス操作を有効化\n    if (this.config.enableMouseInteraction === true && this.renderer) {\n      this.setupObjectDragging();\n      console.log('🖱️ Mouse interaction enabled - Click to select, Shift+drag to move objects');\n    } else if (this.config.enableMouseInteraction === true && !this.renderer) {\n      console.warn('⚠️ Mouse interaction requested but renderer not provided. Mouse interaction disabled.');\n    } else {\n      console.log('🖱️ Mouse interaction disabled (safe mode). Set enableMouseInteraction: true to enable.');\n    }\n  }\n\n  // デバッグ情報表示メソッド\n  debugSceneInfo() {\n    console.log('🔍 === SCENE DEBUG INFO ===');\n    \n    // カメラ情報\n    if (this.camera) {\n      console.log(`📷 Camera:\n        - Position: (${this.camera.position.x.toFixed(2)}, ${this.camera.position.y.toFixed(2)}, ${this.camera.position.z.toFixed(2)})\n        - Rotation: (${(this.camera.rotation.x * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.y * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.z * 180 / Math.PI).toFixed(1)}°)\n        - FOV: ${this.camera.fov || 'N/A'}\n        - Near/Far: ${this.camera.near || 'N/A'}/${this.camera.far || 'N/A'}`);\n    }\n    \n    // シーン階層\n    console.log(`🌳 Scene hierarchy:\n      - Total objects in scene: ${this.scene.children.length}\n      - experimentGroup exists: ${this.scene.getObjectByName('LiveExperiments') ? 'Yes' : 'No'}\n      - experimentGroup children: ${this.experimentGroup.children.length}`);\n    \n    // 生成されたオブジェクト\n    console.log(`📦 Spawned objects: ${this.spawnedObjects.size}`);\n    this.spawnedObjects.forEach((obj, id) => {\n      const worldPos = new THREE.Vector3();\n      obj.getWorldPosition(worldPos);\n      console.log(`  - ${id} (${obj.userData.type}): \n        Local: (${obj.position.x.toFixed(2)}, ${obj.position.y.toFixed(2)}, ${obj.position.z.toFixed(2)})\n        World: (${worldPos.x.toFixed(2)}, ${worldPos.y.toFixed(2)}, ${worldPos.z.toFixed(2)})\n        Visible: ${obj.visible}, Scale: ${obj.scale.x.toFixed(2)}`);\n      \n      // 3Dモデルの詳細情報\n      if (obj.userData.type === 'generated_3d_model') {\n        const box = new THREE.Box3().setFromObject(obj);\n        const size = box.getSize(new THREE.Vector3());\n        const center = box.getCenter(new THREE.Vector3());\n        console.log(`    📐 Bounding box - Center: (${center.x.toFixed(2)}, ${center.y.toFixed(2)}, ${center.z.toFixed(2)}), Size: (${size.x.toFixed(2)}, ${size.y.toFixed(2)}, ${size.z.toFixed(2)})`);\n        \n        // メッシュ数\n        let meshCount = 0;\n        obj.traverse((child) => {\n          if (child.isMesh) meshCount++;\n        });\n        console.log(`    🎭 Meshes: ${meshCount}`);\n      }\n    });\n    \n    // カメラからの距離計算\n    if (this.camera && this.spawnedObjects.size > 0) {\n      console.log(`📏 Distances from camera:`);\n      this.spawnedObjects.forEach((obj, id) => {\n        const distance = this.camera.position.distanceTo(obj.position);\n        console.log(`  - ${id}: ${distance.toFixed(2)} units`);\n      });\n    }\n    \n    console.log('=========================');\n  }\n  \n\n  \n  /**\n   * オブジェクト選択\n   */\n  selectObject(object) {\n    // 既に同じオブジェクトが選択されている場合は何もしない\n    if (this.selectedObject === object) {\n      return;\n    }\n\n    // 前の選択を解除\n    this.deselectObject();\n\n    this.selectedObject = object;\n\n    this.createModernSelectionIndicator(object);\n\n    console.log(`✅ Selected object: ${object.name}`);\n    \n    // CommandUIに選択情報を表示\n    if (this.commandUI) {\n      const objectInfo = object.userData || {};\n      this.commandUI.addOutput(`📍 選択: ${object.name}`, 'info');\n      if (objectInfo.prompt) {\n        this.commandUI.addOutput(`   プロンプト: ${objectInfo.prompt}`, 'hint');\n      }\n      if (objectInfo.modelName) {\n        this.commandUI.addOutput(`   モデル: ${objectInfo.modelName}`, 'hint');\n      }\n\n      // 削除モードが待機中の場合、削除コマンドを自動入力\n      if (this.commandUI.currentMode === 'delete') {\n        const objectName = objectInfo.originalPrompt || object.name || '選択したオブジェクト';\n        this.commandUI.input.value = `${objectName}を削除`;\n        this.commandUI.input.focus();\n        // カーソルを文末に移動（選択状態を解除）\n        this.commandUI.input.setSelectionRange(this.commandUI.input.value.length, this.commandUI.input.value.length);\n        this.commandUI.addOutput(`🎯 削除対象設定: ${objectName}`, 'system');\n      }\n    }\n  }\n\n  createModernSelectionIndicator(object) {\n    // シンプルで確実な選択インジケーター\n    // 既存のインジケーターを削除（重複防止）\n    const existingIndicator = object.getObjectByName('selectionIndicator');\n    if (existingIndicator) {\n      object.remove(existingIndicator);\n    }\n\n    const indicatorGroup = new THREE.Group();\n    indicatorGroup.name = 'selectionIndicator';\n\n    // オブジェクトのバウンディングボックスを正確に取得\n    const box = new THREE.Box3().setFromObject(object);\n    const size = box.getSize(new THREE.Vector3());\n    const center = box.getCenter(new THREE.Vector3());\n\n    // 小さなマージンを追加して枠が見えやすくする\n    const margin = 0.1;\n    const adjustedSize = new THREE.Vector3(\n      size.x + margin,\n      size.y + margin, \n      size.z + margin\n    );\n\n    // シンプルな黄色い枠線\n    // PlaneGeometryの場合は平面的な枠を作成\n    if (object.geometry && object.geometry.type === 'PlaneGeometry') {\n      // スケールは既にオブジェクトに適用されているので、ジオメトリのサイズのみ使用\n      const width = object.geometry.parameters.width;\n      const height = object.geometry.parameters.height;\n      \n      // 平面の周りに枠線を作成\n      const shape = new THREE.Shape();\n      shape.moveTo(-width/2, -height/2);\n      shape.lineTo(width/2, -height/2);\n      shape.lineTo(width/2, height/2);\n      shape.lineTo(-width/2, height/2);\n      shape.lineTo(-width/2, -height/2);\n      \n      const points = shape.getPoints();\n      const geometryLine = new THREE.BufferGeometry().setFromPoints(points);\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const materialLine = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const line = new THREE.Line(geometryLine, materialLine);\n      line.position.set(0, 0, 0.01); // 少し前に出して見えるようにする\n      indicatorGroup.add(line);\n    } else {\n      // その他のオブジェクトは通常の3Dボックス枠\n      const edgesGeometry = new THREE.EdgesGeometry(\n        new THREE.BoxGeometry(adjustedSize.x, adjustedSize.y, adjustedSize.z)\n      );\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const edgesMaterial = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const edges = new THREE.LineSegments(edgesGeometry, edgesMaterial);\n      edges.position.copy(center);\n      indicatorGroup.add(edges);\n    }\n\n    // インジケーターをオブジェクトの子として追加（オブジェクトと一緒に動く）\n    object.add(indicatorGroup);\n    indicatorGroup.position.set(0, 0, 0); // 親からの相対位置は0\n\n    // リサイズハンドルを追加（親オブジェクトを直接渡す）\n    this.addResizeHandles(indicatorGroup, adjustedSize, center, object);\n  }\n\n  /**\n   * リサイズハンドルを追加\n   */\n  addResizeHandles(indicatorGroup, size, center, parentObject) {\n    // PlaneGeometryオブジェクト用のリサイズハンドル\n    console.log('🔧 addResizeHandles called');\n\n    if (!parentObject) {\n      console.log('❌ No parent object provided');\n      return;\n    }\n\n    if (!parentObject.geometry) {\n      console.log('❌ Parent has no geometry');\n      return;\n    }\n\n    if (parentObject.geometry.type !== 'PlaneGeometry') {\n      console.log(`❌ Geometry type is ${parentObject.geometry.type}, not PlaneGeometry`);\n      return;\n    }\n\n    console.log('✅ PlaneGeometry detected, creating handles');\n\n    const handleSize = 0.15; // 2025年トレンド: より小さく洗練された\n    const handleGeometry = new THREE.BoxGeometry(handleSize, handleSize, handleSize);\n    // 角を丸くするため、後でroundedBoxを使用\n\n    // 常に前面に表示されるマテリアル\n    // 2025年トレンド: アダプティブリサイズハンドル\n    const adaptiveColor = this.getAdaptiveSelectionColor();\n    const handleMaterial = new THREE.MeshBasicMaterial({\n      color: adaptiveColor,\n      transparent: true,\n      opacity: 0.8,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    const handleHoverMaterial = new THREE.MeshBasicMaterial({\n      color: this.getAdaptiveHoverColor(),\n      transparent: true,\n      opacity: 1.0,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    // 四隅の位置を計算（親オブジェクトのジオメトリサイズに基づく）\n    const width = parentObject.geometry.parameters.width;\n    const height = parentObject.geometry.parameters.height;\n\n    const positions = [\n      { x: width/2, y: height/2, z: 0.1, corner: 'top-right' },\n      { x: -width/2, y: height/2, z: 0.1, corner: 'top-left' },\n      { x: width/2, y: -height/2, z: 0.1, corner: 'bottom-right' },\n      { x: -width/2, y: -height/2, z: 0.1, corner: 'bottom-left' }\n    ];\n\n    positions.forEach((pos, index) => {\n      const handle = new THREE.Mesh(handleGeometry, handleMaterial.clone());\n      handle.position.set(pos.x, pos.y, pos.z); // 親からの相対位置\n      handle.userData = { \n        isResizeHandle: true, \n        handleIndex: index,\n        corner: pos.corner,\n        defaultMaterial: handle.material,\n        hoverMaterial: handleHoverMaterial.clone()\n      };\n      \n      // ホバーエフェクトを追加\n      // レンダリング順序を高く設定（常に前面）\n      handle.renderOrder = 1001;\n\n      handle.onHover = () => {\n        handle.material = handle.userData.hoverMaterial;\n        handle.scale.setScalar(1.5);\n        document.body.style.cursor = 'nw-resize';\n      };\n\n      handle.onHoverExit = () => {\n        handle.material = handle.userData.defaultMaterial;\n        handle.scale.setScalar(1.0);\n        document.body.style.cursor = 'default';\n      };\n\n      indicatorGroup.add(handle);\n\n      // デバッグ用にハンドルが見えることを確認\n      console.log(`🔴 Added resize handle at ${pos.corner}`);\n    });\n  }\n\n  /**\n   * 選択インジケーターのスケールをリアルタイム更新（パフォーマンス最適化版）\n   */\n  updateSelectionIndicatorScale(object) {\n    // リサイズ中はインジケーターの更新をスキップ（パフォーマンス最適化）\n    // 枠線はオブジェクトと一緒にスケールされるので、特別な更新は不要\n\n    // ハンドル位置のみ更新が必要な場合は、ここで処理\n    // 現在は自動的にオブジェクトと一緒にスケールされるので処理不要\n  }\n\n  /**\n   * オブジェクト選択解除\n   */\n  deselectObject() {\n    // シンプルで確実な選択解除\n    if (this.selectedObject) {\n      // 選択インジケーターを削除（オブジェクトの子から探す）\n      const indicator = this.selectedObject.getObjectByName('selectionIndicator');\n      if (indicator) {\n        this.selectedObject.remove(indicator);\n        \n        // メモリリークを防ぐためにリソースを破棄\n        indicator.traverse((child) => {\n          if (child.geometry) child.geometry.dispose();\n          if (child.material) {\n            if (Array.isArray(child.material)) {\n              child.material.forEach(material => material.dispose());\n            } else {\n              child.material.dispose();\n            }\n          }\n        });\n      }\n\n      console.log(`✅ Deselected: ${this.selectedObject.name}`);\n      this.selectedObject = null;\n    }\n  }\n\n  /**\n   * マウスドラッグによるオブジェクト移動機能\n   */\n  setupObjectDragging() {\n    if (!this.renderer) return;\n    \n    const canvas = this.renderer.domElement;\n    let isDragging = false;\n    let dragObject = null;\n    let dragOffset = new THREE.Vector3();\n    let mouseStart = new THREE.Vector2();\n    let dragMode = 'move'; // 'move', 'resize', 'rotate'\n    let originalScale = new THREE.Vector3();\n    \n    canvas.addEventListener('mousedown', (event) => {\n      if (event.button !== 0) return; // 左クリックのみ\n      \n      // レイキャスティングでオブジェクト検出\n      const rect = canvas.getBoundingClientRect();\n      this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(this.mouse, this.camera);\n      // オブジェクトとその子（選択インジケーター含む）を検出対象に\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const object = intersects[0].object;\n\n        // リサイズハンドルがクリックされた場合 - Shiftキー不要\n        if (object.userData && object.userData.isResizeHandle) {\n          // リサイズモード開始\n          isDragging = true;\n          dragObject = this.selectedObject; // リサイズする実際のオブジェクト\n          dragMode = 'resize';\n          \n          // ハンドル情報を保存\n          this.resizeHandleInfo = {\n            corner: object.userData.corner,\n            handleIndex: object.userData.handleIndex\n          };\n          \n          originalScale.copy(dragObject.scale);\n          mouseStart.set(event.clientX, event.clientY);\n          canvas.style.cursor = 'nw-resize';\n          console.log(`🔄 Started resizing: ${dragObject.name} from ${object.userData.corner}`);\n          return;\n        }\n\n        // 回転ハンドルがクリックされた場合\n        if (object.userData && object.userData.isRotateHandle) {\n          // 回転モード開始（今後実装）\n          console.log(`🔄 Rotation handle clicked for: ${this.selectedObject.name}`);\n          return;\n        }\n\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video' || object.userData.type === 'generated_3d_model' || object.userData.source === 'imported_file')) {\n          \n          // 🗑️ Deleteモードでのクリック処理\n          if (this.commandUI && this.commandUI.currentMode === 'delete') {\n            // 削除確認ダイアログを表示して直接削除\n            const objectName = object.name;\n            console.log(`🗑️ Delete mode: clicked on ${objectName}`);\n            \n            this.commandUI.showDeleteConfirmation(`オブジェクト「${objectName}」を削除`)\n              .then(confirmed => {\n                if (confirmed) {\n                  this.removeObject(objectName);\n                  this.commandUI.addOutput(`🗑️ 削除完了: ${objectName}`, 'success');\n                } else {\n                  this.commandUI.addOutput(`❌ 削除キャンセル: ${objectName}`, 'info');\n                }\n              })\n              .catch(error => {\n                console.error('Delete confirmation error:', error);\n                this.commandUI.addOutput(`❌ 削除エラー: ${objectName}`, 'error');\n              });\n            return; // 削除モードの場合は移動処理をスキップ\n          }\n          \n          // 移動モード開始（Shiftキー不要）\n          isDragging = true;\n          dragObject = object;\n          dragMode = 'move';\n          dragOffset.copy(intersects[0].point).sub(object.position);\n          mouseStart.set(event.clientX, event.clientY);\n\n          // 高品質な視覚フィードバック\n          if (object.material) {\n            // 移動中の透明度変更（オプション）\n            // object.material.opacity = 0.8;\n            // object.material.transparent = true;\n          }\n          // スケール変更を削除（大きくなる原因）\n\n          canvas.style.cursor = 'move';\n          console.log(`🔄 Started moving: ${object.name} (Shift-free interaction)`);\n\n          // 選択状態も更新\n          this.selectObject(object);\n        } else {\n          // 通常クリック: 選択のみ\n          this.selectObject(object);\n        }\n      } else {\n        this.deselectObject();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (event) => {\n      // ドラッグ中でない場合はホバーエフェクトを処理\n      if (!isDragging) {\n        this.handleHoverEffects(event, canvas);\n        return;\n      }\n      \n      // ドラッグ中の処理\n      if (!dragObject) return;\n      \n      // マウスの移動量を計算\n      const deltaX = event.clientX - mouseStart.x;\n      const deltaY = event.clientY - mouseStart.y;\n\n      if (dragMode === 'resize') {\n        // リサイズモード: より直感的な方向計算\n        if (!this.resizeHandleInfo) {\n          console.error('❌ Resize handle info missing');\n          return;\n        }\n        \n        const corner = this.resizeHandleInfo.corner;\n        let scaleMultiplier = 1;\n        \n        // 各ハンドルの位置に応じた直感的な方向計算\n        switch(corner) {\n          case 'top-right': \n            // 右上ハンドル: 右上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'top-left':\n            // 左上ハンドル: 左上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-right':\n            // 右下ハンドル: 右下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-left':\n            // 左下ハンドル: 左下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          default:\n            scaleMultiplier = 1 + (deltaX + deltaY) * 0.001; // フォールバック\n        }\n        \n        const newScale = Math.max(0.1, Math.min(5.0, originalScale.x * scaleMultiplier));\n        dragObject.scale.setScalar(newScale);\n\n        // 選択インジケーターも更新（パフォーマンス最適化）\n        this.updateSelectionIndicatorScale(dragObject);\n\n      } else if (dragMode === 'move') {\n        // 移動モード（従来の処理）\n        const cameraRight = new THREE.Vector3();\n        const cameraUp = new THREE.Vector3();\n        this.camera.getWorldDirection(new THREE.Vector3()); // dummy call to update matrix\n        cameraRight.setFromMatrixColumn(this.camera.matrixWorld, 0).normalize();\n        cameraUp.setFromMatrixColumn(this.camera.matrixWorld, 1).normalize();\n\n        // マウス移動をワールド座標に変換\n        const moveScale = 0.01;\n        const worldMove = new THREE.Vector3()\n          .add(cameraRight.clone().multiplyScalar(deltaX * moveScale))\n          .add(cameraUp.clone().multiplyScalar(-deltaY * moveScale));\n\n        dragObject.position.add(worldMove);\n        mouseStart.set(event.clientX, event.clientY);\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (isDragging && dragObject) {\n        // ドラッグ終了の処理\n        if (dragObject.material) {\n          dragObject.material.opacity = 1.0;\n          dragObject.material.transparent = false;\n        }\n\n        // スケールを元に戻す（移動開始時に変更した場合）\n        // 現在は移動開始時のスケール変更を削除したので、この処理は不要\n\n        console.log(`✅ Finished dragging: ${dragObject.name} to (${dragObject.position.x.toFixed(1)}, ${dragObject.position.y.toFixed(1)}, ${dragObject.position.z.toFixed(1)})`);\n\n        isDragging = false;\n        dragObject = null;\n        dragMode = 'move'; // リセット\n        this.resizeHandleInfo = null; // リサイズハンドル情報をクリーンアップ\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Shift+ホイールでリサイズ機能を追加\n    canvas.addEventListener('wheel', (event) => {\n      event.preventDefault();\n      \n      const rect = canvas.getBoundingClientRect();\n      const mouse = new THREE.Vector2();\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(mouse, this.camera);\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (obj.userData && (obj.userData.type === 'generated_image' || obj.userData.type === 'generated_video' || obj.userData.type === 'generated_3d_model')) {\n          const scaleFactor = event.deltaY > 0 ? 0.9 : 1.1;\n          const newScale = obj.scale.x * scaleFactor;\n          \n          // 最小・最大サイズ制限\n          if (newScale >= 0.2 && newScale <= 5.0) {\n            obj.scale.setScalar(newScale);\n            \n            // 高品質な視覚フィードバック\n            if (obj.material) {\n              obj.material.emissive.setHex(0x333333);\n              setTimeout(() => {\n                if (obj.material) {\n                  obj.material.emissive.setHex(0x000000);\n                }\n              }, 150);\n            }\n            \n            console.log(`🔄 Resized ${obj.userData.type}: ${obj.name} to scale ${newScale.toFixed(2)} (Shift-free interaction)`);\n          }\n        }\n      }\n    });\n\n    // 選択したオブジェクトの角度調整キーボードコントロール\n    document.addEventListener('keydown', (event) => {\n      const activeEl = document.activeElement;\n      if (activeEl && (activeEl.tagName === 'INPUT' || activeEl.tagName === 'TEXTAREA' || activeEl.isContentEditable)) {\n        return;\n      }\n      if (!this.selectedObject) return;\n      \n      const object = this.selectedObject;\n      // 生成された画像・動画のみ角度調整可能\n      if (!object.userData || (object.userData.type !== 'generated_image' && object.userData.type !== 'generated_video')) {\n        return;\n      }\n      \n      const rotationStep = Math.PI / 36; // 5度ずつ回転\n      let rotated = false;\n      \n      switch (event.key) {\n        case 'ArrowLeft':\n          object.rotation.y -= rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowRight':\n          object.rotation.y += rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowUp':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationX = object.rotation.x - rotationStep;\n          if (newRotationX >= -Math.PI/6 && newRotationX <= Math.PI/6) {\n            object.rotation.x = newRotationX;\n            rotated = true;\n          }\n          break;\n        case 'ArrowDown':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationXDown = object.rotation.x + rotationStep;\n          if (newRotationXDown >= -Math.PI/6 && newRotationXDown <= Math.PI/6) {\n            object.rotation.x = newRotationXDown;\n            rotated = true;\n          }\n          break;\n        case 'r':\n        case 'R':\n          // リセット：正面向きに戻す\n          object.rotation.x = 0;\n          // カメラの視線方向（ユーザーがモニターで見ている方向）に向ける\n          const cameraDirection = new THREE.Vector3();\n          this.camera.getWorldDirection(cameraDirection);\n          const targetPoint = object.position.clone().add(cameraDirection.multiplyScalar(-1));\n          object.lookAt(targetPoint);\n          object.rotation.x = 0; // お辞儀防止\n          rotated = true;\n          console.log(`🔄 Reset rotation for: ${object.name}`);\n          break;\n\n        case 'i':\n        case 'I':\n          // デバッグ情報表示\n          this.debugSceneInfo();\n          event.preventDefault();\n          break;\n      }\n      \n      if (rotated) {\n        event.preventDefault();\n        const angles = {\n          x: (object.rotation.x * 180 / Math.PI).toFixed(1),\n          y: (object.rotation.y * 180 / Math.PI).toFixed(1),\n          z: (object.rotation.z * 180 / Math.PI).toFixed(1)\n        };\n        console.log(`🔄 Rotated ${object.userData.type}: ${object.name} to (${angles.x}°, ${angles.y}°, ${angles.z}°)`);\n      }\n    });\n\n    console.log('🖱️ Object dragging system enabled (Drag to move objects - Shift-free interaction)');\n    console.log('🔄 Object resizing system enabled (Scroll to resize images/videos - Shift-free interaction)');\n    console.log('🎯 Angle adjustment enabled (Select object + Arrow keys to rotate, R to reset)');\n  }\n\n  handleHoverEffects(event, canvas) {\n    // レイキャスティングでオブジェクト検出\n    const rect = canvas.getBoundingClientRect();\n    this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    \n    this.raycaster.setFromCamera(this.mouse, this.camera);\n\n    // オブジェクトとその子（選択インジケーター含む）を検出対象に\n    const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n    \n    // 前回ホバーしていたオブジェクトのエフェクトをリセット\n    if (this.lastHoveredObject && this.lastHoveredObject.onHoverExit) {\n      this.lastHoveredObject.onHoverExit();\n      this.lastHoveredObject = null;\n    }\n    \n    // 新しいホバー対象を検出\n    if (intersects.length > 0) {\n      const object = intersects[0].object;\n      \n      // リサイズハンドルにホバーした場合\n      if (object.userData && object.userData.isResizeHandle && object.onHover) {\n        object.onHover();\n        this.lastHoveredObject = object;\n        return;\n      }\n      \n      // 通常のオブジェクトにホバーした場合\n      if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video')) {\n        // 移動可能なオブジェクトの場合はカーソルを変更\n        canvas.style.cursor = 'move';\n\n        this.lastHoveredObject = { onHoverExit: () => { canvas.style.cursor = 'default'; } };\n        return;\n      }\n    }\n    \n    // ホバー対象がない場合はデフォルトカーソル\n    canvas.style.cursor = 'default';\n  }\n\n  /**\n   * メインコマンド実行エントリーポイント\n   * @param {string} command - 自然言語コマンド\n   */\n  async executeCommand(command) {\n    const timestamp = Date.now();\n    console.log(`🎯 Executing: \"${command}\"`);\n    \n    try {\n      // コマンド解析\n      const parsed = this.parseCommand(command);\n      console.log('📝 Parsed:', parsed);\n      \n      // コマンド実行\n      const result = await this.dispatchCommand(parsed);\n      \n      // 履歴に記録\n      this.commandHistory.push({\n        timestamp,\n        command,\n        parsed,\n        result,\n        status: 'success'\n      });\n      \n      return result;\n      \n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      \n      this.commandHistory.push({\n        timestamp,\n        command,\n        error: error.message,\n        status: 'error'\n      });\n      \n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド解析\n   * @param {string} command \n   * @returns {object} 解析結果\n   */\n  parseCommand(command) {\n    // プレフィックスでモードを判定\n    if (command.startsWith('[変更] ')) {\n      const actualCommand = command.replace('[変更] ', '');\n      return this.parseObjectModificationCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    if (command.startsWith('[削除] ')) {\n      const actualCommand = command.replace('[削除] ', '');\n      return this.parseDeleteCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    // 動画生成の判定（プレフィックスなし = 生成モード）\n    const cmd = command.toLowerCase().trim();\n    \n    // 自然言語オブジェクト操作の判定（「オブジェクト名 + 動作」パターン）\n    const naturalLanguagePattern = this.parseNaturalLanguageCommand(cmd);\n    if (naturalLanguagePattern) {\n      return naturalLanguagePattern;\n    }\n    \n    // 動画関連キーワードをチェック（文脈を考慮）\n    const videoKeywords = ['動画', 'ビデオ', 'ムービー', '映像', '動く',\n                          'video', 'movie', 'motion', 'moving', 'clip'];\n\n    // アニメーションは文脈で判定\n    const isAnimationForVideo = cmd.includes('アニメーション') &&\n      (cmd.includes('作って') || cmd.includes('生成') || cmd.includes('を') ||\n       cmd.includes('create') || cmd.includes('make') || cmd.includes('generate'));\n\n    const isVideoRequest = videoKeywords.some(keyword => cmd.includes(keyword)) ||\n      (cmd.includes('animate') && !cmd.includes('を')) || // \"animate a cat\"は動画、\"猫をanimate\"は操作\n      isAnimationForVideo;\n    \n    if (isVideoRequest) {\n      return {\n        type: 'video_generation',\n        prompt: command,\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // オブジェクト選択関連キーワードをチェック\n    const selectKeywords = ['選択', 'select', 'オブジェクト選択', '既存', 'existing'];\n    const isSelectRequest = selectKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isSelectRequest) {\n      return {\n        type: 'object_selection',\n        position: this.parsePosition(cmd)\n      };\n    }\n    \n    // ファイルインポート関連キーワードをチェック\n    const importKeywords = ['インポート', 'import', '読み込', '読込', 'ファイル', 'file', '画像を選択', '動画を選択', '選択して配置'];\n    const isImportRequest = importKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isImportRequest) {\n      const isVideoImport = cmd.includes('動画') || cmd.includes('video') || cmd.includes('mp4');\n      return {\n        type: 'file_import',\n        fileType: isVideoImport ? 'video' : 'image',\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // 画像生成キーワードをチェック\n    const imageKeywords = ['画像', '写真', 'イメージ', '絵', 'ピクチャー', \n                          'image', 'picture', 'photo', 'generate', 'create', 'make', 'draw'];\n    const isImageRequest = imageKeywords.some(keyword => cmd.includes(keyword));\n    \n    // デフォルト: 画像生成として処理\n    return {\n      type: 'image_generation',\n      prompt: command,\n      position: this.parsePosition(cmd),\n      size: this.parseSize(cmd)\n    };\n  }\n\n  /**\n   * コマンドから対象オブジェクトを特定\n   */\n  /**\n   * オブジェクト識別用キーワード辞書を取得\n   */\n  getObjectKeywords() {\n    return createObjectKeywords();\n  }\n\n  normalizeTargetPhrase(phrase) {\n    if (!phrase) {\n      return '';\n    }\n\n    let result = `${phrase}`.trim();\n\n    result = result.replace(/[。、，,.!?！？]/g, ' ').trim();\n\n    const referentialPattern = /^(さっき|先ほど|直前|最近|この前|その|あの|この|前回|前の|最新|最後|last|latest)\\s*(の)?/i;\n    while (referentialPattern.test(result)) {\n      result = result.replace(referentialPattern, '').trim();\n    }\n\n    const politePattern = /(してください|して下さい|してね|してよ|してくれ|してくれませんか|してくださいね|してくださいよ|お願いします?|お願い|頼む)$/i;\n    result = result.replace(politePattern, '').trim();\n\n    const trailingPatterns = [\n      /(を)?(左右反転|反転|削除|消して|消す|変更|変えて|塗り替えて|塗って|回転|回して|移動|動かして|拡大|縮小|大きく|小さく|並べ|寄せて|整列|選択|選んで|指定|生成|作って|描いて|アップロード|アップして|読み込んで|読み込んだ|開いて|閉じて|置いて|配置して|貼り付けて|flip|delete|remove|change|make|turn|rotate|move|scale|resize|generate|create).*$/i,\n      /(を|に|へ|で|から|まで|と|や|って)$/i\n    ];\n\n    for (const pattern of trailingPatterns) {\n      result = result.replace(pattern, '').trim();\n    }\n\n    result = result.replace(/(を|に|へ|で|から|まで|と|や|って)$/i, '').trim();\n\n    if (!result) {\n      const englishLeadingPattern = /^(flip|delete|remove|change|make|turn|rotate|move|scale|resize|generate|create)\\s+/i;\n      if (englishLeadingPattern.test(phrase.trim())) {\n        result = phrase.trim().replace(englishLeadingPattern, '').trim();\n      }\n    }\n\n    result = result.replace(/(を|に|へ|で|から|まで|と|や|って)$/i, '').trim();\n\n    return result;\n  }\n\n  isReferentialCommand(command) {\n    if (!command) {\n      return false;\n    }\n    return /(さっき|先ほど|直前|最近|前回|前の|最後|最新|last|previous|before)/i.test(command);\n  }\n\n  getObjectSourceType(object) {\n    if (!object || !object.userData) {\n      return null;\n    }\n    return object.userData.source || object.userData.type || null;\n  }\n\n  getRecentObjects(command) {\n    const objects = Array.from(this.spawnedObjects.values());\n    if (objects.length === 0) {\n      return [];\n    }\n\n    const importContext = /(インポート|取り込|アップロード|読み込)/.test(command);\n    const generatedContext = /(生成|作っ|描い|create|generate)/.test(command);\n\n    let candidates = objects;\n    if (importContext) {\n      candidates = candidates.filter(obj => this.getObjectSourceType(obj) === 'imported_file');\n    } else if (generatedContext) {\n      candidates = candidates.filter(obj => {\n        const source = this.getObjectSourceType(obj);\n        return source === 'generated_image' || source === 'generated_video';\n      });\n    }\n\n    if (candidates.length === 0) {\n      candidates = objects;\n    }\n\n    return candidates.sort((a, b) => {\n      const aTime = a.userData?.lastModified || a.userData?.createdAt || 0;\n      const bTime = b.userData?.lastModified || b.userData?.createdAt || 0;\n      return bTime - aTime;\n    });\n  }\n\n  findRecentObjectByContext(command, normalizedTarget, objectKeywords) {\n    const candidates = this.getRecentObjects(command);\n    if (candidates.length === 0) {\n      return null;\n    }\n\n    if (normalizedTarget) {\n      for (const candidate of candidates) {\n        if (this.matchesObjectName(candidate, normalizedTarget, objectKeywords)) {\n          return candidate;\n        }\n      }\n    }\n\n    return candidates[0];\n  }\n\n  extractTextTokens(text) {\n    if (!text) {\n      return [];\n    }\n\n    return text\n      .replace(/[。、，,.!?！？]/g, ' ')\n      .split(/[\\s_/\\-]+/)\n      .map(token => token.trim())\n      .filter(token => token.length > 1);\n  }\n\n  buildObjectKeywordHints({ prompt = '', fileName = '', baseType = null } = {}) {\n    const keywords = new Set();\n\n    if (prompt) {\n      keywords.add(prompt.toLowerCase());\n      for (const token of this.extractTextTokens(prompt)) {\n        keywords.add(token.toLowerCase());\n      }\n    }\n\n    if (fileName) {\n      const baseName = fileName.replace(/\\.[^/.]+$/, '');\n      keywords.add(baseName.toLowerCase());\n      for (const token of this.extractTextTokens(baseName)) {\n        keywords.add(token.toLowerCase());\n      }\n    }\n\n    if (baseType === 'image') {\n      ['image', 'photo', 'picture', '画像', '写真', 'イメージ'].forEach(keyword => keywords.add(keyword));\n    } else if (baseType === 'video') {\n      ['video', 'movie', 'clip', '動画', 'ビデオ', 'ムービー', '映像'].forEach(keyword => keywords.add(keyword));\n    }\n\n    return Array.from(keywords).filter(Boolean);\n  }\n\n  findObjectByKeyword(command) {\n    // 共通翻訳辞書から拡張されたキーワード辞書を使用\n    const objectKeywords = this.getObjectKeywords();\n    const normalizedCommand = this.normalizeTargetPhrase(command);\n\n    // インポート順序での指定を解析（例: \"2番目にインポートした猫\", \"最初にインポートしたユニコーン\"）\n    const importOrderMatch = command.match(/((\\d+)番目|最初|初回|1番目)に(インポート|取り込)した(.+)/);\n    if (importOrderMatch) {\n      let orderNumber = 1; // デフォルトは1番目\n      if (importOrderMatch[2]) {\n        // 数字が指定されている場合\n        orderNumber = parseInt(importOrderMatch[2]);\n      } else if (importOrderMatch[1] === '最初' || importOrderMatch[1] === '初回') {\n        orderNumber = 1;\n      } else if (importOrderMatch[1] === '1番目') {\n        orderNumber = 1;\n      }\n      const objectName = this.normalizeTargetPhrase(importOrderMatch[4]) || importOrderMatch[4].trim();\n      return this.findImportedObjectByOrder(objectName, orderNumber, objectKeywords);\n    }\n\n    // インポート vs 生成の区別（例: \"インポートした猫\", \"生成した犬\", \"作った画像\"）\n    const sourceMatch = command.match(/(インポート|取り込|アップロード|読み込|生成|作った)した?(.+)/);\n    if (sourceMatch) {\n      const sourceType = sourceMatch[1];\n      const objectName = this.normalizeTargetPhrase(sourceMatch[2]) || sourceMatch[2].trim();\n      const isImported = sourceType === 'インポート' || sourceType === '取り込';\n      return this.findObjectBySourceAndName(objectName, isImported, objectKeywords);\n    }\n\n    if (this.isReferentialCommand(command)) {\n      const recentObject = this.findRecentObjectByContext(command, normalizedCommand, objectKeywords);\n      if (recentObject) {\n        return recentObject;\n      }\n    }\n\n    // 従来のキーワード検索（すべてのオブジェクト対象）\n    return this.findObjectByName(normalizedCommand || command, objectKeywords);\n  }\n\n  /**\n   * インポート順序でオブジェクトを検索\n   */\n  findImportedObjectByOrder(objectName, orderNumber, objectKeywords) {\n    // インポートされたオブジェクトのみを取得してimportOrder順でソート\n    const importedObjects = [];\n    for (const child of this.spawnedObjects.values()) {\n      if (!child.userData || this.getObjectSourceType(child) !== 'imported_file') continue;\n      importedObjects.push(child);\n    }\n\n    // importOrderでソート\n    importedObjects.sort((a, b) => (a.userData.importOrder || 0) - (b.userData.importOrder || 0));\n\n    // オブジェクト名でフィルタリング\n    const matchingObjects = objectName\n      ? importedObjects.filter(child => this.matchesObjectName(child, objectName, objectKeywords))\n      : importedObjects;\n\n    if (matchingObjects.length >= orderNumber) {\n      const foundObject = matchingObjects[orderNumber - 1]; // 1-based index\n      console.log(`🎯 Found ${orderNumber}番目 imported object \"${objectName}\": ${foundObject.name}`);\n      return foundObject;\n    }\n\n    console.warn(`⚠️ ${orderNumber}番目にインポートした\"${objectName}\"が見つかりません`);\n    return null;\n  }\n\n  /**\n   * ソース（インポート/生成）と名前でオブジェクトを検索\n   */\n  findObjectBySourceAndName(objectName, isImported, objectKeywords) {\n    for (const child of this.spawnedObjects.values()) {\n      if (!child.userData) continue;\n\n      const childSource = this.getObjectSourceType(child);\n      const isChildImported = childSource === 'imported_file';\n      const isChildGenerated = childSource === 'generated_image' || childSource === 'generated_video';\n\n      if (isImported && !isChildImported) continue;\n      if (!isImported && !isChildGenerated) continue;\n\n      if (this.matchesObjectName(child, objectName, objectKeywords)) {\n        const sourceLabel = isImported ? 'インポートした' : '生成した';\n        console.log(`🎯 Found ${sourceLabel} object \"${objectName}\": ${child.name}`);\n        return child;\n      }\n    }\n\n    const sourceLabel = isImported ? 'インポートした' : '生成した';\n    console.warn(`⚠️ ${sourceLabel}\"${objectName}\"が見つかりません`);\n    return null;\n  }\n\n  /**\n   * 名前でオブジェクトを検索（従来の方式）\n   */\n  findObjectByName(command, objectKeywords) {\n    const target = command && command.trim();\n    if (!target) {\n      return null;\n    }\n\n    for (const child of this.spawnedObjects.values()) {\n      if (!child) continue;\n      if (this.matchesObjectName(child, target, objectKeywords)) {\n        return child;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * オブジェクトが指定された名前にマッチするかチェック\n   */\n  matchesObjectName(child, objectName, objectKeywords) {\n    if (!child || !objectName) {\n      return false;\n    }\n\n    const targetLower = objectName.toLowerCase();\n\n    if (child.userData && Array.isArray(child.userData.keywords)) {\n      for (const keyword of child.userData.keywords) {\n        if (!keyword) continue;\n        const keywordLower = keyword.toLowerCase();\n        if (targetLower.includes(keywordLower) || keywordLower.includes(targetLower)) {\n          return true;\n        }\n      }\n    }\n\n    for (const [keyword, aliases] of Object.entries(objectKeywords)) {\n      const keywordLower = keyword.toLowerCase();\n      if (targetLower.includes(keywordLower)) {\n        return true;\n      }\n\n      for (const alias of aliases) {\n        const aliasLower = alias.toLowerCase();\n        if (targetLower.includes(aliasLower)) {\n          return true;\n        }\n      }\n    }\n\n    if (child.userData && child.userData.prompt) {\n      const promptLower = child.userData.prompt.toLowerCase();\n      if (promptLower.includes(targetLower) || targetLower.includes(promptLower)) {\n        return true;\n      }\n    }\n\n    if (child.userData && child.userData.fileName) {\n      if (matchKeywordWithFilename(objectName, child.userData.fileName, objectKeywords)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * 画像生成コマンド解析\n   */\n  parseImageGenerationCommand(command) {\n    // プロンプト抽出 (「を」「に」「で」などで区切る)\n    let prompt = command;\n    const particles = ['を', 'に', 'で', 'の'];\n    \n    for (const particle of particles) {\n      if (command.includes(particle)) {\n        const parts = command.split(particle);\n        if (parts[0]) {\n          prompt = parts[0].trim();\n          break;\n        }\n      }\n    }\n    \n    // 不要な語句を除去\n    prompt = prompt\n      .replace(/(画像|作って|生成|して|ください)/g, '')\n      .trim();\n    \n    return {\n      type: 'image_generation',\n      prompt,\n      position: this.parsePosition(command),\n      size: this.parseSize(command)\n    };\n  }\n\n  /**\n   * オブジェクト変更コマンド解析\n   */\n  parseObjectModificationCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 色変更の解析\n    let color = null;\n    const colorMap = {\n      '赤': 0xff0000, '赤色': 0xff0000,\n      '青': 0x0000ff, '青色': 0x0000ff,\n      '緑': 0x00ff00, '緑色': 0x00ff00,\n      '黄': 0xffff00, '黄色': 0xffff00, '黄色い': 0xffff00,\n      '紫': 0xff00ff, '紫色': 0xff00ff,\n      '橙': 0xff8800, '橙色': 0xff8800, 'オレンジ': 0xff8800, 'オレンジ色': 0xff8800,\n      '白': 0xffffff, '白色': 0xffffff,\n      '黒': 0x000000, '黒色': 0x000000,\n      '灰': 0x808080, '灰色': 0x808080, 'グレー': 0x808080, 'グレー色': 0x808080,\n      'ピンク': 0xffc0cb, 'ピンク色': 0xffc0cb,\n      '茶': 0x8b4513, '茶色': 0x8b4513,\n      '銀': 0xc0c0c0, '銀色': 0xc0c0c0,\n      '金': 0xffd700, '金色': 0xffd700\n    };\n    \n    for (const [colorName, colorValue] of Object.entries(colorMap)) {\n      if (cmd.includes(colorName)) {\n        color = colorValue;\n        break;\n      }\n    }\n\n    // エフェクト解析の追加\n    const effects = this.parseEffects(cmd);\n    \n    // サイズ変更の解析\n    let scale = null;\n    if (cmd.includes('大きく') || cmd.includes('拡大')) {\n      scale = 1.5;\n    } else if (cmd.includes('小さく') || cmd.includes('縮小')) {\n      scale = 0.7;\n    } else if (cmd.includes('倍')) {\n      const match = cmd.match(/(\\d+(?:\\.\\d+)?)\\s*倍/);\n      if (match) {\n        scale = parseFloat(match[1]);\n      }\n    }\n    \n    // 移動コマンドの解析\n    let movement = null;\n    if (cmd.includes('移動') || cmd.includes('動か') || cmd.includes('へ')) {\n      movement = this.parsePositionFromPrompt(cmd);\n    }\n\n    // 回転コマンドの解析\n    let rotation = null;\n    if (cmd.includes('回転') || cmd.includes('回す') || cmd.includes('回して') || cmd.includes('rotate')) {\n      // 角度指定があるかチェック\n      const degreeMatch = cmd.match(/(\\d+)\\s*度/);\n      if (degreeMatch) {\n        rotation = parseFloat(degreeMatch[1]) * Math.PI / 180; // 度をラジアンに変換\n      } else {\n        rotation = Math.PI / 4; // デフォルトは45度\n      }\n    }\n\n    // 透明度コマンドの解析\n    let opacity = null;\n    if (cmd.includes('透明') || cmd.includes('transparent')) {\n      if (cmd.includes('半透明')) {\n        opacity = 0.5;\n      } else {\n        opacity = 0.3; // デフォルトの透明度\n      }\n    } else if (cmd.includes('不透明') || cmd.includes('opaque')) {\n      opacity = 1.0;\n    }\n\n    // 反転コマンドの解析\n    let flip = null;\n    if (cmd.includes('左右反転') || cmd.includes('反転') || cmd.includes('ひっくり返') || cmd.includes('flip')) {\n      flip = true;\n    }\n\n    return {\n      type: 'object_modification',\n      command: command,\n      color: color,\n      scale: scale,\n      movement: movement,\n      rotation: rotation,\n      opacity: opacity,\n      flip: flip,\n      effects: effects,\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * エフェクト解析 - Phase 2 総合エフェクトシステム\n   */\n  parseEffects(cmd) {\n    const effects = [];\n\n    // エフェクトキーワード辞書\n    const effectKeywords = {\n      // 透明度系\n      '透明': { type: 'opacity', value: 0.0, name: 'transparent' },\n      '半透明': { type: 'opacity', value: 0.5, name: 'semi_transparent' },\n      '不透明': { type: 'opacity', value: 1.0, name: 'opaque' },\n      '濃く': { type: 'opacity', value: 1.0, name: 'solid' },\n\n      // 発光系\n      '光らせ': { type: 'glow', color: 0xffffff, intensity: 0.5, name: 'glow_white' },\n      '光る': { type: 'glow', color: 0xffffff, intensity: 0.5, name: 'glow_white' },\n      'ネオン': { type: 'glow', color: 0x00ffff, intensity: 0.8, name: 'neon_cyan' },\n      'ホログラム': { type: 'glow', color: 0x00ffff, intensity: 0.6, name: 'hologram' },\n\n      // 材質系\n      'メタリック': { type: 'material', metalness: 0.8, roughness: 0.2, name: 'metallic' },\n      '金属質': { type: 'material', metalness: 0.9, roughness: 0.1, name: 'metallic_shiny' },\n      'ガラス': { type: 'material', metalness: 0.0, roughness: 0.0, name: 'glass' },\n      'マット': { type: 'material', metalness: 0.0, roughness: 1.0, name: 'matte' },\n\n      // アニメーション系\n      'ふわふわ': { type: 'animation', animation: 'float', speed: 0.002, amplitude: 0.5, name: 'float_gentle' },\n      '浮く': { type: 'animation', animation: 'float', speed: 0.003, amplitude: 0.8, name: 'float_strong' },\n      '漂う': { type: 'animation', animation: 'float', speed: 0.001, amplitude: 0.3, name: 'float_slow' },\n\n      'ドクドク': { type: 'animation', animation: 'pulse', speed: 0.003, amplitude: 0.15, name: 'pulse_heartbeat' },\n      '鼓動': { type: 'animation', animation: 'pulse', speed: 0.0025, amplitude: 0.1, name: 'pulse_heart' },\n      '脈動': { type: 'animation', animation: 'pulse', speed: 0.004, amplitude: 0.2, name: 'pulse_throb' },\n\n      'くるくる': { type: 'animation', animation: 'spin', speed: 0.02, axis: 'y', name: 'spin_y' },\n      'スピン': { type: 'animation', animation: 'spin', speed: 0.03, axis: 'y', name: 'spin_fast' },\n      '回る': { type: 'animation', animation: 'spin', speed: 0.015, axis: 'y', name: 'spin_slow' },\n\n      'きらめ': { type: 'animation', animation: 'sparkle', intensity: 0.8, name: 'sparkle' },\n      '輝': { type: 'animation', animation: 'sparkle', intensity: 1.0, name: 'shine' },\n      'キラキラ': { type: 'animation', animation: 'sparkle', intensity: 0.9, name: 'twinkle' },\n\n      // 宇宙的エフェクト\n      '宇宙': { type: 'cosmic', colors: [0x4444ff, 0xff4488, 0x44ffaa], intensity: 0.9, name: 'cosmic' },\n      'オーロラ': { type: 'aurora', colors: [0x00ffaa, 0x4488ff, 0xff88aa], intensity: 0.8, name: 'aurora' },\n      '星雲': { type: 'nebula', colors: [0x8844ff, 0xff8844, 0x44aaff], intensity: 1.0, name: 'nebula' },\n      'エネルギー': { type: 'energy', colors: [0xffaa00, 0x00aaff, 0xaa00ff], intensity: 0.7, name: 'energy' },\n      '神秘的': { type: 'mystic', colors: [0xaa44ff, 0xff44aa, 0x44ffff], intensity: 0.6, name: 'mystic' },\n\n      // アート系エフェクト\n      '水彩': { type: 'watercolor_art', colors: [0xff6b9d, 0x4ecdc4, 0xffe66d, 0x95e1d3], opacity: 0.6, name: 'watercolor' },\n      '水彩画': { type: 'watercolor_art', colors: [0xff6b9d, 0x4ecdc4, 0xffe66d, 0x95e1d3], opacity: 0.6, name: 'watercolor' },\n      'パステル': { type: 'pastel_art', colors: [0xffb3ba, 0xffdfba, 0xffffba, 0xbaffc9, 0xbae1ff], opacity: 0.7, name: 'pastel' },\n      '虹色': { type: 'rainbow_glow', colors: [0xff0000, 0xff8800, 0xffff00, 0x00ff00, 0x0088ff, 0x0000ff, 0x8800ff], intensity: 0.5, name: 'rainbow_glow' }\n    };\n\n    // プリセット効果\n    const presetEffects = {\n      '魔法っぽく': [\n        { type: 'glow', color: 0xcc44ff, intensity: 0.7, name: 'magic_glow' },\n        { type: 'animation', animation: 'pulse', speed: 0.003, amplitude: 0.1, name: 'magic_pulse' },\n        { type: 'animation', animation: 'sparkle', intensity: 0.6, name: 'magic_sparkle' }\n      ],\n      '幽霊': [\n        { type: 'opacity', value: 0.6, name: 'ghost_transparent' },\n        { type: 'animation', animation: 'float', speed: 0.002, amplitude: 0.4, name: 'ghost_float' },\n        { type: 'glow', color: 0xffffff, intensity: 0.3, name: 'ghost_aura' }\n      ],\n      'サイバー': [\n        { type: 'glow', color: 0x00ffaa, intensity: 0.8, name: 'cyber_glow' },\n        { type: 'material', metalness: 0.8, roughness: 0.1, name: 'cyber_metal' },\n        { type: 'animation', animation: 'glitch', intensity: 0.1, name: 'cyber_glitch' }\n      ],\n      '夢みたい': [\n        { type: 'opacity', value: 0.7, name: 'dream_soft' },\n        { type: 'animation', animation: 'float', speed: 0.0015, amplitude: 0.3, name: 'dream_float' },\n        { type: 'animation', animation: 'rainbow', speed: 0.001, name: 'dream_rainbow' }\n      ]\n    };\n\n    // プリセット効果をチェック\n    for (const [presetName, presetEffectList] of Object.entries(presetEffects)) {\n      if (cmd.includes(presetName)) {\n        effects.push(...presetEffectList);\n        console.log(`✨ Preset effect applied: ${presetName}`);\n        continue;\n      }\n    }\n\n    const chromaRequested = this.requiresChromaKey(cmd);\n    const chromaConfig = chromaRequested ? this.detectChromaKeyConfig(cmd) : null;\n    const canApplyChroma = chromaConfig !== null;\n\n    // 個別効果をチェック\n    for (const [keyword, effect] of Object.entries(effectKeywords)) {\n      if (canApplyChroma && keyword === '透明') {\n        continue;\n      }\n      if (cmd.includes(keyword)) {\n        effects.push(effect);\n        console.log(`🎭 Effect detected: ${keyword} -> ${effect.name}`);\n      }\n    }\n\n    if (chromaRequested) {\n      if (canApplyChroma) {\n        effects.push({\n          type: 'chroma_key',\n          color: chromaConfig.color,\n          threshold: chromaConfig.threshold,\n          smoothing: chromaConfig.smoothing,\n          name: 'chroma_key'\n        });\n        console.log(`🪄 Chroma key requested (color: #${chromaConfig.color.toString(16)}, threshold: ${chromaConfig.threshold})`);\n      } else if (this.commandUI) {\n        this.commandUI.showInputFeedback('背景を透過するには背景色を指定してください（例：「背景の白を透過して」）', 'info');\n      }\n    }\n\n    return effects;\n  }\n\n  requiresChromaKey(cmd) {\n    if (!cmd) return false;\n    const chromaKeywords = ['クロマキー', 'グリーンバック', 'remove background', 'transparent background'];\n    if (chromaKeywords.some(keyword => cmd.includes(keyword))) {\n      return true;\n    }\n    const backgroundTerms = ['背景を', '背景の', '背景'];\n    const actionTerms = ['透過', '透明', '消', '抜', 'なくして'];\n    if (backgroundTerms.some(term => cmd.includes(term)) && actionTerms.some(term => cmd.includes(term))) {\n      return true;\n    }\n    return false;\n  }\n\n  detectChromaKeyConfig(cmd) {\n    const color = this.detectChromaKeyColor(cmd);\n    if (color === null) {\n      return null;\n    }\n    let threshold;\n    switch (color) {\n      case 0xffffff:\n        threshold = 0.12;\n        break;\n      case 0x000000:\n        threshold = 0.14;\n        break;\n      case 0x00ff00:\n        threshold = 0.32;\n        break;\n      case 0x0000ff:\n        threshold = 0.3;\n        break;\n      default:\n        threshold = 0.2;\n    }\n    return {\n      color,\n      threshold,\n      smoothing: 0.1\n    };\n  }\n\n  detectChromaKeyColor(cmd) {\n    const hexMatch = cmd.match(/#([0-9a-fA-F]{6})/);\n    if (hexMatch) {\n      return parseInt(hexMatch[1], 16);\n    }\n\n    const colorKeywords = [\n      { tokens: ['白', 'ホワイト', 'しろ'], value: 0xffffff },\n      { tokens: ['黒', 'ブラック', 'くろ'], value: 0x000000 },\n      { tokens: ['緑', 'グリーン', 'みどり'], value: 0x00ff00 },\n      { tokens: ['青', 'ブルー', 'あお'], value: 0x0000ff },\n      { tokens: ['赤', 'レッド', 'あか'], value: 0xff0000 },\n      { tokens: ['黄', 'イエロー', 'きいろ'], value: 0xffff00 },\n      { tokens: ['ピンク'], value: 0xffc0cb },\n      { tokens: ['オレンジ'], value: 0xff8800 }\n    ];\n\n    for (const entry of colorKeywords) {\n      if (entry.tokens.some(token => cmd.includes(token))) {\n        return entry.value;\n      }\n    }\n\n    if (cmd.includes('グリーンバック')) {\n      return 0x00ff00;\n    }\n\n    return null;\n  }\n\n  /**\n   * エフェクト適用システム - Phase 2\n   */\n  applyEffects(targetObject, effects) {\n    let applied = false;\n\n    for (const effect of effects) {\n      console.log(`✨ Applying effect: ${effect.name} (${effect.type})`);\n\n      switch (effect.type) {\n        case 'opacity':\n          applied = this.applyOpacityEffect(targetObject, effect) || applied;\n          break;\n        case 'glow':\n          applied = this.applyGlowEffect(targetObject, effect) || applied;\n          break;\n        case 'material':\n          applied = this.applyMaterialEffect(targetObject, effect) || applied;\n          break;\n        case 'animation':\n          applied = this.applyAnimationEffect(targetObject, effect) || applied;\n          break;\n        case 'cosmic':\n        case 'aurora':\n        case 'nebula':\n        case 'energy':\n        case 'mystic':\n        case 'rainbow_glow':\n          applied = this.applyCosmicEffect(targetObject, effect) || applied;\n          break;\n        case 'watercolor_art':\n        case 'pastel_art':\n          applied = this.applyWatercolorEffect(targetObject, effect) || applied;\n          break;\n        case 'chroma_key':\n          applied = this.applyChromaKeyEffect(targetObject, effect) || applied;\n          break;\n        default:\n          console.warn(`🚫 Unknown effect type: ${effect.type}`);\n      }\n    }\n\n    return applied;\n  }\n\n  /**\n   * 透明度エフェクト適用\n   */\n  applyOpacityEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    targetObject.material.transparent = true;\n    targetObject.material.opacity = effect.value;\n    targetObject.material.needsUpdate = true;\n\n    console.log(`👻 Opacity set to: ${effect.value} (${effect.name})`);\n    return true;\n  }\n\n  /**\n   * 発光エフェクト適用\n   */\n  applyGlowEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    if (this.ensureEmissiveSupport(targetObject)) {\n      targetObject.material.emissive = new THREE.Color(effect.color);\n      targetObject.material.emissiveIntensity = effect.intensity;\n      targetObject.material.needsUpdate = true;\n      console.log(`💡 Glow applied: color=0x${effect.color.toString(16)}, intensity=${effect.intensity}`);\n      return true;\n    }\n\n    // Fallback: 調色による簡易発光表現\n    const fallbackColor = new THREE.Color(effect.color);\n    if (!targetObject.userData.originalColor) {\n      targetObject.userData.originalColor = targetObject.material.color ? targetObject.material.color.clone() : null;\n    }\n    if (targetObject.material.color) {\n      targetObject.material.color.lerp(fallbackColor, 0.4);\n      targetObject.material.needsUpdate = true;\n      console.log('💡 Glow fallback applied via color tint');\n      return true;\n    }\n\n    console.warn('🚫 Glow effect could not be applied');\n    return false;\n  }\n\n  ensureEmissiveSupport(targetObject) {\n    const material = targetObject.material;\n    if (!material) return false;\n    return 'emissive' in material && material.emissive !== undefined;\n  }\n\n  /**\n   * 材質エフェクト適用\n   */\n  applyMaterialEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    // StandardMaterial の場合のみ適用\n    if (targetObject.material.type === 'MeshStandardMaterial') {\n      if (effect.metalness !== undefined) {\n        targetObject.material.metalness = effect.metalness;\n      }\n      if (effect.roughness !== undefined) {\n        targetObject.material.roughness = effect.roughness;\n      }\n      targetObject.material.needsUpdate = true;\n\n      console.log(`🔩 Material updated: metalness=${effect.metalness}, roughness=${effect.roughness}`);\n      return true;\n    } else {\n      console.warn(`🚫 Material effect requires StandardMaterial, got: ${targetObject.material.type}`);\n      return false;\n    }\n  }\n\n  /**\n   * アニメーションエフェクト適用\n   */\n  applyAnimationEffect(targetObject, effect) {\n    // アニメーション管理オブジェクトを初期化\n    if (!this.animations) {\n      this.animations = new Map();\n      this.startAnimationLoop();\n    }\n\n    const animationId = `${targetObject.uuid}_${effect.animation}`;\n\n    // 既存のアニメーションがあれば停止\n    if (this.animations.has(animationId)) {\n      this.animations.delete(animationId);\n    }\n\n    // 新しいアニメーションを追加\n    const animationData = {\n      object: targetObject,\n      type: effect.animation,\n      speed: effect.speed,\n      amplitude: effect.amplitude || 1.0,\n      axis: effect.axis || 'y',\n      intensity: effect.intensity || 1.0,\n      startTime: Date.now(),\n      originalPosition: { ...targetObject.position },\n      originalScale: { ...targetObject.scale },\n      originalRotation: { ...targetObject.rotation }\n    };\n\n    this.animations.set(animationId, animationData);\n    console.log(`🎬 Animation started: ${effect.animation} for ${targetObject.name}`);\n    return true;\n  }\n\n  /**\n   * 宇宙的エフェクト適用（オーロラ、星雲、エネルギー）\n   */\n  applyCosmicEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    const useColorFallback = !this.ensureEmissiveSupport(targetObject);\n\n    // アニメーション管理オブジェクトを初期化\n    if (!this.animations) {\n      this.animations = new Map();\n      this.startAnimationLoop();\n    }\n\n    // 複数色の発光と色変化アニメーションを組み合わせ\n    const cosmicAnimationId = `${targetObject.uuid}_${effect.type}`;\n\n    // 既存のコスミックエフェクトがあれば削除\n    if (this.animations.has(cosmicAnimationId)) {\n      this.animations.delete(cosmicAnimationId);\n    }\n\n    if (useColorFallback) {\n      if (targetObject.material.color) {\n        if (!targetObject.userData.originalColor) {\n          targetObject.userData.originalColor = targetObject.material.color.clone();\n        }\n        targetObject.material.color.set(effect.colors[0]);\n        targetObject.material.needsUpdate = true;\n      } else {\n        console.warn('🚫 Cosmic fallback could not adjust color');\n      }\n    } else {\n      targetObject.material.emissive = new THREE.Color(effect.colors[0]);\n      targetObject.material.emissiveIntensity = effect.intensity;\n      targetObject.material.needsUpdate = true;\n    }\n\n    // コスミックアニメーションデータを作成\n    const cosmicData = {\n      object: targetObject,\n      type: 'cosmic',\n      cosmicType: effect.type,\n      colors: effect.colors,\n      intensity: effect.intensity,\n      speed: this.getCosmicSpeed(effect.type),\n      startTime: Date.now(),\n      colorIndex: 0,\n      originalEmissive: !useColorFallback && targetObject.material.emissive ? targetObject.material.emissive.clone() : null,\n      originalEmissiveIntensity: !useColorFallback ? (targetObject.material.emissiveIntensity || 0) : 0,\n      useColorFallback\n    };\n\n    this.animations.set(cosmicAnimationId, cosmicData);\n    console.log(`🌌 Cosmic effect started: ${effect.type} with ${effect.colors.length} colors`);\n    return true;\n  }\n\n  applyChromaKeyEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n    const material = targetObject.material;\n    const texture = material.map;\n\n    if (!texture) {\n      console.warn('🚫 Chroma key requires texture map');\n      return false;\n    }\n\n    if (material.userData && material.userData.isChromaKeyMaterial && material.uniforms) {\n      material.uniforms.keyColor.value.setHex(effect.color);\n      material.uniforms.threshold.value = effect.threshold;\n      material.uniforms.smoothing.value = effect.smoothing;\n      material.needsUpdate = true;\n      console.log('🎯 Updated existing chroma key material');\n      return true;\n    }\n\n    const shaderMaterial = new THREE.ShaderMaterial({\n      uniforms: {\n        map: { value: texture },\n        keyColor: { value: new THREE.Color(effect.color) },\n        threshold: { value: effect.threshold },\n        smoothing: { value: effect.smoothing }\n      },\n      vertexShader: `varying vec2 vUv;\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}`,\n      fragmentShader: `uniform sampler2D map;\\nuniform vec3 keyColor;\\nuniform float threshold;\\nuniform float smoothing;\\nvarying vec2 vUv;\\nvoid main() {\\n  vec4 color = texture2D(map, vUv);\\n  float dist = distance(color.rgb, keyColor);\\n  float alpha = smoothstep(threshold, threshold + smoothing, dist) * color.a;\\n  if (alpha <= 0.0) discard;\\n  gl_FragColor = vec4(color.rgb, alpha);\\n}`,\n      transparent: true,\n      side: THREE.DoubleSide,\n      depthTest: material.depthTest,\n      depthWrite: material.depthWrite,\n      toneMapped: material.toneMapped === true\n    });\n\n    shaderMaterial.userData.isChromaKeyMaterial = true;\n    targetObject.material = shaderMaterial;\n\n    if (typeof material.dispose === 'function') {\n      material.dispose();\n    }\n\n    console.log('🪄 Applied chroma key shader material');\n    return true;\n  }\n\n  /**\n   * 宇宙的エフェクトのスピード設定\n   */\n  getCosmicSpeed(cosmicType) {\n    switch (cosmicType) {\n      case 'cosmic': return 0.0005;      // ゆっくりと神秘的に\n      case 'aurora': return 0.0008;      // オーロラのような流れ\n      case 'nebula': return 0.0003;      // 星雲のようにゆったり\n      case 'energy': return 0.0015;      // エネルギッシュに\n      case 'mystic': return 0.0006;      // 神秘的にゆらゆら\n      case 'rainbow_glow': return 0.001; // 虹色は適度なスピード\n      default: return 0.0008;\n    }\n  }\n\n  /**\n   * 水彩画・パステル系エフェクト適用\n   */\n  applyWatercolorEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    // 透明度を設定\n    targetObject.material.transparent = true;\n    targetObject.material.opacity = effect.opacity;\n\n    // アニメーション管理オブジェクトを初期化\n    if (!this.animations) {\n      this.animations = new Map();\n      this.startAnimationLoop();\n    }\n\n    // 水彩画アニメーションID\n    const watercolorAnimationId = `${targetObject.uuid}_${effect.type}`;\n\n    // 既存の水彩画エフェクトがあれば削除\n    if (this.animations.has(watercolorAnimationId)) {\n      this.animations.delete(watercolorAnimationId);\n    }\n\n    // 初期色を設定（発光ではなく拡散色）\n    targetObject.material.color = new THREE.Color(effect.colors[0]);\n    targetObject.material.needsUpdate = true;\n\n    // 水彩画アニメーションデータを作成\n    const watercolorData = {\n      object: targetObject,\n      type: 'watercolor',\n      artType: effect.type,\n      colors: effect.colors,\n      opacity: effect.opacity,\n      speed: this.getWatercolorSpeed(effect.type),\n      startTime: Date.now(),\n      colorIndex: 0,\n      originalColor: new THREE.Color(targetObject.material.color),\n      originalOpacity: targetObject.material.opacity\n    };\n\n    this.animations.set(watercolorAnimationId, watercolorData);\n    console.log(`🎨 Watercolor effect started: ${effect.type} with ${effect.colors.length} colors`);\n    return true;\n  }\n\n  /**\n   * 水彩画系エフェクトのスピード設定\n   */\n  getWatercolorSpeed(artType) {\n    switch (artType) {\n      case 'watercolor_art': return 0.0003;  // 水彩画は非常にゆっくり\n      case 'pastel_art': return 0.0002;      // パステルはより穏やか\n      default: return 0.0003;\n    }\n  }\n\n  /**\n   * アニメーションループ開始\n   */\n  startAnimationLoop() {\n    if (this.animationLoopRunning) return;\n\n    this.animationLoopRunning = true;\n\n    const animate = () => {\n      if (this.animations && this.animations.size > 0) {\n        this.updateAnimations();\n      }\n\n      if (this.animationLoopRunning) {\n        requestAnimationFrame(animate);\n      }\n    };\n\n    animate();\n    console.log(`🎭 Animation loop started`);\n  }\n\n  /**\n   * アニメーション更新\n   */\n  updateAnimations() {\n    const currentTime = Date.now();\n\n    for (const [id, animation] of this.animations.entries()) {\n      const elapsed = (currentTime - animation.startTime) * 0.001; // 秒に変換\n\n      switch (animation.type) {\n        case 'float':\n          this.updateFloatAnimation(animation, elapsed);\n          break;\n        case 'pulse':\n          this.updatePulseAnimation(animation, elapsed);\n          break;\n        case 'spin':\n          this.updateSpinAnimation(animation, elapsed);\n          break;\n        case 'sparkle':\n          this.updateSparkleAnimation(animation, elapsed);\n          break;\n        case 'rainbow':\n          this.updateRainbowAnimation(animation, elapsed);\n          break;\n        case 'glitch':\n          this.updateGlitchAnimation(animation, elapsed);\n          break;\n        case 'cosmic':\n          this.updateCosmicAnimation(animation, elapsed);\n          break;\n        case 'watercolor':\n          this.updateWatercolorAnimation(animation, elapsed);\n          break;\n      }\n    }\n  }\n\n  /**\n   * 浮遊アニメーション\n   */\n  updateFloatAnimation(animation, elapsed) {\n    const yOffset = Math.sin(elapsed * animation.speed * 2 * Math.PI) * animation.amplitude;\n    animation.object.position.y = animation.originalPosition.y + yOffset;\n  }\n\n  /**\n   * パルスアニメーション\n   */\n  updatePulseAnimation(animation, elapsed) {\n    const scaleOffset = Math.sin(elapsed * animation.speed * 2 * Math.PI) * animation.amplitude;\n    const newScale = 1 + scaleOffset;\n    animation.object.scale.setScalar(animation.originalScale.x * newScale);\n  }\n\n  /**\n   * 回転アニメーション\n   */\n  updateSpinAnimation(animation, elapsed) {\n    const rotationAmount = elapsed * animation.speed * 2 * Math.PI;\n    if (animation.axis === 'x') {\n      animation.object.rotation.x = animation.originalRotation.x + rotationAmount;\n    } else if (animation.axis === 'y') {\n      animation.object.rotation.y = animation.originalRotation.y + rotationAmount;\n    } else if (animation.axis === 'z') {\n      animation.object.rotation.z = animation.originalRotation.z + rotationAmount;\n    }\n  }\n\n  /**\n   * キラキラアニメーション（発光の明滅）\n   */\n  updateSparkleAnimation(animation, elapsed) {\n    if (animation.object.material) {\n      const intensity = (Math.sin(elapsed * 3 * 2 * Math.PI) * 0.5 + 0.5) * animation.intensity;\n      animation.object.material.emissiveIntensity = intensity;\n      animation.object.material.needsUpdate = true;\n    }\n  }\n\n  /**\n   * 虹色アニメーション\n   */\n  updateRainbowAnimation(animation, elapsed) {\n    if (animation.object.material) {\n      const hue = (elapsed * animation.speed) % 1;\n      const color = new THREE.Color().setHSL(hue, 1, 0.5);\n      animation.object.material.color = color;\n      animation.object.material.needsUpdate = true;\n    }\n  }\n\n  /**\n   * グリッチアニメーション\n   */\n  updateGlitchAnimation(animation, elapsed) {\n    if (Math.random() < 0.1) { // 10%の確率でグリッチ\n      const offset = (Math.random() - 0.5) * animation.intensity;\n      animation.object.position.x = animation.originalPosition.x + offset;\n      animation.object.position.z = animation.originalPosition.z + offset;\n    } else {\n      animation.object.position.x = animation.originalPosition.x;\n      animation.object.position.z = animation.originalPosition.z;\n    }\n  }\n\n  /**\n   * 宇宙的アニメーション（オーロラ、星雲、エネルギーエフェクト）\n   */\n  updateCosmicAnimation(animation, elapsed) {\n    if (!animation.object.material) return;\n\n    // 色の循環スピードを調整\n    const colorCycleSpeed = elapsed * animation.speed;\n    const numColors = animation.colors.length;\n\n    // 滑らかな色の遷移を実現\n    const colorProgress = (colorCycleSpeed % numColors);\n    const currentColorIndex = Math.floor(colorProgress);\n    const nextColorIndex = (currentColorIndex + 1) % numColors;\n    const lerpFactor = colorProgress - currentColorIndex;\n\n    // 現在の色と次の色をブレンド\n    const currentColor = new THREE.Color(animation.colors[currentColorIndex]);\n    const nextColor = new THREE.Color(animation.colors[nextColorIndex]);\n    const blendedColor = currentColor.lerp(nextColor, lerpFactor);\n\n    // 宇宙的エフェクトタイプごとの特別な処理\n    let intensityMultiplier = 1.0;\n    switch (animation.cosmicType) {\n      case 'aurora':\n        // オーロラは波のような強弱変化\n        intensityMultiplier = 0.7 + 0.3 * Math.sin(elapsed * 2.5);\n        break;\n      case 'nebula':\n        // 星雲はゆっくりとした脈動\n        intensityMultiplier = 0.8 + 0.2 * Math.sin(elapsed * 1.2);\n        break;\n      case 'energy':\n        // エネルギーは激しく変動\n        intensityMultiplier = 0.6 + 0.4 * (Math.sin(elapsed * 4) * Math.cos(elapsed * 3));\n        break;\n      case 'cosmic':\n        // 宇宙は神秘的にゆらゆら\n        intensityMultiplier = 0.8 + 0.2 * Math.sin(elapsed * 1.8);\n        break;\n      case 'mystic':\n        // 神秘的は複雑な変化\n        intensityMultiplier = 0.7 + 0.3 * Math.sin(elapsed * 1.5) * Math.cos(elapsed * 0.8);\n        break;\n      case 'rainbow_glow':\n        // 虹色は鮮やかに輝く\n        intensityMultiplier = 0.6 + 0.3 * Math.sin(elapsed * 2.0);\n        break;\n    }\n\n    if (animation.useColorFallback) {\n      if (animation.object.material.color) {\n        animation.object.material.color.copy(blendedColor);\n        animation.object.material.needsUpdate = true;\n      }\n    } else {\n      animation.object.material.emissive = blendedColor;\n      animation.object.material.emissiveIntensity = animation.intensity * intensityMultiplier;\n      animation.object.material.needsUpdate = true;\n    }\n  }\n\n  /**\n   * 水彩画アニメーション（拡散色の柔らかな変化）\n   */\n  updateWatercolorAnimation(animation, elapsed) {\n    if (!animation.object.material) return;\n\n    // 色の循環スピードを調整（宇宙エフェクトより遅い）\n    const colorCycleSpeed = elapsed * animation.speed;\n    const numColors = animation.colors.length;\n\n    // 滑らかな色の遷移\n    const colorProgress = (colorCycleSpeed % numColors);\n    const currentColorIndex = Math.floor(colorProgress);\n    const nextColorIndex = (currentColorIndex + 1) % numColors;\n    const lerpFactor = colorProgress - currentColorIndex;\n\n    // 現在の色と次の色をブレンド\n    const currentColor = new THREE.Color(animation.colors[currentColorIndex]);\n    const nextColor = new THREE.Color(animation.colors[nextColorIndex]);\n    const blendedColor = currentColor.lerp(nextColor, lerpFactor);\n\n    // 透明度の柔らかな変化\n    let opacityMultiplier = 1.0;\n    switch (animation.artType) {\n      case 'watercolor_art':\n        // 水彩画は透明度もゆっくり変化\n        opacityMultiplier = 0.9 + 0.1 * Math.sin(elapsed * 0.5);\n        break;\n      case 'pastel_art':\n        // パステルは透明度をより安定\n        opacityMultiplier = 0.95 + 0.05 * Math.sin(elapsed * 0.3);\n        break;\n    }\n\n    // 拡散色を設定（emissiveではなくcolor）\n    animation.object.material.color = blendedColor;\n    animation.object.material.opacity = animation.opacity * opacityMultiplier;\n    animation.object.material.needsUpdate = true;\n  }\n\n  /**\n   * プロンプトに基づいて自動エフェクトを決定\n   */\n  getAutoEffectsFromPrompt(prompt) {\n    if (!prompt) return null;\n\n    const lowerPrompt = prompt.toLowerCase();\n\n    // 魔法・ファンタジー系\n    if (lowerPrompt.includes('ユニコーン') || lowerPrompt.includes('unicorn') ||\n        lowerPrompt.includes('魔法') || lowerPrompt.includes('magic') ||\n        lowerPrompt.includes('魔女') || lowerPrompt.includes('wizard') ||\n        lowerPrompt.includes('fairy') || lowerPrompt.includes('妖精')) {\n      return ['魔法っぽく'];\n    }\n\n    // 宇宙・神秘系\n    if (lowerPrompt.includes('ドラゴン') || lowerPrompt.includes('dragon') ||\n        lowerPrompt.includes('宇宙') || lowerPrompt.includes('space') ||\n        lowerPrompt.includes('星') || lowerPrompt.includes('star')) {\n      return ['宇宙'];\n    }\n\n    // 幽霊・透明系\n    if (lowerPrompt.includes('幽霊') || lowerPrompt.includes('ghost') ||\n        lowerPrompt.includes('精霊') || lowerPrompt.includes('spirit')) {\n      return ['幽霊'];\n    }\n\n    // サイバー・未来系\n    if (lowerPrompt.includes('ロボット') || lowerPrompt.includes('robot') ||\n        lowerPrompt.includes('サイバー') || lowerPrompt.includes('cyber') ||\n        lowerPrompt.includes('未来') || lowerPrompt.includes('future')) {\n      return ['サイバー'];\n    }\n\n    // 動物系 - 軽いキラキラエフェクト\n    if (lowerPrompt.includes('猫') || lowerPrompt.includes('cat') ||\n        lowerPrompt.includes('犬') || lowerPrompt.includes('dog') ||\n        lowerPrompt.includes('鳥') || lowerPrompt.includes('bird')) {\n      return ['きらめ'];\n    }\n\n    // 花・自然系 - パステルエフェクト\n    if (lowerPrompt.includes('花') || lowerPrompt.includes('flower') ||\n        lowerPrompt.includes('桜') || lowerPrompt.includes('cherry') ||\n        lowerPrompt.includes('自然') || lowerPrompt.includes('nature')) {\n      return ['パステル'];\n    }\n\n    return null; // 該当なしの場合はエフェクトなし\n  }\n\n  /**\n   * オブジェクト認識成功時のフィードバックエフェクト\n   */\n  applyRecognitionFeedback(targetObject) {\n    console.log(`🎯 Object recognition successful: ${targetObject.name}`);\n\n    // 短時間のキラキラエフェクトで認識成功を視覚的に伝える\n    const feedbackEffect = [{\n      type: 'animation',\n      animation: 'sparkle',\n      intensity: 0.8,\n      name: 'recognition_feedback'\n    }];\n\n    this.applyEffects(targetObject, feedbackEffect);\n\n    // 3秒後にフィードバックエフェクトを停止\n    setTimeout(() => {\n      this.stopRecognitionFeedback(targetObject);\n    }, 3000);\n  }\n\n  /**\n   * 認識フィードバックエフェクトを停止\n   */\n  stopRecognitionFeedback(targetObject) {\n    if (!this.animations) return;\n\n    const feedbackAnimationId = `${targetObject.uuid}_sparkle`;\n    if (this.animations.has(feedbackAnimationId)) {\n      this.animations.delete(feedbackAnimationId);\n\n      // 発光を元に戻す\n      if (targetObject.material) {\n        targetObject.material.emissiveIntensity = 0;\n        targetObject.material.needsUpdate = true;\n      }\n\n      console.log(`✨ Recognition feedback stopped for: ${targetObject.name}`);\n    }\n  }\n\n  /**\n   * 削除コマンド解析\n   */\n  parseDeleteCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 選択されたオブジェクトのみを削除するか、全削除かを判定\n    if (cmd.includes('選択') || cmd.includes('これ') || cmd.includes('この')) {\n      return {\n        type: 'delete',\n        target: 'selected',\n        requiresSelection: true\n      };\n    }\n    \n    if (cmd.includes('全部') || cmd.includes('すべて') || cmd.includes('全て')) {\n      return {\n        type: 'delete',\n        target: 'all'\n      };\n    }\n    \n    // デフォルト: 選択されたオブジェクトを削除\n    return {\n      type: 'delete',\n      target: 'selected',\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * 自然言語オブジェクト操作コマンド解析\n   * 例: \"ユニコーンを右に移動\", \"猫の画像をピンクに\", \"1つ目の猫を左に\"\n   */\n  parseNaturalLanguageCommand(command) {\n    // 移動パターンをチェック\n    const movePatterns = [\n      '(\\S+?)を(.+?)に移動', \n      '(\\S+?)を(.+?)へ移動',\n      '(\\S+?)を(.+?)に動か',\n      '(\\S+?)を(.+?)へ動か'\n    ];\n    \n    for (const pattern of movePatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n        const direction = match[2];\n        \n        console.log(`🎯 Natural language move detected: \"${objectName}\" to \"${direction}\"`);\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          movement: this.parsePositionFromPrompt(direction),\n          requiresObjectSearch: true\n        };\n      }\n    }\n    \n    // 色変更パターンをチェック\n    const colorPatterns = [\n      '(\\S+?)を(\\S+?)色に',\n      '(\\S+?)を(\\S+?)に'\n    ];\n    \n    // 色変更は基本的な色のみ対応\n    const colorKeywords = ['赤', '赤色', '青', '青色', '緑', '緑色', '黄', '黄色', '黄色い', '紫', '紫色',\n                          '橙', '橙色', 'オレンジ', 'オレンジ色', '白', '白色', '黒', '黒色',\n                          '灰', '灰色', 'グレー', 'グレー色', 'ピンク', 'ピンク色', '茶', '茶色', '銀', '銀色', '金', '金色'];\n    \n    for (const pattern of colorPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match && colorKeywords.some(color => match[2].includes(color))) {\n        const objectName = match[1];\n        const colorName = match[2];\n        \n        console.log(`🎨 Natural language color change detected: \"${objectName}\" to \"${colorName}\"`);\n        \n        // 色変更の解析（既存のロジックを流用）\n        const colorMap = {\n          '赤': 0xff0000, '赤色': 0xff0000,\n          '青': 0x0000ff, '青色': 0x0000ff,\n          '緑': 0x00ff00, '緑色': 0x00ff00,\n          '黄': 0xffff00, '黄色': 0xffff00, '黄色い': 0xffff00,\n          '紫': 0xff00ff, '紫色': 0xff00ff,\n          '橙': 0xff8800, '橙色': 0xff8800, 'オレンジ': 0xff8800, 'オレンジ色': 0xff8800,\n          '白': 0xffffff, '白色': 0xffffff,\n          '黒': 0x000000, '黒色': 0x000000,\n          '灰': 0x808080, '灰色': 0x808080, 'グレー': 0x808080, 'グレー色': 0x808080,\n          'ピンク': 0xffc0cb, 'ピンク色': 0xffc0cb,\n          '茶': 0x8b4513, '茶色': 0x8b4513,\n          '銀': 0xc0c0c0, '銀色': 0xc0c0c0,\n          '金': 0xffd700, '金色': 0xffd700\n        };\n        \n        let colorValue = null;\n        for (const [colorKey, value] of Object.entries(colorMap)) {\n          if (colorName.includes(colorKey)) {\n            colorValue = value;\n            break;\n          }\n        }\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          color: colorValue,\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    // 回転パターンをチェック\n    const rotationPatterns = [\n      '(\\S+?)を回転',\n      '(\\S+?)を回す',\n      '(\\S+?)を回して',\n      '(\\S+?)回転',\n      '回転.*?(\\S+)'\n    ];\n\n    for (const pattern of rotationPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n\n        console.log(`🔄 Natural language rotation detected: \"${objectName}\"`);\n\n        // 角度指定があるかチェック\n        const degreeMatch = command.match(/(\\d+)\\s*度/);\n        const rotation = degreeMatch ?\n          parseFloat(degreeMatch[1]) * Math.PI / 180 :\n          Math.PI / 4; // デフォルト45度\n\n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          rotation: rotation,\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    // 反転パターンをチェック\n    const flipPatterns = [\n      '(\\S+?)を左右反転',\n      '(\\S+?)を反転',\n      '(\\S+?)反転',\n      '(\\S+?)をひっくり返',\n      '(\\S+?)をflip'\n    ];\n\n    for (const pattern of flipPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n\n        console.log(`🔄 Natural language flip detected: \"${objectName}\"`);\n\n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          flip: true, // 反転フラグを追加\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    // エフェクトパターンをチェック（水彩、宇宙エフェクトなど）\n    const effectPatterns = [\n      '(\\S+?)を(\\S+?)っぽく',\n      '(\\S+?)を(\\S+?)に',\n      '(\\S+?)を(\\S+?)風に',\n      '(\\S+?)を(\\S+?)みたい'\n    ];\n\n    const effectKeywords = ['水彩', '水彩画', '宇宙', 'オーロラ', '星雲', 'エネルギー', '神秘的',\n                            'パステル', '魔法', '幽霊', 'サイバー', '夢', '光', 'ネオン',\n                            'メタリック', '金属', 'ガラス', 'マット'];\n\n    for (const pattern of effectPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match && effectKeywords.some(effect => match[2].includes(effect))) {\n        const objectName = match[1];\n        const effectName = match[2];\n\n        console.log(`✨ Natural language effect detected: \"${objectName}\" with \"${effectName}\"`);\n\n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          command: effectName, // エフェクトはコマンドとして渡す\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    return null; // 自然言語パターンに一致しない場合\n  }\n\n  /**\n   * 移動コマンドから相対位置を解析（オブジェクト移動用）\n   */\n  parsePositionFromPrompt(command) {\n    let x = 0, y = 0, z = 0;\n    \n    // 左右移動（修正：左右を正しい方向に）\n    if (command.includes('右へ') || command.includes('右に') || command.includes('右側へ') || command.includes('右側に')) {\n      x = 5; // 5メートル右へ（正の値で右に移動）\n    } else if (command.includes('左へ') || command.includes('左に') || command.includes('左側へ') || command.includes('左側に')) {\n      x = -5; // 5メートル左へ（負の値で左に移動）\n    }\n    \n    // 上下移動\n    if (command.includes('上へ') || command.includes('上に') || command.includes('上側へ')) {\n      y = 3; // 3メートル上へ\n    } else if (command.includes('下へ') || command.includes('下に') || command.includes('下側へ')) {\n      y = -3; // 3メートル下へ\n    }\n    \n    // 前後移動\n    if (command.includes('前へ') || command.includes('手前へ') || command.includes('近くへ')) {\n      z = 3; // カメラに近づける\n    } else if (command.includes('後ろへ') || command.includes('奥へ') || command.includes('遠くへ')) {\n      z = -3; // カメラから遠ざける\n    }\n    \n    // 距離指定の解析\n    const distanceMatch = command.match(/(\\d+(?:\\.\\d+)?)\\s*(?:メートル|m)/);\n    if (distanceMatch) {\n      const distance = parseFloat(distanceMatch[1]);\n      // 方向に応じて距離を適用\n      if (Math.abs(x) > 0) x = x > 0 ? distance : -distance;\n      if (Math.abs(y) > 0) y = y > 0 ? distance : -distance;\n      if (Math.abs(z) > 0) z = z > 0 ? distance : -distance;\n    }\n    \n    // 「少し」「大きく」などの修飾語\n    if (command.includes('少し') || command.includes('ちょっと')) {\n      x *= 0.5; y *= 0.5; z *= 0.5;\n    } else if (command.includes('大きく') || command.includes('たくさん')) {\n      x *= 2; y *= 2; z *= 2;\n    }\n    \n    console.log(`📍 Position movement parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * 位置情報解析（カメラ相対位置）\n   */\n  parsePosition(command) {\n    const defaultPos = { x: 0, y: 5, z: 10 }; // カメラ前方10m、少し上\n    \n    // 基本方向の解析（カメラ相対座標系）\n    let x = 0, y = 5, z = 10; // デフォルト値（カメラ相対、正のzが前方）\n    \n    // 組み合わせ位置を最初にチェック（優先度最高）\n    if (command.includes('左下')) {\n      x = -8; y = 0; z = 10;  // 左下: 左側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 左下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右上')) {\n      x = 5; y = 4; z = 12;  // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 右上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('左上')) {\n      x = -8; y = 4; z = 15; // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 左上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右下')) {\n      x = 8; y = 0; z = 10; // 右下: 右側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 右下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 特殊位置\n    if (command.includes('中央') || command.includes('真ん中') || command.includes('正面')) {\n      x = 0; y = 3; z = 12;  // y=3 で目線レベルに\n      console.log(`📍 Position parsed from \"${command}\": 中央 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('空') || command.includes('天空')) {\n      x = 0; y = 20; z = 10;\n      console.log(`📍 Position parsed from \"${command}\": 空中 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('地面') || command.includes('足元')) {\n      x = 0; y = 1; z = 8;\n      console.log(`📍 Position parsed from \"${command}\": 地面 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 個別方向の解析\n    // 前後方向\n    if (command.includes('前に') || command.includes('手前に')) {\n      z = 5; // カメラに近づける\n    } else if (command.includes('後ろに') || command.includes('奥に') || command.includes('遠くに')) {\n      z = 20; // カメラから遠ざける\n    }\n    \n    // 左右方向\n    if (command.includes('右に') || command.includes('右側') || command.includes('画面の右')) {\n      x = 8;\n    } else if (command.includes('左に') || command.includes('左側') || command.includes('画面の左')) {\n      x = -8;\n    }\n    \n    // 上下方向（カメラ相対）\n    if (command.includes('上に') || command.includes('上側') || command.includes('画面の上') || command.includes('高い位置に') || command.includes('空中に')) {\n      y = 8; // カメラから8メートル上\n    } else if (command.includes('下に') || command.includes('下側') || command.includes('画面の下') || command.includes('低い位置に') || command.includes('地面に')) {\n      y = -2; // カメラから2メートル下\n    }\n    \n    // 距離指定\n    if (command.includes('近くに') || command.includes('すぐ前に')) {\n      z = Math.min(z * 0.5, 3); // 半分の距離、ただし最低3m（正の値なので min を使用）\n    } else if (command.includes('遠くに') || command.includes('向こうに')) {\n      z = z * 1.5; // 1.5倍の距離\n    }\n    \n    console.log(`📍 Position parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * サイズ解析\n   */\n  parseSize(command) {\n    if (command.includes('大きな') || command.includes('大きい')) return { scale: 2.0 };\n    if (command.includes('小さな') || command.includes('小さい')) return { scale: 0.5 };\n    return { scale: this.config.defaultObjectScale };\n  }\n\n  /**\n   * コマンド種別別実行\n   */\n  async dispatchCommand(parsed) {\n    switch (parsed.type) {\n      case 'image_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('画像生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeImageGeneration(parsed);\n        \n      case 'video_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('動画生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeVideoGeneration(parsed);\n        \n      case 'object_modification':\n        return await this.executeObjectModification(parsed);\n        \n      case 'natural_object_modification':\n        return await this.executeNaturalObjectModification(parsed);\n        \n      case 'delete':\n        return await this.executeDelete(parsed);\n        \n      case 'file_import':\n        return await this.executeFileImport(parsed);\n        \n      case 'object_selection':\n        return await this.executeObjectSelection(parsed);\n        \n      default:\n        throw new Error(`Unknown command type: ${parsed.type}`);\n    }\n  }\n\n  /**\n   * 画像生成実行\n   */\n  async executeImageGeneration(parsed) {\n    try {\n      console.log(`🎨 Generating image: \"${parsed.prompt}\"`);\n      \n      // 段階的にサイズを試行（シーンに配置しやすいサイズを優先）\n      const fallbackSizes = [\n        { width: 512, height: 512 },    // 1:1 基本サイズ（互換性最高）\n        { width: 768, height: 432 },    // 16:9 現代的サイズ\n        { width: 1024, height: 1024 },  // 大きめ1:1\n        { width: 640, height: 480 },    // 4:3 クラシック\n      ];\n      \n      let imageResult;\n      let lastError;\n      \n      for (let i = 0; i < fallbackSizes.length; i++) {\n        const dimensions = fallbackSizes[i];\n        try {\n          console.log(`🔄 Trying ${dimensions.width}x${dimensions.height}...`);\n          \n          imageResult = await this.client.generateImage(parsed.prompt, {\n            width: dimensions.width,\n            height: dimensions.height,\n            service: this.selectedImageService || undefined\n          });\n          \n          if (imageResult.success) {\n            console.log(`✅ Success with ${dimensions.width}x${dimensions.height}`);\n            break;\n          }\n        } catch (error) {\n          lastError = error;\n          console.log(`⚠️ Failed with ${dimensions.width}x${dimensions.height}: ${error.message}`);\n          \n          // 最後の試行でない場合は続行\n          if (i < fallbackSizes.length - 1) {\n            console.log(`🔄 Retrying with next size...`);\n            continue;\n          }\n        }\n      }\n      \n      // 結果にモデル情報を含める\n      if (imageResult && imageResult.modelName) {\n        console.log(`📡 Used model: ${imageResult.modelName}`);\n      }\n      \n      const loader = new THREE.TextureLoader();\n      let texture;\n      if (imageResult && imageResult.success && (imageResult.imageUrl || imageResult.localPath)) {\n        // 成功: 生成された画像をテクスチャとして使用\n        let imageUrl = imageResult.imageUrl;\n        \n        // localPathの場合はWebアクセス可能なURLに変換\n        if (!imageUrl && imageResult.localPath) {\n          const filename = imageResult.localPath.split('/').pop();\n          imageUrl = `${this.client.serverUrl}/generated/${filename}`;\n        }\n        \n        console.log(`✅ Image generated successfully: ${imageUrl}`);\n        texture = await loader.loadAsync(imageUrl);\n\n        // テクスチャの色彩を正確に表示するための設定\n        texture.colorSpace = THREE.SRGBColorSpace; // 正しいカラースペース\n      } else {\n        // 失敗: プレースホルダー画像を使用\n        console.log(`⚠️ Using fallback image (last error: ${lastError?.message || 'unknown'})`);\n        texture = this.createFallbackTexture(parsed.prompt);\n      }\n\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n      if (aspectRatio >= 1) {\n        planeWidth = baseSize;\n        planeHeight = baseSize / aspectRatio;\n      } else {\n        planeWidth = baseSize * aspectRatio;\n        planeHeight = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n        side: THREE.DoubleSide, // 両面表示\n        toneMapped: false    // トーンマッピングを無効化（より鮮やかな色彩）\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（画像も前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      material.alphaTest = 0.01;\n      material.needsUpdate = true;\n\n      // カメラ相対位置で配置（カメラの向きも考慮）\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        // フォールバック: 絶対座標\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n      \n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n      \n      // 識別用の名前とメタデータ\n      const objectId = `generated_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_image',\n        source: 'generated_image',\n        modelName: imageResult?.modelName || this.selectedImageService || null,\n        keywords: this.buildObjectKeywordHints({ prompt: parsed.prompt, baseType: 'image' })\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n\n      console.log(`✅ Created object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n\n      // 生成位置にパーティクルエフェクトを追加（視覚的フィードバック）\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: imageResult?.modelName,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎨 Image generation failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成実行\n   */\n  async executeVideoGeneration(parsed) {\n    try {\n      console.log(`🎬 Generating video: \"${parsed.prompt}\"`);\n      console.log('🔍 Video generation - selectedVideoService:', this.selectedVideoService);\n      \n      // ChocoDro Client経由で動画生成\n      // アスペクト比は各モデルのサポート状況に応じてサーバー側で最適化\n      const videoResult = await this.client.generateVideo(parsed.prompt, {\n        duration: 3,\n        model: this.selectedVideoService || undefined\n        // width, height指定を削除してサーバー側デフォルト(16:9)を使用\n      });\n      \n      // 結果にモデル情報を含める\n      if (videoResult.modelName) {\n        console.log(`📡 Used model: ${videoResult.modelName}`);\n      }\n      \n      let videoTexture;\n      let video = null; // video変数をスコープ外で定義\n      \n      if (videoResult.success && videoResult.videoUrl) {\n        // 成功: 生成された動画をテクスチャとして使用\n        console.log(`✅ Video generated successfully: ${videoResult.videoUrl}`);\n        \n        // HTML5 video要素を作成\n        video = document.createElement('video');\n        video.src = videoResult.videoUrl;\n        video.crossOrigin = 'anonymous';\n        video.loop = true;\n        video.muted = true; // 初期はミュート（ユーザーが手動で音声制御）\n        video.playsInline = true;\n        \n        // 動画テクスチャを作成\n        videoTexture = new THREE.VideoTexture(video);\n        videoTexture.colorSpace = THREE.SRGBColorSpace;\n        \n        // 動画の自動再生を開始\n        video.addEventListener('loadeddata', () => {\n          video.play().catch(console.error);\n        });\n        \n      } else {\n        // 失敗: プレースホルダー動画テクスチャを使用\n        console.log(`⚠️ Using fallback video texture`);\n        videoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      }\n      \n      // 動画を表示する平面ジオメトリを作成（アスペクト比を考慮）\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const requestedWidth = videoResult.metadata?.width || 512;\n      const requestedHeight = videoResult.metadata?.height || 512;\n      const planeAspect = requestedWidth && requestedHeight ? requestedWidth / requestedHeight : 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n\n      if (planeAspect >= 1) {\n        planeHeight = baseSize / planeAspect;\n      } else {\n        planeWidth = baseSize * planeAspect;\n      }\n\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（動画を前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        source: 'generated_video',\n        videoUrl: videoResult.videoUrl,\n        modelName: videoResult.modelName || this.selectedVideoService || null,\n        width: requestedWidth,\n        height: requestedHeight,\n        videoElement: video,\n        keywords: this.buildObjectKeywordHints({ prompt: parsed.prompt, baseType: 'video' })\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created video object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: videoResult.modelName,\n        videoUrl: videoResult.videoUrl,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video generation failed:', error);\n      \n      // エラー時もプレースホルダー動画を表示\n      console.log('🔄 Creating fallback video plane due to generation error');\n      const fallbackVideoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      \n      // 動画を表示する平面ジオメトリを作成\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n      const geometry = new THREE.PlaneGeometry(baseSize, baseSize);\n      const material = new THREE.MeshBasicMaterial({\n        map: fallbackVideoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        source: 'generated_video',\n        videoUrl: null, // エラー時はnull\n        modelName: 'Error Fallback',\n        width: 512,\n        height: 512,\n        videoElement: null,\n        error: error.message,\n        keywords: this.buildObjectKeywordHints({ prompt: parsed.prompt, baseType: 'video' })\n      };\n\n      // シーンに追加\n      this.scene.add(plane);\n      console.log('📍 Fallback video plane added to scene');\n\n      return {\n        success: false,\n        error: error.message,\n        object: plane,\n        prompt: parsed.prompt\n      };\n    }\n  }\n\n  async loadImageFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 }, fileName = null } = options;\n      \n      console.log(`📁 Loading image file: ${fileUrl}`);\n      \n      // ファイルからテクスチャを読み込み\n      const loader = new THREE.TextureLoader();\n      const texture = await loader.loadAsync(fileUrl);\n\n      // テクスチャの色彩を正確に表示するための設定\n      texture.colorSpace = THREE.SRGBColorSpace;\n\n      // アスペクト比を算出（fallback: 1）\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n      \n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      if (aspectRatio >= 1) {\n        width = baseSize;\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n        height = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成（縦横比を維持）\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      material.alphaTest = 0.01;\n      material.needsUpdate = true;\n      \n      const plane = new THREE.Mesh(geometry, material);\n\n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // ファイル名からpromptを作成（拡張子を除去）\n      const prompt = fileName ? fileName.replace(/\\.[^/.]+$/, '') : 'imported_image';\n\n      // 識別用の名前とメタデータ\n      const objectId = `imported_image_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_image',\n        prompt: prompt, // ファイル名をpromptとして設定\n        fileName: fileName, // 元のファイル名も保存\n        importOrder: this.objectCounter, // インポート順序を記録\n        keywords: this.buildObjectKeywordHints({ prompt, fileName, baseType: 'image' })\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n\n      console.log(`✅ Created imported image: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n\n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('📁 Image file loading failed:', error);\n      throw error;\n    }\n  }\n\n  async loadVideoFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 }, fileName = null } = options;\n      \n      console.log(`🎬 Loading video file: ${fileUrl}`);\n      \n      // HTMLVideoElementを作成\n      const video = document.createElement('video');\n      video.src = fileUrl;\n      video.loop = true;\n      video.muted = true;\n      video.playsInline = true;\n      video.autoplay = true;\n      video.preload = 'auto';\n\n      // VideoTextureを作成\n      const videoTexture = new THREE.VideoTexture(video);\n      videoTexture.colorSpace = THREE.SRGBColorSpace;\n\n      // ビデオの読み込みとサイズ取得\n      await new Promise((resolve, reject) => {\n        const handleLoaded = () => {\n          console.log(`🎬 Video loaded: ${video.videoWidth}x${video.videoHeight}`);\n          resolve();\n        };\n        const handleError = (event) => {\n          reject(event?.error || new Error('Video failed to load'));\n        };\n\n        video.addEventListener('loadedmetadata', handleLoaded, { once: true });\n        video.addEventListener('error', handleError, { once: true });\n        video.load();\n      });\n\n      try {\n        await video.play();\n      } catch (playError) {\n        console.warn('🎬 Video autoplay could not start automatically. Playback will require user interaction.', playError);\n      }\n      \n      // アスペクト比を計算してサイズ調整\n      const aspectRatio = video.videoWidth / video.videoHeight;\n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      \n      if (aspectRatio > 1) {\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n      }\n      \n      // 動画を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: true,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      material.alphaTest = 0.01;\n      material.needsUpdate = true;\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // ファイル名からpromptを作成（拡張子を除去）\n      const prompt = fileName ? fileName.replace(/\\.[^/.]+$/, '') : 'imported_video';\n\n      // 識別用の名前とメタデータ\n      const objectId = `imported_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_video',\n        videoElement: video,\n        objectUrl: fileUrl,\n        prompt: prompt, // ファイル名をpromptとして設定\n        fileName: fileName, // 元のファイル名も保存\n        importOrder: this.objectCounter, // インポート順序を記録\n        keywords: this.buildObjectKeywordHints({ prompt, fileName, baseType: 'video' })\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n\n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created imported video: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video file loading failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語オブジェクト操作実行\n   */\n  async executeNaturalObjectModification(parsed) {\n    // オブジェクトを名前で検索\n    const targetObjects = this.findObjectsByName(parsed.targetObjectName);\n    \n    if (targetObjects.length === 0) {\n      return {\n        success: false,\n        message: `オブジェクト「${parsed.targetObjectName}」が見つかりませんでした`\n      };\n    }\n    \n    console.log(`🔍 Found ${targetObjects.length} object(s) matching \"${parsed.targetObjectName}\"`);\n    \n    // 複数の場合は序数詞で選択、なければ最初のオブジェクト\n    const targetObject = this.selectObjectFromMultiple(targetObjects, parsed.targetObjectName);\n    console.log(`🎯 Operating on object: ${targetObject.name}`);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Texture color tint changed to: #${parsed.color.toString(16)}`);\n      } else {\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Material color changed to: #${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n\n    // Phase 2: エフェクト適用\n    if (parsed.effects && parsed.effects.length > 0) {\n      const effectsApplied = this.applyEffects(targetObject, parsed.effects);\n      if (effectsApplied) {\n        modified = true;\n      }\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y,\n        z: currentPos.z + parsed.movement.z\n      };\n      \n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        movement: parsed.movement,\n        command: `Natural language: ${parsed.targetObjectName}`\n      });\n      \n      return {\n        success: true,\n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          movement: parsed.movement\n        }\n      };\n    } else {\n      return {\n        success: false,\n        message: '変更可能な属性が見つかりませんでした'\n      };\n    }\n  }\n  \n  /**\n   * 名前でオブジェクトを検索\n   */\n  findObjectsByName(searchName) {\n    const results = [];\n    const searchLower = searchName.toLowerCase();\n    \n    // 生成されたオブジェクトから検索\n    for (const [objectId, object] of this.spawnedObjects) {\n      // プロンプト情報から検索\n      if (object.userData.prompt) {\n        const promptLower = object.userData.prompt.toLowerCase();\n        \n        // 部分一致で検索（「ユニコーン」が「ユニコーンの画像」にマッチ）\n        if (promptLower.includes(searchLower)) {\n          results.push(object);\n          console.log(`✅ Object match found: ${objectId} (prompt: \"${object.userData.prompt}\")`);\n        }\n      }\n      \n      // オブジェクト名からも検索\n      if (object.name && object.name.toLowerCase().includes(searchLower)) {\n        results.push(object);\n        console.log(`✅ Object match found: ${objectId} (name: \"${object.name}\")`);\n      }\n    }\n    \n    return results;\n  }\n  \n  /**\n   * 複数オブジェクトから序数詞で選択\n   */\n  selectObjectFromMultiple(objects, originalCommand) {\n    // 序数詞パターンをチェック\n    const ordinalPatterns = [\n      /(\\d+)つ目の/, /(\\d+)番目の/, /(\\d+)個目の/,\n      /最初の|1つ目の|1番目の|1個目の/,\n      /最後の|最終の/,\n      /2つ目の|2番目の|2個目の/,\n      /3つ目の|3番目の|3個目の/\n    ];\n    \n    for (const pattern of ordinalPatterns) {\n      const match = originalCommand.match(pattern);\n      if (match) {\n        let index;\n        \n        if (match[1]) {\n          // 数字が見つかった場合\n          index = parseInt(match[1]) - 1; // 1ベースから0ベースに変換\n        } else {\n          // 特別な表現の場合\n          const matchedText = match[0];\n          if (matchedText.includes('最初') || matchedText.includes('1つ目') || \n              matchedText.includes('1番目') || matchedText.includes('1個目')) {\n            index = 0;\n          } else if (matchedText.includes('最後') || matchedText.includes('最終')) {\n            index = objects.length - 1;\n          } else if (matchedText.includes('2つ目') || matchedText.includes('2番目') || matchedText.includes('2個目')) {\n            index = 1;\n          } else if (matchedText.includes('3つ目') || matchedText.includes('3番目') || matchedText.includes('3個目')) {\n            index = 2;\n          }\n        }\n        \n        if (index >= 0 && index < objects.length) {\n          console.log(`🔢 Selected object by ordinal: index ${index + 1} of ${objects.length}`);\n          return objects[index];\n        } else {\n          console.warn(`⚠️ Invalid ordinal index: ${index + 1} (available: 1-${objects.length})`);\n        }\n      }\n    }\n    \n    // 序数詞が見つからない場合はデフォルトで最初のオブジェクト\n    console.log(`🔢 No ordinal specified, using first object`);\n    return objects[0];\n  }\n\n  /**\n   * オブジェクト変更実行\n   */\n  async executeObjectModification(parsed) {\n    // コマンドから対象オブジェクトを特定\n    let targetObject = this.findObjectByKeyword(parsed.command);\n    \n    // キーワードで見つからない場合、選択されたオブジェクトを使用\n    if (!targetObject) {\n      if (!this.selectedObject) {\n        return { \n          success: false, \n          message: 'オブジェクトを選択するか、対象を指定してください（例：「猫を赤くして」）' \n        };\n      }\n      targetObject = this.selectedObject;\n    } else {\n      // キーワードで見つけたオブジェクトを選択状態にする\n      this.selectObject(targetObject);\n\n      // オブジェクト認識成功のフィードバックエフェクト\n      this.applyRecognitionFeedback(targetObject);\n    }\n    console.log(`🔧 Modifying object: ${targetObject.name}`);\n    console.log(`🔍 Debug - parsed.movement:`, parsed.movement);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        // テクスチャがある場合は色調変更\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Texture color tint changed to: #${parsed.color.toString(16)}`);\n      } else {\n        // テクスチャがない場合は直接色変更\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Material color changed to: #${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n\n    // Phase 2: エフェクト適用\n    if (parsed.effects && parsed.effects.length > 0) {\n      const effectsApplied = this.applyEffects(targetObject, parsed.effects);\n      if (effectsApplied) {\n        modified = true;\n      }\n    }\n    \n    // サイズ変更\n    if (parsed.scale !== null) {\n      const currentScale = targetObject.scale.x; // 現在のスケール取得\n      const newScale = currentScale * parsed.scale;\n      targetObject.scale.setScalar(newScale);\n      console.log(`📏 Scale changed from ${currentScale} to ${newScale}`);\n      modified = true;\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      // 現在位置から相対移動\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y,\n        z: currentPos.z + parsed.movement.z\n      };\n\n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n\n    // 回転\n    if (parsed.rotation !== null) {\n      const currentRotation = targetObject.rotation.y;\n      const newRotation = currentRotation + parsed.rotation;\n      targetObject.rotation.y = newRotation;\n      const degrees = (parsed.rotation * 180 / Math.PI).toFixed(1);\n      console.log(`🔄 Rotation changed by ${degrees}° (new Y rotation: ${(newRotation * 180 / Math.PI).toFixed(1)}°)`);\n      modified = true;\n    }\n\n    // 透明度\n    if (parsed.opacity !== null && targetObject.material) {\n      const currentOpacity = targetObject.material.opacity || 1.0;\n      targetObject.material.opacity = parsed.opacity;\n      targetObject.material.transparent = parsed.opacity < 1.0;\n      console.log(`🔍 Opacity changed from ${currentOpacity.toFixed(2)} to ${parsed.opacity.toFixed(2)}`);\n      modified = true;\n    }\n\n    // 左右反転\n    if (parsed.flip) {\n      const currentScaleX = targetObject.scale.x;\n      targetObject.scale.x = -currentScaleX; // X軸を反転\n      console.log(`↔️ Object flipped horizontally (scale.x: ${currentScaleX} → ${targetObject.scale.x})`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        scale: parsed.scale,\n        movement: parsed.movement,\n        rotation: parsed.rotation,\n        opacity: parsed.opacity,\n        command: parsed.command\n      });\n\n      this.updateAllAudioControlPositions();\n\n      return {\n        success: true,\n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          scale: parsed.scale,\n          movement: parsed.movement,\n          rotation: parsed.rotation,\n          opacity: parsed.opacity\n        }\n      };\n    } else {\n      return { \n        success: false, \n        message: '変更可能な属性が見つかりませんでした' \n      };\n    }\n  }\n\n  /**\n   * 削除実行\n   */\n  async executeDelete(parsed) {\n    // コマンドの安全性チェック\n    const command = parsed.command || '';\n    \n    // 「すべて」削除の場合\n    if (parsed.target === 'all' || command.includes('すべて') || command.includes('全部')) {\n      this.clearAll();\n      return { success: true, message: 'すべてのオブジェクトを削除しました' };\n    }\n    \n    // まずコマンドから対象オブジェクトを特定\n    const targetByKeyword = this.findObjectByKeyword(command);\n    \n    // 削除対象の優先順位：\n    // 1. コマンドで指定されたオブジェクト\n    // 2. 選択されているオブジェクト\n    // 3. コマンドが単に「削除」だけの場合は選択オブジェクトを優先\n    \n    let targetObject = null;\n    let deleteReason = '';\n    \n    // コマンドが単純な削除コマンドか判定\n    const isSimpleDeleteCommand = command.match(/^(削除|消して|消す|delete|remove)$/i);\n    \n    if (isSimpleDeleteCommand && this.selectedObject) {\n      // 単純な「削除」コマンドで選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    } else if (targetByKeyword) {\n      // キーワードで特定できた場合\n      targetObject = targetByKeyword;\n      deleteReason = 'コマンドで指定されたオブジェクト';\n    } else if (this.selectedObject) {\n      // その他の場合で選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    }\n    \n    if (targetObject) {\n      const objectId = targetObject.name;\n      console.log(`🗑️ Deleting ${deleteReason}: ${objectId}`);\n      \n      // 選択状態を解除\n      if (targetObject === this.selectedObject) {\n        this.deselectObject();\n      }\n      \n      // オブジェクトを削除\n      const success = this.removeObject(objectId);\n      \n      if (success) {\n        return { \n          success: true, \n          message: `${deleteReason}「${objectId}」を削除しました`,\n          deletedObjectId: objectId\n        };\n      } else {\n        return { \n          success: false, \n          message: 'オブジェクトの削除に失敗しました' \n        };\n      }\n    }\n    \n    return { \n      success: false, \n      message: '削除対象が見つかりませんでした。オブジェクトを選択するか、対象を指定してください' \n    };\n  }\n\n  async executeFileImport(parsed) {\n    try {\n      console.log('🍫 Starting file import process...');\n      \n      // ファイル選択ダイアログを表示\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.style.display = 'none';\n      \n      if (parsed.fileType === 'video') {\n        input.accept = 'video/*';\n      } else {\n        input.accept = 'image/*';\n      }\n      \n      document.body.appendChild(input);\n      \n      return new Promise((resolve, reject) => {\n        input.onchange = async (event) => {\n          try {\n            const file = event.target.files[0];\n            if (!file) {\n              reject(new Error('ファイルが選択されませんでした'));\n              return;\n            }\n            \n            console.log(`📁 Selected file: ${file.name}`);\n            \n            // ファイルのObjectURLを作成\n            const fileUrl = URL.createObjectURL(file);\n            \n            let result;\n            if (parsed.fileType === 'video' || file.type.startsWith('video/')) {\n              result = await this.loadVideoFile(fileUrl, { position: parsed.position });\n            } else {\n              result = await this.loadImageFile(fileUrl, { position: parsed.position });\n            }\n            \n            console.log('✅ File import completed:', result);\n            resolve(result);\n            \n          } catch (error) {\n            console.error('❌ File import failed:', error);\n            reject(error);\n          } finally {\n            document.body.removeChild(input);\n          }\n        };\n        \n        input.oncancel = () => {\n          document.body.removeChild(input);\n          reject(new Error('ファイル選択がキャンセルされました'));\n        };\n        \n        input.click();\n      });\n      \n    } catch (error) {\n      console.error('❌ File import execution failed:', error);\n      throw error;\n    }\n  }\n\n  async executeObjectSelection(parsed) {\n    try {\n      console.log('🎯 Starting object selection...');\n      \n      const objects = this.getSpawnedObjects();\n      if (objects.length === 0) {\n        throw new Error('選択可能なオブジェクトがありません。まずファイルをインポートしてください。');\n      }\n      \n      console.log(`📋 Available objects: ${objects.length}`);\n      \n      // オブジェクト選択UIを作成\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.8);\n        z-index: 10000;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;\n      \n      const container = document.createElement('div');\n      container.style.cssText = `\n        background: #1a1a2e;\n        border-radius: 12px;\n        padding: 24px;\n        max-width: 500px;\n        max-height: 70vh;\n        overflow-y: auto;\n        color: white;\n        font-family: Arial, sans-serif;\n      `;\n      \n      const title = document.createElement('h3');\n      title.textContent = '🎯 オブジェクトを選択してください';\n      title.style.cssText = 'margin: 0 0 16px 0; color: #ec4899;';\n      container.appendChild(title);\n      \n      const objectList = document.createElement('div');\n      objectList.style.cssText = 'margin-bottom: 16px;';\n      \n      objects.forEach((obj, index) => {\n        const item = document.createElement('div');\n        item.style.cssText = `\n          padding: 12px;\n          margin: 8px 0;\n          background: #2a2a3e;\n          border-radius: 8px;\n          cursor: pointer;\n          border: 2px solid transparent;\n          transition: all 0.3s ease;\n        `;\n        \n        const name = obj.userData?.type === 'generated_image' ? '🖼️ 画像' : \n                     obj.userData?.type === 'generated_video' ? '🎬 動画' : '📄 ファイル';\n        const time = new Date(obj.userData?.createdAt).toLocaleTimeString();\n        \n        item.innerHTML = `\n          <div style=\"font-weight: bold;\">${name} #${index + 1}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">作成: ${time}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">位置: (${Math.round(obj.position.x)}, ${Math.round(obj.position.y)}, ${Math.round(obj.position.z)})</div>\n        `;\n        \n        item.onmouseover = () => {\n          item.style.borderColor = '#ec4899';\n          item.style.background = '#3a3a4e';\n        };\n        \n        item.onmouseout = () => {\n          item.style.borderColor = 'transparent';\n          item.style.background = '#2a2a3e';\n        };\n        \n        item.onclick = () => {\n          resolve({ selectedObjectId: obj.id, selectedObject: obj });\n          document.body.removeChild(modal);\n        };\n        \n        objectList.appendChild(item);\n      });\n      \n      container.appendChild(objectList);\n      \n      const cancelBtn = document.createElement('button');\n      cancelBtn.textContent = 'キャンセル';\n      cancelBtn.style.cssText = `\n        background: #666;\n        color: white;\n        border: none;\n        padding: 8px 16px;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 14px;\n      `;\n      \n      cancelBtn.onclick = () => {\n        document.body.removeChild(modal);\n        reject(new Error('オブジェクト選択がキャンセルされました'));\n      };\n      \n      container.appendChild(cancelBtn);\n      modal.appendChild(container);\n      document.body.appendChild(modal);\n      \n      return new Promise((resolve, reject) => {\n        // Promise handlers are set up in the click events above\n      });\n      \n    } catch (error) {\n      console.error('❌ Object selection failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * フォールバック用のテクスチャ作成\n   */\n  createFallbackTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // グラデーション背景\n    const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n    gradient.addColorStop(0, `hsl(${hue}, 70%, 60%)`);\n    gradient.addColorStop(1, `hsl(${(hue + 60) % 360}, 70%, 40%)`);\n    \n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 512, 512);\n    \n    // テキスト描画\n    ctx.fillStyle = 'white';\n    ctx.font = '24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🎨', 256, 230);\n    \n    ctx.font = '16px Arial';\n    ctx.fillText(prompt.slice(0, 20), 256, 270);\n    \n    ctx.font = '14px Arial';\n    ctx.fillStyle = 'rgba(255,255,255,0.7)';\n    ctx.fillText('Placeholder Image', 256, 300);\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * フォールバック用の動画テクスチャ作成\n   */\n  createFallbackVideoTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // アニメーション用の変数\n    let animationFrame = 0;\n    \n    const animate = () => {\n      // グラデーション背景（時間で変化）\n      const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n      const offset = (animationFrame * 2) % 360;\n      gradient.addColorStop(0, `hsl(${(hue + offset) % 360}, 70%, 60%)`);\n      gradient.addColorStop(1, `hsl(${(hue + offset + 60) % 360}, 70%, 40%)`);\n      \n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, 512, 512);\n      \n      // 動的テキスト描画\n      ctx.fillStyle = 'white';\n      ctx.font = '24px Arial';\n      ctx.textAlign = 'center';\n      \n      // 動画アイコンをアニメーション\n      const icons = ['🎬', '🎥', '📹', '🎞️'];\n      const iconIndex = Math.floor(animationFrame / 10) % icons.length;\n      ctx.fillText(icons[iconIndex], 256, 230);\n      \n      ctx.font = '16px Arial';\n      ctx.fillText(prompt.slice(0, 20), 256, 270);\n      \n      ctx.font = '14px Arial';\n      ctx.fillStyle = 'rgba(255,255,255,0.7)';\n      ctx.fillText('Placeholder Video', 256, 300);\n      \n      animationFrame++;\n      \n      // 60FPSでアニメーション\n      setTimeout(() => requestAnimationFrame(animate), 1000/60);\n    };\n    \n    // アニメーション開始\n    animate();\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * 文字列のハッシュ値を計算\n   */\n  hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // 32bit整数に変換\n    }\n    return Math.abs(hash);\n  }\n\n  /**\n   * 生成されたオブジェクト一覧取得\n   */\n  getSpawnedObjects() {\n    return Array.from(this.spawnedObjects.entries()).map(([id, object]) => ({\n      id,\n      name: object.name,\n      userData: object.userData,\n      position: object.position.clone()\n    }));\n  }\n\n  /**\n   * オブジェクト削除\n   */\n  removeObject(objectId) {\n    const object = this.spawnedObjects.get(objectId);\n    if (object) {\n      if (object.userData?.videoElement) {\n        const videoElement = object.userData.videoElement;\n        try {\n          videoElement.pause();\n          if (typeof videoElement.removeAttribute === 'function') {\n            videoElement.removeAttribute('src');\n          } else {\n            videoElement.src = '';\n          }\n          if (typeof videoElement.load === 'function') {\n            videoElement.load();\n          }\n        } catch (error) {\n          console.warn('🎬 Failed to release video element resources:', error);\n        }\n      }\n\n      if (object.userData?.objectUrl) {\n        try {\n          URL.revokeObjectURL(object.userData.objectUrl);\n        } catch (error) {\n          console.warn('🎬 Failed to revoke object URL:', error);\n        }\n      }\n\n      if (object.userData?.cleanupCallbacks) {\n        try {\n          object.userData.cleanupCallbacks.forEach(cb => {\n            if (typeof cb === 'function') cb();\n          });\n        } catch (error) {\n          console.warn('🧹 Cleanup callbacks failed:', error);\n        }\n      }\n\n      this.experimentGroup.remove(object);\n      this.spawnedObjects.delete(objectId);\n      \n      // ジオメトリとマテリアルのメモリ解放\n      if (object.geometry) object.geometry.dispose();\n      if (object.material) {\n        const materials = Array.isArray(object.material) ? object.material : [object.material];\n        materials.forEach(mat => {\n          if (mat.map && typeof mat.map.dispose === 'function') {\n            mat.map.dispose();\n          }\n          mat.dispose();\n        });\n      }\n      \n      console.log(`🗑️ Removed object: ${objectId}`);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    const objectIds = Array.from(this.spawnedObjects.keys());\n    objectIds.forEach(id => this.removeObject(id));\n    console.log('🧹 Cleared all experimental objects');\n  }\n\n  /**\n   * コマンド履歴取得\n   */\n  getCommandHistory() {\n    return [...this.commandHistory];\n  }\n\n  /**\n   * 生成位置に一時的な視覚インジケーターを表示\n   */\n  createLocationIndicator(relativePosition) {\n    // 目立つ光る球体を作成\n    const geometry = new THREE.SphereGeometry(1, 16, 16);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00,\n      transparent: true,\n      opacity: 0.9\n    });\n    \n    const indicator = new THREE.Mesh(geometry, material);\n    \n    // カメラ相対位置でインジケーターも配置\n    if (this.camera) {\n      const indicatorPos = this.calculateCameraRelativePosition({\n        x: relativePosition.x,\n        y: relativePosition.y + 2, // オブジェクトの少し上に表示\n        z: relativePosition.z\n      });\n      indicator.position.copy(indicatorPos);\n    } else {\n      indicator.position.set(relativePosition.x, relativePosition.y + 2, relativePosition.z);\n    }\n    \n    console.log(`🟢 インジケーター表示: (${indicator.position.x.toFixed(1)}, ${indicator.position.y.toFixed(1)}, ${indicator.position.z.toFixed(1)})`);\n    \n    this.scene.add(indicator);\n    \n    // 設定された時間後に自動削除\n    setTimeout(() => {\n      this.scene.remove(indicator);\n      geometry.dispose();\n      material.dispose();\n    }, this.config.indicatorDuration);\n    \n    // アニメーション（点滅効果）\n    let opacity = 0.8;\n    let direction = -1;\n    const animate = () => {\n      opacity += direction * 0.05;\n      if (opacity <= 0.3) direction = 1;\n      if (opacity >= 0.8) direction = -1;\n      \n      material.opacity = opacity;\n      \n      if (indicator.parent) {\n        requestAnimationFrame(animate);\n      }\n    };\n    animate();\n  }\n\n  /**\n   * カメラ相対位置計算（画面座標対応）\n   */\n  calculateCameraRelativePosition(relativePosition) {\n    if (!this.camera) {\n      if (this.config.enableDebugLogging) {\n        console.warn('📷 Camera not available, using fallback positioning');\n      }\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n\n    try {\n      // カメラの位置と方向を取得\n      const cameraPos = this.camera.position.clone();\n      const cameraDirection = new THREE.Vector3();\n      this.camera.getWorldDirection(cameraDirection);\n      \n      // カメラの右方向と上方向を計算\n      const cameraRight = new THREE.Vector3();\n      const cameraUp = new THREE.Vector3(0, 1, 0); // ワールドの上方向\n      cameraRight.crossVectors(cameraDirection, cameraUp).normalize();\n      const cameraUpActual = new THREE.Vector3();\n      cameraUpActual.crossVectors(cameraRight, cameraDirection).normalize();\n\n      // 相対位置をカメラ座標系で計算\n      const finalPosition = cameraPos.clone();\n      \n      // 前後方向（Z軸）: カメラの向きに沿って（正の値で前方、負の値で後方）\n      finalPosition.add(cameraDirection.clone().multiplyScalar(relativePosition.z));\n      \n      // 左右方向（X軸）: カメラの右方向に沿って\n      finalPosition.add(cameraRight.clone().multiplyScalar(relativePosition.x));\n      \n      // 上下方向（Y軸）: カメラの上方向に沿って\n      finalPosition.add(cameraUpActual.clone().multiplyScalar(relativePosition.y));\n\n      this.logDebug(\n        `📍 Camera relative position calculated: (${finalPosition.x.toFixed(1)}, ${finalPosition.y.toFixed(1)}, ${finalPosition.z.toFixed(1)})`\n      );\n      return finalPosition;\n      \n    } catch (error) {\n      console.error('❌ Camera relative position calculation failed:', error);\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n  }\n\n  /**\n   * カメラを設定\n   */\n  alignPlaneToCamera(plane) {\n    if (!this.camera) {\n      return;\n    }\n\n    const forward = new THREE.Vector3();\n    this.camera.getWorldDirection(forward); // カメラの前方向（前方が負Z）\n    forward.negate(); // 平面の法線をカメラ側へ向ける\n\n    let up = new THREE.Vector3().copy(this.camera.up).applyQuaternion(this.camera.quaternion).normalize();\n    if (Math.abs(forward.dot(up)) > 0.999) {\n      up = new THREE.Vector3(0, 1, 0);\n      if (Math.abs(forward.dot(up)) > 0.999) {\n        up = new THREE.Vector3(0, 0, 1);\n      }\n    }\n\n    const right = new THREE.Vector3().crossVectors(up, forward).normalize();\n    up = new THREE.Vector3().crossVectors(forward, right).normalize();\n\n    const orientation = new THREE.Matrix4();\n    orientation.makeBasis(right, up, forward);\n    plane.quaternion.setFromRotationMatrix(orientation);\n  }\n\n  /**\n   * カメラを設定\n   */\n  setCamera(camera) {\n    this.camera = camera;\n  }\n\n  /**\n   * 設定を更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  setImageService(serviceId) {\n    this.selectedImageService = serviceId || null;\n    this.logDebug('🎯 Updated image service:', this.selectedImageService);\n  }\n\n  getImageService() {\n    return this.selectedImageService;\n  }\n\n  setVideoService(serviceId) {\n    this.selectedVideoService = serviceId || null;\n    this.logDebug('🎬 Updated video service:', this.selectedVideoService);\n  }\n\n  getVideoService() {\n    return this.selectedVideoService;\n  }\n\n\n\n\n\n  /**\n   * 音声制御UIを作成\n   */\n  createAudioControl(videoObject) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    // 音声制御ボタンを作成\n    const audioButton = document.createElement('div');\n    audioButton.className = 'chocodrop-audio-control';\n    audioButton.innerHTML = '♪'; // 初期状態：音楽記号\n    // カスタムツールチップを作成（プロジェクトのデザインシステムに合わせて）\n    const createTooltip = () => {\n      const tooltip = document.createElement('div');\n      tooltip.className = 'chocodrop-audio-tooltip';\n      tooltip.textContent = '音声のオン/オフ切り替え';\n      tooltip.style.cssText = `\n        position: absolute !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 8px !important;\n        padding: 8px 12px !important;\n        color: white !important;\n        font-size: 11px !important;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n        font-weight: 500 !important;\n        white-space: nowrap !important;\n        pointer-events: none !important;\n        z-index: 1000000 !important;\n        opacity: 0 !important;\n        transform: translateY(-100%) translateX(-50%) !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        margin-bottom: 8px !important;\n      `;\n      return tooltip;\n    };\n\n    const tooltip = createTooltip();\n    document.body.appendChild(tooltip);\n\n    // 縦型音量スライダーを作成\n    const createVolumeSlider = () => {\n      const sliderContainer = document.createElement('div');\n      sliderContainer.className = 'chocodrop-volume-slider';\n      sliderContainer.style.cssText = `\n        position: absolute !important;\n        width: 30px !important;\n        height: 100px !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 15px !important;\n        padding: 10px 8px !important;\n        z-index: 1000001 !important;\n        opacity: 0 !important;\n        pointer-events: none !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        display: flex !important;\n        flex-direction: column !important;\n        align-items: center !important;\n        justify-content: center !important;\n      `;\n\n      const slider = document.createElement('input');\n      slider.type = 'range';\n      slider.min = '0';\n      slider.max = '100';\n      slider.value = '100';\n      slider.style.cssText = `\n        width: 80px !important;\n        height: 12px !important;\n        background: rgba(255, 255, 255, 0.2) !important;\n        border-radius: 6px !important;\n        outline: none !important;\n        cursor: pointer !important;\n        -webkit-appearance: none !important;\n        appearance: none !important;\n        transform: rotate(-90deg) !important;\n        transform-origin: center !important;\n      `;\n\n      // WebKit用のスライダースタイル\n      const style = document.createElement('style');\n      style.textContent = `\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n          border: none;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-thumb {\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          border: none;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n      `;\n      document.head.appendChild(style);\n\n      // スライダーのスタイルをカスタマイズ\n      slider.addEventListener('input', (e) => {\n        const value = e.target.value;\n        videoElement.volume = value / 100;\n\n        // アイコンを音量に応じて変更\n        if (value == 0) {\n          audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n          audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n          audioButton.title = 'ミュート中';\n        } else {\n          audioButton.innerHTML = '♪';\n          audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n          audioButton.style.color = 'white !important';\n          audioButton.title = '音声ON';\n        }\n      });\n\n      sliderContainer.appendChild(slider);\n      return sliderContainer;\n    };\n\n    const volumeSlider = createVolumeSlider();\n    document.body.appendChild(volumeSlider);\n\n    audioButton.style.cssText = `\n      position: absolute !important;\n      width: 18px !important;\n      height: 18px !important;\n      background: rgba(0, 0, 0, 0.4) !important;\n      border: 1px solid rgba(255, 255, 255, 0.3) !important;\n      border-radius: 50% !important;\n      color: white !important;\n      font-size: 9px !important;\n      cursor: pointer !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      z-index: 999999 !important;\n      transition: all 0.2s ease !important;\n      user-select: none !important;\n      box-shadow: 0 1px 4px rgba(0,0,0,0.2) !important;\n      backdrop-filter: blur(8px) !important;\n      pointer-events: auto !important;\n      opacity: 1 !important;\n    `;\n\n    let isSliderVisible = false;\n\n    // ホバー効果とスライダー表示\n    audioButton.addEventListener('mouseenter', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.7)';\n      audioButton.style.transform = 'scale(1.05)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.5)';\n\n      if (!isSliderVisible) {\n        // ツールチップを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        tooltip.style.left = `${buttonRect.left + buttonRect.width / 2}px`;\n        tooltip.style.top = `${buttonRect.top - 8}px`;\n        tooltip.style.opacity = '1';\n      }\n    });\n\n    audioButton.addEventListener('mouseleave', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.5)';\n      audioButton.style.transform = 'scale(1.0)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n\n      // ツールチップを非表示\n      tooltip.style.opacity = '0';\n    });\n\n    // 左クリック：ミュートのオン/オフ切り替え\n    audioButton.addEventListener('click', (e) => {\n      e.stopPropagation();\n\n      // スライダーが表示されている場合は閉じる\n      if (isSliderVisible) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n        return;\n      }\n\n      // ミュート切り替え\n      if (videoElement.muted || videoElement.volume === 0) {\n        videoElement.muted = false;\n        videoElement.volume = volumeSlider.querySelector('input').value / 100;\n        audioButton.innerHTML = '♪';\n        audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n        audioButton.style.color = 'white !important';\n        audioButton.title = '音声ON';\n      } else {\n        videoElement.muted = true;\n        audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n        audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n        audioButton.title = 'ミュート中';\n      }\n    });\n\n    // 右クリック：音量スライダーの表示/非表示切り替え\n    audioButton.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      isSliderVisible = !isSliderVisible;\n\n      if (isSliderVisible) {\n        // スライダーを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        volumeSlider.style.left = `${buttonRect.left + buttonRect.width / 2 - 15}px`;\n        volumeSlider.style.top = `${buttonRect.top - 110}px`;\n        volumeSlider.style.opacity = '1';\n        volumeSlider.style.pointerEvents = 'auto';\n\n        // ツールチップを非表示\n        tooltip.style.opacity = '0';\n      } else {\n        // スライダーを非表示\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // 外側クリックでスライダーを閉じる\n    document.addEventListener('click', (e) => {\n      if (isSliderVisible && !audioButton.contains(e.target) && !volumeSlider.contains(e.target)) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // ページに追加\n    document.body.appendChild(audioButton);\n\n    // 動画オブジェクトに音声制御ボタンを関連付け\n    videoObject.userData.audioControlElement = audioButton;\n\n    // 位置更新関数を保存\n    videoObject.userData.updateAudioControlPosition = () => {\n      this.updateAudioControlPosition(videoObject, audioButton);\n    };\n\n    // 初期位置設定\n    this.updateAudioControlPosition(videoObject, audioButton);\n\n    this.audioControls.set(videoObject.userData.id || videoObject.uuid, {\n      object: videoObject,\n      audioButton,\n      tooltip,\n      volumeSlider,\n      hideSlider: () => {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // スクロール・リサイズで追随\n    if (!this.audioControlUpdateListener) {\n      this.audioControlUpdateListener = () => {\n        this.updateAllAudioControlPositions();\n      };\n      window.addEventListener('scroll', this.audioControlUpdateListener, { passive: true });\n      window.addEventListener('resize', this.audioControlUpdateListener, { passive: true });\n    }\n\n    if (!this.audioControlUpdateInterval) {\n      this.audioControlUpdateInterval = setInterval(() => {\n        this.updateAllAudioControlPositions();\n      }, 100);\n    }\n\n    const cleanup = () => {\n      document.removeEventListener('click', onDocumentClick, true);\n      if (audioButton.parentNode) audioButton.parentNode.removeChild(audioButton);\n      if (tooltip.parentNode) tooltip.parentNode.removeChild(tooltip);\n      if (volumeSlider.parentNode) volumeSlider.parentNode.removeChild(volumeSlider);\n      this.audioControls.delete(videoObject.userData.id || videoObject.uuid);\n\n      if (this.audioControls.size === 0) {\n        if (this.audioControlUpdateInterval) {\n          clearInterval(this.audioControlUpdateInterval);\n          this.audioControlUpdateInterval = null;\n        }\n        if (this.audioControlUpdateListener) {\n          window.removeEventListener('scroll', this.audioControlUpdateListener);\n          window.removeEventListener('resize', this.audioControlUpdateListener);\n          this.audioControlUpdateListener = null;\n        }\n      }\n    };\n\n    const onDocumentClick = (e) => {\n      if (isSliderVisible && !audioButton.contains(e.target) && !volumeSlider.contains(e.target)) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    };\n\n    document.addEventListener('click', onDocumentClick, true);\n\n    videoObject.userData.cleanupCallbacks = videoObject.userData.cleanupCallbacks || [];\n    videoObject.userData.cleanupCallbacks.push(cleanup);\n\n    console.log('🔊 Audio control created for video:', videoObject.userData.id);\n  }\n\n  /**\n   * 音声制御ボタンの位置を動画オブジェクトに合わせて更新\n   */\n  updateAudioControlPosition(videoObject, audioButton) {\n    if (!this.camera || !this.renderer || !audioButton.parentNode) return;\n\n    // 動画オブジェクトの3D座標を画面座標に変換\n    const vector = new THREE.Vector3();\n    videoObject.getWorldPosition(vector);\n    vector.project(this.camera);\n\n    // 画面座標に変換\n    const canvas = this.renderer.domElement;\n    const rect = canvas.getBoundingClientRect();\n\n    const x = (vector.x * 0.5 + 0.5) * rect.width + rect.left;\n    const y = -(vector.y * 0.5 - 0.5) * rect.height + rect.top;\n\n    // 動画オブジェクトの右上にボタンを配置\n    const geometry = videoObject.geometry;\n    if (geometry && geometry.parameters) {\n      const width = geometry.parameters.width * videoObject.scale.x;\n      const offsetX = 150; // 動画の右側に固定距離\n      const offsetY = -50; // 動画の上側に固定距離\n\n      audioButton.style.left = `${x + offsetX}px`;\n      audioButton.style.top = `${y + offsetY}px`;\n    } else {\n      // フォールバック: 動画中心の右上\n      audioButton.style.left = `${x + 50}px`;\n      audioButton.style.top = `${y - 20}px`;\n    }\n  }\n\n  updateAllAudioControlPositions() {\n    if (!this.audioControls || this.audioControls.size === 0) {\n      return;\n    }\n\n    this.audioControls.forEach((entry) => {\n      const obj = entry.object;\n      if (obj && obj.userData && obj.userData.updateAudioControlPosition) {\n        obj.userData.updateAudioControlPosition();\n      }\n    });\n  }\n\n  /**\n   * 動画音声の再生/停止を切り替え\n   */\n  toggleVideoAudio(videoObject, audioButton) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    if (videoElement.muted) {\n      // ミュート解除：音声再生\n      videoElement.muted = false;\n      audioButton.innerHTML = '🔈'; // 音声再生中マーク\n      console.log('🔊 Audio enabled for video:', videoObject.userData.id);\n    } else {\n      // ミュート：音声停止\n      videoElement.muted = true;\n      audioButton.innerHTML = '🔊'; // 音声ありマーク\n      console.log('🔇 Audio muted for video:', videoObject.userData.id);\n    }\n  }\n\n  /**\n   * CSS2DRenderer初期化（音声制御UIなどの表示に必要）\n   */\n  initializeLabelRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に初期化済み\n    }\n\n    // CSS2DRendererを動的に読み込んで初期化\n    this.loadAndInitializeCSS2DRenderer();\n  }\n\n  /**\n   * CSS2DRendererの準備完了を保証\n   */\n  async ensureCSS2DRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に準備完了\n    }\n\n    // 初期化処理がまだの場合は開始\n    if (!this.css2dInitPromise) {\n      this.css2dInitPromise = this.loadAndInitializeCSS2DRenderer();\n    }\n\n    // 初期化完了まで待機\n    await this.css2dInitPromise;\n  }\n\n  /**\n   * CSS2DRendererの動的読み込みと初期化\n   */\n  async loadAndInitializeCSS2DRenderer() {\n    try {\n      // CSS2DRendererが既に利用可能な場合\n      if (window.THREE && window.THREE.CSS2DRenderer) {\n        this.setupCSS2DRenderer();\n        return;\n      }\n\n      // Three.jsのCSS2DRendererを動的に読み込み\n      console.log('🏷️ Loading CSS2DRenderer dynamically...');\n\n      // CDNからCSS2DRendererを読み込み\n      const module = await import('https://cdn.skypack.dev/three@0.158.0/examples/jsm/renderers/CSS2DRenderer.js');\n\n      // グローバルに設定\n      if (!window.THREE) window.THREE = {};\n      window.THREE.CSS2DRenderer = module.CSS2DRenderer;\n      window.THREE.CSS2DObject = module.CSS2DObject;\n\n      console.log('✅ CSS2DRenderer loaded successfully');\n      this.setupCSS2DRenderer();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to load CSS2DRenderer:', error);\n      console.warn('🔧 Audio controls will not be visible. Please include CSS2DRenderer in your project.');\n    }\n  }\n\n  /**\n   * CSS2DRendererのセットアップ\n   */\n  setupCSS2DRenderer() {\n    try {\n      this.labelRenderer = new window.THREE.CSS2DRenderer();\n      this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n      this.labelRenderer.domElement.style.position = 'absolute';\n      this.labelRenderer.domElement.style.top = '0px';\n      this.labelRenderer.domElement.style.pointerEvents = 'none';\n\n      // メインレンダラーのコンテナに追加\n      if (this.renderer && this.renderer.domElement.parentNode) {\n        this.renderer.domElement.parentNode.appendChild(this.labelRenderer.domElement);\n      } else {\n        document.body.appendChild(this.labelRenderer.domElement);\n      }\n\n      console.log('🏷️ CSS2DRenderer initialized for UI overlays');\n\n      // リサイズハンドラーを追加\n      this.addLabelRendererResizeHandler();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to setup CSS2DRenderer:', error);\n    }\n  }\n\n  /**\n   * CSS2DRendererのリサイズハンドラー追加\n   */\n  addLabelRendererResizeHandler() {\n    if (!this.labelRendererResizeHandler) {\n      this.labelRendererResizeHandler = () => {\n        if (this.labelRenderer) {\n          this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n        }\n      };\n      window.addEventListener('resize', this.labelRendererResizeHandler);\n    }\n  }\n\n  /**\n   * レンダリング更新（アニメーションループで呼び出し）\n   */\n  updateRenderer() {\n    if (this.labelRenderer && this.scene && this.camera) {\n      this.labelRenderer.render(this.scene, this.camera);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * 2025年トレンド: アダプティブ選択インジケーター色計算\n   * 背景色を自動検出してWCAG 2025基準のコントラスト比を保証\n   */\n  getAdaptiveSelectionColor() {\n    // シーンの背景色を取得\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 }; // デフォルト中間色\n    \n    if (backgroundColor) {\n      if (backgroundColor.isColor) {\n        bgColor = {\n          r: backgroundColor.r,\n          g: backgroundColor.g,\n          b: backgroundColor.b\n        };\n      }\n    }\n    \n    // 明度計算（相対輝度）\n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    // WCAG 2025準拠: 4.5:1以上のコントラスト比を確保\n    // 背景が暗い場合は明るい色、明るい場合は暗い色を選択\n    if (bgLuminance < 0.5) {\n      // 暗い背景: 明るいアクセント色\n      return 0x00ff88; // 明るいティール\n    } else {\n      // 明るい背景: 暗いアクセント色  \n      return 0x1a1a2e; // ダークネイビー\n    }\n  }\n  \n  /**\n   * アダプティブホバー色計算\n   */\n  getAdaptiveHoverColor() {\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 };\n    \n    if (backgroundColor && backgroundColor.isColor) {\n      bgColor = {\n        r: backgroundColor.r,\n        g: backgroundColor.g,\n        b: backgroundColor.b\n      };\n    }\n    \n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    if (bgLuminance < 0.5) {\n      // 暗い背景: より明るいホバー色\n      return 0x00ffff; // シアン\n    } else {\n      // 明るい背景: より暗いホバー色\n      return 0xff3366; // ダークピンク\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  dispose() {\n    this.clearAll();\n    if (this.experimentGroup.parent) {\n      this.experimentGroup.parent.remove(this.experimentGroup);\n    }\n  }\n}\n","const IMAGE_SERVICE_STORAGE_KEY = 'chocodrop-service-image';\nconst VIDEO_SERVICE_STORAGE_KEY = 'chocodrop-service-video';\n\n/**\n * Command UI Demo - Demo version with restricted functionality\n * For GitHub Pages demo - import functionality only\n */\nexport class CommandUIDemo {\n  constructor(options = {}) {\n    this.sceneManager = options.sceneManager || null;\n    this.client = options.client || null;\n    this.onControlsToggle = options.onControlsToggle || (() => {});\n    \n    this.isVisible = false;\n    this.container = null;\n    this.input = null;\n    this.output = null;\n    this.currentMode = 'generate';\n\n    // リアルタイム進捗管理\n    this.activeConnections = new Map();\n    this.currentTaskId = null;\n    \n    // 設定\n    this.config = {\n      activationKey: options.activationKey || '@',\n      position: options.position || 'bottom-right',\n      width: options.width || 450,\n      maxHeight: options.maxHeight || 600,\n      theme: options.theme || 'dark',\n      showExamples: options.showExamples !== false,\n      autoScroll: options.autoScroll !== false,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n\n    this.availableImageServices = [];\n    this.availableVideoServices = [];\n    this.selectedImageService = null;\n    this.selectedVideoService = null;\n    this.imageServiceSelect = null;\n    this.videoServiceSelect = null;\n    this.serviceSelectorContainer = null;\n    this.serviceSelectorStatus = null;\n    this.serviceSelectorContent = null;\n    this.serviceSelectorRetryButton = null;\n    this.serviceSelectorSaveButton = null;\n    this.serviceSelectorCancelButton = null;\n    this.serviceModalOverlay = null;\n    this.serviceModal = null;\n    this.servicesLoading = false;\n    this.isExpanded = false;\n    this.overlayTextarea = null;\n    this.pendingImageService = null;\n    this.pendingVideoService = null;\n\n    try {\n      const storedImage = localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY);\n      const storedVideo = localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY);\n      if (storedImage) {\n        this.selectedImageService = storedImage;\n      }\n      if (storedVideo) {\n        this.selectedVideoService = storedVideo;\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to load stored service selections:', error);\n    }\n\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    this.applyServiceSelectionToSceneManager();\n\n    // テーマモード状態管理 (light, dark, wabisabi)\n    this.currentTheme = localStorage.getItem('live-command-theme') || 'light';\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    \n    // Undo/Redo システム\n    this.commandHistory = [];\n    this.currentHistoryIndex = -1;\n    this.maxHistorySize = 50; // 最大コマンド保存数\n    \n    this.initUI();\n    this.bindEvents();\n\n    if (!this.client && this.sceneManager && this.sceneManager.client) {\n      this.client = this.sceneManager.client;\n    }\n\n    this.createServiceModal();\n    this.createFloatingChocolateIcon();\n\n    // DOM読み込み完了後にスタイルを確実に適用\n    document.addEventListener('DOMContentLoaded', () => {\n      this.refreshStyles();\n    });\n\n    this.logDebug('🎮 CommandUI initialized');\n\n    if (!this.selectedImageService || !this.selectedVideoService) {\n      this.openServiceModal(true);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * デモページ用のコンパクトトースト表示\n   */\n  showDemoMessage() {\n    this.showCompactToast('デモページでは利用できません');\n  }\n\n  /**\n   * コンパクトトースト通知を表示\n   */\n  showCompactToast(message) {\n    // 既存のトーストがあれば削除\n    const existingToast = document.getElementById('demo-toast');\n    if (existingToast) {\n      existingToast.remove();\n    }\n\n    // ボタンコンテナの位置を取得\n    const buttonContainer = this.radioModeContainer;\n    if (!buttonContainer) return;\n\n    const toast = document.createElement('div');\n    toast.id = 'demo-toast';\n    toast.textContent = message;\n    toast.style.cssText = `\n      position: absolute;\n      top: -35px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: ${this.isDarkMode ? 'rgba(139, 92, 246, 0.9)' : 'rgba(139, 92, 246, 0.85)'};\n      color: white;\n      padding: 6px 12px;\n      border-radius: 6px;\n      font-size: 12px;\n      font-weight: 500;\n      white-space: nowrap;\n      z-index: 1000;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      box-shadow: 0 2px 8px rgba(139, 92, 246, 0.3);\n    `;\n\n    // ボタンコンテナに相対配置\n    buttonContainer.style.position = 'relative';\n    buttonContainer.appendChild(toast);\n\n    // フェードイン\n    setTimeout(() => {\n      toast.style.opacity = '1';\n    }, 10);\n\n    // 3秒後に自動削除\n    setTimeout(() => {\n      if (toast.parentNode) {\n        toast.style.opacity = '0';\n        setTimeout(() => {\n          if (toast.parentNode) {\n            toast.remove();\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * UI要素の作成と配置\n   */\n  initUI() {\n    // メインコンテナ\n    this.container = document.createElement('div');\n    this.container.id = 'live-command-ui';\n    this.container.style.cssText = this.getContainerStyles();\n\n    // 2025年トレンド：Progressive Disclosure（ホバー時のみブランド表示）\n    const brandIndicator = document.createElement('div');\n    brandIndicator.className = 'progressive-brand-indicator';\n    brandIndicator.style.cssText = `\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, #6366f1, #8b5cf6);\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;\n    \n    // Progressive Disclosure: ホバー/クリックでブランド名表示\n    const brandText = document.createElement('div');\n    brandText.className = 'progressive-brand-text';\n    brandText.style.cssText = `\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.25)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;\n    brandText.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">🍫</span> <span style=\"color: #6366f1;\">ChocoDrop</span>';\n    \n    // Progressive Disclosure イベント\n    brandIndicator.addEventListener('mouseenter', () => {\n      brandText.style.opacity = '1';\n      brandText.style.transform = 'translateY(0) scale(1)';\n      brandIndicator.style.transform = 'scale(1.2)';\n      brandIndicator.style.opacity = '1';\n    });\n    \n    brandIndicator.addEventListener('mouseleave', () => {\n      brandText.style.opacity = '0';\n      brandText.style.transform = 'translateY(5px) scale(0.9)';\n      brandIndicator.style.transform = 'scale(1)';\n      brandIndicator.style.opacity = '0.7';\n    });\n    \n    brandIndicator.appendChild(brandText);\n    this.container.appendChild(brandIndicator);\n\n    // 出力エリア（タスクカードコンテナ）- 非表示に変更\n    this.output = document.createElement('div');\n    this.outputDiv = this.output; // 両方の参照を保持（互換性のため）\n    this.output.id = 'command-output';\n    this.output.className = 'command-output';\n    this.output.style.cssText = this.getOutputStyles();\n    // フローティングカード用コンテナ\n    this.floatingContainer = document.createElement('div');\n    this.floatingContainer.id = 'floating-cards-container';\n    this.floatingContainer.style.cssText = `\n      position: fixed;\n      top: var(--floating-top, 20px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column-reverse;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-end;\n    `;\n\n    // タスクカード管理用\n    this.taskCards = new Map();\n\n    // 入力フィールドラッパー（展開ボタン用）\n    this.inputWrapper = document.createElement('div');\n    this.inputWrapper.style.cssText = `\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;\n\n    // Ultra-Simple 単一入力フィールド（自動リサイズ対応）\n    this.input = document.createElement('textarea');\n    this.input.rows = 1;\n    this.input.id = 'command-input';\n    this.input.placeholder = '「右上にドラゴンを」「美しい桜の森を中央に」など... ✨';\n    this.input.style.cssText = this.getInputStyles();\n\n    // 展開ボタン（初期状態は非表示）\n    this.expandButton = document.createElement('div');\n    this.expandButton.innerHTML = '⤢';\n    this.expandButton.title = 'テキスト全体を表示';\n    this.expandButton.style.cssText = `\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n      border-radius: 6px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;\n\n    // 展開ボタンのホバー効果\n    this.expandButton.addEventListener('mouseenter', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      this.expandButton.style.transform = 'scale(1.1)';\n    });\n\n    this.expandButton.addEventListener('mouseleave', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      this.expandButton.style.transform = 'scale(1)';\n    });\n\n    // 展開ボタンのクリック処理\n    this.expandButton.addEventListener('click', () => {\n      if (this.isExpanded) {\n        this.hideOverlayTextarea();\n      } else {\n        this.showOverlayTextarea();\n      }\n    });\n\n    // ラッパーに要素を追加\n    this.inputWrapper.appendChild(this.input);\n    this.inputWrapper.appendChild(this.expandButton);\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合）\n\n    // ラジオボタン風モードセレクター\n    const modeSelector = this.createRadioModeSelector();\n\n    // ミニマルアクションボタン\n    const actionContainer = this.createMinimalActions();\n\n    // ×クローズボタンをフォーム右上に追加\n    const closeButton = document.createElement('div');\n    closeButton.innerHTML = '×';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;\n\n    closeButton.addEventListener('mouseover', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      closeButton.style.transform = 'scale(1.1)';\n    });\n\n    closeButton.addEventListener('mouseout', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.transform = 'scale(1)';\n    });\n\n    closeButton.addEventListener('click', () => {\n      this.hide();\n    });\n\n    // 組み立て（ヘッダー削除、ブランドバッジは既に追加済み）\n    // this.container.appendChild(this.output); // 大きなタスク表示エリアをDOMに追加しない\n    this.container.appendChild(closeButton);\n    this.container.appendChild(modeSelector);\n    this.container.appendChild(this.inputWrapper);\n    this.container.appendChild(actionContainer);\n\n    // フローティングカードコンテナをbodyに直接追加\n    document.body.appendChild(this.floatingContainer);\n\n    // DOM に追加\n    document.body.appendChild(this.container);\n\n    // 初回テーマ適用\n    this.applyTheme();\n\n    // 日本語IME対応のcomposition state管理\n    this.isComposing = false;\n    this.hasCompositionJustEnded = false;\n\n    // リアルタイム入力監視とコマンド検出（IME対応）\n    this.input.addEventListener('input', () => {\n      // IME入力中はコマンド検出を停止\n      if (this.isComposing) {\n        return;\n      }\n      \n      // 自動リサイズ処理\n      this.autoResizeTextarea();\n      \n      this.detectCommandType();\n    });\n    \n    // 日本語IME composition events\n    this.input.addEventListener('compositionstart', () => {\n      this.isComposing = true;\n    });\n    \n    this.input.addEventListener('compositionend', () => {\n      this.isComposing = false;\n      \n      // Safariのみフラグ設定（他のブラウザは不要）\n      const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n      if (isSafari) {\n        this.hasCompositionJustEnded = true;\n      }\n      \n      // 確定後のコマンド検出を実行\n      setTimeout(() => {\n        this.autoResizeTextarea();\n        this.detectCommandType();\n      }, 10);\n    });\n    \n    // Safari判定\n    const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n    \n    // 日本語IME対応Enterキー処理（Safari対応版）\n    this.input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        // Safari: compositionend直後のEnterをスキップ\n        if (isSafari && this.hasCompositionJustEnded) {\n          this.hasCompositionJustEnded = false;\n          return;\n        }\n\n        // その他のブラウザ: isComposingチェック\n        if (!isSafari && (e.isComposing || this.isComposing)) {\n          return;\n        }\n\n        // Generate モードのみデモ制限を適用\n        if (this.currentMode === 'generate') {\n          e.preventDefault();\n          this.showDemoMessage();\n          return;\n        }\n\n        e.preventDefault();\n        this.executeCommand();\n      }\n    });\n    \n    // 初期メッセージ\n    if (this.config.showExamples) {\n      // 起動メッセージ削除\n      // 起動時は静かに待機\n    }\n  }\n\n  /**\n   * モードセレクター作成\n   */\n  createMinimalActions() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;\n\n    // 左側: Clear All ボタン（承認済みのLayout Bデザイン）\n    const leftSection = document.createElement('div');\n    leftSection.style.cssText = 'display: flex; gap: 8px; align-items: center;';\n\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">🧹</span> Clear All';\n    clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    clearBtn.addEventListener('click', () => this.clearAllWithConfirmation());\n\n    // 履歴ボタン（将来実装用スペース確保）- 海外UI標準対応：同一幅\n    const historyBtn = document.createElement('button');\n    historyBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">📚</span> History';\n    historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n    historyBtn.style.opacity = '0.5';\n    historyBtn.disabled = true;\n    historyBtn.title = '履歴機能（開発中）';\n\n    leftSection.appendChild(clearBtn);\n    leftSection.appendChild(historyBtn);\n\n    // 右側: テーマトグルと設定（ヘッダーから移動）\n    const rightSection = document.createElement('div');\n    rightSection.style.cssText = 'display: flex; gap: 6px; align-items: center;';\n\n    const themeToggle = document.createElement('button');\n    const getThemeIcon = () => {\n      const themeConfig = {\n        light: '🌙',\n        dark: '🍵',\n        wabisabi: '☀️'\n      };\n      return themeConfig[this.currentTheme] || '🌙';\n    };\n\n    const getThemeTitle = () => {\n      const titleConfig = {\n        light: 'ダークモードに切り替え',\n        dark: '侘び寂びモードに切り替え',\n        wabisabi: 'ライトモードに切り替え'\n      };\n      return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n    };\n\n    const getThemeIconWithFilter = () => {\n      const icon = getThemeIcon();\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (icon === '☀️') {\n        return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n      } else if (icon === '🍵') {\n        return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n      } else {\n        return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n      }\n    };\n\n    themeToggle.innerHTML = getThemeIconWithFilter();\n    themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    themeToggle.title = getThemeTitle();\n    themeToggle.addEventListener('click', () => this.toggleTheme());\n\n    const settingsButton = document.createElement('button');\n    settingsButton.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">⚙️</span>';\n    settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    settingsButton.title = 'サービス設定を開く';\n    settingsButton.addEventListener('click', () => this.openServiceModal());\n\n    rightSection.appendChild(themeToggle);\n    rightSection.appendChild(settingsButton);\n\n    container.appendChild(leftSection);\n    container.appendChild(rightSection);\n\n    // 参照を保持\n    this.clearBtn = clearBtn;\n    this.historyBtn = historyBtn;\n    this.themeToggle = themeToggle;\n    this.settingsButton = settingsButton;\n\n    return container;\n  }\n\n  createServiceSelectorSection() {\n    this.serviceSelectorContainer = document.createElement('div');\n    this.serviceSelectorContainer.id = 'service-selector';\n    this.serviceSelectorContainer.style.cssText = `\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;\n\n    this.serviceSelectorStatus = document.createElement('div');\n    this.serviceSelectorStatus.textContent = 'サービス情報を読み込んでいます...';\n    this.serviceSelectorStatus.style.fontSize = '12px';\n    this.serviceSelectorStatus.style.opacity = '0.8';\n    this.serviceSelectorStatus.style.marginBottom = '8px';\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);\n\n    this.serviceSelectorContent = document.createElement('div');\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);\n\n    this.updateServiceSelectorTheme();\n    return this.serviceSelectorContainer;\n  }\n\n  createServiceModal() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.remove();\n      this.serviceModalOverlay = null;\n      this.serviceModal = null;\n    }\n\n    this.serviceModalOverlay = document.createElement('div');\n    this.serviceModalOverlay.id = 'chocodrop-service-modal-overlay';\n    this.serviceModalOverlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;\n\n    this.serviceModalOverlay.addEventListener('click', (event) => {\n      if (event.target === this.serviceModalOverlay) {\n        this.closeServiceModal();\n      }\n    });\n\n    this.serviceModal = document.createElement('div');\n    this.serviceModal.className = 'chocodrop-service-modal';\n    this.serviceModal.style.cssText = `\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;\n\n    const title = document.createElement('h2');\n    title.textContent = 'サービス設定';\n    title.style.cssText = `\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;\n\n    const subtitle = document.createElement('p');\n    subtitle.textContent = '利用するサービスを選択してください。';\n    subtitle.style.cssText = `\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;\n\n    const selector = this.createServiceSelectorSection();\n\n    const actionRow = document.createElement('div');\n    actionRow.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;\n\n    this.serviceSelectorRetryButton = document.createElement('button');\n    this.serviceSelectorRetryButton.textContent = '再読み込み';\n    this.serviceSelectorRetryButton.style.cssText = `\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorRetryButton.addEventListener('click', () => this.initializeServiceSelector(true));\n\n    const actionButtons = document.createElement('div');\n    actionButtons.style.cssText = 'display: flex; gap: 8px;';\n\n    this.serviceSelectorCancelButton = document.createElement('button');\n    this.serviceSelectorCancelButton.textContent = 'Cancel';\n    this.serviceSelectorCancelButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorCancelButton.addEventListener('click', () => this.closeServiceModal());\n\n    this.serviceSelectorSaveButton = document.createElement('button');\n    this.serviceSelectorSaveButton.textContent = 'Save';\n    this.serviceSelectorSaveButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, #6366f1, #8b5cf6);\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;\n    this.serviceSelectorSaveButton.addEventListener('click', () => this.handleServiceSave());\n\n    actionButtons.appendChild(this.serviceSelectorCancelButton);\n    actionButtons.appendChild(this.serviceSelectorSaveButton);\n\n    actionRow.appendChild(this.serviceSelectorRetryButton);\n    actionRow.appendChild(actionButtons);\n\n    this.serviceModal.appendChild(title);\n    this.serviceModal.appendChild(subtitle);\n    this.serviceModal.appendChild(selector);\n    this.serviceModal.appendChild(actionRow);\n\n    this.serviceModalOverlay.appendChild(this.serviceModal);\n    document.body.appendChild(this.serviceModalOverlay);\n\n    this.updateServiceSelectorTheme();\n    this.toggleServiceRetryButton(false);\n  }\n\n  openServiceModal(forceFetch = false) {\n    if (!this.serviceModalOverlay) {\n      this.createServiceModal();\n    }\n\n    this.serviceModalOverlay.style.display = 'flex';\n    requestAnimationFrame(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.opacity = '1';\n      }\n    });\n\n    this.resetPendingSelections();\n    this.initializeServiceSelector(forceFetch);\n  }\n\n  closeServiceModal() {\n    if (!this.serviceModalOverlay) {\n      return;\n    }\n\n    this.serviceModalOverlay.style.opacity = '0';\n    setTimeout(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.display = 'none';\n      }\n      this.resetPendingSelections();\n    }, 150);\n  }\n\n  async initializeServiceSelector(force = false) {\n    if (this.servicesLoading && !force) {\n      return;\n    }\n\n    if (!this.client || typeof this.client.getAvailableServices !== 'function') {\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n      return;\n    }\n\n    this.servicesLoading = true;\n    this.setServiceSelectorStatus('サービス情報を読み込んでいます...', 'info');\n    this.toggleServiceRetryButton(false);\n    this.setServiceButtonsEnabled(false);\n\n    try {\n      if (typeof this.client.ensureInitialized === 'function') {\n        await this.client.ensureInitialized();\n      }\n\n      const response = await this.client.getAvailableServices();\n      if (!response || response.success === false || !response.metadata) {\n        throw new Error(response?.error || 'サービス情報が取得できませんでした');\n      }\n\n      this.availableImageServices = Array.isArray(response.metadata?.image) ? response.metadata.image : [];\n      this.availableVideoServices = Array.isArray(response.metadata?.video) ? response.metadata.video : [];\n\n      this.selectedImageService = this.resolveServiceSelection(\n        'image',\n        this.availableImageServices,\n        response.default?.image\n      );\n\n      this.selectedVideoService = this.resolveServiceSelection(\n        'video',\n        this.availableVideoServices,\n        response.default?.video\n      );\n\n      this.pendingImageService = this.selectedImageService;\n      this.pendingVideoService = this.selectedVideoService;\n\n      this.populateServiceSelector();\n      this.applyServiceSelectionToSceneManager();\n      this.setServiceButtonsEnabled(true);\n    } catch (error) {\n      console.error('❌ Failed to initialize service selector:', error);\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした。サーバーが起動しているか確認のうえ、再読み込みしてください。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n    } finally {\n      this.servicesLoading = false;\n    }\n  }\n\n  setServiceSelectorStatus(message, type = 'info') {\n    if (!this.serviceSelectorStatus) {\n      return;\n    }\n    this.serviceSelectorStatus.textContent = message;\n    this.serviceSelectorStatus.dataset.statusType = type;\n    this.serviceSelectorStatus.classList.toggle('service-selector-helper', type !== 'error');\n    this.updateServiceSelectorTheme();\n  }\n\n  toggleServiceRetryButton(visible) {\n    if (!this.serviceSelectorRetryButton) {\n      return;\n    }\n    this.serviceSelectorRetryButton.style.display = visible ? 'inline-flex' : 'none';\n    this.updateServiceSelectorTheme();\n  }\n\n  resolveServiceSelection(type, services, defaultId) {\n    if (!services || services.length === 0) {\n      return null;\n    }\n\n    const storageKey = type === 'image' ? IMAGE_SERVICE_STORAGE_KEY : VIDEO_SERVICE_STORAGE_KEY;\n    let storedId = null;\n    try {\n      storedId = localStorage.getItem(storageKey);\n    } catch (error) {\n      console.warn('⚠️ Failed to access localStorage:', error);\n    }\n\n    const isStoredValid = storedId && services.some(service => service.id === storedId);\n    let resolvedId = isStoredValid ? storedId : null;\n\n    if (!resolvedId && defaultId && services.some(service => service.id === defaultId)) {\n      resolvedId = defaultId;\n    }\n\n    if (!resolvedId) {\n      resolvedId = services[0]?.id || null;\n    }\n\n    try {\n      if (resolvedId) {\n        localStorage.setItem(storageKey, resolvedId);\n      } else {\n        localStorage.removeItem(storageKey);\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to persist service selection:', error);\n    }\n\n    return resolvedId;\n  }\n\n  populateServiceSelector() {\n    if (!this.serviceSelectorContent) {\n      return;\n    }\n\n    this.serviceSelectorContent.innerHTML = '';\n\n    const hasImage = this.availableImageServices.length > 0;\n    const hasVideo = this.availableVideoServices.length > 0;\n\n    if (!hasImage && !hasVideo) {\n      this.setServiceSelectorStatus('利用可能なサービスが見つかりませんでした。', 'error');\n      return;\n    }\n\n    this.setServiceSelectorStatus('利用するサービスを選択してください。', 'info');\n\n    if (hasImage) {\n      const imageRow = this.buildServiceRow('image', '画像 (T2I)', this.availableImageServices, this.pendingImageService || this.selectedImageService);\n      this.serviceSelectorContent.appendChild(imageRow);\n    }\n\n    if (hasVideo) {\n      const videoRow = this.buildServiceRow('video', '動画 (T2V)', this.availableVideoServices, this.pendingVideoService || this.selectedVideoService);\n      this.serviceSelectorContent.appendChild(videoRow);\n    }\n\n    this.updateServiceSelectorTheme();\n  }\n\n  buildServiceRow(type, labelText, services, selectedId) {\n    const row = document.createElement('div');\n    row.className = `service-row service-row-${type}`;\n    row.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;\n\n    const label = document.createElement('label');\n    label.textContent = labelText;\n    label.style.fontSize = '13px';\n    label.style.fontWeight = '600';\n    row.appendChild(label);\n\n    const select = document.createElement('select');\n    select.dataset.serviceType = type;\n    select.style.fontFamily = 'inherit';\n    select.style.width = '100%';\n\n    services.forEach(service => {\n      const option = document.createElement('option');\n      option.value = service.id;\n      option.textContent = service.name || service.id;\n      if (service.description) {\n        option.title = service.description;\n      }\n      select.appendChild(option);\n    });\n\n    if (selectedId && services.some(service => service.id === selectedId)) {\n      select.value = selectedId;\n    }\n\n    select.addEventListener('change', (event) => {\n      this.onServiceSelectionChange(type, event.target.value);\n    });\n\n    row.appendChild(select);\n\n    const description = document.createElement('div');\n    description.className = 'service-description';\n    description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    description.style.fontSize = '11px';\n    description.style.opacity = '0.75';\n    description.style.lineHeight = '1.4';\n    description.style.minHeight = '14px';\n    row.appendChild(description);\n\n    select.addEventListener('change', () => {\n      description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    });\n\n    if (type === 'image') {\n      this.imageServiceSelect = select;\n    } else {\n      this.videoServiceSelect = select;\n    }\n\n    return row;\n  }\n\n  onServiceSelectionChange(type, serviceId) {\n    if (type === 'image') {\n      this.pendingImageService = serviceId;\n    } else {\n      this.pendingVideoService = serviceId;\n    }\n\n    const info = this.findServiceInfo(type, serviceId);\n    const description = type === 'image'\n      ? this.imageServiceSelect?.parentElement?.querySelector('.service-description')\n      : this.videoServiceSelect?.parentElement?.querySelector('.service-description');\n\n    if (description) {\n      description.textContent = info?.description || '';\n    }\n  }\n\n  handleServiceSave() {\n    const newImageId = this.pendingImageService || this.selectedImageService;\n    const newVideoId = this.pendingVideoService || this.selectedVideoService;\n\n    if (newImageId) {\n      try {\n        localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY, newImageId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist image service selection:', error);\n      }\n      this.selectedImageService = newImageId;\n      this.sceneManager?.setImageService(newImageId);\n    }\n\n    if (newVideoId) {\n      try {\n        localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY, newVideoId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist video service selection:', error);\n      }\n      this.selectedVideoService = newVideoId;\n      this.sceneManager?.setVideoService(newVideoId);\n    }\n\n    const imageInfo = this.findServiceInfo('image', newImageId);\n    const videoInfo = this.findServiceInfo('video', newVideoId);\n\n    if (imageInfo) {\n      this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`, 'system');\n    }\n    if (videoInfo) {\n      this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`, 'system');\n    }\n\n    this.closeServiceModal();\n  }\n\n  setServiceButtonsEnabled(enabled) {\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.disabled = !enabled;\n      this.serviceSelectorSaveButton.style.opacity = enabled ? '1' : '0.6';\n      this.serviceSelectorSaveButton.style.cursor = enabled ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  resetPendingSelections() {\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    if (this.imageServiceSelect && this.selectedImageService) {\n      this.imageServiceSelect.value = this.selectedImageService;\n    }\n    if (this.videoServiceSelect && this.selectedVideoService) {\n      this.videoServiceSelect.value = this.selectedVideoService;\n    }\n\n    if (this.serviceSelectorContent && this.serviceSelectorContent.childElementCount > 0) {\n      this.populateServiceSelector();\n    }\n  }\n\n  findServiceInfo(type, serviceId) {\n    const list = type === 'image' ? this.availableImageServices : this.availableVideoServices;\n    return list.find(service => service.id === serviceId) || null;\n  }\n\n  applyServiceSelectionToSceneManager() {\n    if (!this.sceneManager) {\n      return;\n    }\n    this.sceneManager.setImageService(this.selectedImageService);\n    this.sceneManager.setVideoService(this.selectedVideoService);\n  }\n\n  updateServiceSelectorTheme() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.style.background = this.isDarkMode\n        ? 'rgba(8, 11, 26, 0.55)'\n        : 'rgba(229, 231, 255, 0.45)';\n    }\n\n    if (this.serviceModal) {\n      this.serviceModal.style.background = this.isDarkMode\n        ? 'rgba(17, 24, 39, 0.15)'\n        : 'rgba(255, 255, 255, 0.15)';\n      this.serviceModal.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.4)'\n        : '1px solid rgba(99, 102, 241, 0.25)';\n      this.serviceModal.style.color = this.isDarkMode ? '#e5e7ff' : '#1f2937';\n    }\n\n    if (this.serviceSelectorStatus) {\n      const type = this.serviceSelectorStatus.dataset?.statusType;\n      const statusColor = type === 'error'\n        ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n        : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.75)');\n      this.serviceSelectorStatus.style.color = statusColor;\n    }\n\n    if (this.serviceSelectorContainer) {\n      const labels = this.serviceSelectorContainer.querySelectorAll('label');\n      labels.forEach(label => {\n        label.style.color = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(31, 41, 55, 0.9)';\n      });\n\n      const selects = this.serviceSelectorContainer.querySelectorAll('select');\n      selects.forEach(select => {\n        select.style.background = this.isDarkMode ? 'rgba(99, 102, 241, 0.18)' : 'rgba(99, 102, 241, 0.12)';\n        select.style.border = this.isDarkMode ? '1px solid rgba(129, 140, 248, 0.45)' : '1px solid rgba(99, 102, 241, 0.45)';\n        select.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n        select.style.padding = '10px 12px';\n        select.style.borderRadius = '10px';\n        select.style.fontSize = '13px';\n        select.style.outline = 'none';\n        select.style.boxShadow = this.isDarkMode\n          ? '0 12px 28px rgba(15, 23, 42, 0.5)'\n          : '0 12px 24px rgba(99, 102, 241, 0.2)';\n      });\n\n      const descriptions = this.serviceSelectorContainer.querySelectorAll('.service-description');\n      descriptions.forEach(desc => {\n        desc.style.color = this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.7)';\n      });\n    }\n\n    if (this.serviceSelectorRetryButton) {\n      this.serviceSelectorRetryButton.style.background = this.isDarkMode\n        ? 'rgba(129, 140, 248, 0.35)'\n        : 'rgba(99, 102, 241, 0.15)';\n      this.serviceSelectorRetryButton.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.5)'\n        : '1px solid rgba(99, 102, 241, 0.45)';\n      this.serviceSelectorRetryButton.style.color = this.isDarkMode ? '#f9fafb' : '#1e1b4b';\n      this.serviceSelectorRetryButton.style.boxShadow = this.isDarkMode\n        ? '0 0 8px rgba(129, 140, 248, 0.45)'\n        : '0 0 8px rgba(99, 102, 241, 0.35)';\n    }\n\n    if (this.serviceSelectorCancelButton) {\n      this.serviceSelectorCancelButton.style.border = this.isDarkMode\n        ? '1px solid rgba(209, 213, 219, 0.3)'\n        : '1px solid rgba(148, 163, 184, 0.5)';\n      this.serviceSelectorCancelButton.style.color = this.isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(30, 41, 59, 0.85)';\n    }\n\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.style.background = this.isDarkMode\n        ? 'linear-gradient(135deg, #6366f1, #8b5cf6)'\n        : 'linear-gradient(135deg, #818cf8, #a855f7)';\n      this.serviceSelectorSaveButton.style.boxShadow = this.isDarkMode\n        ? '0 16px 28px rgba(99, 102, 241, 0.4)'\n        : '0 16px 28px rgba(129, 140, 248, 0.35)';\n    }\n  }\n\n  /**\n   * ラジオボタン風モードセレクター作成\n   */\n  createRadioModeSelector() {\n    const container = document.createElement('div');\n    container.className = 'radio-mode-selector';\n    container.style.cssText = `\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))')};\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(141, 110, 99, 0.4)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(255, 255, 255, 0.25)')};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;\n\n    const modes = [\n      { value: 'generate', label: 'Generate', icon: '🚫', disabled: true },\n      { value: 'import', label: 'Import', icon: '📥' },\n      { value: 'modify', label: 'Modify', icon: '🔧' },\n      { value: 'delete', label: 'Delete', icon: '🗑️' }\n    ];\n\n    this.radioModeButtons = {};\n\n    modes.forEach(mode => {\n      const button = document.createElement('div');\n      button.className = `mode-option ${mode.value}`;\n      button.style.cssText = `\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: ${mode.disabled ? 'not-allowed' : 'pointer'};\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${mode.disabled ? 'rgba(139, 92, 246, 0.6)' : this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)')};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n        opacity: ${mode.disabled ? '0.6' : '1'};\n      `;\n\n      const icon = document.createElement('div');\n      icon.textContent = mode.icon;\n      icon.style.cssText = `\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${mode.disabled ? 'hue-rotate(240deg) saturate(0.8) brightness(1.1)' : this.isDarkMode \n          ? 'hue-rotate(220deg) saturate(0.8) brightness(1.2)' \n          : 'hue-rotate(240deg) saturate(0.7) brightness(0.9)'};\n        transition: filter 0.2s ease;\n      `;\n\n      const label = document.createElement('span');\n      label.textContent = mode.label;\n\n      // AUTOバッジを作成\n      const autoBadge = document.createElement('div');\n      autoBadge.className = 'auto-badge';\n      autoBadge.textContent = 'AUTO';\n      autoBadge.style.cssText = `\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;\n\n      button.appendChild(icon);\n      button.appendChild(label);\n      button.appendChild(autoBadge);\n\n      // イベント処理\n      if (mode.disabled) {\n        // クリック時のみコンパクトトースト表示\n        button.addEventListener('click', (e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          this.showDemoMessage();\n        });\n      } else {\n        // 通常のクリックイベント\n        button.addEventListener('click', () => {\n          if (mode.value === 'import') {\n            this.triggerFileSelection();\n          } else {\n            this.selectMode(mode.value, true); // trueは手動選択を示す\n          }\n        });\n      }\n\n      this.radioModeButtons[mode.value] = { button, autoBadge };\n      container.appendChild(button);\n    });\n\n\n    this.radioModeContainer = container;\n    // デモページではImportを初期選択\n    this.selectMode('import', false);\n\n    return container;\n  }\n\n  /**\n   * モード選択（ラジオボタンUI更新）\n   */\n  selectMode(mode, isManual = false, detectedKeyword = null) {\n    this.currentMode = mode;\n\n    // 全ボタンをリセット\n    Object.keys(this.radioModeButtons).forEach(key => {\n      const { button, autoBadge } = this.radioModeButtons[key];\n      button.style.color = this.isWabiSabiMode\n        ? '#F5F5F5'\n        : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n      button.style.background = 'transparent';\n      button.style.border = '1px solid transparent';\n      button.style.transform = 'scale(1)';\n      button.style.boxShadow = 'none';\n      // AUTOバッジを非表示\n      autoBadge.style.display = 'none';\n      autoBadge.style.opacity = '0';\n    });\n\n    // 選択されたボタンをハイライト（2025年仕様）\n    const { button, autoBadge } = this.radioModeButtons[mode];\n    \n    // 2025 Glassmorphism選択状態\n    const selectedGlass = this.isWabiSabiMode\n      ? {\n          background: 'linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))',\n          border: '1px solid rgba(109, 76, 65, 0.4)',\n          boxShadow: '0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)',\n          color: '#F5F5F5'\n        }\n      : (this.isDarkMode\n        ? {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))',\n            border: '1px solid rgba(99, 102, 241, 0.4)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)',\n            color: '#a5b4fc'\n          }\n        : {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))',\n            border: '1px solid rgba(99, 102, 241, 0.3)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)',\n            color: '#6366f1'\n          });\n\n    button.style.color = selectedGlass.color;\n    button.style.background = selectedGlass.background;\n    button.style.border = selectedGlass.border;\n    button.style.boxShadow = selectedGlass.boxShadow;\n    button.style.transform = 'scale(1.02)';\n\n    // AUTOバッジの表示制御\n    if (!isManual && detectedKeyword) {\n      // 自動切り替えの場合はAUTOバッジを表示\n      autoBadge.style.display = 'inline-block';\n      setTimeout(() => {\n        autoBadge.style.opacity = '1';\n        autoBadge.style.transform = 'scale(1)';\n      }, 100);\n      \n      // 3秒後にフェードアウト\n      setTimeout(() => {\n        autoBadge.style.opacity = '0';\n        autoBadge.style.transform = 'scale(0.8)';\n        setTimeout(() => {\n          autoBadge.style.display = 'none';\n        }, 200);\n      }, 3000);\n    }\n\n    // パルス効果を追加\n    if (!isManual) {\n      this.addPulseEffect(button);\n      this.addContainerGlow(mode);\n    }\n\n    // プレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n\n    // モード切り替え時の入力欄メッセージ上書き機能\n    if (isManual) {\n      this.clearInputOnModeSwitch(mode);\n    }\n\n    // Importモード専用処理\n    if (mode === 'import' || this.selectedFile) {\n      this.showImportInterface();\n    } else {\n      this.hideImportInterface();\n    }\n\n    // Deleteモード専用処理\n    if (mode === 'delete' && isManual) {\n      this.handleDeleteModeSelection();\n    }\n\n    // Modifyモード専用処理\n    if (mode === 'modify' && isManual) {\n      this.handleModifyModeSelection();\n    }\n\n    // モード切り替えメッセージは表示しない（UIで分かるため）\n  }\n\n  /**\n   * パルス効果を追加\n   */\n  addPulseEffect(element) {\n    // 既存のアニメーションをリセット\n    element.style.animation = 'none';\n    \n    // 少し遅らせてからアニメーションを適用（リフロー強制）\n    setTimeout(() => {\n      element.style.animation = 'smartModePulse 0.6s ease-out';\n    }, 10);\n    \n    // アニメーション終了後にクリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 610);\n    \n    // CSSアニメーションを動的に追加（まだ存在しない場合）\n    this.ensurePulseAnimation();\n  }\n\n  /**\n   * パルスアニメーション用CSSを確保\n   */\n  ensurePulseAnimation() {\n    if (document.getElementById('smart-mode-pulse-animation')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'smart-mode-pulse-animation';\n    style.textContent = `\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コンテナグロー効果\n   */\n  addContainerGlow(mode) {\n    const container = this.radioModeContainer;\n    if (!container) return;\n\n    // モードに応じてグロー色を設定\n    const glowColors = this.isWabiSabiMode ? {\n      generate: 'rgba(139, 195, 74, 0.4)',  // 侘び寂びモード：チャット欄と同じ緑\n      import: 'rgba(139, 195, 74, 0.4)',    // 侘び寂びモード：チャット欄と同じ緑\n      modify: 'rgba(139, 195, 74, 0.4)',    // 侘び寂びモード：チャット欄と同じ緑\n      delete: 'rgba(139, 195, 74, 0.4)'     // 侘び寂びモード：チャット欄と同じ緑\n    } : {\n      generate: 'rgba(79, 70, 229, 0.4)',   // ライト/ダークモード：元の紫\n      import: 'rgba(34, 197, 94, 0.4)',     // ライト/ダークモード：元の緑\n      modify: 'rgba(236, 72, 153, 0.4)',    // ライト/ダークモード：元のピンク\n      delete: 'rgba(107, 114, 128, 0.3)'    // ライト/ダークモード：元のグレー\n    };\n\n    // 一時的にグロー効果を適用\n    const glowColor = glowColors[mode];\n    if (glowColor) {\n      container.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n      container.style.borderColor = glowColor.replace('0.4', '0.6').replace('0.3', '0.5');\n    }\n    \n    // 1秒後にグロー効果を除去\n    setTimeout(() => {\n      container.style.boxShadow = '';\n      container.style.borderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.15)';\n    }, 1000);\n  }\n\n  getActionButtonStyles(variant = 'secondary') {\n    const baseStyles = `\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;\n\n    if (variant === 'secondary') {\n      // Clear All, History ボタン用 - 美しい配置と統一感\n      return baseStyles + `\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.6)'\n          : (this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)')};\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? '#d1d5db' : '#374151')};\n        text-align: center;\n        white-space: nowrap;\n      `;\n    } else if (variant === 'icon') {\n      // テーマトグル、設定ボタン用\n      return baseStyles + `\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(255, 255, 255, 0.4)'};\n        color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'};\n      `;\n    }\n  }\n\n  /**\n   * 破壊的アクション用ボタンスタイル（赤系ガラス効果）\n   */\n  getDestructiveButtonStyles() {\n    return `\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode ? 'rgba(220, 38, 127, 0.4)' : 'rgba(190, 24, 93, 0.35)'};\n      border-radius: 6px;\n      background: ${this.isDarkMode ? 'rgba(220, 38, 127, 0.3)' : 'rgba(190, 24, 93, 0.25)'};\n      color: ${this.isDarkMode ? '#fca5a5' : '#dc2626'};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `;\n  }\n\n  getCommandTypeIndicatorStyles() {\n    return `\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)'};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `;\n  }\n\n  /**\n   * テキストエリアの自動リサイズ処理（最大2行）\n   */\n  autoResizeTextarea() {\n    // 高さをリセットして正確な scrollHeight を取得\n    this.input.style.height = 'auto';\n    \n    // 現在のコンテンツに基づいて高さを計算\n    const lineHeight = 22; // CSS で設定した line-height\n    const padding = 28; // 上下のパディング合計 (14px * 2)\n    const maxLines = 2;\n    const maxHeight = (lineHeight * maxLines) + padding;\n    \n    // スクロール高さに基づいて新しい高さを決定\n    const newHeight = Math.min(this.input.scrollHeight, maxHeight);\n    \n    // 高さを適用\n    this.input.style.height = newHeight + 'px';\n    \n    // 2行を超える場合はスクロールを有効化と展開ボタン表示\n    if (this.input.scrollHeight > maxHeight) {\n      this.input.style.overflowY = 'auto';\n      // 展開ボタンを表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'flex';\n      }\n    } else {\n      this.input.style.overflowY = 'hidden';\n      // 展開ボタンを非表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * リアルタイムコマンドタイプ検出\n   */\n  detectCommandType() {\n    const input = this.input.value.trim();\n    if (!input) {\n      this.selectMode('generate', false);\n      return;\n    }\n\n    const commandType = this.analyzeCommandType(input);\n\n    // Delete/Modifyは手動選択を優先、自動切り替えしない\n    if (this.currentMode === 'delete' || this.currentMode === 'modify') {\n      return; // 現在のモードを維持\n    }\n    // Generate/Importのみ自動切り替え\n    this.selectMode(commandType.type, false, commandType.detectedKeyword);\n  }\n\n  /**\n   * ルールベースコマンド分析\n   */\n  analyzeCommandType(text) {\n    this.logDebug(`🔍 Analyzing command: \"${text}\"`);\n\n    // メディアタイプの検出\n    const mediaInfo = this.detectMediaType(text);\n    \n    // 削除コマンドの検出\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除' },\n      { pattern: /消去/, keyword: '消去' },\n      { pattern: /消して/, keyword: '消して' },\n      { pattern: /消す/, keyword: '消す' },\n      { pattern: /取り除/, keyword: '取り除' },\n      { pattern: /除去/, keyword: '除去' },\n      { pattern: /削除して/, keyword: '削除して' },\n      { pattern: /delete/i, keyword: 'delete' },\n      { pattern: /remove/i, keyword: 'remove' },\n      { pattern: /clear/i, keyword: 'clear' },\n      { pattern: /erase/i, keyword: 'erase' }\n    ];\n    \n    // 変更・移動コマンドの検出\n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動' },\n      { pattern: /動かして/, keyword: '動かして' },\n      { pattern: /変更/, keyword: '変更' },\n      { pattern: /変えて/, keyword: '変えて' },\n      { pattern: /修正/, keyword: '修正' },\n      { pattern: /調整/, keyword: '調整' },\n      { pattern: /回転/, keyword: '回転' },\n      { pattern: /反転/, keyword: '反転' },\n      { pattern: /ミラー/, keyword: 'ミラー' },\n      { pattern: /傾け/, keyword: '傾け' },\n      { pattern: /向きを変え/, keyword: '向きを変え' },\n      { pattern: /向きを変更/, keyword: '向きを変更' },\n      { pattern: /左右(逆|反転)/, keyword: '左右反転' },\n      { pattern: /上下(逆|反転)/, keyword: '上下反転' },\n      { pattern: /逆さ/, keyword: '逆さ' },\n      { pattern: /ひっくり返/, keyword: 'ひっくり返す' },\n      { pattern: /.*を.*色/, keyword: '色変更' },\n      { pattern: /.*を.*サイズ/, keyword: 'サイズ変更' },\n      { pattern: /を.*に.*して/, keyword: '変更' },\n      { pattern: /move/i, keyword: 'move' },\n      { pattern: /change/i, keyword: 'change' },\n      { pattern: /modify/i, keyword: 'modify' },\n      { pattern: /edit/i, keyword: 'edit' }\n    ];\n    \n    // 生成コマンドの検出（デフォルト）\n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って' },\n      { pattern: /生成/, keyword: '生成' },\n      { pattern: /作成/, keyword: '作成' },\n      { pattern: /描いて/, keyword: '描いて' },\n      { pattern: /書いて/, keyword: '書いて' },\n      { pattern: /create/i, keyword: 'create' },\n      { pattern: /generate/i, keyword: 'generate' },\n      { pattern: /make/i, keyword: 'make' },\n      { pattern: /draw/i, keyword: 'draw' }\n    ];\n\n    // 削除パターンチェック\n    for (const { pattern, keyword } of deletePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Delete pattern matched: ${keyword}`);\n        return {\n          type: 'delete',\n          confidence: 0.9,\n          reason: '削除キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: true,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 変更パターンチェック\n    for (const { pattern, keyword } of modifyPatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Modify pattern matched: ${keyword}`);\n        return {\n          type: 'modify',\n          confidence: 0.8,\n          reason: '変更キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 生成パターンチェック\n    for (const { pattern, keyword } of generatePatterns) {\n      if (pattern.test(text)) {\n        return {\n          type: 'generate',\n          confidence: mediaInfo.confidence,\n          reason: mediaInfo.reason,\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // デフォルト（生成モード）\n    this.logDebug(`ℹ️ No specific pattern matched, defaulting to generate mode`);\n    return {\n      type: 'generate',\n      confidence: mediaInfo.confidence,\n      reason: mediaInfo.reason,\n      mediaType: mediaInfo.type,\n      requiresConfirmation: false,\n      detectedKeyword: null\n    };\n  }\n\n  /**\n   * メディアタイプ検出（画像/動画）\n   */\n  detectMediaType(text) {\n    const videoPatterns = [\n      /動画|ビデオ|映像|ムービー/,\n      /video|movie|clip/i\n    ];\n    \n    const imagePatterns = [\n      /画像|写真|絵|イラスト|イメージ/,\n      /image|picture|photo|illustration/i\n    ];\n    \n    if (videoPatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'video',\n        confidence: 0.8,\n        reason: '動画生成コマンド'\n      };\n    }\n    \n    if (imagePatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'image',\n        confidence: 0.8,\n        reason: '画像生成コマンド'\n      };\n    }\n    \n    // デフォルトは画像\n    return {\n      type: 'image',\n      confidence: 0.6,\n      reason: '生成コマンド（画像デフォルト）'\n    };\n  }\n\n  /**\n   * コマンドタイプインジケーター表示\n   */\n  showCommandTypeIndicator(commandInfo) {\n    const { type, confidence, reason } = commandInfo;\n    \n    const typeLabels = {\n      generate: '🎨 生成モード',\n      import: '📥 インポートモード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      import: 'linear-gradient(135deg, #22c55e, #16a34a)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    // Proactive UX: 低信頼度時に提案表示\n    if (confidence < 0.7) {\n      this.showProactiveSuggestion(type, confidence);\n    } else {\n      this.hideProactiveSuggestion();\n    }\n    \n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[type].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n    // this.commandTypeIndicator.style.display = 'block';\n    // this.commandTypeIndicator.style.cursor = 'default';\n    \n    // スワイプジェスチャー対応\n    this.enableGestureControl();\n  }\n\n  /**\n   * Proactive UX: 低信頼度時の提案表示\n   */\n  showProactiveSuggestion(detectedType, confidence) {\n    if (!this.proactiveSuggestion) {\n      this.proactiveSuggestion = document.createElement('div');\n      this.proactiveSuggestion.id = 'proactive-suggestion';\n      this.proactiveSuggestion.style.cssText = `\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;\n      // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n      // 代わりに入力フィールドの前に挿入\n      this.container.insertBefore(this.proactiveSuggestion, this.input);\n    }\n\n    const alternativeTypes = ['generate', 'modify', 'delete'].filter(t => t !== detectedType);\n    const suggestion = alternativeTypes[0]; // 最初の代替案\n\n    const suggestionLabels = {\n      generate: '🎨 生成',\n      modify: '✏️ 変更', \n      delete: '🗑️ 削除'\n    };\n\n    this.proactiveSuggestion.innerHTML = `\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style=\"margin-top: 4px; font-size: 10px; opacity: 0.8;\">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;\n    \n    this.proactiveSuggestion.style.display = 'block';\n    \n    // クリックで提案モードに変更\n    this.proactiveSuggestion.onclick = () => {\n      this.currentMode = suggestion;\n      this.hideProactiveSuggestion();\n      this.updateIndicatorForMode(suggestion, 0.9);\n    };\n  }\n\n  /**\n   * Proactive UX提案を非表示\n   */\n  hideProactiveSuggestion() {\n    if (this.proactiveSuggestion) {\n      this.proactiveSuggestion.style.display = 'none';\n    }\n  }\n\n  /**\n   * 指定モードでインジケーター更新\n   */\n  updateIndicatorForMode(mode, confidence) {\n    const typeLabels = {\n      generate: '🎨 生成モード',\n      import: '📥 インポートモード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      import: 'linear-gradient(135deg, #22c55e, #16a34a)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[mode].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n  }\n\n  /**\n   * ジェスチャーコントロール有効化\n   */\n  enableGestureControl() {\n    // 旧スワイプジェスチャー機能は削除（ラジオボタンUIに統合済み）\n    // ラジオボタンで直接モード選択可能になったため、スワイプ操作は不要\n    this.gestureEnabled = true;\n  }\n\n  /**\n   * アクションボタン作成\n   */\n  createActionButtons() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;\n\n    // 履歴ボタン削除 - タスク進行状況に置き換え済み\n\n    // クリアオールボタン\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '🧹 全削除';\n    clearBtn.style.cssText = this.getModernButtonStyles('danger');\n    clearBtn.addEventListener('click', () => this.clearAll());\n\n    // historyBtn削除済み\n    container.appendChild(clearBtn);\n\n    return container;\n  }\n\n  /**\n   * スタイル定義\n   */\n  getContainerStyles() {\n    const positions = {\n      'bottom-right': 'bottom: 20px; right: 20px;',\n      'bottom-left': 'bottom: 20px; left: 20px;',\n      'top-right': 'top: 20px; right: 20px;',\n      'top-left': 'top: 20px; left: 20px;',\n      'center': 'top: 50%; left: 50%; transform: translate(-50%, -50%);'\n    };\n\n    // 2025 Glassmorphism仕様：ダーク・ライト両対応\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(99, 102, 241, 0.2)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)'\n    };\n\n    // 侘び寂びモード - 枯山水の静寂：独自のアイデンティティ\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))',\n      backdropFilter: 'blur(20px) saturate(120%)',\n      border: '1px solid rgba(93, 64, 55, 0.5)',\n      boxShadow: '0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      position: fixed;\n      ${positions[this.config.position] || positions['bottom-right']}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  getHeaderStyles() {\n    // ダークモードと同じ紫グラデーションで統一\n    const gradientColors = 'linear-gradient(135deg, #4f46e5, #7c3aed)';\n\n    return `\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `;\n  }\n\n  getOutputStyles() {\n    // カスタムスクロールバーのCSSを注入\n    this.addScrollbarStyles();\n\n    return `\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.2)'};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)'};\n    `;\n  }\n\n  /**\n   * スクロールバーのカスタムスタイルをページに注入\n   */\n  addScrollbarStyles() {\n    if (document.getElementById('custom-scrollbar-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'custom-scrollbar-styles';\n    style.textContent = `\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.5)'};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      /* wabi-sabiモード用の入力フィールドフォーカススタイル */\n      .wabisabi-mode textarea:focus,\n      .wabisabi-mode input:focus {\n        background: linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3)) !important;\n        border: 1px solid rgba(141, 110, 99, 0.6) !important;\n        box-shadow: 0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2), 0 0 0 2px rgba(141, 110, 99, 0.2) !important;\n        color: #F5F5F5 !important;\n        outline: none !important;\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  getInputStyles() {\n    // 2025 Glassmorphism仕様：入力フィールド\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))',\n      border: '1px solid rgba(255, 255, 255, 0.5)',\n      boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)'\n    };\n\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))',\n      border: '1px solid rgba(97, 97, 97, 0.5)',\n      boxShadow: '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(55, 65, 81, 0.6)'};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `;\n  }\n\n  getModernButtonStyles(type) {\n    const styles = {\n      primary: this.isWabiSabiMode ? `\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      ` : `\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,\n      secondary: this.isWabiSabiMode ? `\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,\n      danger: this.isWabiSabiMode ? `\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `\n    };\n\n    return `\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `;\n  }\n\n  getModeButtonStyles(isActive, mode) {\n    // モードカラー設定\n    const modeColors = {\n      generate: 'linear-gradient(135deg, #22c55e, #16a34a)', // Green - チャット欄と同じ緑色\n      import: 'linear-gradient(135deg, #22c55e, #16a34a)',   // Green - チャット欄と同じ緑色\n      modify: 'linear-gradient(135deg, #22c55e, #16a34a)',    // Green - チャット欄と同じ緑色\n      delete: 'linear-gradient(135deg, #22c55e, #16a34a)'     // Green - チャット欄と同じ緑色\n    };\n    \n    return `\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive ? 'white' : (this.isWabiSabiMode ? '#F5F5F5' : 'rgba(255, 255, 255, 0.7)')};\n      background: ${isActive ? modeColors[mode] : 'transparent'};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `;\n  }\n\n  /**\n   * イベントバインディング\n   */\n  bindEvents() {\n    // キーボードショートカット\n    document.addEventListener('keydown', (e) => {\n      // 設定されたキーでUI表示切替\n      if (e.key === this.config.activationKey) {\n        e.preventDefault();\n        this.toggle();\n        return;\n      }\n      \n      // Enterキー処理はinitUI()内で行うため、ここでは処理しない\n      // （IME対応のため）\n      \n      // Escapeで非表示\n      if (this.isVisible && e.key === 'Escape') {\n        this.hide();\n      }\n      \n      // Ctrl+Z/Ctrl+Y でUndo/Redo\n      if (this.isVisible && e.ctrlKey) {\n        if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault();\n          this.undo();\n        } else if (e.key === 'y' || (e.key === 'z' && e.shiftKey)) {\n          e.preventDefault();\n          this.redo();\n        }\n      }\n    });\n\n    // 入力フィールドのスタイル調整\n    this.input.addEventListener('focus', () => {\n      this.input.style.borderColor = '#74b9ff';\n      this.input.style.boxShadow = '0 0 5px rgba(116, 185, 255, 0.5)';\n    });\n\n    this.input.addEventListener('blur', () => {\n      this.input.style.borderColor = '#4a90e2';\n      this.input.style.boxShadow = 'none';\n    });\n  }\n\n  /**\n   * UI表示/非表示切替\n   */\n  toggle() {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * UI表示\n   */\n  show() {\n    this.container.style.display = 'flex';\n    this.container.style.flexDirection = 'column';\n    this.floatingContainer.style.display = 'flex';\n\n    // UIフォームの位置に合わせて配置（少し遅延して正確な位置を取得）\n    setTimeout(() => {\n      const containerRect = this.container.getBoundingClientRect();\n      this.floatingContainer.style.left = containerRect.left + 'px';\n      this.floatingContainer.style.top = (containerRect.top - 80) + 'px';\n      this.floatingContainer.style.width = containerRect.width + 'px';\n      this.floatingContainer.style.transform = 'none';\n    }, 50);\n\n    this.isVisible = true;\n    this.input.focus();\n\n    // フォーム表示中はチョコアイコンを隠す\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0';\n      this.floatingChocolateIcon.style.pointerEvents = 'none';\n    }\n\n    // コントロールを無効化\n    this.onControlsToggle(true);\n    // コントロール停止時も静かに\n  }\n\n  /**\n   * UI非表示\n   */\n  hide() {\n    this.container.style.display = 'none';\n    this.floatingContainer.style.display = 'none';\n    this.isVisible = false;\n\n    // フォーム非表示時はチョコアイコンを再表示\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.pointerEvents = 'auto';\n    }\n\n    // コントロールを再有効化\n    this.onControlsToggle(false);\n    this.logDebug('🎮 コントロールを再開');\n  }\n\n  /**\n   * モード切り替え\n   */\n  switchMode(mode) {\n    if (this.currentMode === mode) return;\n    \n    this.currentMode = mode;\n    \n    // モードボタンのスタイル更新\n    this.container.querySelectorAll('[data-mode]').forEach(btn => {\n      const isActive = btn.dataset.mode === mode;\n      btn.style.cssText = this.getModeButtonStyles(isActive, btn.dataset.mode);\n    });\n    \n    // 入力フィールドのプレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n    \n    // 実行ボタンのラベルと色更新\n    const executeBtn = this.container.querySelector('#execute-btn');\n    const labels = {\n      generate: '🎨 Generate Object',\n      modify: '✏️ Apply Changes', \n      delete: '🗑️ Delete Objects'\n    };\n    \n    const buttonColors = {\n      generate: 'linear-gradient(135deg, #5b21b6, #4c1d95)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)', \n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    executeBtn.innerHTML = `<span>${labels[mode]}</span>`;\n    executeBtn.style.background = buttonColors[mode];\n    \n    // モード切り替え通知は不要（ボタンで分かるため）\n  }\n  \n  /**\n   * モード別プレースホルダー\n   */\n  getPlaceholderForMode(mode) {\n    const placeholders = {\n      generate: '「猫の画像を作って」と話しかけて ⏎ ✨',\n      import: 'ファイルを選択して ⏎ 📁',\n      modify: '選択後「ピンクに変更」と伝えて ⏎ ✏️',\n      delete: '選択後、コマンドをそのまま送って ⏎ 🗑️'\n    };\n    return placeholders[mode] || placeholders.generate;\n  }\n\n  /**\n   * デモ版専用: 向き・反転コマンドをローカルで処理\n   */\n  handleDemoOrientationCommand(command) {\n    if (!this.sceneManager) {\n      return null;\n    }\n\n    const normalized = command.toLowerCase();\n    const wantsVerticalFlip = /上下|逆さ|さかさ|ひっくり返/.test(normalized);\n    const wantsHorizontalFlip = /左右|向きを変え|向きを変更|横向き|ミラー|反転/.test(normalized);\n    const wantsRotateRight = /右向き|右を向|右に向け/.test(normalized);\n    const wantsRotateLeft = /左向き|左を向|左に向け/.test(normalized);\n    const wantsRotateBack = /後ろ向き|反対向き|背中|180度|半回転/.test(normalized);\n\n    const hasOrientationKeyword = wantsVerticalFlip || wantsHorizontalFlip || wantsRotateRight || wantsRotateLeft || wantsRotateBack;\n    if (!hasOrientationKeyword) {\n      return null;\n    }\n\n    let targetObject = this.sceneManager.selectedObject;\n    if (!targetObject && typeof this.sceneManager.findObjectByKeyword === 'function') {\n      targetObject = this.sceneManager.findObjectByKeyword(normalized);\n      if (targetObject) {\n        this.sceneManager.selectObject(targetObject);\n      }\n    }\n\n    if (!targetObject) {\n      this.addOutput('⚠️ 変更したいオブジェクトを先に選択してください。', 'warning');\n      return { handled: true, result: { success: false, message: '対象オブジェクトが見つかりませんでした' } };\n    }\n\n    const operations = [];\n\n    if (wantsHorizontalFlip) {\n      const currentX = targetObject.scale.x === 0 ? 1 : targetObject.scale.x;\n      targetObject.scale.x = -currentX;\n      operations.push('左右反転');\n    }\n\n    if (wantsVerticalFlip) {\n      const currentY = targetObject.scale.y === 0 ? 1 : targetObject.scale.y;\n      targetObject.scale.y = -currentY;\n      operations.push('上下反転');\n    }\n\n    if (wantsRotateRight) {\n      targetObject.rotation.y = Math.PI / 2;\n      operations.push('右向き');\n    }\n\n    if (wantsRotateLeft) {\n      targetObject.rotation.y = -Math.PI / 2;\n      operations.push('左向き');\n    }\n\n    if (wantsRotateBack) {\n      targetObject.rotation.y = Math.PI;\n      operations.push('背面向き');\n    }\n\n    if (operations.length === 0) {\n      // ここまで来て操作が無ければ SceneManager に委譲\n      return { handled: false };\n    }\n\n    // 変更履歴を追加\n    targetObject.userData = targetObject.userData || {};\n    targetObject.userData.modifications = targetObject.userData.modifications || [];\n    targetObject.userData.modifications.push({\n      timestamp: Date.now(),\n      type: 'orientation',\n      operations,\n      command\n    });\n\n    // 選択表示を更新\n    if (typeof this.sceneManager.createModernSelectionIndicator === 'function') {\n      this.sceneManager.createModernSelectionIndicator(targetObject);\n    }\n\n    const message = `✏️ ${operations.join('・')} を適用しました`;\n    this.addOutput(message, 'success');\n\n    return {\n      handled: true,\n      result: {\n        success: true,\n        message,\n        objectId: targetObject.name,\n        operations\n      }\n    };\n  }\n\n  /**\n   * コマンド実行\n   */\n  async executeCommand() {\n    const command = this.input.value.trim();\n    if (!command) return;\n\n    // 最終的なコマンドタイプ判定\n    const commandType = this.analyzeCommandType(command);\n\n    if (this.selectedFile) {\n      if (this.currentMode !== 'import') {\n        this.selectMode('import', false);\n      }\n      this.currentMode = 'import';\n    } else {\n      this.currentMode = commandType.type;\n    }\n\n    // 削除の場合は確認ダイアログ\n    if (commandType.requiresConfirmation) {\n      const confirmed = await this.showDeleteConfirmation(command);\n      if (!confirmed) {\n        this.addOutput('❌ 削除をキャンセルしました', 'system');\n        return;\n      }\n    }\n\n    // 入力をクリア\n    this.input.value = '';\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.style.display = 'none';\n    this.hideProactiveSuggestion();\n\n    // コマンド表示（メディアタイプ付き）\n    const mediaIcon = commandType.mediaType === 'video' ? '🎬' : '🖼️';\n    // タスクカード作成\n    const taskId = this.addTaskCard(command, { status: 'processing' });\n\n    // コマンド実行前の状態を履歴に保存\n    this.saveCommandToHistory({\n      command: command,\n      mode: this.currentMode,\n      mediaType: commandType.mediaType,\n      timestamp: Date.now()\n    });\n\n    try {\n      // 処理メッセージ表示\n      // タスクカードは既に1183行目で作成済み（taskId変数）\n      // 重複を避けるため、ここでは作成しない\n\n      let result;\n      \n      // モードに応じたコマンド処理\n      const modePrefix = this.getModePrefix(this.currentMode);\n      const fullCommand = `${modePrefix}${command}`;\n\n      // モード別の実行処理\n      this.logDebug('🔍 Current mode check:', this.currentMode);\n      if (this.currentMode === 'import') {\n        this.logDebug('📁 Import mode detected - bypassing SceneManager');\n        // Importモード: 直接処理（SceneManagerを迂回）\n        if (!this.selectedFile) {\n          throw new Error('ファイルが選択されていません。まずファイルを選択してください。');\n        }\n        result = await this.handleImportCommand(command);\n      } else if (this.sceneManager) {\n        if (this.currentMode === 'modify') {\n          const orientationResult = this.handleDemoOrientationCommand(command);\n          if (orientationResult && orientationResult.handled) {\n            result = orientationResult.result;\n          } else {\n            result = await this.sceneManager.executeCommand(fullCommand);\n          }\n        } else {\n          result = await this.sceneManager.executeCommand(fullCommand);\n        }\n      } else if (this.client) {\n        // モードに応じてAPIエンドポイントを選択\n        if (this.currentMode === 'generate') {\n          // 生成モード: 新しいオブジェクトを作成\n          if (commandType.mediaType === 'video') {\n            result = await this.client.generateVideo(command, {\n              model: this.selectedVideoService || undefined\n            });\n          } else {\n            result = await this.client.generateImage(command, {\n              service: this.selectedImageService || undefined\n            });\n          }\n        } else if (this.currentMode === 'modify') {\n          // 変更モード: 既存オブジェクトを変更（選択が必要）\n          if (!this.selectedObject) {\n            throw new Error('変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。');\n          }\n          result = await this.client.modifySelectedObject(this.selectedObject, command);\n        } else if (this.currentMode === 'delete') {\n          // 削除モード: オブジェクト選択チェック\n          if (!this.selectedObject && !this.sceneManager?.getSelectedObjects()?.length) {\n            this.addOutput('⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。', 'system');\n            return;\n          }\n          // 削除モード: 確認ダイアログを表示してから削除\n          const confirmMessage = `本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;\n          if (!confirm(confirmMessage)) {\n            this.addOutput('❌ 削除がキャンセルされました', 'system');\n            return;\n          }\n          result = await this.client.deleteObjects(command);\n        } else {\n          // その他のモード\n          result = await this.client.executeCommand(fullCommand);\n        }\n      } else {\n        throw new Error('SceneManager または Client が設定されていません');\n      }\n\n      // taskId取得とSSE接続開始\n      if (result && result.taskId) {\n        this.connectToProgress(result.taskId, taskId);\n        this.currentTaskId = result.taskId;\n      }\n\n      // 成功メッセージ\n      const successMessages = {\n        generate: ``, // 成功メッセージ削除 - 結果で十分\n        modify: '✅ 変更を適用しました',\n        delete: '🗑️ 削除しました'\n      };\n      \n      // タスクカード完了\n      if (taskId) {\n        this.updateTaskCard(taskId, 'completed');\n      }\n      \n      // 詳細情報表示\n      if (result.modelName) {\n        // デバッグ情報削除 - モーダル表示用に保存\n      }\n      \n      if (result.objectId) {\n        // オブジェクトID削除\n      }\n      \n      if (result.position) {\n        // 位置情報削除\n      }\n\n      if (commandType.mediaType) {\n        // メディアタイプ削除\n      }\n\n    } catch (error) {\n      const errorMessages = {\n        generate: `❌ ${commandType.mediaType === 'video' ? '動画' : '画像'}生成エラー`,\n        modify: '❌ 変更エラー', \n        delete: '❌ 削除エラー'\n      };\n      // タスクカードエラー\n      if (taskId) {\n        this.updateTaskCard(taskId, 'error');\n      }\n\n      this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`, 'error');\n      console.error('Command execution error:', error);\n    }\n\n    // 2025年UXトレンド: コマンド実行後の自動選択解除\n    if (this.sceneManager && this.sceneManager.selectedObject) {\n      // Modify/Deleteコマンド後は選択を自動解除してストレス軽減\n      if (this.currentMode === 'modify' || this.currentMode === 'delete') {\n        setTimeout(() => {\n          this.sceneManager.deselectObject();\n        }, 500); // 少し遅延させて操作完了を視覚的に確認\n      }\n    }\n\n    // 出力エリアを最下部にスクロール\n    if (this.config.autoScroll) {\n      this.scrollToBottom();\n    }\n  }\n\n  /**\n   * 削除確認ダイアログ\n   */\n  async showConfirmationDialog(options) {\n    const {\n      icon = '🗑️',\n      title = '確認',\n      message = 'この操作を実行しますか？',\n      confirmText = '実行',\n      cancelText = 'キャンセル',\n      confirmColor = '#ef4444'\n    } = options;\n\n    return new Promise((resolve) => {\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;\n\n      const dialog = document.createElement('div');\n      dialog.style.cssText = `\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.3)' : 'rgba(255, 255, 255, 0.5)'};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isDarkMode \n          ? '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)'\n          : '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)'};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;\n\n      dialog.innerHTML = `\n        <div style=\"font-size: 56px; margin-bottom: 20px;\">${icon}</div>\n        <h3 style=\"margin: 0 0 16px 0; color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;\">\n          ${title}\n        </h3>\n        <p style=\"margin: 0 0 28px 0; color: ${this.isDarkMode ? '#d1d5db' : '#6b7280'}; line-height: 1.6; font-size: 16px;\">\n          ${message}\n        </p>\n        <div style=\"display: flex; gap: 8px; justify-content: center;\">\n          <button id=\"cancel-btn\" style=\"\n            padding: 14px 24px;\n            background: ${this.isDarkMode \n              ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n              : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))'};\n            border: 1px solid ${this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)'};\n            border-radius: 12px;\n            color: ${this.isDarkMode ? '#d1d5db' : '#374151'};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          \">${cancelText}</button>\n          <button id=\"confirm-btn\" style=\"\n            padding: 14px 24px;\n            background: ${confirmColor === '#6366f1' \n              ? 'linear-gradient(135deg, #6366f1, #8b5cf6)' \n              : confirmColor === '#ef4444'\n              ? 'linear-gradient(135deg, #ef4444, #dc2626)'\n              : 'linear-gradient(135deg, #ff7b47, #f97316)'};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor === '#6366f1' \n              ? 'rgba(99, 102, 241, 0.3)' \n              : confirmColor === '#ef4444' \n              ? 'rgba(239, 68, 68, 0.3)' \n              : 'rgba(255, 123, 71, 0.3)'};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          \">${confirmText}</button>\n        </div>\n      `;\n\n      modal.appendChild(dialog);\n      document.body.appendChild(modal);\n\n      // アニメーション開始\n      requestAnimationFrame(() => {\n        modal.style.opacity = '1';\n        dialog.style.transform = 'scale(1)';\n        dialog.style.opacity = '1';\n      });\n\n      // イベントリスナー\n      dialog.querySelector('#cancel-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(false);\n      };\n\n      dialog.querySelector('#confirm-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(true);\n      };\n\n      // ESCキーでキャンセル\n      const escHandler = (e) => {\n        if (e.key === 'Escape') {\n          this.closeModalWithAnimation(modal);\n          document.removeEventListener('keydown', escHandler);\n          resolve(false);\n        }\n      };\n      document.addEventListener('keydown', escHandler);\n\n      // モーダル背景クリックでキャンセル\n      modal.onclick = (e) => {\n        if (e.target === modal) {\n          this.closeModalWithAnimation(modal);\n          resolve(false);\n        }\n      };\n    });\n  }\n\n  async showDeleteConfirmation(command) {\n    return this.showConfirmationDialog({\n      icon: '🗑️',\n      title: '削除の確認',\n      message: `「${command}」を実行しますか？<br>この操作は取り消すことができません。`,\n      confirmText: '削除実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#ff7b47'\n    });\n  }\n\n  /**\n   * 出力エリアにメッセージ追加\n   */\n  /**\n   * タスクカード追加（従来のaddOutputを置き換え）\n   */\n  addOutput(message, type = 'default', options = {}) {\n    // タスクカード形式で処理\n    if (type === 'task' || type === 'progress') {\n      return this.addTaskCard(message, options);\n    }\n\n    // エラーとシステムメッセージのみ表示\n    if (type === 'error' || type === 'system') {\n      this.addSystemMessage(message, type);\n    }\n  }\n\n  /**\n   * フローティングタスクカード追加\n   */\n  addTaskCard(taskInfo, options = {}) {\n    if (!this.taskCards) this.taskCards = new Map();\n\n    const taskId = options.taskId || `task_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`;\n    const status = options.status || 'pending';\n    const prompt = taskInfo.prompt || taskInfo.command || taskInfo;\n\n    // フローティングカード作成\n    const card = document.createElement('div');\n    card.className = 'floating-task-card';\n    card.setAttribute('data-task-id', taskId);\n\n    // iOS 26 Liquid Glass + 2026年トレンドスタイル\n    card.style.cssText = this.getFloatingCardStyles(status);\n    // アニメーション用初期状態（非表示）- 強制設定\n    card.style.setProperty('opacity', '0', 'important');\n    card.style.setProperty('transform', 'translateY(20px) scale(0.95)', 'important');\n    card.style.setProperty('filter', 'blur(4px)', 'important');\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    const statusText = {\n      pending: '待機中',\n      processing: '生成中',\n      progress: '進行中',\n      completed: '完了',\n      error: 'エラー'\n    };\n\n    // 温かみのあるメッセージ表示\n    const friendlyMessage = this.getFriendlyMessage(status, prompt);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // フローティングコンテナに追加（最新が下に来るように）\n    this.floatingContainer.appendChild(card);\n    \n    // カード表示制限を適用（最大3個まで表示）\n    this.updateCardDisplayLimit();\n\n    this.taskCards.set(taskId, {\n      element: card,\n      status: status,\n      prompt: prompt,\n      originalPrompt: prompt, // 元のプロンプト\n      startTime: Date.now(),\n      endTime: null,\n      error: null,\n      contentType: 'image', // 'image', 'video', etc.\n      model: null,\n      settings: null\n    });\n\n    // カード詳細モーダル用のイベントリスナー\n    this.addCardDetailEvents(card, taskId);\n    \n    // 入場アニメーション\n    this.animateCardEntrance(card);\n    return taskId;\n  }\n\n  /**\n   * フローティングタスクカード更新\n   */\n  updateTaskCard(taskId, status, options = {}) {\n    if (!this.taskCards || !this.taskCards.has(taskId)) return;\n\n    const taskData = this.taskCards.get(taskId);\n    const card = taskData.element;\n\n    // ステータス更新\n    taskData.status = status;\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    // 温かみのあるメッセージ更新\n    const friendlyMessage = this.getFriendlyMessage(status, taskData.prompt);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // 完了時の自動消去アニメーション\n    if (status === 'completed') {\n      this.animateCardSuccess(card, taskId);\n    } else if (status === 'error') {\n      this.animateCardError(card, taskId);\n    }\n  }\n\n  /**\n   * システムメッセージ表示\n   */\n  addSystemMessage(message, type) {\n    const entry = document.createElement('div');\n    entry.className = `system-message ${type}`;\n    entry.style.cssText = `\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type === 'error' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(107, 114, 128, 0.1)'};\n      border: 1px solid ${type === 'error' ? 'rgba(239, 68, 68, 0.3)' : 'rgba(107, 114, 128, 0.3)'};\n      color: ${type === 'error' ? '#fca5a5' : (this.isDarkMode ? '#d1d5db' : '#6b7280')};\n    `;\n    entry.textContent = message;\n    this.outputDiv.appendChild(entry);\n    this.scrollToBottom();\n  }\n\n  /**\n   * タスクカードスタイル取得\n   */\n  getTaskCardStyles(status) {\n    const baseStyles = `\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(255, 255, 255, 0.15)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.25)'};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;\n\n    const statusBorders = {\n      pending: 'rgba(167, 139, 250, 0.3)',     // 薄紫\n      processing: 'rgba(192, 132, 252, 0.5)',  // 紫（強調）\n      progress: 'rgba(236, 72, 153, 0.4)',     // ピンク\n      completed: 'rgba(167, 139, 250, 0.4)',   // 紫\n      error: 'rgba(239, 68, 68, 0.4)'          // 赤\n    };\n\n    return baseStyles + `border-left: 3px solid ${statusBorders[status] || statusBorders.pending};`;\n  }\n\n  /**\n   * フローティングカードスタイル（iOS 26 Liquid Glass + 2026年トレンド）\n   */\n  getFloatingCardStyles(status) {\n    // 2025年Glassmorphism仕様：フローティングタスクカード\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)',\n      color: '#ffffff'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)',\n      color: '#1f2937'\n    };\n\n    const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n    return `\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  /**\n   * カード表示制限を適用（最大3個まで表示、それ以上は「+ N」で表示）\n   */\n  updateCardDisplayLimit() {\n    const maxVisibleCards = 3;\n    const allCards = Array.from(this.floatingContainer.children).filter(child => \n      !child.classList.contains('overflow-counter')\n    );\n    \n    // 既存のカウンターを削除\n    const existingCounter = this.floatingContainer.querySelector('.overflow-counter');\n    if (existingCounter) {\n      existingCounter.remove();\n    }\n    \n    if (allCards.length <= maxVisibleCards) {\n      // カードが3個以下の場合、すべて表示\n      allCards.forEach(card => {\n        card.style.display = 'flex';\n      });\n    } else {\n      // カードが4個以上の場合、最新3個のみ表示し、残りはカウンター表示\n      const visibleCards = allCards.slice(-maxVisibleCards); // 最新3個\n      const hiddenCount = allCards.length - maxVisibleCards;\n      \n      // 古いカードを非表示\n      allCards.forEach((card, index) => {\n        if (index < allCards.length - maxVisibleCards) {\n          card.style.display = 'none';\n        } else {\n          card.style.display = 'flex';\n        }\n      });\n      \n      // 「+ N」カウンターを作成\n      const counter = document.createElement('div');\n      counter.className = 'overflow-counter';\n      // テーマに応じたカウンタースタイル\n      const counterBaseColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.12)';\n      const counterBorderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.15)';\n      const counterTextColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.6)';\n      \n      counter.style.cssText = `\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;\n      counter.innerHTML = `+ ${hiddenCount}`;\n      \n      // カウンターを最初に挿入（最上部に配置）\n      this.floatingContainer.insertBefore(counter, this.floatingContainer.firstChild);\n      \n      // カウンターのホバー効果（テーマ対応）\n      const counterHoverColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.18)';\n      \n      counter.addEventListener('mouseenter', () => {\n        counter.style.background = counterHoverColor;\n        counter.style.transform = 'scale(1.05)';\n      });\n      \n      counter.addEventListener('mouseleave', () => {\n        counter.style.background = counterBaseColor;\n        counter.style.transform = 'scale(1)';\n      });\n    }\n  }\n\n  /**\n   * カードに詳細モーダル用のイベントリスナーを追加\n   */\n  addCardDetailEvents(card, taskId) {\n    // タッチデバイス検出\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    \n    if (isTouchDevice) {\n      // モバイル/タブレット: タップで詳細表示\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    } else {\n      // デスクトップ: ホバーで詳細表示\n      let hoverTimeout;\n      \n      card.addEventListener('mouseenter', () => {\n        hoverTimeout = setTimeout(() => {\n          this.showTaskDetailModal(taskId);\n        }, 800); // 0.8秒ホバーで表示\n      });\n      \n      card.addEventListener('mouseleave', () => {\n        if (hoverTimeout) {\n          clearTimeout(hoverTimeout);\n        }\n      });\n      \n      // クリックでも表示（デスクトップでも使いやすく）\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    }\n  }\n\n  /**\n   * タスク詳細モーダルを表示\n   */\n  showTaskDetailModal(taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData) return;\n    \n    // 既存のモーダルを削除\n    const existingModal = document.querySelector('.task-detail-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n    \n    // モーダル作成\n    const modal = this.createTaskDetailModal(taskData);\n    document.body.appendChild(modal);\n    \n    // 入場アニメーション\n    requestAnimationFrame(() => {\n      modal.style.opacity = '1';\n      modal.querySelector('.modal-content').style.transform = 'translateY(0) scale(1)';\n    });\n  }\n\n  /**\n   * タスク詳細モーダルのHTML要素を作成\n   */\n  createTaskDetailModal(taskData) {\n    const modal = document.createElement('div');\n    modal.className = 'task-detail-modal';\n    \n    // テーマに応じたスタイル\n    const overlayColor = this.isDarkMode ? 'rgba(0, 0, 0, 0.6)' : 'rgba(0, 0, 0, 0.4)';\n    const modalBg = this.isDarkMode ? 'rgba(20, 20, 20, 0.95)' : 'rgba(255, 255, 255, 0.95)';\n    const modalBorder = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n    const textColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(0, 0, 0, 0.9)';\n    const labelColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)';\n    \n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;\n    \n    // 実行時間計算\n    const duration = taskData.endTime \n      ? ((taskData.endTime - taskData.startTime) / 1000).toFixed(1)\n      : ((Date.now() - taskData.startTime) / 1000).toFixed(1);\n    \n    // ステータス表示\n    const statusText = taskData.status === 'pending' ? '待機中' \n                    : taskData.status === 'in-progress' ? '実行中' \n                    : taskData.status === 'completed' ? '完了' \n                    : 'エラー';\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;\">\n        <h3 style=\"margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;\">タスク詳細</h3>\n        <button class=\"close-btn\" style=\"\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        \">×</button>\n      </div>\n      \n      <div style=\"space-y: 16px;\">\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📝 元のプロンプト</div>\n          <div style=\"color: ${textColor}; font-size: 14px; line-height: 1.4;\">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📊 ステータス</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">⏱️ 実行時間</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${duration}秒</div>\n        </div>\n        \n        ${taskData.error ? `\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">❌ エラー詳細</div>\n          <div style=\"color: #ef4444; font-size: 14px; line-height: 1.4;\">${taskData.error}</div>\n        </div>\n        ` : ''}\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">🎨 コンテンツタイプ</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${taskData.contentType || '画像'}</div>\n        </div>\n      </div>\n    `;\n    \n    // イベントリスナー\n    modalContent.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    const closeBtn = modalContent.querySelector('.close-btn');\n    closeBtn.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    closeBtn.addEventListener('mouseenter', () => {\n      closeBtn.style.color = textColor;\n    });\n    \n    closeBtn.addEventListener('mouseleave', () => {\n      closeBtn.style.color = labelColor;\n    });\n    \n    modal.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    modal.appendChild(modalContent);\n    return modal;\n  }\n\n  /**\n   * タスク詳細モーダルを閉じる\n   */\n  closeTaskDetailModal(modal) {\n    modal.style.opacity = '0';\n    modal.querySelector('.modal-content').style.transform = 'translateY(20px) scale(0.95)';\n    \n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    }, 300);\n  }\n\n  /**\n   * カード入場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardEntrance(card) {\n    // iOS 26 Liquid Glass 入場エフェクト\n    card.style.transform = 'translateY(20px) scale(0.95)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(4px)';\n\n    requestAnimationFrame(() => {\n      card.style.transition = 'all 0.6s cubic-bezier(0.16, 1, 0.3, 1)';\n      card.style.transform = 'translateY(0) scale(1)';\n      card.style.opacity = '1';\n      card.style.filter = 'blur(0px)';\n\n      // 2026年トレンド: 微細な光る効果\n      card.style.boxShadow = '0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)';\n    });\n  }\n\n  /**\n   * 成功時アニメーション + 自動消去（iOS 26 Liquid Glass）\n   */\n  animateCardSuccess(card, taskId) {\n    // iOS 26 Liquid Glass 成功エフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(76, 175, 80, 0.6)';\n    card.style.transform = 'scale(1.08)';\n    card.style.boxShadow = '0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)';\n    card.style.filter = 'brightness(1.1) saturate(1.2)';\n\n    // 2026年トレンド: 流体的な戻りアニメーション\n    setTimeout(() => {\n      card.style.transform = 'scale(1.02)';\n      card.style.filter = 'brightness(1.05) saturate(1.1)';\n    }, 150);\n\n    // Liquid Glass風のスムーズなフェードアウト（2秒後に自動削除）\n    setTimeout(() => {\n      this.animateCardExit(card, taskId);\n    }, 2000);\n  }\n\n  /**\n   * エラー時アニメーション（2026年トレンド UX）\n   */\n  animateCardError(card, taskId) {\n    // iOS 26 Liquid Glass エラーエフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(244, 67, 54, 0.7)';\n    card.style.boxShadow = '0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)';\n    card.style.filter = 'saturate(1.3) brightness(1.1)';\n\n    // 2026年トレンド: より自然なpulseアニメーション（shakeより洗練）\n    card.style.animation = 'errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2';\n\n    // UX改善: エラー内容を表示するツールチップ風UI\n    this.addErrorTooltip(card, taskId);\n\n    // エラーは手動で消すまで表示継続（クリックで消去）\n    card.style.cursor = 'pointer';\n    card.onclick = () => this.animateCardExit(card, taskId);\n\n    // 5秒後に自動フェードアウト（UX改善）\n    setTimeout(() => {\n      if (this.taskCards.has(taskId)) {\n        this.animateCardExit(card, taskId);\n      }\n    }, 5000);\n  }\n\n  /**\n   * エラー時のツールチップ表示（UX改善）\n   */\n  addErrorTooltip(card, taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData || !taskData.error) return;\n\n    // ツールチップ要素作成\n    const tooltip = document.createElement('div');\n    tooltip.style.cssText = `\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;\n    tooltip.textContent = taskData.error;\n\n    card.style.position = 'relative';\n    card.appendChild(tooltip);\n\n    // フェードイン\n    requestAnimationFrame(() => {\n      tooltip.style.opacity = '1';\n    });\n\n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      if (tooltip.parentNode) {\n        tooltip.style.opacity = '0';\n        setTimeout(() => {\n          if (tooltip.parentNode) {\n            tooltip.parentNode.removeChild(tooltip);\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * カード退場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardExit(card, taskId) {\n    // iOS 26 Liquid Glass 退場エフェクト - 2026年トレンドの「スッと消える」\n    card.style.transition = 'all 0.28s cubic-bezier(0.4, 0, 0.2, 1)';\n    card.style.transform = 'translateY(-12px) scale(0.92)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(6px) brightness(1.2)';\n\n    // 2026年トレンド: 消去時の微細な光の拡散効果\n    card.style.boxShadow = '0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)';\n\n    setTimeout(() => {\n      if (card.parentNode) {\n        card.parentNode.removeChild(card);\n      }\n      this.taskCards.delete(taskId);\n      // カード削除後に表示制限を再適用\n      this.updateCardDisplayLimit();\n    }, 280);\n  }\n\n  /**\n   * ユーザーの表現スタイルを自然に感知\n   */\n  getResponseType(prompt) {\n    // ユーザーの表現スタイルを自然に感知\n    if (/ちょこっと|ちょこん|少し|軽く/.test(prompt) || prompt.length < 15) {\n      return 'casual';\n    }\n    if (/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)) {\n      return 'magical';\n    }\n    return 'balanced'; // 80%がここに該当\n  }\n\n  /**\n   * 温かみのあるメッセージを生成（マーケ提案ベース）\n   */\n  getFriendlyMessage(status, prompt, errorMessage = null) {\n    const shortPrompt = prompt.length > 15 ? prompt.substring(0, 15) + '...' : prompt;\n\n    // 自然な応答システム適用\n    const responseType = this.getResponseType(prompt);\n\n    switch (status) {\n      case 'pending':\n        return responseType === 'casual' ? 'ちょこっと準備中です...' :\n               responseType === 'magical' ? '魔法をかけようとしています...' :\n               'ちょこっと魔法の準備中...';\n      case 'processing':\n      case 'in-progress':\n      case 'progress':\n        // Modify mode specific messages for processing\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整中です...' :\n                 responseType === 'magical' ? 'イメージを変化させています...' :\n                 'ちょこんと編集中です...';\n        }\n        return responseType === 'casual' ? 'ちょこんと配置中です...' :\n               responseType === 'magical' ? 'あなたの想いを形にしています...' :\n               'ちょこっと魔法をかけています...';\n      case 'completed':\n        // Delete mode specific messages\n        if (this.currentMode === 'delete') {\n          return responseType === 'casual' ? 'ちょこっと削除しました！' :\n                 responseType === 'magical' ? 'すっきりと片付きました！' :\n                 'ちょこんと削除完了！すっきりですね！';\n        }\n        // Modify mode specific messages\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整しました！' :\n                 responseType === 'magical' ? '素敵に変身しました！' :\n                 'ちょこんと編集完了！いい感じですね！';\n        }\n        // Default completion messages for other modes\n        return responseType === 'casual' ? 'ちょこっとドロップしました！' :\n               responseType === 'magical' ? '素敵な世界が完成しました！' :\n               'ちょこんと配置完了！素敵ですね！';\n      case 'error':\n        // エラー理由があれば含める\n        if (errorMessage) {\n          const shortError = errorMessage.length > 30 ? errorMessage.substring(0, 30) + '...' : errorMessage;\n          return `❌ ${shortError}`;\n        }\n        return responseType === 'casual' ? 'おっと、エラーが発生しました' :\n               responseType === 'magical' ? '申し訳ございません、処理に失敗しました' :\n               'エラーが発生しました。もう一度お試しください';\n      default:\n        return shortPrompt;\n    }\n  }\n\n  /**\n   * ステータス色取得\n   */\n  getStatusColor(status) {\n    // ネオンパープル/ピンク系で統一（2025トレンド）\n    const colors = {\n      pending: this.isDarkMode ? '#a78bfa' : '#7c3aed',        // 薄紫\n      processing: this.isDarkMode ? '#c084fc' : '#9333ea',     // 紫（生成中）\n      progress: this.isDarkMode ? '#ec4899' : '#be185d',       // ピンク\n      completed: this.isDarkMode ? '#a78bfa' : '#7c3aed',      // 紫（完了も統一）\n      error: this.isDarkMode ? '#f87171' : '#dc2626'           // 赤（エラーのみ）\n    };\n    return colors[status] || colors.pending;\n  }\n\n  /**\n   * ステータスインジケーター作成（パーセント表示なし）\n   */\n  createStatusIndicator(status) {\n    if (status === 'processing' || status === 'progress') {\n      return `\n        <div class=\"status-indicator\" style=\"\n          background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        \">\n          <div class=\"status-pulse\" style=\"\n            background: linear-gradient(90deg, transparent, #6366f1, #8b5cf6, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          \"></div>\n        </div>\n        <div style=\"display: flex; align-items: center; gap: 4px; margin-top: 8px;\">\n          <div class=\"status-dots\" style=\"font-size: 10px; color: ${this.isDarkMode ? '#c084fc' : '#9333ea'};\">\n            処理中<span style=\"animation: dots 1.5s infinite;\">...</span>\n          </div>\n        </div>\n      `;\n    }\n    return '';\n  }\n\n  /**\n   * タスク完了アニメーション\n   */\n  animateTaskCompletion(card) {\n    // 控えめなサクセスアニメーション\n    card.style.animation = 'taskComplete 0.8s ease-out';\n\n    // 微妙なパーティクル効果を追加（控えめ）\n    this.addSubtleParticleEffect(card);\n\n    setTimeout(() => {\n      card.style.animation = '';\n    }, 800);\n\n    this.ensureTaskAnimations();\n  }\n\n  /**\n   * 控えめなパーティクル効果\n   */\n  addSubtleParticleEffect(card) {\n    const particles = 3; // 少ない数のパーティクル\n    const rect = card.getBoundingClientRect();\n\n    for (let i = 0; i < particles; i++) {\n      const particle = document.createElement('div');\n      particle.style.cssText = `\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right - 20}px;\n        top: ${rect.top + 10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;\n\n      // ランダムな方向に少し移動\n      const angle = (i / particles) * Math.PI * 2;\n      const distance = 15; // 控えめな距離\n      particle.style.setProperty('--move-x', `${Math.cos(angle) * distance}px`);\n      particle.style.setProperty('--move-y', `${Math.sin(angle) * distance}px`);\n\n      document.body.appendChild(particle);\n\n      // 自動削除\n      setTimeout(() => particle.remove(), 1200);\n    }\n  }\n\n  /**\n   * タスクアニメーション用CSS確保\n   */\n  ensureTaskAnimations() {\n    if (document.getElementById('task-animations')) return;\n\n    const style = document.createElement('style');\n    style.id = 'task-animations';\n    style.textContent = `\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * プログレス付きタスクステータス表示（互換性のため）\n   */\n  addTaskStatus(message, percent = 0, taskId = null) {\n    const id = taskId || `task_${Date.now()}`;\n    return this.addTaskCard(message, {\n      percent: Math.min(Math.max(percent, 0), 100),\n      taskId: id,\n      status: percent > 0 ? 'progress' : 'pending'\n    });\n  }\n\n  /**\n   * プログレス更新\n   */\n  updateTaskProgress(taskId, percent, newMessage = null) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask && newMessage) {\n      // 既存タスクを更新\n      this.addOutput(newMessage, 'progress', { \n        percent: Math.min(Math.max(percent, 0), 100),\n        taskId\n      });\n    }\n  }\n\n  /**\n   * タスク完了（プログレスバー削除）\n   */\n  completeTask(taskId) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask) {\n      // 完了アニメーション\n      existingTask.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n      existingTask.style.opacity = '0';\n      existingTask.style.transform = 'translateX(20px)';\n      \n      setTimeout(() => {\n        if (existingTask.parentNode) {\n          existingTask.remove();\n        }\n      }, 500);\n    }\n  }\n\n  /**\n   * SSE接続開始（リアルタイム進捗受信）\n   */\n  connectToProgress(serverTaskId, uiTaskId = null) {\n    if (this.activeConnections.has(serverTaskId)) {\n      return;\n    }\n\n    const eventSource = new EventSource(`/api/progress/${serverTaskId}`);\n    this.activeConnections.set(serverTaskId, eventSource);\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        data.uiTaskId = uiTaskId; // UI用タスクIDを追加\n        this.handleProgressUpdate(data);\n      } catch (error) {\n        console.error('SSE data parse error:', error);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error);\n      this.disconnectProgress(serverTaskId);\n    };\n  }\n\n  /**\n   * 進捗更新処理\n   */\n  handleProgressUpdate(data) {\n    switch (data.type) {\n      case 'connected':\n        this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);\n        break;\n\n      case 'progress':\n        if (data.percent !== undefined && data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'progress', { percent: data.percent });\n        }\n        break;\n\n      case 'completed':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'completed');\n        }\n        this.disconnectProgress(data.taskId);\n        break;\n\n      case 'error':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'error');\n        }\n        this.addOutput(`❌ ${data.message}`, 'error');\n        this.disconnectProgress(data.taskId);\n        break;\n    }\n  }\n\n  /**\n   * SSE接続終了\n   */\n  disconnectProgress(taskId) {\n    const connection = this.activeConnections.get(taskId);\n    if (connection) {\n      connection.close();\n      this.activeConnections.delete(taskId);\n    }\n  }\n\n  /**\n   * 出力エリアを最下部にスクロール\n   */\n  scrollToBottom() {\n    if (this.outputDiv) {\n      this.outputDiv.scrollTop = this.outputDiv.scrollHeight;\n    }\n  }\n\n  /**\n   * モード別コマンドプレフィックス\n   */\n  getModePrefix(mode) {\n    // サーバー側でモードを区別するためのプレフィックス\n    const prefixes = {\n      generate: '', // デフォルトは生成モード\n      modify: '[変更] ',\n      delete: '[削除] '\n    };\n    return prefixes[mode] || '';\n  }\n\n  /**\n   * コマンド保存 (Undo/Redoシステム)\n   */\n  saveCommandToHistory(commandData) {\n    // 現在のインデックス以降の履歴を削除（新しいコマンドが実行されたため）\n    this.commandHistory = this.commandHistory.slice(0, this.currentHistoryIndex + 1);\n    \n    // 新しいコマンドを履歴に追加\n    this.commandHistory.push(commandData);\n    this.currentHistoryIndex = this.commandHistory.length - 1;\n    \n    // 最大コマンド保存数を超えた場合、古いコマンドを削除\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentHistoryIndex--;\n    }\n    \n    // ボタン状態を更新\n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undo実行\n   */\n  undo() {\n    if (!this.canUndo()) {\n      this.addOutput('↶ Undoできる操作がありません', 'hint');\n      return;\n    }\n    \n    const command = this.commandHistory[this.currentHistoryIndex];\n    this.currentHistoryIndex--;\n    \n    // Undoの逆操作を実行（簡易実装）\n    if (command.mode === 'generate') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の生成を取り消しました`, 'system');\n      // 実際のシーン管理では最後に作成されたオブジェクトを削除\n      if (this.sceneManager && this.sceneManager.undoLastGenerate) {\n        this.sceneManager.undoLastGenerate();\n      }\n    } else if (command.mode === 'modify') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の変更を取り消しました`, 'system');\n      // 実際のシーン管理では前の状態に戻す\n      if (this.sceneManager && this.sceneManager.undoLastModify) {\n        this.sceneManager.undoLastModify();\n      }\n    } else if (command.mode === 'delete') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の削除を取り消しました`, 'system');\n      // 実際のシーン管理では削除されたオブジェクトを復元\n      if (this.sceneManager && this.sceneManager.undoLastDelete) {\n        this.sceneManager.undoLastDelete();\n      }\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Redo実行\n   */\n  redo() {\n    if (!this.canRedo()) {\n      this.addOutput('↷ Redoできる操作がありません', 'hint');\n      return;\n    }\n    \n    this.currentHistoryIndex++;\n    const command = this.commandHistory[this.currentHistoryIndex];\n    \n    // Redoでコマンドを再実行\n    this.addOutput(`↷ Redo: \"${command.command}\" を再実行しました`, 'system');\n    \n    // 実際のシーン管理でのRedo処理\n    if (this.sceneManager && this.sceneManager.redoCommand) {\n      this.sceneManager.redoCommand(command);\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undoが可能かチェック\n   */\n  canUndo() {\n    return this.currentHistoryIndex >= 0;\n  }\n\n  /**\n   * Redoが可能かチェック\n   */\n  canRedo() {\n    return this.currentHistoryIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Undo/Redoボタンの状態更新\n   */\n  updateUndoRedoButtons() {\n    if (this.undoBtn) {\n      this.undoBtn.disabled = !this.canUndo();\n      this.undoBtn.style.opacity = this.canUndo() ? '1' : '0.4';\n      this.undoBtn.style.cursor = this.canUndo() ? 'pointer' : 'not-allowed';\n    }\n    \n    if (this.redoBtn) {\n      this.redoBtn.disabled = !this.canRedo();\n      this.redoBtn.style.opacity = this.canRedo() ? '1' : '0.4';\n      this.redoBtn.style.cursor = this.canRedo() ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  /**\n   * 確認付き全オブジェクト削除\n   */\n  async clearAllWithConfirmation() {\n    const confirmed = await this.showClearAllConfirmation();\n    if (confirmed) {\n      this.clearAll();\n    }\n  }\n\n  /**\n   * Clear All確認ダイアログ\n   */\n  async showClearAllConfirmation() {\n    return this.showConfirmationDialog({\n      icon: '🧹',\n      title: 'Clear All の確認',\n      message: 'すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。',\n      confirmText: 'Clear All 実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#6366f1'\n    });\n  }\n\n  /**\n   * モーダルクローズアニメーション\n   */\n  closeModalWithAnimation(modal) {\n    const dialog = modal.querySelector('div:last-child');\n    dialog.style.transform = 'scale(0.9)';\n    dialog.style.opacity = '0';\n    modal.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (modal.parentElement) {\n        document.body.removeChild(modal);\n      }\n    }, 200);\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    if (this.sceneManager) {\n      this.sceneManager.clearAll();\n      this.addOutput('🧹 全ての実験オブジェクトを削除しました', 'system');\n    } else if (this.client) {\n      // サーバー側での削除は未実装\n      this.addOutput('⚠️ サーバー側削除は未実装', 'error');\n    }\n  }\n\n  // showHistory() メソッド完全削除済み\n\n  /**\n   * 利用可能なコマンド例を表示\n   */\n  showExamples() {\n    const examples = [\n      '右上にドラゴンを作って',\n      '中央に大きなユニコーンを生成',\n      '左下に小さな桜を作って',\n      '空に鳳凰を作って',\n      '地面に神社を作って'\n    ];\n\n    this.addOutput('💡 コマンド例:', 'system');\n    examples.forEach(example => {\n      this.addOutput(`   \"${example}\"`, 'hint');\n    });\n  }\n\n  /**\n   * SceneManager設定\n   */\n  setSceneManager(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.applyServiceSelectionToSceneManager();\n  }\n\n  /**\n   * Client設定\n   */\n  setClient(client) {\n    this.client = client;\n  }\n\n  /**\n   * 設定更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n    // 必要に応じてUIを更新\n    if (newConfig.activationKey) {\n      // 新しいキーバインドを反映するため、イベントリスナーを再設定\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  /**\n   * スタイル再適用\n   */\n  refreshStyles() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isWabiSabiMode ? 'wabisabi-mode' : (this.isDarkMode ? 'dark-mode' : 'light-mode');\n\n    // Generateモードボタンのスタイルを再適用\n    const generateBtn = this.container?.querySelector('[data-mode=\"generate\"]');\n    if (generateBtn) {\n      generateBtn.style.cssText = this.getModeButtonStyles(true, 'generate');\n    }\n    \n    // Executeボタンのスタイルを再適用\n    const executeBtn = this.container?.querySelector('#execute-btn');\n    if (executeBtn) {\n      executeBtn.style.cssText = this.getModernButtonStyles('primary');\n    }\n  }\n\n  /**\n   * テーマ切り替え (light -> dark -> wabisabi -> light)\n   */\n  toggleTheme() {\n    const themeOrder = ['light', 'dark', 'wabisabi'];\n    const currentIndex = themeOrder.indexOf(this.currentTheme);\n    const nextIndex = (currentIndex + 1) % themeOrder.length;\n\n    this.currentTheme = themeOrder[nextIndex];\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n\n    localStorage.setItem('live-command-theme', this.currentTheme);\n\n    // アイコンボタン更新\n    if (this.themeToggle) {\n      const getThemeIcon = () => {\n        const themeConfig = {\n          light: '🌙',\n          dark: '🍵',\n          wabisabi: '☀️'\n        };\n        return themeConfig[this.currentTheme] || '🌙';\n      };\n\n      const getThemeTitle = () => {\n        const titleConfig = {\n          light: 'ダークモードに切り替え',\n          dark: '侘び寂びモードに切り替え',\n          wabisabi: 'ライトモードに切り替え'\n        };\n        return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n      };\n\n      const getThemeIconWithFilter = () => {\n        const icon = getThemeIcon();\n        if (icon === '☀️') {\n          return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n        } else if (icon === '🍵') {\n          return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n        } else {\n          return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n        }\n      };\n\n      this.themeToggle.innerHTML = getThemeIconWithFilter();\n      this.themeToggle.title = getThemeTitle();\n    }\n\n    // 全スタイル再適用\n    this.applyTheme();\n\n    // テーマ切り替え完了（履歴には出力しない）\n  }\n\n  /**\n   * テーマ適用\n   */\n  applyTheme() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isDarkMode ? 'dark-mode' : 'light-mode';\n\n    // メインコンテナ（display状態を保持）\n    const currentDisplay = this.container.style.display;\n    const currentFlexDirection = this.container.style.flexDirection;\n    this.container.style.cssText = this.getContainerStyles();\n    this.container.style.display = currentDisplay || 'flex';\n    this.container.style.flexDirection = currentFlexDirection || 'column';\n\n    // フローティングブランドバッジのテーマ再適用\n    const brandBadge = this.container.querySelector('.floating-brand-badge');\n    if (brandBadge) {\n      brandBadge.style.background = this.isDarkMode \n        ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))'\n        : 'linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))';\n      brandBadge.style.border = `1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'}`;\n    }\n\n    // 入力フィールド\n    this.input.style.cssText = this.getInputStyles();\n\n    // スタイル適用\n    this.output.style.cssText = this.getOutputStyles();\n\n    // ラジオボタンモードセレクターの2025年仕様テーマ再適用\n    if (this.radioModeContainer) {\n      this.radioModeContainer.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))');\n      this.radioModeContainer.style.borderColor = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.4)'\n        : (this.isDarkMode\n          ? 'rgba(99, 102, 241, 0.15)'\n          : 'rgba(255, 255, 255, 0.25)');\n\n      // 各ラジオボタンのスタイル更新\n      Object.keys(this.radioModeButtons).forEach(key => {\n        const { button } = this.radioModeButtons[key];\n        if (this.currentMode !== key) {\n          button.style.color = this.isWabiSabiMode\n            ? 'rgba(245, 245, 245, 0.8)'\n            : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n          button.style.background = 'transparent';\n          button.style.border = '1px solid transparent';\n          button.style.boxShadow = 'none';\n        }\n      });\n\n      // 現在選択されているモードのスタイルも更新\n      this.selectMode(this.currentMode, false);\n    }\n\n    // アクションボタンのテーマ再適用\n    if (this.clearBtn) {\n      this.clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    }\n    if (this.historyBtn) {\n      this.historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n      this.historyBtn.style.opacity = '0.5';\n    }\n    if (this.themeToggle) {\n      const getThemeIcon = () => {\n        const themeConfig = {\n          light: '🌙', // ライトモード時は月を表示（次がダーク）\n          dark: '🍵',  // ダークモード時は茶を表示（次がwabi-sabi）\n          wabisabi: '☀️' // wabi-sabiモード時は太陽を表示（次がライト）\n        };\n        return themeConfig[this.currentTheme] || '🌙';\n      };\n      const getThemeTitle = () => {\n        const titleConfig = {\n          light: 'ダークモードに切り替え',\n          dark: '侘び寂びモードに切り替え',\n          wabisabi: 'ライトモードに切り替え'\n        };\n        return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n      };\n      const getThemeIconWithFilter = () => {\n        const icon = getThemeIcon();\n        // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n        if (icon === '☀️') {\n          return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n        } else if (icon === '🍵') {\n          return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n        } else {\n          return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n        }\n      };\n      this.themeToggle.innerHTML = getThemeIconWithFilter();\n      this.themeToggle.title = getThemeTitle();\n      this.themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    }\n    if (this.settingsButton) {\n      this.settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    }\n\n    this.updateServiceSelectorTheme();\n\n    // 閉じるボタンのテーマ更新\n    const closeButton = this.container.querySelector('.close-button');\n    if (closeButton) {\n      closeButton.style.color = this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937');\n      closeButton.style.background = this.isWabiSabiMode\n        ? 'rgba(245, 245, 245, 0.1)'\n        : (this.isDarkMode\n          ? 'rgba(255, 255, 255, 0.1)'\n          : 'rgba(0, 0, 0, 0.1)');\n    }\n\n    // フローティングコンテナとタスクカードのテーマ更新\n    this.updateFloatingContainerTheme();\n\n    // 既存の出力テキストの色を更新\n    this.updateExistingTextColors();\n  }\n\n  /**\n   * フローティングコンテナとタスクカードのテーマ更新\n   */\n  updateFloatingContainerTheme() {\n    if (!this.floatingContainer) return;\n\n    // フローティングコンテナの表示状態を保持\n    const currentDisplay = this.floatingContainer.style.display;\n\n    // 既存のタスクカードの色だけをテーマに合わせて更新（レイアウトは保持）\n    if (this.taskCards && this.taskCards.size > 0) {\n      this.taskCards.forEach((taskData, taskId) => {\n        const card = taskData.element;\n        if (card) {\n          // テーマ関連の色のみ更新（位置やアニメーション状態は保持）\n          // 2025年Glassmorphism仕様適用\n          const glassmorphismDark = {\n            background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n            border: '1px solid rgba(99, 102, 241, 0.25)',\n            color: '#ffffff'\n          };\n\n          const glassmorphismLight = {\n            background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n            border: '1px solid rgba(255, 255, 255, 0.4)',\n            color: '#1f2937'\n          };\n\n          const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n\n          card.style.setProperty('background', theme.background, 'important');\n          card.style.setProperty('border', theme.border, 'important');\n          card.style.setProperty('color', theme.color, 'important');\n        }\n      });\n    }\n\n    // テーマ切り替え時は位置は変更せず、表示状態のみ復元\n    this.floatingContainer.style.display = currentDisplay;\n  }\n\n  /**\n   * 既存のテキスト色を現在のテーマに合わせて更新\n   */\n  updateExistingTextColors() {\n    const colors = this.isDarkMode ? {\n      system: '#60a5fa',\n      command: '#93c5fd',\n      success: '#f472b6',\n      error: '#f87171',\n      processing: '#fbbf24',\n      info: '#d1d5db',\n      hint: '#d1d5db'\n    } : {\n      system: '#1e40af',\n      command: '#1d4ed8',\n      success: '#be185d',\n      error: '#dc2626',\n      processing: '#d97706',\n      info: '#7c3aed',\n      hint: '#374151'\n    };\n\n    const defaultTextColor = this.isDarkMode ? '#d1d5db' : '#374151';\n\n    // output内の全てのdivの色を更新\n    this.output.querySelectorAll('div').forEach(line => {\n      const text = line.textContent;\n      let type = 'default';\n      \n      // テキストの内容からタイプを判定\n      if (text.includes('📋') || text.includes('🎨') || text.includes('🎮') || text.includes('UI起動')) {\n        type = 'system';\n      } else if (text.startsWith('> ')) {\n        type = 'command';\n      } else if (text.includes('✅') || text.includes('⭐') || text.includes('生成しました')) {\n        type = 'success';\n      } else if (text.includes('❌') || text.includes('エラー')) {\n        type = 'error';\n      } else if (text.includes('中...')) {\n        type = 'processing';\n      } else if (text.includes('📍') || text.includes('使用モデル:') || text.includes('位置:')) {\n        type = 'info';\n      } else if (text.includes('   ')) {\n        type = 'hint';\n      }\n\n      line.style.color = colors[type] || defaultTextColor;\n    });\n  }\n\n  /**\n   * Importインターフェース表示\n   */\n  showImportInterface() {\n    // 隠しファイル入力を作成（Importボタンから直接選択できるので、ボタンは不要）\n    if (!this.fileInput) {\n      this.fileInput = document.createElement('input');\n      this.fileInput.type = 'file';\n      this.fileInput.accept = '.glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov';\n      this.fileInput.style.display = 'none';\n      this.fileInput.onchange = (e) => this.handleFileSelection(e);\n      document.body.appendChild(this.fileInput);\n    }\n\n    // ドラッグ&ドロップ機能を有効化\n    this.enableDragAndDrop();\n  }\n\n  /**\n   * Importインターフェース非表示\n   */\n  hideImportInterface() {\n    if (this.fileSelectButton && this.fileSelectButton.parentNode) {\n      this.fileSelectButton.parentNode.removeChild(this.fileSelectButton);\n    }\n    this.disableDragAndDrop();\n  }\n\n  /**\n   * ファイル選択ダイアログを開く\n   */\n  openFileSelector() {\n    if (this.fileInput) {\n      this.fileInput.click();\n    }\n  }\n\n  /**\n   * Importボタンから直接ファイル選択を実行\n   */\n  triggerFileSelection() {\n    // ファイル入力要素が存在しない場合は作成\n    if (!this.fileInput) {\n      this.showImportInterface(); // 既存のファイル入力作成処理を呼び出し\n    }\n\n    // 直接ファイル選択ダイアログを開く\n    this.openFileSelector();\n\n    // Import モードに切り替え（UI反映）\n    this.selectMode('import', true);\n  }\n\n  /**\n   * ファイル選択処理\n   */\n  async handleFileSelection(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      // ファイルタイプを判定\n      const fileType = this.detectFileType(file.name);\n\n      // ファイルをローカルURLとして処理\n      const fileUrl = URL.createObjectURL(file);\n\n      // ファイル情報を保存\n      this.selectedFile = {\n        file: file,\n        url: fileUrl,\n        type: fileType,\n        name: file.name\n      };\n\n      this.selectMode('import', true);\n\n      // 自動的にデフォルトプロンプトで実行\n      const defaultPrompt = `中央に設置 (${file.name})`;\n      this.input.value = defaultPrompt;\n\n      this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`, 'system');\n      this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`, 'system');\n\n      // 自動実行（少し遅延を入れてUX向上）\n      setTimeout(() => {\n        this.executeCommand();\n      }, 500);\n\n    } catch (error) {\n      console.error('File selection error:', error);\n      this.addOutput(`❌ ファイル選択エラー: ${error.message}`, 'error');\n    }\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を有効化\n   */\n  enableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.addEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.addEventListener('drop', this.handleDrop.bind(this));\n    this.input.addEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.addEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を無効化\n   */\n  disableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.removeEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.removeEventListener('drop', this.handleDrop.bind(this));\n    this.input.removeEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.removeEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグオーバー処理\n   */\n  handleDragOver(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグエンター処理\n   */\n  handleDragEnter(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグリーブ処理\n   */\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n  }\n\n  /**\n   * ドロップ処理\n   */\n  async handleDrop(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length === 0) return;\n\n    const file = files[0]; // 最初のファイルのみ処理\n\n    // ファイルタイプをチェック\n    const fileType = this.detectFileType(file.name);\n    if (!fileType) {\n      this.addOutput('❌ サポートされていないファイル形式です', 'error');\n      return;\n    }\n\n    // ファイル選択処理と同じ流れ\n    this.handleFileSelection({ target: { files: [file] } });\n  }\n\n  /**\n   * ファイルタイプ判定\n   */\n  detectFileType(fileName) {\n    const ext = fileName.toLowerCase().split('.').pop();\n\n    if (['glb', 'gltf'].includes(ext)) return '3d';\n    if (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) return 'image';\n    if (['mp4', 'mov', 'webm'].includes(ext)) return 'video';\n\n    return null;\n  }\n\n  /**\n   * Importコマンド処理\n   */\n  async handleImportCommand(command) {\n    if (!this.selectedFile) {\n      throw new Error('ファイルが選択されていません');\n    }\n\n    try {\n      // プロンプトから位置情報を解析\n      const position = this.sceneManager ? this.sceneManager.parsePosition(command) : { x: 0, y: 5, z: -10 };\n\n      let result;\n\n      switch (this.selectedFile.type) {\n        case '3d':\n          // 3Dモデルを読み込み\n          if (this.sceneManager) {\n            result = await this.sceneManager.load3DModel(this.selectedFile.url, {\n              position: position,\n              // scale: 自動調整に任せる\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'image':\n          // 画像をテクスチャプレーンとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadImageFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'video':\n          // 動画をビデオテクスチャとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadVideoFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        default:\n          throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`);\n      }\n\n      // ファイル情報をクリーンアップ\n      const processedFileName = this.selectedFile?.name;\n      const importedType = this.selectedFile?.type;\n      const importedUrl = this.selectedFile?.url;\n\n      if (importedType !== 'video' && importedUrl) {\n        URL.revokeObjectURL(importedUrl);\n      }\n\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n\n      return {\n        success: true,\n        message: `${processedFileName || 'ファイル'} を ${position.x}, ${position.y}, ${position.z} に配置しました`,\n        objectId: result.objectId\n      };\n\n    } catch (error) {\n      // エラー時もファイル情報をクリーンアップ\n      if (this.selectedFile?.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n      throw error;\n    }\n  }\n\n  /**\n   * 削除モードが選択された時の処理\n   */\n  handleDeleteModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：削除コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を削除 ⏎`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 削除対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 削除するオブジェクトを選択後、削除ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('delete');\n      \n      // DELETEモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 修正モードが選択された時の処理\n   */\n  handleModifyModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：修正コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 修正対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 修正するオブジェクトを選択後、修正ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('modify');\n      \n      // Modifyモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Attention Animation\n   * オブジェクト未選択時の注意喚起アニメーション\n   */\n  triggerAttentionAnimation(mode) {\n    const chatOutput = this.chatOutput;\n    const inputField = this.input;\n    \n    // 2025年トレンド1: Micro-Shake Effect（微細な震え）\n    this.addMicroShakeEffect(chatOutput);\n    \n    // 2025年トレンド2: Context-Aware Glow（状況認識グロー）\n    this.addContextGlow(inputField, mode);\n    \n    // 2025年トレンド3: Emotional Pulse（感情的パルス）\n    this.addEmotionalPulse(chatOutput, mode);\n    \n    // 2025年トレンド4: 3D Depth Shadow（立体的影効果）\n    this.add3DDepthEffect(chatOutput);\n  }\n\n  /**\n   * 2025年トレンド：Micro-Shake Effect\n   */\n  addMicroShakeEffect(element) {\n    element.style.animation = 'microShake2025 0.5s ease-in-out';\n    \n    // CSSアニメーションを動的追加\n    this.ensureMicroShakeAnimation();\n    \n    // アニメーション後クリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 500);\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Glow\n   */\n  addContextGlow(element, mode) {\n    const glowColor = mode === 'delete' ? 'rgba(239, 68, 68, 0.4)' : 'rgba(99, 102, 241, 0.4)';\n    \n    element.style.transition = 'all 0.3s ease';\n    element.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n    \n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      element.style.boxShadow = '';\n    }, 3000);\n  }\n\n  /**\n   * 2025年トレンド：Emotional Pulse\n   */\n  addEmotionalPulse(element, mode) {\n    const pulseColor = mode === 'delete' ? '#ef4444' : '#6366f1';\n    \n    element.style.borderLeft = `4px solid ${pulseColor}`;\n    element.style.animation = 'emotionalPulse2025 2s ease-in-out infinite';\n    \n    // CSSアニメーションを動的追加\n    this.ensureEmotionalPulseAnimation();\n    \n    // 6秒後にアニメーション停止\n    setTimeout(() => {\n      element.style.animation = '';\n      element.style.borderLeft = '';\n    }, 6000);\n  }\n\n  /**\n   * 2025年トレンド：3D Depth Effect\n   */\n  add3DDepthEffect(element) {\n    element.style.transform = 'translateZ(8px) rotateX(1deg)';\n    element.style.transition = 'transform 0.3s ease';\n    \n    // 2秒後に元に戻す\n    setTimeout(() => {\n      element.style.transform = '';\n    }, 2000);\n  }\n\n  /**\n   * Micro-Shake CSSアニメーション確保\n   */\n  ensureMicroShakeAnimation() {\n    if (document.getElementById('micro-shake-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'micro-shake-2025';\n    style.textContent = `\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Emotional Pulse CSSアニメーション確保\n   */\n  ensureEmotionalPulseAnimation() {\n    if (document.getElementById('emotional-pulse-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'emotional-pulse-2025';\n    style.textContent = `\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * モード切り替え時の入力欄メッセージ上書き機能\n   * ユーザビリティ向上：他モードのメッセージを新モードの初期状態にクリア\n   */\n  clearInputOnModeSwitch(newMode) {\n    // 現在の入力欄に内容がある場合のみ処理\n    if (this.input.value.trim()) {\n      // 以前のモードのメッセージかどうかを判定\n      const isPreviousModeMessage = this.isPreviousModeMessage(this.input.value, newMode);\n      \n      if (isPreviousModeMessage) {\n        // 以前のモードのメッセージの場合、新モードの初期メッセージに置き換え\n        this.input.value = '';\n        this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`, 'system');\n      }\n    }\n  }\n\n  /**\n   * 入力内容が以前のモードのメッセージかどうかを判定\n   */\n  isPreviousModeMessage(inputValue, currentMode) {\n    // Delete/Modifyモードの特徴的なメッセージパターンを検出\n    const deletePatterns = [\n      /.*を削除$/,\n      /削除$/\n    ];\n    \n    const modifyPatterns = [\n      /.*を$/,\n      /.*を変更/,\n      /.*をピンク/,\n      /.*を大きく/,\n      /.*を小さく/,\n      /.*を移動/,\n      /回転/,\n      /反転/,\n      /ミラー/,\n      /傾け/,\n      /向きを変え/,\n      /.*を.*色/,\n      /.*を.*サイズ/\n    ];\n    \n    const importPatterns = [\n      /ファイル/,\n      /画像/,\n      /インポート/\n    ];\n\n    // 現在のモードと異なるパターンにマッチする場合は上書き対象\n    switch (currentMode) {\n      case 'delete':\n        return modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'modify':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'import':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'generate':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      default:\n        return false;\n    }\n  }\n\n  /**\n   * モード表示名を取得\n   */\n  getModeDisplayName(mode) {\n    const modeNames = {\n      'generate': '生成',\n      'import': 'インポート',\n      'modify': '修正',\n      'delete': '削除'\n    };\n    return modeNames[mode] || mode;\n  }\n\n  /**\n   * 常時表示フローティングチョコアイコンを作成\n   */\n  createFloatingChocolateIcon() {\n    // 既存のアイコンがあれば削除\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.remove();\n    }\n\n    this.floatingChocolateIcon = document.createElement('div');\n    this.floatingChocolateIcon.innerHTML = '🍫';\n    this.floatingChocolateIcon.title = 'ChocoDrop を開く (@キーでも開けます)';\n    this.floatingChocolateIcon.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;\n\n    // ホバー効果\n    this.floatingChocolateIcon.addEventListener('mouseover', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1.1) translateY(-2px)';\n      this.floatingChocolateIcon.style.boxShadow = '0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)';\n      this.floatingChocolateIcon.style.opacity = '1';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    this.floatingChocolateIcon.addEventListener('mouseout', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1) translateY(0)';\n      this.floatingChocolateIcon.style.boxShadow = '0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)';\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    // クリックで ChocoDrop を開く\n    this.floatingChocolateIcon.addEventListener('click', () => {\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // 右クリックメニュー\n    this.floatingChocolateIcon.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.showFloatingIconContextMenu(e);\n    });\n\n    // DOM に追加\n    document.body.appendChild(this.floatingChocolateIcon);\n  }\n\n  /**\n   * フローティングアイコンの右クリックメニューを表示\n   */\n  showFloatingIconContextMenu(event) {\n    // 既存のメニューがあれば削除\n    const existingMenu = document.querySelector('.floating-icon-context-menu');\n    if (existingMenu) {\n      existingMenu.remove();\n    }\n\n    // コンテキストメニュー作成\n    const menu = document.createElement('div');\n    menu.className = 'floating-icon-context-menu';\n    menu.style.cssText = `\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isDarkMode ? 'rgba(17, 24, 39, 0.85)' : 'rgba(255, 255, 255, 0.85)'};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.2)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n    `;\n\n    // メニューアイテム1: フォームを開く\n    const openFormItem = document.createElement('div');\n    openFormItem.innerHTML = '📄 フォームを開く';\n    openFormItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: #6366f1;\n      text-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);\n    `;\n\n    openFormItem.addEventListener('mouseover', () => {\n      openFormItem.style.background = this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)';\n      openFormItem.style.textShadow = '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    openFormItem.addEventListener('mouseout', () => {\n      openFormItem.style.background = 'transparent';\n      openFormItem.style.textShadow = '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    openFormItem.addEventListener('click', () => {\n      menu.remove();\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // メニューアイテム2: アイコンを非表示\n    const hideIconItem = document.createElement('div');\n    hideIconItem.innerHTML = '✕ アイコンを非表示';\n    hideIconItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: #6366f1;\n      text-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);\n    `;\n\n    hideIconItem.addEventListener('mouseover', () => {\n      hideIconItem.style.background = this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)';\n      hideIconItem.style.textShadow = '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    hideIconItem.addEventListener('mouseout', () => {\n      hideIconItem.style.background = 'transparent';\n      hideIconItem.style.textShadow = '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    hideIconItem.addEventListener('click', () => {\n      menu.remove();\n      this.hideFloatingIcon();\n    });\n\n    // メニューに追加\n    menu.appendChild(openFormItem);\n    menu.appendChild(hideIconItem);\n\n    // DOM に追加\n    document.body.appendChild(menu);\n\n    // 画面外に出ないように調整\n    const rect = menu.getBoundingClientRect();\n    if (rect.right > window.innerWidth) {\n      menu.style.left = `${event.clientX - rect.width}px`;\n    }\n    if (rect.bottom > window.innerHeight) {\n      menu.style.top = `${event.clientY - rect.height}px`;\n    }\n\n    // 外部クリックで閉じる\n    const closeMenu = (e) => {\n      if (!menu.contains(e.target)) {\n        menu.remove();\n        document.removeEventListener('click', closeMenu);\n      }\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', closeMenu);\n    }, 10);\n  }\n\n  /**\n   * フローティングアイコンを非表示にする\n   */\n  hideFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * フローティングアイコンを表示する\n   */\n  showFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'flex';\n    }\n  }\n\n  dispose() {\n    // ファイル選択関連のクリーンアップ\n    if (this.fileInput && this.fileInput.parentNode) {\n      this.fileInput.parentNode.removeChild(this.fileInput);\n    }\n    if (this.selectedFile && this.selectedFile.url) {\n      URL.revokeObjectURL(this.selectedFile.url);\n    }\n\n    // フローティングチョコアイコンのクリーンアップ\n    if (this.floatingChocolateIcon && this.floatingChocolateIcon.parentNode) {\n      this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon);\n    }\n\n    if (this.container && this.container.parentElement) {\n      this.container.parentElement.removeChild(this.container);\n    }\n  }\n\n  showOverlayTextarea() {\n    if (this.overlayTextarea) return;\n\n    this.isExpanded = true;\n    \n    // オーバーレイテキストエリアを作成\n    this.overlayTextarea = document.createElement('textarea');\n    this.overlayTextarea.value = this.input.value;\n    this.overlayTextarea.placeholder = this.input.placeholder;\n    \n    // フォームの位置とサイズを取得\n    const containerRect = this.container.getBoundingClientRect();\n    \n    // 画面境界を考慮した位置調整\n    const overlayHeight = 300;\n    const padding = 20;\n    \n    let top = containerRect.top + 60;\n    let left = containerRect.left;\n    let width = containerRect.width;\n    \n    // 右端がはみ出る場合\n    if (left + width > window.innerWidth - padding) {\n      left = window.innerWidth - width - padding;\n    }\n    \n    // 左端がはみ出る場合\n    if (left < padding) {\n      left = padding;\n      width = Math.min(width, window.innerWidth - 2 * padding);\n    }\n    \n    // 下端がはみ出る場合\n    if (top + overlayHeight > window.innerHeight - padding) {\n      top = Math.max(padding, window.innerHeight - overlayHeight - padding);\n    }\n\n    const overlayBackground = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))');\n\n    const overlayBorder = this.isWabiSabiMode\n      ? '1px solid rgba(93, 64, 55, 0.5)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.25)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    const overlayInnerShadow = this.isWabiSabiMode\n      ? '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n      : (this.isDarkMode\n        ? '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n        : '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)');\n\n    const overlayTextColor = this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937');\n\n    // オーバーレイのスタイル設定\n    this.overlayTextarea.style.cssText = `\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${overlayBackground};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${overlayBorder};\n      box-shadow: ${overlayInnerShadow};\n      border-radius: 16px;\n      color: ${overlayTextColor};\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;\n    \n    // ドキュメントに追加\n    document.body.appendChild(this.overlayTextarea);\n    \n    // アニメーション開始\n    requestAnimationFrame(() => {\n      this.overlayTextarea.style.opacity = '1';\n    });\n    \n    // フォーカス設定\n    this.overlayTextarea.focus();\n    \n    // 入力同期\n    this.overlayTextarea.addEventListener('input', (e) => {\n      this.input.value = e.target.value;\n    });\n    \n    // Escapeキーで閉じる\n    this.overlayTextarea.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.hideOverlayTextarea();\n      }\n    });\n    \n    // 外側クリックで閉じる\n    this.overlayTextarea.addEventListener('blur', () => {\n      setTimeout(() => this.hideOverlayTextarea(), 100);\n    });\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n}\n","const IMAGE_SERVICE_STORAGE_KEY = 'chocodrop-service-image';\nconst VIDEO_SERVICE_STORAGE_KEY = 'chocodrop-service-video';\nconst KEYWORD_HIGHLIGHT_COLOR = '#ff6ad5';\n\n/**\n * Command UI - Web interface for ChocoDrop System\n * Real-time natural language command interface for 3D scenes\n */\nexport class CommandUI {\n  constructor(options = {}) {\n    this.sceneManager = options.sceneManager || null;\n    this.client = options.client || null;\n    this.onControlsToggle = options.onControlsToggle || (() => {});\n    \n    this.isVisible = false;\n    this.container = null;\n    this.input = null;\n    this.output = null;\n    this.currentMode = 'generate';\n\n    // リアルタイム進捗管理\n    this.activeConnections = new Map();\n    this.currentTaskId = null;\n    \n    // 設定\n    this.config = {\n      activationKey: options.activationKey || '@',\n      position: options.position || 'bottom-right',\n      width: options.width || 450,\n      maxHeight: options.maxHeight || 600,\n      theme: options.theme || 'dark',\n      showExamples: options.showExamples !== false,\n      autoScroll: options.autoScroll !== false,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n\n    this.availableImageServices = [];\n    this.availableVideoServices = [];\n    this.selectedImageService = null;\n    this.selectedVideoService = null;\n    this.highlightOverlay = null;\n    this.inputDefaultStyles = null;\n    this.imageServiceSelect = null;\n    this.videoServiceSelect = null;\n    this.serviceSelectorContainer = null;\n    this.serviceSelectorStatus = null;\n    this.serviceSelectorContent = null;\n    this.serviceSelectorRetryButton = null;\n    this.serviceSelectorSaveButton = null;\n    this.serviceSelectorCancelButton = null;\n    this.serviceModalOverlay = null;\n    this.serviceModal = null;\n    this.servicesLoading = false;\n    this.isExpanded = false;\n    this.overlayTextarea = null;\n    this.pendingImageService = null;\n    this.pendingVideoService = null;\n    this.feedbackAutoClearTimer = null;\n    this.currentFeedback = null;\n\n    try {\n      const storedImage = localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY);\n      const storedVideo = localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY);\n      console.log('🔍 Debug localStorage read:', { storedImage, storedVideo, IMAGE_SERVICE_STORAGE_KEY, VIDEO_SERVICE_STORAGE_KEY });\n      if (storedImage) {\n        this.selectedImageService = storedImage;\n        console.log('✅ Set selectedImageService:', this.selectedImageService);\n      }\n      if (storedVideo) {\n        this.selectedVideoService = storedVideo;\n        console.log('✅ Set selectedVideoService:', this.selectedVideoService);\n      }\n      console.log('🔍 Final values:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    } catch (error) {\n      console.warn('⚠️ Failed to load stored service selections:', error);\n    }\n\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    this.applyServiceSelectionToSceneManager();\n    console.log('🔍 After applyServiceSelectionToSceneManager - UI:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    console.log('🔍 After applyServiceSelectionToSceneManager - SceneManager:', { selectedImageService: this.sceneManager?.selectedImageService, selectedVideoService: this.sceneManager?.selectedVideoService });\n\n    // テーマモード状態管理 (light, dark, wabisabi)\n    this.currentTheme = localStorage.getItem('live-command-theme') || 'light';\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    \n    // Undo/Redo システム\n    this.commandHistory = [];\n    this.currentHistoryIndex = -1;\n    this.maxHistorySize = 50; // 最大コマンド保存数\n    \n    this.initUI();\n    this.bindEvents();\n\n    if (!this.client && this.sceneManager && this.sceneManager.client) {\n      this.client = this.sceneManager.client;\n    }\n\n    this.createServiceModal();\n    this.createFloatingChocolateIcon();\n\n    // DOM読み込み完了後にスタイルを確実に適用\n    document.addEventListener('DOMContentLoaded', () => {\n      this.refreshStyles();\n    });\n\n    this.logDebug('🎮 CommandUI initialized');\n\n    if (!this.selectedImageService || !this.selectedVideoService) {\n      this.openServiceModal(true);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * UI要素の作成と配置\n   */\n  initUI() {\n    // メインコンテナ\n    this.container = document.createElement('div');\n    this.container.id = 'live-command-ui';\n    this.container.style.cssText = this.getContainerStyles();\n\n    // 2025年トレンド：Progressive Disclosure（ホバー時のみブランド表示）\n    const brandIndicator = document.createElement('div');\n    brandIndicator.className = 'progressive-brand-indicator';\n    brandIndicator.style.cssText = `\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;\n    \n    // Progressive Disclosure: ホバー/クリックでブランド名表示\n    const brandText = document.createElement('div');\n    brandText.className = 'progressive-brand-text';\n    brandText.style.cssText = `\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.25)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;\n    brandText.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">🍫</span> <span style=\"color: #6366f1;\">ChocoDrop</span>';\n    \n    // Progressive Disclosure イベント\n    brandIndicator.addEventListener('mouseenter', () => {\n      brandText.style.opacity = '1';\n      brandText.style.transform = 'translateY(0) scale(1)';\n      brandIndicator.style.transform = 'scale(1.2)';\n      brandIndicator.style.opacity = '1';\n    });\n    \n    brandIndicator.addEventListener('mouseleave', () => {\n      brandText.style.opacity = '0';\n      brandText.style.transform = 'translateY(5px) scale(0.9)';\n      brandIndicator.style.transform = 'scale(1)';\n      brandIndicator.style.opacity = '0.7';\n    });\n    \n    brandIndicator.appendChild(brandText);\n    this.container.appendChild(brandIndicator);\n\n    // 出力エリア（タスクカードコンテナ）- 非表示に変更\n    this.output = document.createElement('div');\n    this.outputDiv = this.output; // 両方の参照を保持（互換性のため）\n    this.output.id = 'command-output';\n    this.output.className = 'command-output';\n    this.output.style.cssText = this.getOutputStyles();\n    // フローティングカード用コンテナ\n    this.floatingContainer = document.createElement('div');\n    this.floatingContainer.id = 'floating-cards-container';\n    this.floatingContainer.style.cssText = `\n      position: fixed;\n      bottom: var(--floating-bottom, 120px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-start;\n    `;\n\n    // タスクカード管理用\n    this.taskCards = new Map();\n\n    // 入力フィールドラッパー（展開ボタン用）\n    this.inputWrapper = document.createElement('div');\n    this.inputWrapper.style.cssText = `\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;\n\n    // Ultra-Simple 単一入力フィールド（自動リサイズ対応）\n    this.input = document.createElement('textarea');\n    this.input.rows = 1;\n    this.input.id = 'command-input';\n    this.input.placeholder = '「右上にドラゴンを」「美しい桜の森を中央に」など... ✨';\n    this.input.style.cssText = this.getInputStyles();\n\n    // 展開ボタン（初期状態は非表示）\n    this.expandButton = document.createElement('div');\n    this.expandButton.innerHTML = '⤢';\n    this.expandButton.title = 'テキスト全体を表示';\n    this.expandButton.style.cssText = `\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n      border-radius: 6px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;\n\n    // 展開ボタンのホバー効果\n    this.expandButton.addEventListener('mouseenter', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      this.expandButton.style.transform = 'scale(1.1)';\n    });\n\n    this.expandButton.addEventListener('mouseleave', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      this.expandButton.style.transform = 'scale(1)';\n    });\n\n    // 展開ボタンのクリック処理\n    this.expandButton.addEventListener('click', () => {\n      if (this.isExpanded) {\n        this.hideOverlayTextarea();\n      } else {\n        this.showOverlayTextarea();\n      }\n    });\n\n    // ラッパーに要素を追加\n    this.inputWrapper.appendChild(this.input);\n    this.inputWrapper.appendChild(this.expandButton);\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合）\n\n    // ラジオボタン風モードセレクター\n    const modeSelector = this.createRadioModeSelector();\n\n    // ミニマルアクションボタン\n    const actionContainer = this.createMinimalActions();\n\n    // ×クローズボタンをフォーム右上に追加\n    const closeButton = document.createElement('div');\n    closeButton.innerHTML = '×';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;\n\n    closeButton.addEventListener('mouseover', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      closeButton.style.transform = 'scale(1.1)';\n    });\n\n    closeButton.addEventListener('mouseout', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.transform = 'scale(1)';\n    });\n\n    closeButton.addEventListener('click', () => {\n      this.hide();\n    });\n\n    // 組み立て（ヘッダー削除、ブランドバッジは既に追加済み）\n    // this.container.appendChild(this.output); // 大きなタスク表示エリアをDOMに追加しない\n    this.container.appendChild(closeButton);\n    this.container.appendChild(modeSelector);\n    this.container.appendChild(this.inputWrapper);\n    this.container.appendChild(actionContainer);\n\n    // フローティングカードコンテナをbodyに直接追加\n    document.body.appendChild(this.floatingContainer);\n\n    // DOM に追加\n    document.body.appendChild(this.container);\n\n    // 初回テーマ適用\n    this.applyTheme();\n\n    // 日本語IME対応のcomposition state管理\n    this.isComposing = false;\n    this.hasCompositionJustEnded = false;\n\n    // リアルタイム入力監視とコマンド検出（IME対応）\n    this.input.addEventListener('input', () => {\n      // IME入力中はコマンド検出を停止\n      if (this.isComposing) {\n        return;\n      }\n      \n      // フィードバック自動クリア（ユーザーが入力を修正している）\n      if (this.currentFeedback) {\n        this.clearInputFeedback();\n      }\n      \n      // 自動リサイズ処理\n      this.autoResizeTextarea();\n      \n      // キーワードハイライト適用\n      this.applyKeywordHighlighting();\n      \n      this.detectCommandType();\n    });\n    \n    // 日本語IME composition events\n    this.input.addEventListener('compositionstart', () => {\n      this.isComposing = true;\n    });\n    \n    this.input.addEventListener('compositionend', () => {\n      this.isComposing = false;\n      \n      // Safariのみフラグ設定（他のブラウザは不要）\n      const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n      if (isSafari) {\n        this.hasCompositionJustEnded = true;\n      }\n      \n      // 確定後のコマンド検出を実行\n      setTimeout(() => {\n        this.autoResizeTextarea();\n        this.detectCommandType();\n      }, 10);\n    });\n    \n    // Safari判定\n    const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n    \n    // 日本語IME対応Enterキー処理（Safari対応版）\n    this.input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        // Safari: compositionend直後のEnterをスキップ\n        if (isSafari && this.hasCompositionJustEnded) {\n          this.hasCompositionJustEnded = false;\n          return;\n        }\n        \n        // その他のブラウザ: isComposingチェック\n        if (!isSafari && (e.isComposing || this.isComposing)) {\n          return;\n        }\n        \n\n\n        e.preventDefault();\n        this.executeCommand();\n      }\n    });\n    \n    // 初期メッセージ\n    if (this.config.showExamples) {\n      // 起動メッセージ削除\n      // 起動時は静かに待機\n    }\n  }\n\n  /**\n   * モードセレクター作成\n   */\n  createMinimalActions() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;\n\n    // 左側: Clear All ボタン（承認済みのLayout Bデザイン）\n    const leftSection = document.createElement('div');\n    leftSection.style.cssText = 'display: flex; gap: 8px; align-items: center;';\n\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">🧹</span> Clear All';\n    clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    clearBtn.addEventListener('click', () => this.clearAllWithConfirmation());\n\n    // 履歴ボタン（将来実装用スペース確保）- 海外UI標準対応：同一幅\n    const historyBtn = document.createElement('button');\n    historyBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">📚</span> History';\n    historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n    historyBtn.style.opacity = '0.5';\n    historyBtn.disabled = true;\n    historyBtn.title = '履歴機能（開発中）';\n\n    leftSection.appendChild(clearBtn);\n    leftSection.appendChild(historyBtn);\n\n    // 右側: テーマトグルと設定（ヘッダーから移動）\n    const rightSection = document.createElement('div');\n    rightSection.style.cssText = 'display: flex; gap: 6px; align-items: center;';\n\n    const themeToggle = document.createElement('button');\n    const getThemeIcon = () => {\n      const themeConfig = {\n        light: '🌙',\n        dark: '🍵',\n        wabisabi: '☀️'\n      };\n      return themeConfig[this.currentTheme] || '🌙';\n    };\n\n    const getThemeTitle = () => {\n      const titleConfig = {\n        light: 'ダークモードに切り替え',\n        dark: '侘び寂びモードに切り替え',\n        wabisabi: 'ライトモードに切り替え'\n      };\n      return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n    };\n\n    const getThemeIconWithFilter = () => {\n      const icon = getThemeIcon();\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (icon === '☀️') {\n        return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n      } else if (icon === '🍵') {\n        return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n      } else {\n        return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n      }\n    };\n\n    themeToggle.innerHTML = getThemeIconWithFilter();\n    themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    themeToggle.title = getThemeTitle();\n    themeToggle.addEventListener('click', () => this.toggleTheme());\n\n    const settingsButton = document.createElement('button');\n    settingsButton.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">⚙️</span>';\n    settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    settingsButton.title = 'サービス設定を開く';\n    settingsButton.addEventListener('click', () => this.openServiceModal());\n\n    rightSection.appendChild(themeToggle);\n    rightSection.appendChild(settingsButton);\n\n    container.appendChild(leftSection);\n    container.appendChild(rightSection);\n\n    // 参照を保持\n    this.clearBtn = clearBtn;\n    this.historyBtn = historyBtn;\n    this.themeToggle = themeToggle;\n    this.settingsButton = settingsButton;\n\n    return container;\n  }\n\n  createServiceSelectorSection() {\n    this.serviceSelectorContainer = document.createElement('div');\n    this.serviceSelectorContainer.id = 'service-selector';\n    this.serviceSelectorContainer.style.cssText = `\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;\n\n    this.serviceSelectorStatus = document.createElement('div');\n    this.serviceSelectorStatus.textContent = 'サービス情報を読み込んでいます...';\n    this.serviceSelectorStatus.style.fontSize = '12px';\n    this.serviceSelectorStatus.style.opacity = '0.8';\n    this.serviceSelectorStatus.style.marginBottom = '8px';\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);\n\n    this.serviceSelectorContent = document.createElement('div');\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);\n\n    this.updateServiceSelectorTheme();\n    return this.serviceSelectorContainer;\n  }\n\n  createServiceModal() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.remove();\n      this.serviceModalOverlay = null;\n      this.serviceModal = null;\n    }\n\n    this.serviceModalOverlay = document.createElement('div');\n    this.serviceModalOverlay.id = 'chocodrop-service-modal-overlay';\n    this.serviceModalOverlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;\n\n    this.serviceModalOverlay.addEventListener('click', (event) => {\n      if (event.target === this.serviceModalOverlay) {\n        this.closeServiceModal();\n      }\n    });\n\n    this.serviceModal = document.createElement('div');\n    this.serviceModal.className = 'chocodrop-service-modal';\n    this.serviceModal.style.cssText = `\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;\n\n    const title = document.createElement('h2');\n    title.textContent = 'サービス設定';\n    title.style.cssText = `\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;\n\n    const subtitle = document.createElement('p');\n    subtitle.textContent = '利用するサービスを選択してください。';\n    subtitle.style.cssText = `\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;\n\n    const selector = this.createServiceSelectorSection();\n\n    const actionRow = document.createElement('div');\n    actionRow.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;\n\n    this.serviceSelectorRetryButton = document.createElement('button');\n    this.serviceSelectorRetryButton.textContent = '再読み込み';\n    this.serviceSelectorRetryButton.style.cssText = `\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorRetryButton.addEventListener('click', () => this.initializeServiceSelector(true));\n\n    const actionButtons = document.createElement('div');\n    actionButtons.style.cssText = 'display: flex; gap: 8px;';\n\n    this.serviceSelectorCancelButton = document.createElement('button');\n    this.serviceSelectorCancelButton.textContent = 'Cancel';\n    this.serviceSelectorCancelButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorCancelButton.addEventListener('click', () => this.closeServiceModal());\n\n    this.serviceSelectorSaveButton = document.createElement('button');\n    this.serviceSelectorSaveButton.textContent = 'Save';\n    this.serviceSelectorSaveButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;\n    this.serviceSelectorSaveButton.addEventListener('click', () => this.handleServiceSave());\n\n    actionButtons.appendChild(this.serviceSelectorCancelButton);\n    actionButtons.appendChild(this.serviceSelectorSaveButton);\n\n    actionRow.appendChild(this.serviceSelectorRetryButton);\n    actionRow.appendChild(actionButtons);\n\n    this.serviceModal.appendChild(title);\n    this.serviceModal.appendChild(subtitle);\n    this.serviceModal.appendChild(selector);\n    this.serviceModal.appendChild(actionRow);\n\n    this.serviceModalOverlay.appendChild(this.serviceModal);\n    document.body.appendChild(this.serviceModalOverlay);\n\n    this.updateServiceSelectorTheme();\n    this.toggleServiceRetryButton(false);\n  }\n\n  openServiceModal(forceFetch = false) {\n    if (!this.serviceModalOverlay) {\n      this.createServiceModal();\n    }\n\n    this.serviceModalOverlay.style.display = 'flex';\n    requestAnimationFrame(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.opacity = '1';\n      }\n    });\n\n    this.resetPendingSelections();\n    this.initializeServiceSelector(forceFetch);\n  }\n\n  closeServiceModal() {\n    if (!this.serviceModalOverlay) {\n      return;\n    }\n\n    this.serviceModalOverlay.style.opacity = '0';\n    setTimeout(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.display = 'none';\n      }\n      this.resetPendingSelections();\n    }, 150);\n  }\n\n  async initializeServiceSelector(force = false) {\n    if (this.servicesLoading && !force) {\n      return;\n    }\n\n    if (!this.client || typeof this.client.getAvailableServices !== 'function') {\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n      return;\n    }\n\n    this.servicesLoading = true;\n    this.setServiceSelectorStatus('サービス情報を読み込んでいます...', 'info');\n    this.toggleServiceRetryButton(false);\n    this.setServiceButtonsEnabled(false);\n\n    try {\n      if (typeof this.client.ensureInitialized === 'function') {\n        await this.client.ensureInitialized();\n      }\n\n      const response = await this.client.getAvailableServices();\n      if (!response || response.success === false || !response.metadata) {\n        throw new Error(response?.error || 'サービス情報が取得できませんでした');\n      }\n\n      this.availableImageServices = Array.isArray(response.metadata?.image) ? response.metadata.image : [];\n      this.availableVideoServices = Array.isArray(response.metadata?.video) ? response.metadata.video : [];\n\n      this.selectedImageService = this.resolveServiceSelection(\n        'image',\n        this.availableImageServices,\n        response.default?.image\n      );\n\n      this.selectedVideoService = this.resolveServiceSelection(\n        'video',\n        this.availableVideoServices,\n        response.default?.video\n      );\n\n      this.pendingImageService = this.selectedImageService;\n      this.pendingVideoService = this.selectedVideoService;\n\n      this.populateServiceSelector();\n      this.applyServiceSelectionToSceneManager();\n      this.setServiceButtonsEnabled(true);\n    } catch (error) {\n      console.error('❌ Failed to initialize service selector:', error);\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした。サーバーが起動しているか確認のうえ、再読み込みしてください。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n    } finally {\n      this.servicesLoading = false;\n    }\n  }\n\n  setServiceSelectorStatus(message, type = 'info') {\n    if (!this.serviceSelectorStatus) {\n      return;\n    }\n    this.serviceSelectorStatus.textContent = message;\n    this.serviceSelectorStatus.dataset.statusType = type;\n    this.serviceSelectorStatus.classList.toggle('service-selector-helper', type !== 'error');\n    this.updateServiceSelectorTheme();\n  }\n\n  toggleServiceRetryButton(visible) {\n    if (!this.serviceSelectorRetryButton) {\n      return;\n    }\n    this.serviceSelectorRetryButton.style.display = visible ? 'inline-flex' : 'none';\n    this.updateServiceSelectorTheme();\n  }\n\n  resolveServiceSelection(type, services, defaultId) {\n    if (!services || services.length === 0) {\n      return null;\n    }\n\n    const storageKey = type === 'image' ? IMAGE_SERVICE_STORAGE_KEY : VIDEO_SERVICE_STORAGE_KEY;\n    let storedId = null;\n    try {\n      storedId = localStorage.getItem(storageKey);\n    } catch (error) {\n      console.warn('⚠️ Failed to access localStorage:', error);\n    }\n\n    const isStoredValid = storedId && services.some(service => service.id === storedId);\n    let resolvedId = isStoredValid ? storedId : null;\n\n    if (!resolvedId && defaultId && services.some(service => service.id === defaultId)) {\n      resolvedId = defaultId;\n    }\n\n    if (!resolvedId) {\n      resolvedId = services[0]?.id || null;\n    }\n\n    try {\n      if (resolvedId) {\n        localStorage.setItem(storageKey, resolvedId);\n      } else {\n        localStorage.removeItem(storageKey);\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to persist service selection:', error);\n    }\n\n    return resolvedId;\n  }\n\n  populateServiceSelector() {\n    if (!this.serviceSelectorContent) {\n      return;\n    }\n\n    this.serviceSelectorContent.innerHTML = '';\n\n    const hasImage = this.availableImageServices.length > 0;\n    const hasVideo = this.availableVideoServices.length > 0;\n\n    if (!hasImage && !hasVideo) {\n      this.setServiceSelectorStatus('利用可能なサービスが見つかりませんでした。', 'error');\n      return;\n    }\n\n    this.setServiceSelectorStatus('利用するサービスを選択してください。', 'info');\n\n    if (hasImage) {\n      const imageRow = this.buildServiceRow('image', '画像 (T2I)', this.availableImageServices, this.pendingImageService || this.selectedImageService);\n      this.serviceSelectorContent.appendChild(imageRow);\n    }\n\n    if (hasVideo) {\n      const videoRow = this.buildServiceRow('video', '動画 (T2V)', this.availableVideoServices, this.pendingVideoService || this.selectedVideoService);\n      this.serviceSelectorContent.appendChild(videoRow);\n    }\n\n    this.updateServiceSelectorTheme();\n  }\n\n  buildServiceRow(type, labelText, services, selectedId) {\n    const row = document.createElement('div');\n    row.className = `service-row service-row-${type}`;\n    row.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;\n\n    const label = document.createElement('label');\n    label.textContent = labelText;\n    label.style.fontSize = '13px';\n    label.style.fontWeight = '600';\n    row.appendChild(label);\n\n    const select = document.createElement('select');\n    select.dataset.serviceType = type;\n    select.style.fontFamily = 'inherit';\n    select.style.width = '100%';\n\n    services.forEach(service => {\n      const option = document.createElement('option');\n      option.value = service.id;\n      option.textContent = service.name || service.id;\n      if (service.description) {\n        option.title = service.description;\n      }\n      select.appendChild(option);\n    });\n\n    if (selectedId && services.some(service => service.id === selectedId)) {\n      select.value = selectedId;\n    }\n\n    select.addEventListener('change', (event) => {\n      this.onServiceSelectionChange(type, event.target.value);\n    });\n\n    row.appendChild(select);\n\n    const description = document.createElement('div');\n    description.className = 'service-description';\n    description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    description.style.fontSize = '11px';\n    description.style.opacity = '0.75';\n    description.style.lineHeight = '1.4';\n    description.style.minHeight = '14px';\n    row.appendChild(description);\n\n    select.addEventListener('change', () => {\n      description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    });\n\n    if (type === 'image') {\n      this.imageServiceSelect = select;\n    } else {\n      this.videoServiceSelect = select;\n    }\n\n    return row;\n  }\n\n  onServiceSelectionChange(type, serviceId) {\n    if (type === 'image') {\n      this.pendingImageService = serviceId;\n    } else {\n      this.pendingVideoService = serviceId;\n    }\n\n    const info = this.findServiceInfo(type, serviceId);\n    const description = type === 'image'\n      ? this.imageServiceSelect?.parentElement?.querySelector('.service-description')\n      : this.videoServiceSelect?.parentElement?.querySelector('.service-description');\n\n    if (description) {\n      description.textContent = info?.description || '';\n    }\n  }\n\n  handleServiceSave() {\n    const newImageId = this.pendingImageService || this.selectedImageService;\n    const newVideoId = this.pendingVideoService || this.selectedVideoService;\n\n    if (newImageId) {\n      try {\n        localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY, newImageId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist image service selection:', error);\n      }\n      this.selectedImageService = newImageId;\n      this.sceneManager?.setImageService(newImageId);\n    }\n\n    if (newVideoId) {\n      try {\n        localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY, newVideoId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist video service selection:', error);\n      }\n      this.selectedVideoService = newVideoId;\n      this.sceneManager?.setVideoService(newVideoId);\n    }\n\n    const imageInfo = this.findServiceInfo('image', newImageId);\n    const videoInfo = this.findServiceInfo('video', newVideoId);\n\n    if (imageInfo) {\n      this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`, 'system');\n    }\n    if (videoInfo) {\n      this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`, 'system');\n    }\n\n    this.closeServiceModal();\n  }\n\n  setServiceButtonsEnabled(enabled) {\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.disabled = !enabled;\n      this.serviceSelectorSaveButton.style.opacity = enabled ? '1' : '0.6';\n      this.serviceSelectorSaveButton.style.cursor = enabled ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  resetPendingSelections() {\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    if (this.imageServiceSelect && this.selectedImageService) {\n      this.imageServiceSelect.value = this.selectedImageService;\n    }\n    if (this.videoServiceSelect && this.selectedVideoService) {\n      this.videoServiceSelect.value = this.selectedVideoService;\n    }\n\n    if (this.serviceSelectorContent && this.serviceSelectorContent.childElementCount > 0) {\n      this.populateServiceSelector();\n    }\n  }\n\n  findServiceInfo(type, serviceId) {\n    const list = type === 'image' ? this.availableImageServices : this.availableVideoServices;\n    return list.find(service => service.id === serviceId) || null;\n  }\n\n  applyServiceSelectionToSceneManager() {\n    if (!this.sceneManager) {\n      return;\n    }\n    this.sceneManager.setImageService(this.selectedImageService);\n    this.sceneManager.setVideoService(this.selectedVideoService);\n  }\n\n  updateServiceSelectorTheme() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.style.background = this.isDarkMode\n        ? 'rgba(8, 11, 26, 0.55)'\n        : 'rgba(229, 231, 255, 0.45)';\n    }\n\n    if (this.serviceModal) {\n      this.serviceModal.style.background = this.isDarkMode\n        ? 'rgba(17, 24, 39, 0.15)'\n        : 'rgba(255, 255, 255, 0.15)';\n      this.serviceModal.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.4)'\n        : '1px solid rgba(99, 102, 241, 0.25)';\n      this.serviceModal.style.color = this.isDarkMode ? '#e5e7ff' : '#1f2937';\n    }\n\n    if (this.serviceSelectorStatus) {\n      const type = this.serviceSelectorStatus.dataset?.statusType;\n      const statusColor = type === 'error'\n        ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n        : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.75)');\n      this.serviceSelectorStatus.style.color = statusColor;\n    }\n\n    if (this.serviceSelectorContainer) {\n      const labels = this.serviceSelectorContainer.querySelectorAll('label');\n      labels.forEach(label => {\n        label.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(31, 41, 55, 0.9)');\n      });\n\n      const selects = this.serviceSelectorContainer.querySelectorAll('select');\n      selects.forEach(select => {\n        select.style.background = this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.15)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.18)' : 'rgba(99, 102, 241, 0.12)');\n        select.style.border = this.isWabiSabiMode\n          ? '1px solid rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? '1px solid rgba(129, 140, 248, 0.45)' : '1px solid rgba(99, 102, 241, 0.45)');\n        select.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937');\n        select.style.padding = '10px 12px';\n        select.style.borderRadius = '10px';\n        select.style.fontSize = '13px';\n        select.style.outline = 'none';\n        select.style.boxShadow = this.isWabiSabiMode\n          ? '0 12px 24px rgba(93, 64, 55, 0.25)'\n          : (this.isDarkMode\n            ? '0 12px 28px rgba(15, 23, 42, 0.5)'\n            : '0 12px 24px rgba(99, 102, 241, 0.2)');\n      });\n\n      const descriptions = this.serviceSelectorContainer.querySelectorAll('.service-description');\n      descriptions.forEach(desc => {\n        desc.style.color = this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.7)'\n          : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.7)');\n      });\n    }\n\n    if (this.serviceSelectorRetryButton) {\n      this.serviceSelectorRetryButton.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.25)'\n        : (this.isDarkMode\n          ? 'rgba(129, 140, 248, 0.35)'\n          : 'rgba(99, 102, 241, 0.15)');\n      this.serviceSelectorRetryButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.5)'\n        : (this.isDarkMode\n          ? '1px solid rgba(129, 140, 248, 0.5)'\n          : '1px solid rgba(99, 102, 241, 0.45)');\n      this.serviceSelectorRetryButton.style.color = this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#f9fafb' : '#1e1b4b');\n      this.serviceSelectorRetryButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 0 8px rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '0 0 8px rgba(129, 140, 248, 0.45)'\n          : '0 0 8px rgba(99, 102, 241, 0.35)');\n    }\n\n    if (this.serviceSelectorCancelButton) {\n      this.serviceSelectorCancelButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '1px solid rgba(209, 213, 219, 0.3)'\n          : '1px solid rgba(148, 163, 184, 0.5)');\n      this.serviceSelectorCancelButton.style.color = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.85)'\n        : (this.isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(30, 41, 59, 0.85)');\n    }\n\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, #6D4C41, #5D4037)'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')'\n          : 'linear-gradient(135deg, #818cf8, #a855f7)');\n      this.serviceSelectorSaveButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 16px 28px rgba(93, 64, 55, 0.35)'\n        : (this.isDarkMode\n          ? '0 16px 28px rgba(99, 102, 241, 0.4)'\n          : '0 16px 28px rgba(129, 140, 248, 0.35)');\n    }\n  }\n\n  /**\n   * ラジオボタン風モードセレクター作成\n   */\n  createRadioModeSelector() {\n    const container = document.createElement('div');\n    container.className = 'radio-mode-selector';\n    container.style.cssText = `\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))')};\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(141, 110, 99, 0.4)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(255, 255, 255, 0.25)')};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;\n\n    const modes = [\n      { value: 'generate', label: 'Generate', icon: '✨' },\n      { value: 'import', label: 'Import', icon: '📥' },\n      { value: 'modify', label: 'Modify', icon: '🔧' },\n      { value: 'delete', label: 'Delete', icon: '🗑️' }\n    ];\n\n    this.radioModeButtons = {};\n\n    modes.forEach(mode => {\n      const button = document.createElement('div');\n      button.className = `mode-option ${mode.value}`;\n      button.style.cssText = `\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)')};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n      `;\n\n      const icon = document.createElement('div');\n      icon.textContent = mode.icon;\n      icon.style.cssText = `\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${this.isDarkMode \n          ? 'hue-rotate(220deg) saturate(0.8) brightness(1.2)' \n          : 'hue-rotate(240deg) saturate(0.7) brightness(0.9)'};\n        transition: filter 0.2s ease;\n      `;\n\n      const label = document.createElement('span');\n      label.textContent = mode.label;\n\n      // AUTOバッジを作成\n      const autoBadge = document.createElement('div');\n      autoBadge.className = 'auto-badge';\n      autoBadge.textContent = 'AUTO';\n      autoBadge.style.cssText = `\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;\n\n      button.appendChild(icon);\n      button.appendChild(label);\n      button.appendChild(autoBadge);\n\n      // クリックイベント\n      button.addEventListener('click', () => {\n        if (mode.value === 'import') {\n          this.triggerFileSelection();\n        } else {\n          this.selectMode(mode.value, true); // trueは手動選択を示す\n        }\n      });\n\n      this.radioModeButtons[mode.value] = { button, autoBadge };\n      container.appendChild(button);\n    });\n\n\n    this.radioModeContainer = container;\n    // デフォルトでGenerateを選択\n    this.selectMode('generate', false);\n\n    return container;\n  }\n\n  /**\n   * モード選択（ラジオボタンUI更新）\n   */\n  selectMode(mode, isManual = false, detectedKeyword = null) {\n    this.currentMode = mode;\n\n    // 全ボタンをリセット\n    Object.keys(this.radioModeButtons).forEach(key => {\n      const { button, autoBadge } = this.radioModeButtons[key];\n      button.style.color = this.isWabiSabiMode\n        ? '#F5F5F5'\n        : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n      button.style.background = 'transparent';\n      button.style.border = '1px solid transparent';\n      button.style.transform = 'scale(1)';\n      button.style.boxShadow = 'none';\n      // AUTOバッジを非表示\n      autoBadge.style.display = 'none';\n      autoBadge.style.opacity = '0';\n    });\n\n    // 選択されたボタンをハイライト（2025年仕様）\n    const { button, autoBadge } = this.radioModeButtons[mode];\n    \n    // 2025 Glassmorphism選択状態\n    const selectedGlass = this.isWabiSabiMode\n      ? {\n          background: 'linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))',\n          border: '1px solid rgba(109, 76, 65, 0.4)',\n          boxShadow: '0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)',\n          color: '#F5F5F5'\n        }\n      : (this.isDarkMode\n        ? {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))',\n            border: '1px solid rgba(99, 102, 241, 0.4)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)',\n            color: '#a5b4fc'\n          }\n        : {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))',\n            border: '1px solid rgba(99, 102, 241, 0.3)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)',\n            color: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n          });\n\n    button.style.color = selectedGlass.color;\n    button.style.background = selectedGlass.background;\n    button.style.border = selectedGlass.border;\n    button.style.boxShadow = selectedGlass.boxShadow;\n    button.style.transform = 'scale(1.02)';\n\n    // AUTOバッジの表示制御\n    if (!isManual && detectedKeyword) {\n      // 自動切り替えの場合はAUTOバッジを表示\n      autoBadge.style.display = 'inline-block';\n      setTimeout(() => {\n        autoBadge.style.opacity = '1';\n        autoBadge.style.transform = 'scale(1)';\n      }, 100);\n      \n      // 3秒後にフェードアウト\n      setTimeout(() => {\n        autoBadge.style.opacity = '0';\n        autoBadge.style.transform = 'scale(0.8)';\n        setTimeout(() => {\n          autoBadge.style.display = 'none';\n        }, 200);\n      }, 3000);\n    }\n\n    // パルス効果を追加\n    if (!isManual && mode !== 'import') {\n      this.addPulseEffect(button);\n      this.addContainerGlow(mode);\n    } else if (mode === 'import') {\n      this.addContainerGlow(mode);\n    }\n\n    // プレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n\n    // モード切り替え時の入力欄メッセージ上書き機能\n    if (isManual) {\n      this.clearInputOnModeSwitch(mode);\n    }\n\n    // Importモード専用処理\n    if (mode === 'import' || this.selectedFile) {\n      this.showImportInterface();\n    } else {\n      this.hideImportInterface();\n    }\n\n    // Deleteモード専用処理\n    if (mode === 'delete' && isManual) {\n      this.handleDeleteModeSelection();\n    }\n\n    // Modifyモード専用処理\n    if (mode === 'modify' && isManual) {\n      this.handleModifyModeSelection();\n    }\n\n    // モード切り替えメッセージは表示しない（UIで分かるため）\n  }\n\n  /**\n   * パルス効果を追加\n   */\n  addPulseEffect(element) {\n    // 既存のアニメーションをリセット\n    element.style.animation = 'none';\n    \n    // 少し遅らせてからアニメーションを適用（リフロー強制）\n    setTimeout(() => {\n      element.style.animation = 'smartModePulse 0.6s ease-out';\n    }, 10);\n    \n    // アニメーション終了後にクリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 610);\n    \n    // CSSアニメーションを動的に追加（まだ存在しない場合）\n    this.ensurePulseAnimation();\n  }\n\n  /**\n   * パルスアニメーション用CSSを確保\n   */\n  ensurePulseAnimation() {\n    if (document.getElementById('smart-mode-pulse-animation')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'smart-mode-pulse-animation';\n    style.textContent = `\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コンテナグロー効果\n   */\n  addContainerGlow(mode) {\n    const container = this.radioModeContainer;\n    if (!container) return;\n\n    // モードに応じてグロー色を設定\n    const glowColors = this.isWabiSabiMode ? {\n      generate: 'rgba(139, 195, 74, 0.4)',\n      modify: 'rgba(139, 195, 74, 0.4)',\n      delete: 'rgba(139, 195, 74, 0.4)',\n      import: 'rgba(139, 195, 74, 0.4)'\n    } : {\n      generate: 'rgba(79, 70, 229, 0.4)',\n      modify: 'rgba(236, 72, 153, 0.4)',\n      delete: 'rgba(107, 114, 128, 0.3)',\n      import: 'rgba(59, 130, 246, 0.35)'\n    };\n\n    const glowColor = glowColors[mode] || glowColors.generate;\n\n    // 一時的にグロー効果を適用\n    container.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n\n    const intensified = glowColor.replace('0.4', '0.6').replace('0.3', '0.5');\n    container.style.borderColor = intensified !== glowColor ? intensified : glowColor;\n    \n    // 1秒後にグロー効果を除去\n    setTimeout(() => {\n      container.style.boxShadow = '';\n      container.style.borderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.15)';\n    }, 1000);\n  }\n\n  getActionButtonStyles(variant = 'secondary') {\n    const baseStyles = `\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;\n\n    if (variant === 'secondary') {\n      // Clear All, History ボタン用 - 美しい配置と統一感\n      return baseStyles + `\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.6)'\n          : (this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)')};\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? '#d1d5db' : '#374151')};\n        text-align: center;\n        white-space: nowrap;\n      `;\n    } else if (variant === 'icon') {\n      // テーマトグル、設定ボタン用\n      return baseStyles + `\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(255, 255, 255, 0.4)'};\n        color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'};\n      `;\n    }\n  }\n\n  /**\n   * 破壊的アクション用ボタンスタイル（赤系ガラス効果）\n   */\n  getDestructiveButtonStyles() {\n    return `\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode ? 'rgba(220, 38, 127, 0.4)' : 'rgba(190, 24, 93, 0.35)'};\n      border-radius: 6px;\n      background: ${this.isDarkMode ? 'rgba(220, 38, 127, 0.3)' : 'rgba(190, 24, 93, 0.25)'};\n      color: ${this.isDarkMode ? '#fca5a5' : '#dc2626'};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `;\n  }\n\n  getCommandTypeIndicatorStyles() {\n    return `\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)'};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `;\n  }\n\n  /**\n   * テキストエリアの自動リサイズ処理（最大2行）\n   */\n  autoResizeTextarea() {\n    // 高さをリセットして正確な scrollHeight を取得\n    this.input.style.height = 'auto';\n    \n    // 現在のコンテンツに基づいて高さを計算\n    const lineHeight = 22; // CSS で設定した line-height\n    const padding = 28; // 上下のパディング合計 (14px * 2)\n    const maxLines = 2;\n    const maxHeight = (lineHeight * maxLines) + padding;\n    \n    // スクロール高さに基づいて新しい高さを決定\n    const newHeight = Math.min(this.input.scrollHeight, maxHeight);\n    \n    // 高さを適用\n    this.input.style.height = newHeight + 'px';\n    \n    // 2行を超える場合はスクロールを有効化と展開ボタン表示\n    if (this.input.scrollHeight > maxHeight) {\n      this.input.style.overflowY = 'auto';\n      // 展開ボタンを表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'flex';\n      }\n    } else {\n      this.input.style.overflowY = 'hidden';\n      // 展開ボタンを非表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * リアルタイムコマンドタイプ検出\n   */\n  detectCommandType() {\n    const input = this.input.value.trim();\n    if (!input) {\n      this.selectMode('generate', false);\n      return;\n    }\n\n    const commandType = this.analyzeCommandType(input);\n\n    // Delete/Modifyは手動選択を優先、自動切り替えしない\n    if (this.currentMode === 'delete' || this.currentMode === 'modify') {\n      return; // 現在のモードを維持\n    }\n    // Generate/Importのみ自動切り替え\n    this.selectMode(commandType.type, false, commandType.detectedKeyword);\n  }\n\n  /**\n   * ルールベースコマンド分析\n   */\n  analyzeCommandType(text, hasSelectedObject) {\n    const trimmedText = text.trim();\n    \n    this.logDebug(`🔍 Analyzing command: \"${text}\"`);\n    this.logDebug(`📋 Selected object: ${hasSelectedObject ? 'Yes' : 'No'}`);\n    \n    // 空コマンド\n    if (!trimmedText) {\n      return { type: 'empty', reason: '空のコマンド' };\n    }\n\n    // メディアタイプの検出\n    const mediaInfo = this.detectMediaType(text);\n    \n    // 1. 削除コマンドの検出（最優先）\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除' },\n      { pattern: /消去/, keyword: '消去' },\n      { pattern: /消して/, keyword: '消して' },\n      { pattern: /消す/, keyword: '消す' },\n      { pattern: /取り除/, keyword: '取り除' },\n      { pattern: /除去/, keyword: '除去' },\n      { pattern: /削除して/, keyword: '削除して' },\n      { pattern: /delete/i, keyword: 'delete' },\n      { pattern: /remove/i, keyword: 'remove' },\n      { pattern: /clear/i, keyword: 'clear' },\n      { pattern: /erase/i, keyword: 'erase' }\n    ];\n    \n    for (const { pattern, keyword } of deletePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Delete pattern matched: ${keyword}`);\n        return {\n          type: 'delete',\n          confidence: 0.9,\n          reason: '削除キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: true,\n          detectedKeyword: keyword,\n          needsTarget: true\n        };\n      }\n    }\n    \n    // 2. 明確な生成コマンドの検出（選択状態に関係なく）\n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って' },\n      { pattern: /つくって/, keyword: 'つくって' },\n      { pattern: /生成/, keyword: '生成' },\n      { pattern: /作成/, keyword: '作成' },\n      { pattern: /描いて/, keyword: '描いて' },\n      { pattern: /書いて/, keyword: '書いて' },\n      { pattern: /create/i, keyword: 'create' },\n      { pattern: /generate/i, keyword: 'generate' },\n      { pattern: /make/i, keyword: 'make' },\n      { pattern: /draw/i, keyword: 'draw' }\n    ];\n    \n    for (const { pattern, keyword } of generatePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Generate pattern matched: ${keyword}`);\n        return {\n          type: 'generate',\n          confidence: mediaInfo.confidence,\n          reason: '生成キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword,\n          needsTarget: false\n        };\n      }\n    }\n    \n    // 3. 自然言語での対象指定（確実にmodify）\n    const targetPatterns = [\n      /インポートした.*を/,\n      /選択した.*を/,\n      /この.*を/,\n      /その.*を/,\n      /あの.*を/,\n      /[0-9]+番目.*を/,\n      /最初.*を/,\n      /初回.*を/,\n      /生成した.*を/,\n      /作った.*を/,\n      /.+の(画像|写真|イメージ|絵|イラスト|ピクチャー)(を|に)/,\n      /.+の(動画|ビデオ|ムービー|映像|クリップ)(を|に)/,\n      /(.+?)(画像|写真|イメージ|絵|イラスト|ピクチャー)を.*(変えて|変更|にして|加工|編集|調整|塗り|並べ|移動|回転|反転|整列)/,\n      /(.+?)(動画|ビデオ|ムービー|映像|クリップ)を.*(変えて|変更|にして|加工|編集|調整|塗り|並べ|移動|回転|反転|整列)/\n    ];\n\n    const explicitTargetMatched = targetPatterns.some(pattern => pattern.test(text));\n    if (explicitTargetMatched) {\n      this.logDebug('✅ Target reference pattern matched');\n      return {\n        type: 'modify',\n        confidence: 0.9,\n        reason: '対象を明示的に指定',\n        mediaType: mediaInfo.type,\n        requiresConfirmation: false,\n        needsTarget: true,\n        hasExplicitTarget: true\n      };\n    }\n\n    // 4. 選択オブジェクトがある場合の処理\n    if (hasSelectedObject && trimmedText) {\n      // 新規作成意図でなければmodify\n      if (!/の画像|の動画|画像を|動画を|画像$|動画$/.test(text)) {\n        this.logDebug(`✅ Selected object + command = modify`);\n        return {\n          type: 'modify',\n          confidence: 0.8,\n          reason: '選択オブジェクトに対する変更',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          needsTarget: false  // 既に選択済み\n        };\n      }\n    }\n\n    // 5. 変更系のキーワードが含まれる場合（対象未選択でもmodify判定）\n    const modificationIndicators = /(にして|に変えて|へ変えて|へ変更|変えて|変更|調整|加工|編集|塗(って|り)|染め|彩色|彩度|明るく|暗く|薄く|濃く|ぼかし|シャープ|左右反転|上下反転|反転|回転|移動|並べ|整列|揃え|寄せて|拡大|縮小|大きく|小さく|伸ばして|縮めて|高く|低く|近づけ|遠ざけ|透明|半透明|不透明|透過|背景を透過|背景透過|背景を消|背景消|背景抜|輝かせて|光らせて|暗くして|焼き込み|焼き付け|flip|rotate|move|align|scale|resize|tint|color|brighten|darken|adjust|edit|modify)/i;\n    const mediaReferenceIndicators = /(画像|写真|イメージ|絵|イラスト|ピクチャー|メディア|素材|動画|ビデオ|ムービー|映像|クリップ|オブジェクト|モデル)/i;\n\n    if (modificationIndicators.test(text)) {\n      this.logDebug('✅ Modification indicators detected');\n      return {\n        type: 'modify',\n        confidence: 0.7,\n        reason: '変更キーワードを検出',\n        mediaType: mediaInfo.type,\n        requiresConfirmation: false,\n        needsTarget: !hasSelectedObject,\n        hasExplicitTarget: explicitTargetMatched || mediaReferenceIndicators.test(text)\n      };\n    }\n\n    // 6. デフォルト（安全な生成）\n    this.logDebug(`ℹ️ Defaulting to generate mode`);\n    return {\n      type: 'generate',\n      confidence: mediaInfo.confidence,\n      reason: 'デフォルト動作（新規生成）',\n      mediaType: mediaInfo.type,\n      requiresConfirmation: false,\n      needsTarget: false\n    };\n  }\n\n  /**\n   * Extract all command keywords from the analyzeCommandType patterns\n   * Returns an array of {pattern, keyword, type} objects\n   */\n  getAllCommandKeywords() {\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除', type: 'delete' },\n      { pattern: /消去/, keyword: '消去', type: 'delete' },\n      { pattern: /消して/, keyword: '消して', type: 'delete' },\n      { pattern: /消す/, keyword: '消す', type: 'delete' },\n      { pattern: /取り除/, keyword: '取り除', type: 'delete' },\n      { pattern: /除去/, keyword: '除去', type: 'delete' },\n      { pattern: /削除して/, keyword: '削除して', type: 'delete' },\n      { pattern: /delete/i, keyword: 'delete', type: 'delete' },\n      { pattern: /remove/i, keyword: 'remove', type: 'delete' },\n      { pattern: /clear/i, keyword: 'clear', type: 'delete' },\n      { pattern: /erase/i, keyword: 'erase', type: 'delete' }\n    ];\n    \n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動', type: 'modify' },\n      { pattern: /動かして/, keyword: '動かして', type: 'modify' },\n      { pattern: /変更/, keyword: '変更', type: 'modify' },\n      { pattern: /変えて/, keyword: '変えて', type: 'modify' },\n      { pattern: /修正/, keyword: '修正', type: 'modify' },\n      { pattern: /調整/, keyword: '調整', type: 'modify' },\n      { pattern: /move/i, keyword: 'move', type: 'modify' },\n      { pattern: /change/i, keyword: 'change', type: 'modify' },\n      { pattern: /modify/i, keyword: 'modify', type: 'modify' },\n      { pattern: /edit/i, keyword: 'edit', type: 'modify' }\n    ];\n    \n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って', type: 'generate' },\n      { pattern: /生成/, keyword: '生成', type: 'generate' },\n      { pattern: /作成/, keyword: '作成', type: 'generate' },\n      { pattern: /描いて/, keyword: '描いて', type: 'generate' },\n      { pattern: /書いて/, keyword: '書いて', type: 'generate' },\n      { pattern: /create/i, keyword: 'create', type: 'generate' },\n      { pattern: /generate/i, keyword: 'generate', type: 'generate' },\n      { pattern: /make/i, keyword: 'make', type: 'generate' },\n      { pattern: /draw/i, keyword: 'draw', type: 'generate' }\n    ];\n\n    return [...deletePatterns, ...modifyPatterns, ...generatePatterns];\n  }\n\n  /**\n   * Apply keyword highlighting to the input text\n   */\n  applyKeywordHighlighting() {\n    // TODO: 一時的にキーワードハイライト機能を無効化（リリース後に再検討）\n    return;\n\n    if (!this.input || this.isComposing) {\n      return;\n    }\n\n    const text = this.input.value;\n    if (!text.trim()) {\n      this.clearKeywordHighlighting();\n      return;\n    }\n\n    // Get all keyword patterns\n    const allKeywords = this.getAllCommandKeywords();\n    \n    // Find matches in the text\n    const matches = [];\n    for (const { pattern, keyword, type } of allKeywords) {\n      const match = text.match(pattern);\n      if (match) {\n        const startIndex = match.index;\n        const endIndex = startIndex + match[0].length;\n        matches.push({\n          start: startIndex,\n          end: endIndex,\n          keyword: match[0], // Use actual matched text\n          type: type\n        });\n      }\n    }\n\n    // Sort matches by position to avoid overlaps\n    matches.sort((a, b) => a.start - b.start);\n\n    // Apply highlighting if we have matches\n    if (matches.length > 0) {\n      this.createHighlightOverlay(text, matches);\n    } else {\n      this.clearKeywordHighlighting();\n    }\n  }\n\n  /**\n   * Create a highlighting overlay div that sits behind the textarea\n   */\n  createHighlightOverlay(text, matches) {\n    // Remove existing overlay\n    this.clearKeywordHighlighting();\n\n    // Create highlight overlay div\n    this.highlightOverlay = document.createElement('div');\n    this.highlightOverlay.className = 'keyword-highlight-overlay';\n    \n    // Copy textarea styles to overlay\n    const computedStyle = window.getComputedStyle(this.input);\n\n    if (!this.inputDefaultStyles) {\n      this.captureInputDefaultStyles();\n    }\n    this.highlightOverlay.style.cssText = `\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      overflow: hidden;\n      font-family: ${computedStyle.fontFamily};\n      font-size: ${computedStyle.fontSize};\n      font-weight: ${computedStyle.fontWeight};\n      line-height: ${computedStyle.lineHeight};\n      letter-spacing: ${computedStyle.letterSpacing};\n      padding: ${computedStyle.padding};\n      border: ${computedStyle.borderWidth} solid transparent;\n      margin: 0;\n      z-index: 1;\n      color: transparent;\n      background: transparent;\n    `;\n\n    // Build highlighted HTML\n    let highlightedHTML = '';\n    let lastIndex = 0;\n\n    for (const match of matches) {\n      // Add text before this match\n      highlightedHTML += this.escapeHtml(text.substring(lastIndex, match.start));\n      \n      // Add highlighted keyword\n      const color = this.getKeywordColor(match.type);\n      highlightedHTML += `<span style=\"color: ${color}; font-weight: 600; background: linear-gradient(135deg, ${color}22 0%, ${color}11 100%); border-radius: 3px; padding: 1px 2px;\">${this.escapeHtml(match.keyword)}</span>`;\n      \n      lastIndex = match.end;\n    }\n\n    // Add remaining text\n    highlightedHTML += this.escapeHtml(text.substring(lastIndex));\n\n    this.highlightOverlay.innerHTML = highlightedHTML;\n\n    // Make textarea background transparent so overlay shows through\n    this.input.style.background = 'transparent';\n    this.input.style.backgroundColor = 'transparent';\n    this.input.style.backgroundImage = 'none';\n    this.input.style.color = this.getInputTextColor();\n\n    // Insert overlay before textarea\n    this.inputWrapper.insertBefore(this.highlightOverlay, this.input);\n  }\n\n  /**\n   * Get the appropriate color for each keyword type\n   */\n  getKeywordColor(type) {\n    return KEYWORD_HIGHLIGHT_COLOR;\n  }\n\n  getInputTextColor() {\n    if (this.isWabiSabiMode) {\n      return '#F5F5F5';\n    }\n    return this.isDarkMode ? '#ffffff' : '#1f2937';\n  }\n\n  captureInputDefaultStyles() {\n    if (!this.input) {\n      return;\n    }\n    const computedStyle = window.getComputedStyle(this.input);\n    this.inputDefaultStyles = {\n      background: computedStyle.background,\n      backgroundImage: computedStyle.backgroundImage,\n      backgroundColor: computedStyle.backgroundColor,\n      color: computedStyle.color\n    };\n  }\n\n  /**\n   * Clear keyword highlighting\n   */\n  clearKeywordHighlighting() {\n    if (this.highlightOverlay) {\n      this.highlightOverlay.remove();\n      this.highlightOverlay = null;\n    }\n    \n    // Restore textarea background\n    if (this.input) {\n      if (this.inputDefaultStyles) {\n        this.input.style.background = this.inputDefaultStyles.background;\n        this.input.style.backgroundImage = this.inputDefaultStyles.backgroundImage;\n        this.input.style.backgroundColor = this.inputDefaultStyles.backgroundColor;\n        this.input.style.color = this.inputDefaultStyles.color;\n      } else {\n        this.input.style.background = '';\n        this.input.style.backgroundImage = '';\n        this.input.style.backgroundColor = '';\n        this.input.style.color = '';\n      }\n    }\n  }\n\n  /**\n   * Escape HTML characters\n   */\n  escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  /**\n   * メディアタイプ検出（画像/動画）\n   */\n  detectMediaType(text) {\n    const videoPatterns = [\n      /動画|ビデオ|映像|ムービー/,\n      /video|movie|clip/i\n    ];\n    \n    const imagePatterns = [\n      /画像|写真|絵|イラスト|イメージ/,\n      /image|picture|photo|illustration/i\n    ];\n    \n    if (videoPatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'video',\n        confidence: 0.8,\n        reason: '動画生成コマンド'\n      };\n    }\n    \n    if (imagePatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'image',\n        confidence: 0.8,\n        reason: '画像生成コマンド'\n      };\n    }\n    \n    // デフォルトは画像\n    return {\n      type: 'image',\n      confidence: 0.6,\n      reason: '生成コマンド（画像デフォルト）'\n    };\n  }\n\n  /**\n   * コマンドタイプインジケーター表示\n   */\n  showCommandTypeIndicator(commandInfo) {\n    const { type, confidence, reason } = commandInfo;\n    \n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    // Proactive UX: 低信頼度時に提案表示\n    if (confidence < 0.7) {\n      this.showProactiveSuggestion(type, confidence);\n    } else {\n      this.hideProactiveSuggestion();\n    }\n    \n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[type].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n    // this.commandTypeIndicator.style.display = 'block';\n    // this.commandTypeIndicator.style.cursor = 'default';\n    \n    // スワイプジェスチャー対応\n    this.enableGestureControl();\n  }\n\n  /**\n   * Proactive UX: 低信頼度時の提案表示\n   */\n  showProactiveSuggestion(detectedType, confidence) {\n    if (!this.proactiveSuggestion) {\n      this.proactiveSuggestion = document.createElement('div');\n      this.proactiveSuggestion.id = 'proactive-suggestion';\n      this.proactiveSuggestion.style.cssText = `\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;\n      // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n      // 代わりに入力フィールドの前に挿入\n      this.container.insertBefore(this.proactiveSuggestion, this.input);\n    }\n\n    const alternativeTypes = ['generate', 'modify', 'delete'].filter(t => t !== detectedType);\n    const suggestion = alternativeTypes[0]; // 最初の代替案\n\n    const suggestionLabels = {\n      generate: '🎨 生成',\n      modify: '✏️ 変更', \n      delete: '🗑️ 削除'\n    };\n\n    this.proactiveSuggestion.innerHTML = `\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style=\"margin-top: 4px; font-size: 10px; opacity: 0.8;\">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;\n    \n    this.proactiveSuggestion.style.display = 'block';\n    \n    // クリックで提案モードに変更\n    this.proactiveSuggestion.onclick = () => {\n      this.currentMode = suggestion;\n      this.hideProactiveSuggestion();\n      this.updateIndicatorForMode(suggestion, 0.9);\n    };\n  }\n\n  /**\n   * Proactive UX提案を非表示\n   */\n  hideProactiveSuggestion() {\n    if (this.proactiveSuggestion) {\n      this.proactiveSuggestion.style.display = 'none';\n    }\n  }\n\n  /**\n   * 指定モードでインジケーター更新\n   */\n  updateIndicatorForMode(mode, confidence) {\n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[mode].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n  }\n\n  /**\n   * ジェスチャーコントロール有効化\n   */\n  enableGestureControl() {\n    // 旧スワイプジェスチャー機能は削除（ラジオボタンUIに統合済み）\n    // ラジオボタンで直接モード選択可能になったため、スワイプ操作は不要\n    this.gestureEnabled = true;\n  }\n\n  /**\n   * アクションボタン作成\n   */\n  createActionButtons() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;\n\n    // 履歴ボタン削除 - タスク進行状況に置き換え済み\n\n    // クリアオールボタン\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '🧹 全削除';\n    clearBtn.style.cssText = this.getModernButtonStyles('danger');\n    clearBtn.addEventListener('click', () => this.clearAll());\n\n    // historyBtn削除済み\n    container.appendChild(clearBtn);\n\n    return container;\n  }\n\n  /**\n   * スタイル定義\n   */\n  getContainerStyles() {\n    const positions = {\n      'bottom-right': 'bottom: 20px; right: 20px;',\n      'bottom-left': 'bottom: 20px; left: 20px;',\n      'top-right': 'top: 20px; right: 20px;',\n      'top-left': 'top: 20px; left: 20px;',\n      'center': 'top: 50%; left: 50%; transform: translate(-50%, -50%);'\n    };\n\n    // 2025 Glassmorphism仕様：ダーク・ライト両対応\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(99, 102, 241, 0.2)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)'\n    };\n\n    // 侘び寂びモード - 枯山水の静寂：独自のアイデンティティ\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))',\n      backdropFilter: 'blur(20px) saturate(120%)',\n      border: '1px solid rgba(93, 64, 55, 0.5)',\n      boxShadow: '0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      position: fixed;\n      ${positions[this.config.position] || positions['bottom-right']}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  getHeaderStyles() {\n    // ダークモードと同じ紫グラデーションで統一\n    const gradientColors = 'linear-gradient(135deg, #4f46e5, #7c3aed)';\n\n    return `\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `;\n  }\n\n  getOutputStyles() {\n    // カスタムスクロールバーのCSSを注入\n    this.addScrollbarStyles();\n\n    return `\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.2)'};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)'};\n    `;\n  }\n\n  /**\n   * スクロールバーのカスタムスタイルをページに注入\n   */\n  addScrollbarStyles() {\n    if (document.getElementById('custom-scrollbar-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'custom-scrollbar-styles';\n    style.textContent = `\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.5)'};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* 2025年トレンド: 微細な浮遊感アニメーション */\n      @keyframes gentleFloat {\n        0%, 100% { \n          transform: translateY(0px) scale(1);\n        }\n        25% { \n          transform: translateY(-2px) scale(1.005);\n        }\n        50% { \n          transform: translateY(-1px) scale(1.002);\n        }\n        75% { \n          transform: translateY(-3px) scale(1.008);\n        }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  getInputStyles() {\n    // 2025 Glassmorphism仕様：入力フィールド\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))',\n      border: '1px solid rgba(255, 255, 255, 0.5)',\n      boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)'\n    };\n\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))',\n      border: '1px solid rgba(97, 97, 97, 0.5)',\n      boxShadow: '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(55, 65, 81, 0.6)'};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `;\n  }\n\n  getModernButtonStyles(type) {\n    const styles = {\n      primary: this.isWabiSabiMode ? `\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      ` : `\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,\n      secondary: this.isWabiSabiMode ? `\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,\n      danger: this.isWabiSabiMode ? `\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `\n    };\n\n    return `\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `;\n  }\n\n  getModeButtonStyles(isActive, mode) {\n    // モードカラー設定\n    const modeColors = {\n      generate: 'linear-gradient(135deg, #22c55e, #16a34a)',  // Green - チャット欄と同じ緑色\n      modify: 'linear-gradient(135deg, #22c55e, #16a34a)',    // Green - チャット欄と同じ緑色\n      delete: 'linear-gradient(135deg, #22c55e, #16a34a)'     // Green - チャット欄と同じ緑色\n    };\n    \n    return `\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive ? 'white' : 'rgba(255, 255, 255, 0.7)'};\n      background: ${isActive ? modeColors[mode] : 'transparent'};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `;\n  }\n\n  /**\n   * イベントバインディング\n   */\n  bindEvents() {\n    // キーボードショートカット\n    document.addEventListener('keydown', (e) => {\n      // 設定されたキーでUI表示切替\n      if (e.key === this.config.activationKey) {\n        e.preventDefault();\n        this.toggle();\n        return;\n      }\n      \n      // Enterキー処理はinitUI()内で行うため、ここでは処理しない\n      // （IME対応のため）\n      \n      // Escapeで非表示\n      if (this.isVisible && e.key === 'Escape') {\n        this.hide();\n      }\n      \n      // Ctrl+Z/Ctrl+Y でUndo/Redo\n      if (this.isVisible && e.ctrlKey) {\n        if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault();\n          this.undo();\n        } else if (e.key === 'y' || (e.key === 'z' && e.shiftKey)) {\n          e.preventDefault();\n          this.redo();\n        }\n      }\n    });\n\n    // 入力フィールドのスタイル調整\n    this.input.addEventListener('focus', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8BC34A';\n        this.input.style.boxShadow = '0 0 5px rgba(139, 195, 74, 0.5)';\n      } else {\n        this.input.style.borderColor = '#74b9ff';\n        this.input.style.boxShadow = '0 0 5px rgba(116, 185, 255, 0.5)';\n      }\n    });\n\n    this.input.addEventListener('blur', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8D6E63';\n        this.input.style.boxShadow = 'none';\n      } else {\n        this.input.style.borderColor = '#4a90e2';\n        this.input.style.boxShadow = 'none';\n      }\n    });\n  }\n\n  /**\n   * UI表示/非表示切替\n   */\n  toggle() {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * UI表示\n   */\n  show() {\n    this.container.style.display = 'flex';\n    this.container.style.flexDirection = 'column';\n    this.floatingContainer.style.display = 'flex';\n\n    // UIフォームの位置に合わせて配置（少し遅延して正確な位置を取得）\n    setTimeout(() => {\n      const containerRect = this.container.getBoundingClientRect();\n      this.floatingContainer.style.left = containerRect.left + 'px';\n      this.floatingContainer.style.top = (containerRect.top - 80) + 'px';\n      this.floatingContainer.style.width = containerRect.width + 'px';\n      this.floatingContainer.style.transform = 'none';\n    }, 50);\n\n    this.isVisible = true;\n    this.input.focus();\n\n    // フォーム表示中はチョコアイコンを隠す\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0';\n      this.floatingChocolateIcon.style.pointerEvents = 'none';\n    }\n\n    // コントロールを無効化\n    this.onControlsToggle(true);\n    // コントロール停止時も静かに\n  }\n\n  /**\n   * UI非表示\n   */\n  hide() {\n    this.container.style.display = 'none';\n    this.floatingContainer.style.display = 'none';\n    this.isVisible = false;\n\n    // フォーム非表示時はチョコアイコンを再表示\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.pointerEvents = 'auto';\n    }\n\n    // コントロールを再有効化\n    this.onControlsToggle(false);\n    this.logDebug('🎮 コントロールを再開');\n  }\n\n  /**\n   * モード切り替え\n   */\n  switchMode(mode) {\n    if (this.currentMode === mode) return;\n    \n    this.currentMode = mode;\n    \n    // モードボタンのスタイル更新\n    this.container.querySelectorAll('[data-mode]').forEach(btn => {\n      const isActive = btn.dataset.mode === mode;\n      btn.style.cssText = this.getModeButtonStyles(isActive, btn.dataset.mode);\n    });\n    \n    // 入力フィールドのプレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n    \n    // 実行ボタンのラベルと色更新\n    const executeBtn = this.container.querySelector('#execute-btn');\n    const labels = {\n      generate: '🎨 Generate Object',\n      modify: '✏️ Apply Changes', \n      delete: '🗑️ Delete Objects'\n    };\n    \n    const buttonColors = {\n      generate: 'linear-gradient(135deg, #5b21b6, #4c1d95)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)', \n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    executeBtn.innerHTML = `<span>${labels[mode]}</span>`;\n    executeBtn.style.background = buttonColors[mode];\n    \n    // モード切り替え通知は不要（ボタンで分かるため）\n  }\n  \n  /**\n   * モード別プレースホルダー\n   */\n  getPlaceholderForMode(mode) {\n    const placeholders = {\n      generate: '「猫の画像を作って」と話しかけて ⏎ ✨',\n      import: 'ファイルを選択して ⏎ 📁',\n      modify: '選択後「ピンクに変更」と伝えて ⏎ ✏️',\n      delete: '選択後、コマンドをそのまま送って ⏎ 🗑️'\n    };\n    return placeholders[mode] || placeholders.generate;\n  }\n\n  /**\n   * コマンド実行\n   */\n  async executeCommand() {\n    const command = this.input.value.trim();\n    if (!command) return;\n\n    // 事前バリデーション（2025年UX改善）\n    const preValidation = await this.preValidateCommand(command);\n    if (!preValidation.canExecute) {\n      // バリデーション失敗時はフィードバック表示して終了\n      return;\n    }\n\n    await this.proceedWithExecution(command, preValidation.commandType);\n  }\n\n  /**\n   * 削除確認ダイアログ\n   */\n  async showConfirmationDialog(options) {\n    const {\n      icon = '🗑️',\n      title = '確認',\n      message = 'この操作を実行しますか？',\n      confirmText = '実行',\n      cancelText = 'キャンセル',\n      confirmColor = '#ef4444'\n    } = options;\n\n    return new Promise((resolve) => {\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;\n\n      const dialog = document.createElement('div');\n      dialog.style.cssText = `\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(239, 235, 233, 0.4), rgba(215, 204, 200, 0.3))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.3)' : 'rgba(255, 255, 255, 0.5)')};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isWabiSabiMode\n          ? '0 8px 32px rgba(93, 64, 55, 0.2), 0 0 0 1px rgba(161, 136, 127, 0.2)'\n          : (this.isDarkMode\n            ? '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)'\n            : '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)')};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;\n\n      dialog.innerHTML = `\n        <div style=\"font-size: 56px; margin-bottom: 20px;\">${icon}</div>\n        <h3 style=\"margin: 0 0 16px 0; color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;\">\n          ${title}\n        </h3>\n        <p style=\"margin: 0 0 28px 0; color: ${this.isDarkMode ? '#d1d5db' : '#6b7280'}; line-height: 1.6; font-size: 16px;\">\n          ${message}\n        </p>\n        <div style=\"display: flex; gap: 8px; justify-content: center;\">\n          <button id=\"cancel-btn\" style=\"\n            padding: 14px 24px;\n            background: ${this.isDarkMode \n              ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n              : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))'};\n            border: 1px solid ${this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)'};\n            border-radius: 12px;\n            color: ${this.isDarkMode ? '#d1d5db' : '#374151'};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          \">${cancelText}</button>\n          <button id=\"confirm-btn\" style=\"\n            padding: 14px 24px;\n            background: ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')' \n              : confirmColor === '#ef4444'\n              ? 'linear-gradient(135deg, #ef4444, #dc2626)'\n              : 'linear-gradient(135deg, #ff7b47, #f97316)'};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'rgba(99, 102, 241, 0.3)' \n              : confirmColor === '#ef4444' \n              ? 'rgba(239, 68, 68, 0.3)' \n              : 'rgba(255, 123, 71, 0.3)'};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          \">${confirmText}</button>\n        </div>\n      `;\n\n      modal.appendChild(dialog);\n      document.body.appendChild(modal);\n\n      // アニメーション開始\n      requestAnimationFrame(() => {\n        modal.style.opacity = '1';\n        dialog.style.transform = 'scale(1)';\n        dialog.style.opacity = '1';\n      });\n\n      // イベントリスナー\n      dialog.querySelector('#cancel-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(false);\n      };\n\n      dialog.querySelector('#confirm-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(true);\n      };\n\n      // ESCキーでキャンセル\n      const escHandler = (e) => {\n        if (e.key === 'Escape') {\n          this.closeModalWithAnimation(modal);\n          document.removeEventListener('keydown', escHandler);\n          resolve(false);\n        }\n      };\n      document.addEventListener('keydown', escHandler);\n\n      // モーダル背景クリックでキャンセル\n      modal.onclick = (e) => {\n        if (e.target === modal) {\n          this.closeModalWithAnimation(modal);\n          resolve(false);\n        }\n      };\n    });\n  }\n\n  async showDeleteConfirmation(command) {\n    return this.showConfirmationDialog({\n      icon: '🗑️',\n      title: '削除の確認',\n      message: `「${command}」を実行しますか？<br>この操作は取り消すことができません。`,\n      confirmText: '削除実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#ff7b47'\n    });\n  }\n\n  /**\n   * 出力エリアにメッセージ追加\n   */\n  /**\n   * タスクカード追加（従来のaddOutputを置き換え）\n   */\n  addOutput(message, type = 'default', options = {}) {\n    // タスクカード形式で処理\n    if (type === 'task' || type === 'progress') {\n      return this.addTaskCard(message, options);\n    }\n\n    // エラーとシステムメッセージのみ表示\n    if (type === 'error' || type === 'system') {\n      this.addSystemMessage(message, type);\n    }\n  }\n\n  /**\n   * フローティングタスクカード追加\n   */\n  addTaskCard(taskInfo, options = {}) {\n    if (!this.taskCards) this.taskCards = new Map();\n\n    const taskId = options.taskId || `task_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`;\n    const status = options.status || 'pending';\n    const prompt = taskInfo.prompt || taskInfo.command || taskInfo;\n\n    // フローティングカード作成\n    const card = document.createElement('div');\n    card.className = 'floating-task-card';\n    card.setAttribute('data-task-id', taskId);\n\n    // 2025年トレンド: 待機中のアニメーション効果\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    // iOS 26 Liquid Glass + 2026年トレンドスタイル\n    card.style.cssText = this.getFloatingCardStyles(status);\n    // アニメーション用初期状態（非表示）- 強制設定\n    card.style.setProperty('opacity', '0', 'important');\n    card.style.setProperty('transform', 'translateY(20px) scale(0.95)', 'important');\n    card.style.setProperty('filter', 'blur(4px)', 'important');\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    const statusText = {\n      pending: '待機中',\n      processing: '生成中',\n      progress: '進行中',\n      completed: '完了',\n      error: 'エラー'\n    };\n\n    // 温かみのあるメッセージ表示\n    const friendlyMessage = this.getFriendlyMessage(status, prompt, options.errorMessage);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // フローティングコンテナに追加（最新が上に来るように）\n    this.floatingContainer.insertBefore(card, this.floatingContainer.firstChild);\n    \n    // カード表示制限を適用（最新3個まで表示）\n    this.updateCardDisplayLimit();\n\n    this.taskCards.set(taskId, {\n      element: card,\n      status: status,\n      prompt: prompt,\n      originalPrompt: prompt, // 元のプロンプト\n      startTime: Date.now(),\n      endTime: null,\n      error: null,\n      contentType: 'image', // 'image', 'video', etc.\n      model: null,\n      settings: null\n    });\n\n    // カード詳細モーダル用のイベントリスナー\n    this.addCardDetailEvents(card, taskId);\n    \n    // 入場アニメーション\n    this.animateCardEntrance(card);\n    \n    // 2025年トレンド: シマーエフェクトCSS確保\n    this.ensureShimmerStyles();\n    \n    return taskId;\n  }\n\n  /**\n   * 2025年トレンド: シマーエフェクトスタイルを確保\n   */\n  ensureShimmerStyles() {\n    if (document.querySelector('#chocodrop-shimmer-styles')) return;\n    \n    const styleSheet = document.createElement('style');\n    styleSheet.id = 'chocodrop-shimmer-styles';\n    styleSheet.textContent = `\n      /* 2025年トレンド: シマーエフェクト（強化版） */\n      .chocodrop-shimmer {\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .chocodrop-shimmer::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(255, 255, 255, 0.7)'},\n          transparent\n        );\n        animation: shimmer 1.5s infinite;\n        pointer-events: none;\n        z-index: 1;\n      }\n      \n      .chocodrop-shimmer > * {\n        position: relative;\n        z-index: 2;\n      }\n      \n      /* 2025年トレンド: 微細な浮遊感 */\n      .chocodrop-float {\n        animation: gentleFloat 4s ease-in-out infinite;\n      }\n      \n      /* 待機中の特別なパルス効果（強化版） */\n      .chocodrop-shimmer.floating-task-card {\n        animation: gentleFloat 4s ease-in-out infinite, subtlePulse 3s ease-in-out infinite;\n      }\n      \n      @keyframes subtlePulse {\n        0%, 100% { \n          box-shadow: 0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1);\n        }\n        50% { \n          box-shadow: 0 12px 40px rgba(15, 23, 42, 0.5), 0 0 0 1px rgba(99, 102, 241, 0.3);\n        }\n      }\n    `;\n    \n    document.head.appendChild(styleSheet);\n  }\n\n  /**\n   * フローティングタスクカード更新\n   */\n  updateTaskCard(taskId, status, options = {}) {\n    if (!this.taskCards || !this.taskCards.has(taskId)) return;\n\n    const taskData = this.taskCards.get(taskId);\n    const card = taskData.element;\n\n    // ステータス更新\n    taskData.status = status;\n\n    // エラー情報を保存\n    if (status === 'error' && options.errorMessage) {\n      taskData.error = options.errorMessage;\n    }\n\n    // 2025年トレンド: アニメーション状態管理\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      // 待機中・処理中: シマーエフェクト追加\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    } else {\n      // 完了・エラー: シマーエフェクト削除\n      card.classList.remove('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    // 温かみのあるメッセージ更新（エラー時は理由も含める）\n    const friendlyMessage = this.getFriendlyMessage(status, taskData.prompt, taskData.error);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // スタイル更新（完了状態に応じて）\n    card.style.cssText = this.getFloatingCardStyles(status);\n\n    // 完了時の自動消去アニメーション\n    if (status === 'completed') {\n      this.animateCardSuccess(card, taskId);\n    } else if (status === 'error') {\n      this.animateCardError(card, taskId);\n    }\n  }\n\n  /**\n   * システムメッセージ表示\n   */\n  addSystemMessage(message, type) {\n    const entry = document.createElement('div');\n    entry.className = `system-message ${type}`;\n    entry.style.cssText = `\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type === 'error' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(107, 114, 128, 0.1)'};\n      border: 1px solid ${type === 'error' ? 'rgba(239, 68, 68, 0.3)' : 'rgba(107, 114, 128, 0.3)'};\n      color: ${type === 'error' ? '#fca5a5' : (this.isDarkMode ? '#d1d5db' : '#6b7280')};\n    `;\n    entry.textContent = message;\n    this.outputDiv.appendChild(entry);\n    this.scrollToBottom();\n  }\n\n  /**\n   * 入力フィールド直下のフィードバック表示（2025年トレンド準拠）\n   */\n  showInputFeedback(message, type = 'error', options = {}) {\n    if (type === 'success') {\n      return;\n    }\n\n    if (type === 'error') {\n      this.addOutput(`⚠️ ${message}`, 'error');\n    } else {\n      this.addOutput(`💡 ${message}`, 'system');\n    }\n\n    if (!this.feedbackOverlay) {\n      const overlay = document.createElement('div');\n      overlay.className = 'input-feedback-overlay';\n      overlay.style.cssText = `\n        position: absolute;\n        left: 16px;\n        right: 16px;\n        bottom: 12px;\n        z-index: 1200;\n        pointer-events: auto;\n        display: flex;\n        gap: 8px;\n        align-items: center;\n        padding: 12px 16px;\n        border-radius: 12px;\n        backdrop-filter: blur(10px);\n        -webkit-backdrop-filter: blur(10px);\n        transition: opacity 180ms ease, transform 180ms ease;\n        opacity: 0;\n        transform: translateY(8px);\n      `;\n      this.container.appendChild(overlay);\n      this.feedbackOverlay = overlay;\n    }\n\n    const overlay = this.feedbackOverlay;\n    overlay.innerHTML = '';\n\n    const isError = type === 'error';\n    const background = isError\n      ? (this.isDarkMode ? 'rgba(239, 68, 68, 0.28)' : 'rgba(239, 68, 68, 0.18)')\n      : (this.isDarkMode ? 'rgba(59, 130, 246, 0.25)' : 'rgba(59, 130, 246, 0.18)');\n    const border = isError\n      ? '1px solid rgba(239, 68, 68, 0.45)'\n      : '1px solid rgba(59, 130, 246, 0.35)';\n    const color = isError\n      ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n      : (this.isDarkMode ? '#bfdbfe' : '#1d4ed8');\n\n    overlay.style.background = background;\n    overlay.style.border = border;\n    overlay.style.color = color;\n\n    const messageSpan = document.createElement('span');\n    messageSpan.textContent = message;\n    messageSpan.style.flex = '1';\n    overlay.appendChild(messageSpan);\n\n    if (options.actions && Array.isArray(options.actions) && options.actions.length > 0) {\n      const actionsContainer = document.createElement('div');\n      actionsContainer.style.cssText = `\n        display: flex;\n        gap: 8px;\n      `;\n\n      options.actions.forEach(action => {\n        const button = document.createElement('button');\n        button.type = 'button';\n        button.textContent = action.label;\n        button.style.cssText = `\n          padding: 6px 12px;\n          border-radius: 999px;\n          border: none;\n          cursor: pointer;\n          background: ${isError ? 'rgba(239, 68, 68, 0.28)' : 'rgba(59, 130, 246, 0.25)'};\n          color: inherit;\n          font-size: 11px;\n          transition: background 0.2s ease;\n        `;\n        button.addEventListener('mouseenter', () => {\n          button.style.background = isError ? 'rgba(239, 68, 68, 0.38)' : 'rgba(59, 130, 246, 0.35)';\n        });\n        button.addEventListener('mouseleave', () => {\n          button.style.background = isError ? 'rgba(239, 68, 68, 0.28)' : 'rgba(59, 130, 246, 0.25)';\n        });\n        button.addEventListener('click', () => {\n          if (typeof action.onClick === 'function') {\n            action.onClick();\n          }\n        });\n        actionsContainer.appendChild(button);\n      });\n\n      overlay.appendChild(actionsContainer);\n    }\n\n    if (this.feedbackAutoClearTimer) {\n      clearTimeout(this.feedbackAutoClearTimer);\n      this.feedbackAutoClearTimer = null;\n    }\n\n    overlay.style.pointerEvents = 'auto';\n    overlay.style.opacity = '1';\n    overlay.style.transform = 'translateY(0)';\n\n    this.currentFeedback = overlay;\n\n    if (type === 'info') {\n      this.feedbackAutoClearTimer = setTimeout(() => this.clearInputFeedback(), options.duration || 3000);\n    }\n  }\n\n  /**\n   * 入力フィードバックをクリア\n   */\n  clearInputFeedback() {\n    if (this.feedbackAutoClearTimer) {\n      clearTimeout(this.feedbackAutoClearTimer);\n      this.feedbackAutoClearTimer = null;\n    }\n\n    if (this.currentFeedback) {\n      const element = this.currentFeedback;\n      element.style.pointerEvents = 'none';\n      element.style.opacity = '0';\n      element.style.transform = 'translateY(8px)';\n      this.currentFeedback = null;\n      setTimeout(() => {\n        element.innerHTML = '';\n      }, 180);\n    }\n  }\n\n  /**\n   * フィードバック用CSSスタイルを確保\n   */\n  ensureFeedbackStyles() {\n    if (document.getElementById('feedback-styles')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'feedback-styles';\n    style.textContent = `\n      @keyframes feedbackSlideIn {\n        from {\n          opacity: 0;\n          transform: translateY(-10px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n      \n      @keyframes feedbackSlideOut {\n        from {\n          opacity: 1;\n          transform: translateY(0);\n        }\n        to {\n          opacity: 0;\n          transform: translateY(-10px);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コマンド事前バリデーション（送信前チェック）\n   */\n  async preValidateCommand(command) {\n    // 1. コマンドタイプ判定\n    const hasSelectedObject = this.sceneManager?.selectedObject || this.selectedFile;\n    const commandType = this.analyzeCommandType(command, hasSelectedObject);\n\n    if (this.selectedFile) {\n      commandType.type = 'import';\n      commandType.mediaType = this.selectedFile.type === 'video' ? 'video' : 'image';\n      commandType.needsTarget = false;\n      commandType.requiresConfirmation = false;\n      commandType.hasExplicitTarget = true;\n      commandType.detectedKeyword = commandType.detectedKeyword || 'import';\n    }\n\n    // 最新の解析結果をUIモードへ反映（ユーザー入力優先）\n    if (commandType.type && this.selectMode && commandType.type !== this.currentMode) {\n      this.selectMode(commandType.type, false, commandType.detectedKeyword || null);\n    }\n\n    // 2. 空コマンドの場合\n    if (commandType.type === 'empty') {\n      this.showInputFeedback('💡 何をしましょうか？コマンドを入力してください', 'info');\n      return { canExecute: false, reason: 'empty_command' };\n    }\n    \n    // 3. 対象が必要なコマンドの事前チェック\n    if (commandType.needsTarget && !hasSelectedObject) {\n      const canAttemptSearch = !!this.sceneManager && (commandType.hasExplicitTarget || commandType.type === 'modify');\n      \n      // まず自然言語で対象を探してみる\n      if (canAttemptSearch) {\n        this.logDebug('🔍 Searching for explicitly mentioned target...');\n        try {\n          const foundTarget = await this.sceneManager?.findObjectByKeyword(command);\n          if (foundTarget) {\n            // 対象を発見！選択してアニメーション表示\n            this.sceneManager.selectObject(foundTarget);\n            this.showInputFeedback(`✨ 「${foundTarget.name || foundTarget.userData?.originalPrompt || 'オブジェクト'}」を見つけました！`, 'success');\n            // 1秒待ってから実行継続\n            setTimeout(() => this.executeCommandAfterValidation(command, commandType), 1000);\n            return { canExecute: false, reason: 'target_found_waiting' };\n          } else {\n            // 対象が見つからない場合\n            this.showInputFeedback(\n              '🔍 指定されたオブジェクトが見つかりません',\n              'error',\n              {\n                actions: [\n                  {\n                    label: '選択する',\n                    onClick: () => {\n                      this.clearInputFeedback();\n                      this.showInputFeedback('👆 3Dシーン内のオブジェクトをクリックで選択してください', 'info');\n                    }\n                  },\n                  {\n                    label: '新規作成に変更',\n                    onClick: () => {\n                      // コマンドを生成モード向けに変換\n                      const newCommand = this.convertToGenerateCommand(command);\n                      this.input.value = newCommand;\n                      this.clearInputFeedback();\n                      this.showInputFeedback('✏️ コマンドを新規作成用に変更しました', 'success');\n                    }\n                  }\n                ]\n              }\n            );\n            return { canExecute: false, reason: 'target_not_found' };\n          }\n        } catch (error) {\n          this.logDebug('❌ Error searching for target:', error);\n          this.showInputFeedback('⚠️ 対象の検索中にエラーが発生しました', 'error');\n          return { canExecute: false, reason: 'search_error' };\n        }\n      } else {\n        // 一般的な「対象が必要」エラー\n        this.showInputFeedback(\n          '🎯 操作対象が選択されていません',\n          'error',\n          {\n            actions: [\n              {\n                label: '選択する',\n                onClick: () => {\n                  this.clearInputFeedback();\n                  this.showInputFeedback('👆 3Dシーン内のオブジェクトをクリックで選択してください', 'info');\n                }\n              },\n              {\n                label: 'ヒント',\n                onClick: () => {\n                  this.clearInputFeedback();\n                  this.showInputFeedback('💡 「インポートした猫を」「選択した画像を」のように対象を明示してみてください', 'info');\n                }\n              }\n            ]\n          }\n        );\n        return { canExecute: false, reason: 'no_target_selected' };\n      }\n    }\n    \n    // 4. バリデーション成功\n    return { canExecute: true, commandType };\n  }\n\n  /**\n   * バリデーション後のコマンド実行\n   */\n  async executeCommandAfterValidation(command, commandType) {\n    // 既存のexecuteCommandロジックを継続\n    // フィードバックをクリアしてから実行\n    this.clearInputFeedback();\n    \n    // 元のexecuteCommandの続きを実行\n    await this.proceedWithExecution(command, commandType);\n  }\n\n  async proceedWithExecution(command, commandType) {\n    const hasSelectedObject = this.sceneManager?.selectedObject || this.selectedFile;\n    if (!commandType) {\n      commandType = this.analyzeCommandType(command, hasSelectedObject);\n    }\n\n    if (this.selectedFile) {\n      if (this.currentMode !== 'import') {\n        this.selectMode('import', false);\n      }\n      this.currentMode = 'import';\n    } else {\n      this.currentMode = commandType.type;\n    }\n\n    if (commandType.requiresConfirmation) {\n      const confirmed = await this.showDeleteConfirmation(command);\n      if (!confirmed) {\n        this.addOutput('❌ 削除をキャンセルしました', 'system');\n        return;\n      }\n    }\n\n    this.input.value = '';\n    this.clearInputFeedback();\n    this.hideProactiveSuggestion();\n\n    const taskId = this.addTaskCard(command, { status: 'processing' });\n\n    this.saveCommandToHistory({\n      command: command,\n      mode: this.currentMode,\n      mediaType: commandType.mediaType,\n      timestamp: Date.now()\n    });\n\n    let result;\n\n    try {\n      const modePrefix = this.getModePrefix(this.currentMode);\n      const fullCommand = `${modePrefix}${command}`;\n\n      this.logDebug('🔍 Current mode check:', this.currentMode);\n      if (this.currentMode === 'import') {\n        this.logDebug('📁 Import mode detected - bypassing SceneManager');\n        if (!this.selectedFile) {\n          throw new Error('ファイルが選択されていません。まずファイルを選択してください。');\n        }\n        result = await this.handleImportCommand(command);\n      } else if (this.sceneManager) {\n        result = await this.sceneManager.executeCommand(fullCommand);\n      } else if (this.client) {\n        if (this.currentMode === 'generate') {\n          if (commandType.mediaType === 'video') {\n            result = await this.client.generateVideo(command, {\n              model: this.selectedVideoService || undefined\n            });\n          } else {\n            result = await this.client.generateImage(command, {\n              service: this.selectedImageService || undefined\n            });\n          }\n        } else if (this.currentMode === 'modify') {\n          const selectedObject = this.sceneManager?.selectedObject;\n          if (!selectedObject) {\n            throw new Error('変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。');\n          }\n          result = await this.client.modifySelectedObject(selectedObject, command);\n        } else if (this.currentMode === 'delete') {\n          const selectedObject = this.sceneManager?.selectedObject;\n          if (!selectedObject && !this.sceneManager?.getSelectedObjects()?.length) {\n            this.addOutput('⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。', 'system');\n            return;\n          }\n          const confirmMessage = `本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;\n          if (!confirm(confirmMessage)) {\n            this.addOutput('❌ 削除がキャンセルされました', 'system');\n            return;\n          }\n          result = await this.client.deleteObjects(command);\n        } else {\n          result = await this.client.executeCommand(fullCommand);\n        }\n      } else {\n        throw new Error('SceneManager または Client が設定されていません');\n      }\n\n      if (result && result.taskId) {\n        this.connectToProgress(result.taskId, taskId);\n        this.currentTaskId = result.taskId;\n      }\n\n      if (taskId) {\n        this.updateTaskCard(taskId, 'completed');\n      }\n\n      if (result.modelName) {\n        // モデル情報がある場合はモーダル表示用に保持（必要に応じて拡張）\n      }\n\n      if (result.objectId) {\n        // オブジェクト ID の提示は将来のUI更新で対応\n      }\n\n      if (result.position) {\n        // 位置情報はデバッグ表示のみ（現状は未使用）\n      }\n\n      if (commandType.mediaType) {\n        // メディアタイプ別の追加処理が必要になった場合に備えたフック\n      }\n    } catch (error) {\n      const errorMessages = {\n        generate: `❌ ${commandType.mediaType === 'video' ? '動画' : '画像'}生成エラー`,\n        modify: '❌ 変更エラー',\n        delete: '❌ 削除エラー'\n      };\n\n      if (taskId) {\n        this.updateTaskCard(taskId, 'error', { errorMessage: error.message });\n      }\n\n      this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`, 'error');\n      console.error('Command execution error:', error);\n    }\n\n    if (this.sceneManager && this.sceneManager.selectedObject) {\n      if (this.currentMode === 'modify' || this.currentMode === 'delete') {\n        setTimeout(() => {\n          this.sceneManager.deselectObject();\n        }, 500);\n      }\n    }\n\n    if (this.config.autoScroll) {\n      this.scrollToBottom();\n    }\n  }\n\n  /**\n   * コマンドを生成モード向けに変換\n   */\n  convertToGenerateCommand(command) {\n    // 「猫を大きく」→「大きな猫の画像を作って」のような変換\n    const patterns = [\n      { from: /(.+)を大きく/, to: '大きな$1の画像を作って' },\n      { from: /(.+)を小さく/, to: '小さな$1の画像を作って' },\n      { from: /(.+)を(.+)に/, to: '$2の$1の画像を作って' },\n      { from: /(.+)を(.+)く/, to: '$2い$1の画像を作って' }\n    ];\n    \n    for (const { from, to } of patterns) {\n      if (from.test(command)) {\n        return command.replace(from, to);\n      }\n    }\n    \n    // パターンマッチしない場合はデフォルト\n    return `${command}の画像を作って`;\n  }\n\n  /**\n   * タスクカードスタイル取得\n   */\n  getTaskCardStyles(status) {\n    const baseStyles = `\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(255, 255, 255, 0.15)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.25)'};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;\n\n    const statusBorders = {\n      pending: 'rgba(167, 139, 250, 0.3)',     // 薄紫\n      processing: 'rgba(192, 132, 252, 0.5)',  // 紫（強調）\n      progress: 'rgba(236, 72, 153, 0.4)',     // ピンク\n      completed: 'rgba(167, 139, 250, 0.4)',   // 紫\n      error: 'rgba(239, 68, 68, 0.4)'          // 赤\n    };\n\n    return baseStyles + `border-left: 3px solid ${statusBorders[status] || statusBorders.pending};`;\n  }\n\n  /**\n   * フローティングカードスタイル（iOS 26 Liquid Glass + 2026年トレンド）\n   */\n  getFloatingCardStyles(status) {\n    // 2025年Glassmorphism仕様：フローティングタスクカード\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)',\n      color: '#ffffff'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)',\n      color: '#1f2937'\n    };\n\n    const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n    \n    // 2025年トレンド: 待機中のシマーエフェクト\n    const shimmerEffect = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      position: relative;\n      overflow: hidden;\n      &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'},\n          transparent\n        );\n        animation: shimmer 2s infinite;\n      }\n    ` : '';\n\n    // 2025年トレンド: 微細な浮遊感\n    const floatingAnimation = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      animation: gentleFloat 4s ease-in-out infinite, shimmer 2s infinite;\n    ` : '';\n\n    return `\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      ${shimmerEffect}\n      ${floatingAnimation}\n      position: relative;\n      overflow: hidden;\n    `;\n  }\n\n  /**\n   * カード表示制限を適用（最大3個まで表示、それ以上は「+ N」で表示）\n   */\n  updateCardDisplayLimit() {\n    const maxVisibleCards = 3;\n    const allCards = Array.from(this.floatingContainer.children).filter(child => \n      !child.classList.contains('overflow-counter')\n    );\n    \n    // 既存のカウンターを削除\n    const existingCounter = this.floatingContainer.querySelector('.overflow-counter');\n    if (existingCounter) {\n      existingCounter.remove();\n    }\n    \n    if (allCards.length <= maxVisibleCards) {\n      // カードが3個以下の場合、すべて表示\n      allCards.forEach(card => {\n        card.style.display = 'flex';\n      });\n    } else {\n      // カードが4個以上の場合、最新3個のみ表示し、残りはカウンター表示\n      const visibleCards = allCards.slice(0, maxVisibleCards); // 最初の3個（最新）\n      const hiddenCount = allCards.length - maxVisibleCards;\n      \n      // 古いカードを非表示\n      allCards.forEach((card, index) => {\n        if (index < maxVisibleCards) {\n          card.style.display = 'flex';\n        } else {\n          card.style.display = 'none';\n        }\n      });\n      \n      // 「+ N」カウンターを作成\n      const counter = document.createElement('div');\n      counter.className = 'overflow-counter';\n      // テーマに応じたカウンタースタイル\n      const counterBaseColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.12)';\n      const counterBorderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.15)';\n      const counterTextColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.6)';\n      \n      counter.style.cssText = `\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;\n      counter.innerHTML = `+ ${hiddenCount}`;\n      \n      // カウンターを最後に挿入（最下部に配置）\n      this.floatingContainer.appendChild(counter);\n      \n      // カウンターのホバー効果（テーマ対応）\n      const counterHoverColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.18)';\n      \n      counter.addEventListener('mouseenter', () => {\n        counter.style.background = counterHoverColor;\n        counter.style.transform = 'scale(1.05)';\n      });\n      \n      counter.addEventListener('mouseleave', () => {\n        counter.style.background = counterBaseColor;\n        counter.style.transform = 'scale(1)';\n      });\n    }\n  }\n\n  /**\n   * カードに詳細モーダル用のイベントリスナーを追加\n   */\n  addCardDetailEvents(card, taskId) {\n    // タッチデバイス検出\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    \n    if (isTouchDevice) {\n      // モバイル/タブレット: タップで詳細表示\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    } else {\n      // デスクトップ: ホバーで詳細表示\n      let hoverTimeout;\n      \n      card.addEventListener('mouseenter', () => {\n        hoverTimeout = setTimeout(() => {\n          this.showTaskDetailModal(taskId);\n        }, 800); // 0.8秒ホバーで表示\n      });\n      \n      card.addEventListener('mouseleave', () => {\n        if (hoverTimeout) {\n          clearTimeout(hoverTimeout);\n        }\n      });\n      \n      // クリックでも表示（デスクトップでも使いやすく）\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    }\n  }\n\n  /**\n   * タスク詳細モーダルを表示\n   */\n  showTaskDetailModal(taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData) return;\n    \n    // 既存のモーダルを削除\n    const existingModal = document.querySelector('.task-detail-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n    \n    // モーダル作成\n    const modal = this.createTaskDetailModal(taskData);\n    document.body.appendChild(modal);\n    \n    // 入場アニメーション\n    requestAnimationFrame(() => {\n      modal.style.opacity = '1';\n      modal.querySelector('.modal-content').style.transform = 'translateY(0) scale(1)';\n    });\n  }\n\n  /**\n   * タスク詳細モーダルのHTML要素を作成\n   */\n  createTaskDetailModal(taskData) {\n    const modal = document.createElement('div');\n    modal.className = 'task-detail-modal';\n    \n    // テーマに応じたスタイル\n    const overlayColor = this.isDarkMode ? 'rgba(0, 0, 0, 0.6)' : 'rgba(0, 0, 0, 0.4)';\n    const modalBg = this.isDarkMode ? 'rgba(20, 20, 20, 0.95)' : 'rgba(255, 255, 255, 0.95)';\n    const modalBorder = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n    const textColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(0, 0, 0, 0.9)';\n    const labelColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)';\n    \n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;\n    \n    // 実行時間計算\n    const duration = taskData.endTime \n      ? ((taskData.endTime - taskData.startTime) / 1000).toFixed(1)\n      : ((Date.now() - taskData.startTime) / 1000).toFixed(1);\n    \n    // ステータス表示\n    const statusText = taskData.status === 'pending' ? '待機中' \n                    : taskData.status === 'in-progress' ? '実行中' \n                    : taskData.status === 'completed' ? '完了' \n                    : 'エラー';\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;\">\n        <h3 style=\"margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;\">タスク詳細</h3>\n        <button class=\"close-btn\" style=\"\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        \">×</button>\n      </div>\n      \n      <div style=\"space-y: 16px;\">\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📝 元のプロンプト</div>\n          <div style=\"color: ${textColor}; font-size: 14px; line-height: 1.4;\">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📊 ステータス</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">⏱️ 実行時間</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${duration}秒</div>\n        </div>\n        \n        ${taskData.error ? `\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">❌ エラー詳細</div>\n          <div style=\"color: #ef4444; font-size: 14px; line-height: 1.4;\">${taskData.error}</div>\n        </div>\n        ` : ''}\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">🎨 コンテンツタイプ</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${taskData.contentType || '画像'}</div>\n        </div>\n      </div>\n    `;\n    \n    // イベントリスナー\n    modalContent.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    const closeBtn = modalContent.querySelector('.close-btn');\n    closeBtn.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    closeBtn.addEventListener('mouseenter', () => {\n      closeBtn.style.color = textColor;\n    });\n    \n    closeBtn.addEventListener('mouseleave', () => {\n      closeBtn.style.color = labelColor;\n    });\n    \n    modal.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    modal.appendChild(modalContent);\n    return modal;\n  }\n\n  /**\n   * タスク詳細モーダルを閉じる\n   */\n  closeTaskDetailModal(modal) {\n    modal.style.opacity = '0';\n    modal.querySelector('.modal-content').style.transform = 'translateY(20px) scale(0.95)';\n    \n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    }, 300);\n  }\n\n  /**\n   * カード入場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardEntrance(card) {\n    // iOS 26 Liquid Glass 入場エフェクト\n    card.style.transform = 'translateY(20px) scale(0.95)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(4px)';\n\n    requestAnimationFrame(() => {\n      card.style.transition = 'all 0.6s cubic-bezier(0.16, 1, 0.3, 1)';\n      card.style.transform = 'translateY(0) scale(1)';\n      card.style.opacity = '1';\n      card.style.filter = 'blur(0px)';\n\n      // 2026年トレンド: 微細な光る効果\n      card.style.boxShadow = '0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)';\n    });\n  }\n\n  /**\n   * 成功時アニメーション + 自動消去（iOS 26 Liquid Glass）\n   */\n  animateCardSuccess(card, taskId) {\n    // iOS 26 Liquid Glass 成功エフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(76, 175, 80, 0.6)';\n    card.style.transform = 'scale(1.08)';\n    card.style.boxShadow = '0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)';\n    card.style.filter = 'brightness(1.1) saturate(1.2)';\n\n    // 2026年トレンド: 流体的な戻りアニメーション\n    setTimeout(() => {\n      card.style.transform = 'scale(1.02)';\n      card.style.filter = 'brightness(1.05) saturate(1.1)';\n    }, 150);\n\n    // Liquid Glass風のスムーズなフェードアウト（2秒後に自動削除）\n    setTimeout(() => {\n      this.animateCardExit(card, taskId);\n    }, 2000);\n  }\n\n  /**\n   * エラー時アニメーション（2026年トレンド UX）\n   */\n  animateCardError(card, taskId) {\n    // iOS 26 Liquid Glass エラーエフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(244, 67, 54, 0.7)';\n    card.style.boxShadow = '0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)';\n    card.style.filter = 'saturate(1.3) brightness(1.1)';\n\n    // 2026年トレンド: より自然なpulseアニメーション（shakeより洗練）\n    card.style.animation = 'errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2';\n\n    // UX改善: エラー内容を表示するツールチップ風UI\n    this.addErrorTooltip(card, taskId);\n\n    // エラーは手動で消すまで表示継続（クリックで消去）\n    card.style.cursor = 'pointer';\n    card.onclick = () => this.animateCardExit(card, taskId);\n\n    // 5秒後に自動フェードアウト（UX改善）\n    setTimeout(() => {\n      if (this.taskCards.has(taskId)) {\n        this.animateCardExit(card, taskId);\n      }\n    }, 5000);\n  }\n\n  /**\n   * エラー時のツールチップ表示（UX改善）\n   */\n  addErrorTooltip(card, taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData || !taskData.error) return;\n\n    // ツールチップ要素作成\n    const tooltip = document.createElement('div');\n    tooltip.style.cssText = `\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;\n    tooltip.textContent = taskData.error;\n\n    card.style.position = 'relative';\n    card.appendChild(tooltip);\n\n    // フェードイン\n    requestAnimationFrame(() => {\n      tooltip.style.opacity = '1';\n    });\n\n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      if (tooltip.parentNode) {\n        tooltip.style.opacity = '0';\n        setTimeout(() => {\n          if (tooltip.parentNode) {\n            tooltip.parentNode.removeChild(tooltip);\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * カード退場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardExit(card, taskId) {\n    // iOS 26 Liquid Glass 退場エフェクト - 2026年トレンドの「スッと消える」\n    card.style.transition = 'all 0.28s cubic-bezier(0.4, 0, 0.2, 1)';\n    card.style.transform = 'translateY(-12px) scale(0.92)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(6px) brightness(1.2)';\n\n    // 2026年トレンド: 消去時の微細な光の拡散効果\n    card.style.boxShadow = '0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)';\n\n    setTimeout(() => {\n      if (card.parentNode) {\n        card.parentNode.removeChild(card);\n      }\n      this.taskCards.delete(taskId);\n      // カード削除後に表示制限を再適用\n      this.updateCardDisplayLimit();\n    }, 280);\n  }\n\n  /**\n   * ユーザーの表現スタイルを自然に感知\n   */\n  getResponseType(prompt) {\n    // ユーザーの表現スタイルを自然に感知\n    if (/ちょこっと|ちょこん|少し|軽く/.test(prompt) || prompt.length < 15) {\n      return 'casual';\n    }\n    if (/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)) {\n      return 'magical';\n    }\n    return 'balanced'; // 80%がここに該当\n  }\n\n  /**\n   * 温かみのあるメッセージを生成（マーケ提案ベース）\n   */\n  getFriendlyMessage(status, prompt, errorMessage = null) {\n    const shortPrompt = prompt.length > 15 ? prompt.substring(0, 15) + '...' : prompt;\n\n    // 自然な応答システム適用\n    const responseType = this.getResponseType(prompt);\n\n    switch (status) {\n      case 'pending':\n        return responseType === 'casual' ? 'ちょこっと準備中です...' :\n               responseType === 'magical' ? '魔法をかけようとしています...' :\n               'ちょこっと魔法の準備中...';\n      case 'processing':\n      case 'in-progress':\n      case 'progress':\n        // Modify mode specific messages for processing\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整中です...' :\n                 responseType === 'magical' ? 'イメージを変化させています...' :\n                 'ちょこんと編集中です...';\n        }\n        return responseType === 'casual' ? 'ちょこんと配置中です...' :\n               responseType === 'magical' ? 'あなたの想いを形にしています...' :\n               'ちょこっと魔法をかけています...';\n      case 'completed':\n        // Delete mode specific messages\n        if (this.currentMode === 'delete') {\n          return responseType === 'casual' ? 'ちょこっと削除しました！' :\n                 responseType === 'magical' ? 'すっきりと片付きました！' :\n                 'ちょこんと削除完了！すっきりですね！';\n        }\n        // Modify mode specific messages\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整しました！' :\n                 responseType === 'magical' ? '素敵に変身しました！' :\n                 'ちょこんと編集完了！いい感じですね！';\n        }\n        // Default completion messages for other modes\n        return responseType === 'casual' ? 'ちょこっとドロップしました！' :\n               responseType === 'magical' ? '素敵な世界が完成しました！' :\n               'ちょこんと配置完了！素敵ですね！';\n      case 'error':\n        // エラー理由があれば含める\n        if (errorMessage) {\n          const shortError = errorMessage.length > 30 ? errorMessage.substring(0, 30) + '...' : errorMessage;\n          return `❌ ${shortError}`;\n        }\n        return responseType === 'casual' ? 'おっと、エラーが発生しました' :\n               responseType === 'magical' ? '申し訳ございません、処理に失敗しました' :\n               'エラーが発生しました。もう一度お試しください';\n      default:\n        return shortPrompt;\n    }\n  }\n\n  /**\n   * ステータス色取得\n   */\n  getStatusColor(status) {\n    // ネオンパープル/ピンク系で統一（2025トレンド）\n    const colors = {\n      pending: this.isDarkMode ? '#a78bfa' : '#7c3aed',        // 薄紫\n      processing: this.isDarkMode ? '#c084fc' : '#9333ea',     // 紫（生成中）\n      progress: this.isDarkMode ? '#ec4899' : '#be185d',       // ピンク\n      completed: this.isDarkMode ? '#a78bfa' : '#7c3aed',      // 紫（完了も統一）\n      error: this.isDarkMode ? '#f87171' : '#dc2626'           // 赤（エラーのみ）\n    };\n    return colors[status] || colors.pending;\n  }\n\n  /**\n   * ステータスインジケーター作成（パーセント表示なし）\n   */\n  createStatusIndicator(status) {\n    if (status === 'processing' || status === 'progress') {\n      return `\n        <div class=\"status-indicator\" style=\"\n          background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        \">\n          <div class=\"status-pulse\" style=\"\n            background: linear-gradient(90deg, transparent, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'}, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          \"></div>\n        </div>\n        <div style=\"display: flex; align-items: center; gap: 4px; margin-top: 8px;\">\n          <div class=\"status-dots\" style=\"font-size: 10px; color: ${this.isDarkMode ? '#c084fc' : '#9333ea'};\">\n            処理中<span style=\"animation: dots 1.5s infinite;\">...</span>\n          </div>\n        </div>\n      `;\n    }\n    return '';\n  }\n\n  /**\n   * タスク完了アニメーション\n   */\n  animateTaskCompletion(card) {\n    // 控えめなサクセスアニメーション\n    card.style.animation = 'taskComplete 0.8s ease-out';\n\n    // 微妙なパーティクル効果を追加（控えめ）\n    this.addSubtleParticleEffect(card);\n\n    setTimeout(() => {\n      card.style.animation = '';\n    }, 800);\n\n    this.ensureTaskAnimations();\n  }\n\n  /**\n   * 控えめなパーティクル効果\n   */\n  addSubtleParticleEffect(card) {\n    const particles = 3; // 少ない数のパーティクル\n    const rect = card.getBoundingClientRect();\n\n    for (let i = 0; i < particles; i++) {\n      const particle = document.createElement('div');\n      particle.style.cssText = `\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right - 20}px;\n        top: ${rect.top + 10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;\n\n      // ランダムな方向に少し移動\n      const angle = (i / particles) * Math.PI * 2;\n      const distance = 15; // 控えめな距離\n      particle.style.setProperty('--move-x', `${Math.cos(angle) * distance}px`);\n      particle.style.setProperty('--move-y', `${Math.sin(angle) * distance}px`);\n\n      document.body.appendChild(particle);\n\n      // 自動削除\n      setTimeout(() => particle.remove(), 1200);\n    }\n  }\n\n  /**\n   * タスクアニメーション用CSS確保\n   */\n  ensureTaskAnimations() {\n    if (document.getElementById('task-animations')) return;\n\n    const style = document.createElement('style');\n    style.id = 'task-animations';\n    style.textContent = `\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * プログレス付きタスクステータス表示（互換性のため）\n   */\n  addTaskStatus(message, percent = 0, taskId = null) {\n    const id = taskId || `task_${Date.now()}`;\n    return this.addTaskCard(message, {\n      percent: Math.min(Math.max(percent, 0), 100),\n      taskId: id,\n      status: percent > 0 ? 'progress' : 'pending'\n    });\n  }\n\n  /**\n   * プログレス更新\n   */\n  updateTaskProgress(taskId, percent, newMessage = null) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask && newMessage) {\n      // 既存タスクを更新\n      this.addOutput(newMessage, 'progress', { \n        percent: Math.min(Math.max(percent, 0), 100),\n        taskId\n      });\n    }\n  }\n\n  /**\n   * タスク完了（プログレスバー削除）\n   */\n  completeTask(taskId) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask) {\n      // 完了アニメーション\n      existingTask.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n      existingTask.style.opacity = '0';\n      existingTask.style.transform = 'translateX(20px)';\n      \n      setTimeout(() => {\n        if (existingTask.parentNode) {\n          existingTask.remove();\n        }\n      }, 500);\n    }\n  }\n\n  /**\n   * SSE接続開始（リアルタイム進捗受信）\n   */\n  connectToProgress(serverTaskId, uiTaskId = null) {\n    if (this.activeConnections.has(serverTaskId)) {\n      return;\n    }\n\n    const eventSource = new EventSource(`/api/progress/${serverTaskId}`);\n    this.activeConnections.set(serverTaskId, eventSource);\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        data.uiTaskId = uiTaskId; // UI用タスクIDを追加\n        this.handleProgressUpdate(data);\n      } catch (error) {\n        console.error('SSE data parse error:', error);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error);\n      this.disconnectProgress(serverTaskId);\n    };\n  }\n\n  /**\n   * 進捗更新処理\n   */\n  handleProgressUpdate(data) {\n    switch (data.type) {\n      case 'connected':\n        this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);\n        break;\n\n      case 'progress':\n        if (data.percent !== undefined && data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'progress', { percent: data.percent });\n        }\n        break;\n\n      case 'completed':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'completed');\n        }\n        this.disconnectProgress(data.taskId);\n        break;\n\n      case 'error':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'error', { errorMessage: data.message });\n        }\n        this.addOutput(`❌ ${data.message}`, 'error');\n        this.disconnectProgress(data.taskId);\n        break;\n    }\n  }\n\n  /**\n   * SSE接続終了\n   */\n  disconnectProgress(taskId) {\n    const connection = this.activeConnections.get(taskId);\n    if (connection) {\n      connection.close();\n      this.activeConnections.delete(taskId);\n    }\n  }\n\n  /**\n   * 出力エリアを最下部にスクロール\n   */\n  scrollToBottom() {\n    if (this.outputDiv) {\n      this.outputDiv.scrollTop = this.outputDiv.scrollHeight;\n    }\n  }\n\n  /**\n   * モード別コマンドプレフィックス\n   */\n  getModePrefix(mode) {\n    // サーバー側でモードを区別するためのプレフィックス\n    const prefixes = {\n      generate: '', // デフォルトは生成モード\n      modify: '[変更] ',\n      delete: '[削除] '\n    };\n    return prefixes[mode] || '';\n  }\n\n  /**\n   * コマンド保存 (Undo/Redoシステム)\n   */\n  saveCommandToHistory(commandData) {\n    // 現在のインデックス以降の履歴を削除（新しいコマンドが実行されたため）\n    this.commandHistory = this.commandHistory.slice(0, this.currentHistoryIndex + 1);\n    \n    // 新しいコマンドを履歴に追加\n    this.commandHistory.push(commandData);\n    this.currentHistoryIndex = this.commandHistory.length - 1;\n    \n    // 最大コマンド保存数を超えた場合、古いコマンドを削除\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentHistoryIndex--;\n    }\n    \n    // ボタン状態を更新\n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undo実行\n   */\n  undo() {\n    if (!this.canUndo()) {\n      this.addOutput('↶ Undoできる操作がありません', 'hint');\n      return;\n    }\n    \n    const command = this.commandHistory[this.currentHistoryIndex];\n    this.currentHistoryIndex--;\n    \n    // Undoの逆操作を実行（簡易実装）\n    if (command.mode === 'generate') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の生成を取り消しました`, 'system');\n      // 実際のシーン管理では最後に作成されたオブジェクトを削除\n      if (this.sceneManager && this.sceneManager.undoLastGenerate) {\n        this.sceneManager.undoLastGenerate();\n      }\n    } else if (command.mode === 'modify') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の変更を取り消しました`, 'system');\n      // 実際のシーン管理では前の状態に戻す\n      if (this.sceneManager && this.sceneManager.undoLastModify) {\n        this.sceneManager.undoLastModify();\n      }\n    } else if (command.mode === 'delete') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の削除を取り消しました`, 'system');\n      // 実際のシーン管理では削除されたオブジェクトを復元\n      if (this.sceneManager && this.sceneManager.undoLastDelete) {\n        this.sceneManager.undoLastDelete();\n      }\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Redo実行\n   */\n  redo() {\n    if (!this.canRedo()) {\n      this.addOutput('↷ Redoできる操作がありません', 'hint');\n      return;\n    }\n    \n    this.currentHistoryIndex++;\n    const command = this.commandHistory[this.currentHistoryIndex];\n    \n    // Redoでコマンドを再実行\n    this.addOutput(`↷ Redo: \"${command.command}\" を再実行しました`, 'system');\n    \n    // 実際のシーン管理でのRedo処理\n    if (this.sceneManager && this.sceneManager.redoCommand) {\n      this.sceneManager.redoCommand(command);\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undoが可能かチェック\n   */\n  canUndo() {\n    return this.currentHistoryIndex >= 0;\n  }\n\n  /**\n   * Redoが可能かチェック\n   */\n  canRedo() {\n    return this.currentHistoryIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Undo/Redoボタンの状態更新\n   */\n  updateUndoRedoButtons() {\n    if (this.undoBtn) {\n      this.undoBtn.disabled = !this.canUndo();\n      this.undoBtn.style.opacity = this.canUndo() ? '1' : '0.4';\n      this.undoBtn.style.cursor = this.canUndo() ? 'pointer' : 'not-allowed';\n    }\n    \n    if (this.redoBtn) {\n      this.redoBtn.disabled = !this.canRedo();\n      this.redoBtn.style.opacity = this.canRedo() ? '1' : '0.4';\n      this.redoBtn.style.cursor = this.canRedo() ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  /**\n   * 確認付き全オブジェクト削除\n   */\n  async clearAllWithConfirmation() {\n    const confirmed = await this.showClearAllConfirmation();\n    if (confirmed) {\n      this.clearAll();\n    }\n  }\n\n  /**\n   * Clear All確認ダイアログ\n   */\n  async showClearAllConfirmation() {\n    return this.showConfirmationDialog({\n      icon: '🧹',\n      title: 'Clear All の確認',\n      message: 'すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。',\n      confirmText: 'Clear All 実行',\n      cancelText: 'キャンセル',\n      confirmColor: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n    });\n  }\n\n  /**\n   * モーダルクローズアニメーション\n   */\n  closeModalWithAnimation(modal) {\n    const dialog = modal.querySelector('div:last-child');\n    dialog.style.transform = 'scale(0.9)';\n    dialog.style.opacity = '0';\n    modal.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (modal.parentElement) {\n        document.body.removeChild(modal);\n      }\n    }, 200);\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    if (this.sceneManager) {\n      this.sceneManager.clearAll();\n      this.addOutput('🧹 全ての実験オブジェクトを削除しました', 'system');\n    } else if (this.client) {\n      // サーバー側での削除は未実装\n      this.addOutput('⚠️ サーバー側削除は未実装', 'error');\n    }\n  }\n\n  // showHistory() メソッド完全削除済み\n\n  /**\n   * 利用可能なコマンド例を表示\n   */\n  showExamples() {\n    const examples = [\n      '右上にドラゴンを作って',\n      '中央に大きなユニコーンを生成',\n      '左下に小さな桜を作って',\n      '空に鳳凰を作って',\n      '地面に神社を作って'\n    ];\n\n    this.addOutput('💡 コマンド例:', 'system');\n    examples.forEach(example => {\n      this.addOutput(`   \"${example}\"`, 'hint');\n    });\n  }\n\n  /**\n   * SceneManager設定\n   */\n  setSceneManager(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.applyServiceSelectionToSceneManager();\n  }\n\n  /**\n   * Client設定\n   */\n  setClient(client) {\n    this.client = client;\n  }\n\n  /**\n   * 設定更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n    // 必要に応じてUIを更新\n    if (newConfig.activationKey) {\n      // 新しいキーバインドを反映するため、イベントリスナーを再設定\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  /**\n   * スタイル再適用\n   */\n  refreshStyles() {\n    // Generateモードボタンのスタイルを再適用\n    const generateBtn = this.container?.querySelector('[data-mode=\"generate\"]');\n    if (generateBtn) {\n      generateBtn.style.cssText = this.getModeButtonStyles(true, 'generate');\n    }\n\n    // Executeボタンのスタイルを再適用\n    const executeBtn = this.container?.querySelector('#execute-btn');\n    if (executeBtn) {\n      executeBtn.style.cssText = this.getModernButtonStyles('primary');\n    }\n\n    // サービスモーダルの背景とスタイルを更新\n    if (this.serviceModal) {\n      this.updateServiceModalStyles();\n    }\n\n    // サービスセレクターテーマ更新\n    this.updateServiceSelectorTheme();\n  }\n\n  updateServiceModalStyles() {\n    if (!this.serviceModal) return;\n\n    // モーダルの背景とボーダーを更新（枯山水の静寂）\n    this.serviceModal.style.background = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.4), rgba(189, 189, 189, 0.35))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))');\n\n    this.serviceModal.style.border = this.isWabiSabiMode\n      ? '1px solid rgba(141, 110, 99, 0.4)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.3)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    this.serviceModal.style.color = this.isWabiSabiMode\n      ? '#424242'\n      : (this.isDarkMode ? '#ffffff' : '#1f2937');\n\n    this.serviceModal.style.boxShadow = this.isWabiSabiMode\n      ? '0 20px 40px rgba(93, 64, 55, 0.35)'\n      : '0 20px 40px rgba(15, 23, 42, 0.35)';\n  }\n\n  /**\n   * テーマ切り替え\n   */\n  toggleTheme() {\n    // 3段階サイクル: light → dark → wabisabi → light\n    switch (this.currentTheme) {\n      case 'light':\n        this.currentTheme = 'dark';\n        break;\n      case 'dark':\n        this.currentTheme = 'wabisabi';\n        break;\n      case 'wabisabi':\n        this.currentTheme = 'light';\n        break;\n      default:\n        this.currentTheme = 'light';\n    }\n\n    // 状態更新\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    localStorage.setItem('live-command-theme', this.currentTheme);\n\n    // アイコンボタン更新\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n\n      const config = themeConfig[this.currentTheme];\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n    }\n\n    // 全スタイル再適用\n    this.applyTheme();\n\n    // テーマ切り替え完了（履歴には出力しない）\n  }\n\n  /**\n   * テーマ適用\n   */\n  applyTheme() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isWabiSabiMode ? 'wabisabi-mode' : (this.isDarkMode ? 'dark-mode' : 'light-mode');\n\n    // メインコンテナ（display状態を保持）\n    const currentDisplay = this.container.style.display;\n    const currentFlexDirection = this.container.style.flexDirection;\n    this.container.style.cssText = this.getContainerStyles();\n    this.container.style.display = currentDisplay || 'flex';\n    this.container.style.flexDirection = currentFlexDirection || 'column';\n\n    // フローティングブランドバッジのテーマ再適用\n    const brandBadge = this.container.querySelector('.floating-brand-badge');\n    if (brandBadge) {\n      brandBadge.style.background = this.isDarkMode \n        ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))'\n        : 'linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))';\n      brandBadge.style.border = `1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'}`;\n    }\n\n    // 入力フィールド\n    const hadHighlight = !!this.highlightOverlay;\n    this.inputDefaultStyles = null;\n    this.clearKeywordHighlighting();\n    this.input.style.cssText = this.getInputStyles();\n    this.captureInputDefaultStyles();\n    if (hadHighlight || (this.input && this.input.value.trim())) {\n      this.applyKeywordHighlighting();\n    }\n\n    // スタイル適用\n    this.output.style.cssText = this.getOutputStyles();\n\n    // ラジオボタンモードセレクターの2025年仕様テーマ再適用\n    if (this.radioModeContainer) {\n      this.radioModeContainer.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))');\n      this.radioModeContainer.style.borderColor = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.4)'\n        : (this.isDarkMode\n          ? 'rgba(99, 102, 241, 0.15)'\n          : 'rgba(255, 255, 255, 0.25)');\n\n      // 各ラジオボタンのスタイル更新\n      Object.keys(this.radioModeButtons).forEach(key => {\n        const { button } = this.radioModeButtons[key];\n        if (this.currentMode !== key) {\n          button.style.color = this.isWabiSabiMode\n            ? 'rgba(245, 245, 245, 0.8)'\n            : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n          button.style.background = 'transparent';\n          button.style.border = '1px solid transparent';\n          button.style.boxShadow = 'none';\n        }\n      });\n\n      // 現在選択されているモードのスタイルも更新\n      this.selectMode(this.currentMode, false);\n    }\n\n    // アクションボタンのテーマ再適用\n    if (this.clearBtn) {\n      this.clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    }\n    if (this.historyBtn) {\n      this.historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n      this.historyBtn.style.opacity = '0.5';\n    }\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n      const config = themeConfig[this.currentTheme] || themeConfig.light;\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n      this.themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    }\n    if (this.settingsButton) {\n      this.settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    }\n\n    this.updateServiceSelectorTheme();\n\n    // 閉じるボタンのテーマ更新\n    const closeButton = this.container.querySelector('.close-button');\n    if (closeButton) {\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.background = this.isDarkMode \n        ? 'rgba(255, 255, 255, 0.1)' \n        : 'rgba(0, 0, 0, 0.1)';\n    }\n\n    // フローティングコンテナとタスクカードのテーマ更新\n    this.updateFloatingContainerTheme();\n\n    // 既存の出力テキストの色を更新\n    this.updateExistingTextColors();\n  }\n\n  /**\n   * フローティングコンテナとタスクカードのテーマ更新\n   */\n  updateFloatingContainerTheme() {\n    if (!this.floatingContainer) return;\n\n    // フローティングコンテナの表示状態を保持\n    const currentDisplay = this.floatingContainer.style.display;\n\n    // 既存のタスクカードの色だけをテーマに合わせて更新（レイアウトは保持）\n    if (this.taskCards && this.taskCards.size > 0) {\n      this.taskCards.forEach((taskData, taskId) => {\n        const card = taskData.element;\n        if (card) {\n          // テーマ関連の色のみ更新（位置やアニメーション状態は保持）\n          // 2025年Glassmorphism仕様適用\n          const glassmorphismDark = {\n            background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n            border: '1px solid rgba(99, 102, 241, 0.25)',\n            color: '#ffffff'\n          };\n\n          const glassmorphismLight = {\n            background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n            border: '1px solid rgba(255, 255, 255, 0.4)',\n            color: '#1f2937'\n          };\n\n          const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n\n          card.style.setProperty('background', theme.background, 'important');\n          card.style.setProperty('border', theme.border, 'important');\n          card.style.setProperty('color', theme.color, 'important');\n        }\n      });\n    }\n\n    // テーマ切り替え時は位置は変更せず、表示状態のみ復元\n    this.floatingContainer.style.display = currentDisplay;\n  }\n\n  /**\n   * 既存のテキスト色を現在のテーマに合わせて更新\n   */\n  updateExistingTextColors() {\n    const colors = this.isDarkMode ? {\n      system: '#60a5fa',\n      command: '#93c5fd',\n      success: '#f472b6',\n      error: '#f87171',\n      processing: '#fbbf24',\n      info: '#d1d5db',\n      hint: '#d1d5db'\n    } : {\n      system: '#1e40af',\n      command: '#1d4ed8',\n      success: '#be185d',\n      error: '#dc2626',\n      processing: '#d97706',\n      info: '#7c3aed',\n      hint: '#374151'\n    };\n\n    const defaultTextColor = this.isDarkMode ? '#d1d5db' : '#374151';\n\n    // output内の全てのdivの色を更新\n    this.output.querySelectorAll('div').forEach(line => {\n      const text = line.textContent;\n      let type = 'default';\n      \n      // テキストの内容からタイプを判定\n      if (text.includes('📋') || text.includes('🎨') || text.includes('🎮') || text.includes('UI起動')) {\n        type = 'system';\n      } else if (text.startsWith('> ')) {\n        type = 'command';\n      } else if (text.includes('✅') || text.includes('⭐') || text.includes('生成しました')) {\n        type = 'success';\n      } else if (text.includes('❌') || text.includes('エラー')) {\n        type = 'error';\n      } else if (text.includes('中...')) {\n        type = 'processing';\n      } else if (text.includes('📍') || text.includes('使用モデル:') || text.includes('位置:')) {\n        type = 'info';\n      } else if (text.includes('   ')) {\n        type = 'hint';\n      }\n\n      line.style.color = colors[type] || defaultTextColor;\n    });\n  }\n\n  /**\n   * Importインターフェース表示\n   */\n  showImportInterface() {\n    // 隠しファイル入力を作成（Importボタンから直接選択できるので、ボタンは不要）\n    if (!this.fileInput) {\n      this.fileInput = document.createElement('input');\n      this.fileInput.type = 'file';\n      this.fileInput.accept = '.glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov';\n      this.fileInput.style.display = 'none';\n      this.fileInput.onchange = (e) => this.handleFileSelection(e);\n      document.body.appendChild(this.fileInput);\n    }\n\n    // ドラッグ&ドロップ機能を有効化\n    this.enableDragAndDrop();\n  }\n\n  /**\n   * Importインターフェース非表示\n   */\n  hideImportInterface() {\n    if (this.fileSelectButton && this.fileSelectButton.parentNode) {\n      this.fileSelectButton.parentNode.removeChild(this.fileSelectButton);\n    }\n    this.disableDragAndDrop();\n  }\n\n  /**\n   * ファイル選択ダイアログを開く\n   */\n  openFileSelector() {\n    if (this.fileInput) {\n      this.fileInput.click();\n    }\n  }\n\n  /**\n   * Importボタンから直接ファイル選択を実行\n   */\n  triggerFileSelection() {\n    // ファイル入力要素が存在しない場合は作成\n    if (!this.fileInput) {\n      this.showImportInterface(); // 既存のファイル入力作成処理を呼び出し\n    }\n\n    // 直接ファイル選択ダイアログを開く\n    this.openFileSelector();\n\n    // Import モードに切り替え（UI反映）\n    this.selectMode('import', true);\n  }\n\n  /**\n   * ファイル選択処理\n   */\n  async handleFileSelection(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      // 前回のObjectURLをクリーンアップ（メモリリーク防止）\n      if (this.selectedFile && this.selectedFile.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n\n      // ファイルタイプを判定\n      const fileType = this.detectFileType(file.name);\n\n      // ファイルをローカルURLとして処理\n      const fileUrl = URL.createObjectURL(file);\n\n      // ファイル情報を保存\n      this.selectedFile = {\n        file: file,\n        url: fileUrl,\n        type: fileType,\n        name: file.name\n      };\n\n      this.selectMode('import', true);\n\n      // 自動的にデフォルトプロンプトで実行\n      const defaultPrompt = `中央に設置 (${file.name})`;\n      this.input.value = defaultPrompt;\n\n      this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`, 'system');\n      this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`, 'system');\n\n      // 自動実行（少し遅延を入れてUX向上）\n      setTimeout(() => {\n        this.executeCommand();\n      }, 500);\n\n    } catch (error) {\n      console.error('File selection error:', error);\n      this.addOutput(`❌ ファイル選択エラー: ${error.message}`, 'error');\n    } finally {\n      // IMPORTANT: ファイル入力をリセットして同じファイルの再選択を可能にする\n      if (event.target) {\n        event.target.value = '';\n      }\n    }\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を有効化\n   */\n  enableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.addEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.addEventListener('drop', this.handleDrop.bind(this));\n    this.input.addEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.addEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を無効化\n   */\n  disableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.removeEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.removeEventListener('drop', this.handleDrop.bind(this));\n    this.input.removeEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.removeEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグオーバー処理\n   */\n  handleDragOver(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグエンター処理\n   */\n  handleDragEnter(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグリーブ処理\n   */\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n  }\n\n  /**\n   * ドロップ処理\n   */\n  async handleDrop(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length === 0) return;\n\n    const file = files[0]; // 最初のファイルのみ処理\n\n    // ファイルタイプをチェック\n    const fileType = this.detectFileType(file.name);\n    if (!fileType) {\n      this.addOutput('❌ サポートされていないファイル形式です', 'error');\n      return;\n    }\n\n    // ファイル選択処理と同じ流れ\n    this.handleFileSelection({ target: { files: [file] } });\n  }\n\n  /**\n   * ファイルタイプ判定\n   */\n  detectFileType(fileName) {\n    const ext = fileName.toLowerCase().split('.').pop();\n\n    if (['glb', 'gltf'].includes(ext)) return '3d';\n    if (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) return 'image';\n    if (['mp4', 'mov', 'webm'].includes(ext)) return 'video';\n\n    return null;\n  }\n\n  /**\n   * Importコマンド処理\n   */\n  async handleImportCommand(command) {\n    if (!this.selectedFile) {\n      throw new Error('ファイルが選択されていません');\n    }\n\n    try {\n      // プロンプトから位置情報を解析\n      const position = this.sceneManager ? this.sceneManager.parsePosition(command) : { x: 0, y: 5, z: -10 };\n\n      let result;\n\n      switch (this.selectedFile.type) {\n        case '3d':\n          // 3Dモデルを読み込み\n          if (this.sceneManager) {\n            result = await this.sceneManager.load3DModel(this.selectedFile.url, {\n              position: position,\n              // scale: 自動調整に任せる\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'image':\n          // 画像をテクスチャプレーンとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadImageFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'video':\n          // 動画をビデオテクスチャとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadVideoFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        default:\n          throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`);\n      }\n\n      // ファイル情報をクリーンアップ\n      const processedFileName = this.selectedFile?.name;\n      const importedType = this.selectedFile?.type;\n      const importedUrl = this.selectedFile?.url;\n\n      if (importedType !== 'video' && importedUrl) {\n        URL.revokeObjectURL(importedUrl);\n      }\n\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n\n      return {\n        success: true,\n        message: `${processedFileName || 'ファイル'} を ${position.x}, ${position.y}, ${position.z} に配置しました`,\n        objectId: result.objectId\n      };\n\n    } catch (error) {\n      // エラー時もファイル情報をクリーンアップ\n      if (this.selectedFile?.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n      throw error;\n    }\n  }\n\n  /**\n   * 削除モードが選択された時の処理\n   */\n  handleDeleteModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：削除コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を削除 ⏎`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 削除対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 削除するオブジェクトを選択後、削除ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('delete');\n      \n      // DELETEモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 修正モードが選択された時の処理\n   */\n  handleModifyModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：修正コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 修正対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 修正するオブジェクトを選択後、修正ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('modify');\n      \n      // Modifyモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Attention Animation\n   * オブジェクト未選択時の注意喚起アニメーション\n   */\n  triggerAttentionAnimation(mode) {\n    const chatOutput = this.chatOutput;\n    const inputField = this.input;\n    \n    // 2025年トレンド1: Micro-Shake Effect（微細な震え）\n    this.addMicroShakeEffect(chatOutput);\n    \n    // 2025年トレンド2: Context-Aware Glow（状況認識グロー）\n    this.addContextGlow(inputField, mode);\n    \n    // 2025年トレンド3: Emotional Pulse（感情的パルス）\n    this.addEmotionalPulse(chatOutput, mode);\n    \n    // 2025年トレンド4: 3D Depth Shadow（立体的影効果）\n    this.add3DDepthEffect(chatOutput);\n  }\n\n  /**\n   * 2025年トレンド：Micro-Shake Effect\n   */\n  addMicroShakeEffect(element) {\n    element.style.animation = 'microShake2025 0.5s ease-in-out';\n    \n    // CSSアニメーションを動的追加\n    this.ensureMicroShakeAnimation();\n    \n    // アニメーション後クリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 500);\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Glow\n   */\n  addContextGlow(element, mode) {\n    const glowColor = mode === 'delete' ? 'rgba(239, 68, 68, 0.4)' : 'rgba(99, 102, 241, 0.4)';\n    \n    element.style.transition = 'all 0.3s ease';\n    element.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n    \n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      element.style.boxShadow = '';\n    }, 3000);\n  }\n\n  /**\n   * 2025年トレンド：Emotional Pulse\n   */\n  addEmotionalPulse(element, mode) {\n    const pulseColor = mode === 'delete' ? '#ef4444' : (this.isWabiSabiMode ? '#8BC34A' : '#6366f1');\n    \n    element.style.borderLeft = `4px solid ${pulseColor}`;\n    element.style.animation = 'emotionalPulse2025 2s ease-in-out infinite';\n    \n    // CSSアニメーションを動的追加\n    this.ensureEmotionalPulseAnimation();\n    \n    // 6秒後にアニメーション停止\n    setTimeout(() => {\n      element.style.animation = '';\n      element.style.borderLeft = '';\n    }, 6000);\n  }\n\n  /**\n   * 2025年トレンド：3D Depth Effect\n   */\n  add3DDepthEffect(element) {\n    element.style.transform = 'translateZ(8px) rotateX(1deg)';\n    element.style.transition = 'transform 0.3s ease';\n    \n    // 2秒後に元に戻す\n    setTimeout(() => {\n      element.style.transform = '';\n    }, 2000);\n  }\n\n  /**\n   * Micro-Shake CSSアニメーション確保\n   */\n  ensureMicroShakeAnimation() {\n    if (document.getElementById('micro-shake-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'micro-shake-2025';\n    style.textContent = `\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Emotional Pulse CSSアニメーション確保\n   */\n  ensureEmotionalPulseAnimation() {\n    if (document.getElementById('emotional-pulse-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'emotional-pulse-2025';\n    style.textContent = `\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * モード切り替え時の入力欄メッセージ上書き機能\n   * ユーザビリティ向上：他モードのメッセージを新モードの初期状態にクリア\n   */\n  clearInputOnModeSwitch(newMode) {\n    // 現在の入力欄に内容がある場合のみ処理\n    if (this.input.value.trim()) {\n      // 以前のモードのメッセージかどうかを判定\n      const isPreviousModeMessage = this.isPreviousModeMessage(this.input.value, newMode);\n      \n      if (isPreviousModeMessage) {\n        // 以前のモードのメッセージの場合、新モードの初期メッセージに置き換え\n        this.input.value = '';\n        this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`, 'system');\n      }\n    }\n  }\n\n  /**\n   * 入力内容が以前のモードのメッセージかどうかを判定\n   */\n  isPreviousModeMessage(inputValue, currentMode) {\n    // Delete/Modifyモードの特徴的なメッセージパターンを検出\n    const deletePatterns = [\n      /.*を削除$/,\n      /削除$/\n    ];\n    \n    const modifyPatterns = [\n      /.*を$/,\n      /.*を変更/,\n      /.*をピンク/,\n      /.*を大きく/,\n      /.*を小さく/,\n      /.*を移動/,\n      /回転/,\n      /反転/,\n      /ミラー/,\n      /傾け/,\n      /向きを変え/,\n      /.*を.*色/,\n      /.*を.*サイズ/\n    ];\n    \n    const importPatterns = [\n      /ファイル/,\n      /画像/,\n      /インポート/\n    ];\n\n    // 現在のモードと異なるパターンにマッチする場合は上書き対象\n    switch (currentMode) {\n      case 'delete':\n        return modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'modify':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'import':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'generate':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      default:\n        return false;\n    }\n  }\n\n  /**\n   * モード表示名を取得\n   */\n  getModeDisplayName(mode) {\n    const modeNames = {\n      'generate': '生成',\n      'import': 'インポート',\n      'modify': '修正',\n      'delete': '削除'\n    };\n    return modeNames[mode] || mode;\n  }\n\n  /**\n   * 常時表示フローティングチョコアイコンを作成\n   */\n  createFloatingChocolateIcon() {\n    // 既存のアイコンがあれば削除\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.remove();\n    }\n\n    this.floatingChocolateIcon = document.createElement('div');\n    this.floatingChocolateIcon.innerHTML = '🍫';\n    this.floatingChocolateIcon.title = 'ChocoDrop を開く (@キーでも開けます)';\n    this.floatingChocolateIcon.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;\n\n    // ホバー効果\n    this.floatingChocolateIcon.addEventListener('mouseover', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1.1) translateY(-2px)';\n      this.floatingChocolateIcon.style.boxShadow = '0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)';\n      this.floatingChocolateIcon.style.opacity = '1';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    this.floatingChocolateIcon.addEventListener('mouseout', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1) translateY(0)';\n      this.floatingChocolateIcon.style.boxShadow = '0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)';\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    // クリックで ChocoDrop を開く\n    this.floatingChocolateIcon.addEventListener('click', () => {\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // 右クリックメニュー\n    this.floatingChocolateIcon.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.showFloatingIconContextMenu(e);\n    });\n\n    // DOM に追加\n    document.body.appendChild(this.floatingChocolateIcon);\n  }\n\n  /**\n   * フローティングアイコンの右クリックメニューを表示\n   */\n  showFloatingIconContextMenu(event) {\n    // 既存のメニューがあれば削除\n    const existingMenu = document.querySelector('.floating-icon-context-menu');\n    if (existingMenu) {\n      existingMenu.remove();\n    }\n\n    // コンテキストメニュー作成\n    const menu = document.createElement('div');\n    menu.className = 'floating-icon-context-menu';\n    menu.style.cssText = `\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isWabiSabiMode\n        ? 'rgba(239, 235, 233, 0.9)'\n        : (this.isDarkMode ? 'rgba(17, 24, 39, 0.85)' : 'rgba(255, 255, 255, 0.85)')};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.2)')};\n      border-radius: 12px;\n      box-shadow: ${this.isWabiSabiMode\n        ? '0 8px 24px rgba(93, 64, 55, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'\n        : '0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'};\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n    `;\n\n    // メニューアイテム1: フォームを開く\n    const openFormItem = document.createElement('div');\n    openFormItem.innerHTML = '📄 フォームを開く';\n    openFormItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    openFormItem.addEventListener('mouseover', () => {\n      openFormItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    openFormItem.addEventListener('mouseout', () => {\n      openFormItem.style.background = 'transparent';\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    openFormItem.addEventListener('click', () => {\n      menu.remove();\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // メニューアイテム2: アイコンを非表示\n    const hideIconItem = document.createElement('div');\n    hideIconItem.innerHTML = '✕ アイコンを非表示';\n    hideIconItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    hideIconItem.addEventListener('mouseover', () => {\n      hideIconItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    hideIconItem.addEventListener('mouseout', () => {\n      hideIconItem.style.background = 'transparent';\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    hideIconItem.addEventListener('click', () => {\n      menu.remove();\n      this.hideFloatingIcon();\n    });\n\n    // メニューに追加\n    menu.appendChild(openFormItem);\n    menu.appendChild(hideIconItem);\n\n    // DOM に追加\n    document.body.appendChild(menu);\n\n    // 画面外に出ないように調整\n    const rect = menu.getBoundingClientRect();\n    if (rect.right > window.innerWidth) {\n      menu.style.left = `${event.clientX - rect.width}px`;\n    }\n    if (rect.bottom > window.innerHeight) {\n      menu.style.top = `${event.clientY - rect.height}px`;\n    }\n\n    // 外部クリックで閉じる\n    const closeMenu = (e) => {\n      if (!menu.contains(e.target)) {\n        menu.remove();\n        document.removeEventListener('click', closeMenu);\n      }\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', closeMenu);\n    }, 10);\n  }\n\n  /**\n   * フローティングアイコンを非表示にする\n   */\n  hideFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * フローティングアイコンを表示する\n   */\n  showFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'flex';\n    }\n  }\n\n  dispose() {\n    // キーワードハイライトのクリーンアップ\n    this.clearKeywordHighlighting();\n\n    // ファイル選択関連のクリーンアップ\n    if (this.fileInput && this.fileInput.parentNode) {\n      this.fileInput.parentNode.removeChild(this.fileInput);\n    }\n    if (this.selectedFile && this.selectedFile.url) {\n      URL.revokeObjectURL(this.selectedFile.url);\n    }\n\n    // フローティングチョコアイコンのクリーンアップ\n    if (this.floatingChocolateIcon && this.floatingChocolateIcon.parentNode) {\n      this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon);\n    }\n\n    if (this.container && this.container.parentElement) {\n      this.container.parentElement.removeChild(this.container);\n    }\n  }\n\n  showOverlayTextarea() {\n    if (this.overlayTextarea) return;\n\n    this.isExpanded = true;\n    \n    // オーバーレイテキストエリアを作成\n    this.overlayTextarea = document.createElement('textarea');\n    this.overlayTextarea.value = this.input.value;\n    this.overlayTextarea.placeholder = this.input.placeholder;\n    \n    // フォームの位置とサイズを取得\n    const containerRect = this.container.getBoundingClientRect();\n    \n    // 画面境界を考慮した位置調整\n    const overlayHeight = 300;\n    const padding = 20;\n    \n    let top = containerRect.top + 60;\n    let left = containerRect.left;\n    let width = containerRect.width;\n    \n    // 右端がはみ出る場合\n    if (left + width > window.innerWidth - padding) {\n      left = window.innerWidth - width - padding;\n    }\n    \n    // 左端がはみ出る場合\n    if (left < padding) {\n      left = padding;\n      width = Math.min(width, window.innerWidth - 2 * padding);\n    }\n    \n    // 下端がはみ出る場合\n    if (top + overlayHeight > window.innerHeight - padding) {\n      top = Math.max(padding, window.innerHeight - overlayHeight - padding);\n    }\n\n    const overlayBackground = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))');\n\n    const overlayBorder = this.isWabiSabiMode\n      ? '1px solid rgba(93, 64, 55, 0.5)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.25)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    const overlayInnerShadow = this.isWabiSabiMode\n      ? '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n      : (this.isDarkMode\n        ? '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n        : '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)');\n\n    const overlayTextColor = this.getInputTextColor();\n\n    // オーバーレイのスタイル設定\n    this.overlayTextarea.style.cssText = `\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${overlayBackground};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${overlayBorder};\n      box-shadow: ${overlayInnerShadow};\n      border-radius: 16px;\n      color: ${overlayTextColor};\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;\n    \n    // ドキュメントに追加\n    document.body.appendChild(this.overlayTextarea);\n    \n    // アニメーション開始\n    requestAnimationFrame(() => {\n      this.overlayTextarea.style.opacity = '1';\n    });\n    \n    // フォーカス設定\n    this.overlayTextarea.focus();\n    \n    // 入力同期\n    this.overlayTextarea.addEventListener('input', (e) => {\n      this.input.value = e.target.value;\n    });\n    \n    // Escapeキーで閉じる\n    this.overlayTextarea.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.hideOverlayTextarea();\n      }\n    });\n    \n    // 外側クリックで閉じる\n    this.overlayTextarea.addEventListener('blur', () => {\n      setTimeout(() => this.hideOverlayTextarea(), 100);\n    });\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n}\n","import { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\nimport { SceneManager } from './SceneManager.js';\nimport { CommandUI } from './CommandUI.js';\n\n/**\n * ChocoDrop ワンステップ初期化ヘルパー\n * 共有フォルダから複数の Three.js プロジェクトへ使い回すことを想定\n *\n * @param {THREE.Scene} scene - 既存 Three.js シーン\n * @param {Object} options - 初期化オプション\n * @param {THREE.Camera} [options.camera] - 相対配置計算に使用するカメラ\n * @param {THREE.WebGLRenderer} [options.renderer] - マウス操作を有効化する場合に使用\n * @param {string} [options.serverUrl] - ChocoDrop サーバーの明示的 URL\n * @param {ChocoDropClient} [options.client] - 既存のクライアントを注入する場合（旧 LiveCommandClient）\n * @param {Function} [options.onControlsToggle] - UI 開閉時に呼ばれるコールバック\n * @param {Object} [options.sceneOptions] - SceneManager へ渡す追加オプション\n * @param {Object} [options.uiOptions] - CommandUI へ渡す追加オプション\n * @returns {Object} - 初期化済みのコンポーネント群と dispose ヘルパー\n */\nexport function createChocoDrop(scene, options = {}) {\n  if (!scene) {\n    throw new Error('THREE.Scene インスタンスが必要です');\n  }\n\n  const {\n    camera = null,\n    renderer = null,\n    serverUrl = null,\n    client = null,\n    onControlsToggle = () => {},\n    sceneOptions = {},\n    uiOptions = {}\n  } = options;\n\n  const resolvedServerUrl = serverUrl || sceneOptions.serverUrl || null;\n  const chocoDropClient = client || new ChocoDropClient(resolvedServerUrl);\n\n  const sceneManager = new SceneManager(scene, {\n    camera,\n    renderer,\n    serverUrl: resolvedServerUrl,\n    client: chocoDropClient,\n    ...sceneOptions\n  });\n\n  const commandUI = new CommandUI({\n    sceneManager,\n    client: chocoDropClient,\n    onControlsToggle,\n    ...uiOptions\n  });\n\n  return {\n    client: chocoDropClient,\n    sceneManager,\n    ui: commandUI,\n    dispose() {\n      commandUI.dispose?.();\n      sceneManager.dispose?.();\n    }\n  };\n}\n\n// 旧API名の互換エクスポート\nexport const createChocoDro = createChocoDrop;\nexport const createLiveCommand = createChocoDrop;\n","import { ChocoDropClient, ChocoDroClient, LiveCommandClient } from '../LiveCommandClient.js';\nimport { SceneManager } from '../SceneManager.js';\nimport { CommandUIDemo } from './CommandUIDemo.js';\nimport { createChocoDrop, createChocoDro, createLiveCommand } from '../bootstrap.js';\n\n/**\n * Demo version bootstrap function\n * Creates ChocoDrop instance with CommandUIDemo (restricted functionality)\n */\nfunction createChocoDropDemo(scene, options = {}) {\n  if (!scene) {\n    throw new Error('THREE.Scene インスタンスが必要です');\n  }\n\n  const {\n    camera = null,\n    renderer = null,\n    serverUrl = null,\n    client = null,\n    onControlsToggle = () => {},\n    sceneOptions = {},\n    uiOptions = {},\n    ...otherSceneOptions\n  } = options;\n\n  const resolvedServerUrl = serverUrl || sceneOptions.serverUrl || null;\n  const chocoDropClient = client || new ChocoDropClient(resolvedServerUrl);\n\n  // 旧APIとの互換のため、トップレベルに渡された追加オプションもSceneManagerへ伝搬させる\n  const mergedSceneOptions = {\n    ...sceneOptions,\n    ...otherSceneOptions\n  };\n\n  const sceneManager = new SceneManager(scene, {\n    camera,\n    renderer,\n    serverUrl: resolvedServerUrl,\n    client: chocoDropClient,\n    ...mergedSceneOptions\n  });\n\n  // Use CommandUIDemo instead of CommandUI\n  const commandUI = new CommandUIDemo({\n    sceneManager,\n    client: chocoDropClient,\n    onControlsToggle,\n    ...uiOptions\n  });\n\n  sceneManager.ui = commandUI;\n  commandUI.setSceneManager(sceneManager);\n\n  return {\n    sceneManager,\n    ui: commandUI,\n    client: chocoDropClient,\n    dispose: () => {\n      if (commandUI) commandUI.dispose();\n      if (sceneManager) sceneManager.dispose();\n    }\n  };\n}\n\n// Export everything for demo UMD\nexport {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUIDemo,\n  createChocoDropDemo,\n  createChocoDropDemo as createChocoDrop,  // Alias for compatibility\n  createChocoDro,\n  createLiveCommand\n};\n\n// Default export for convenience\nexport default {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUI: CommandUIDemo, // Alias for demo\n  CommandUIDemo,\n  createChocoDrop: createChocoDropDemo, // Use demo version\n  createChocoDro,\n  createLiveCommand\n};\n"],"names":["ChocoDropClient","constructor","serverUrl","this","initialized","initPromise","console","log","initializeWithConfig","baseUrl","window","location","protocol","hostname","port","response","fetch","ok","config","json","detectServerUrl","error","warn","currentPort","ensureInitialized","Error","generateImage","prompt","options","payload","width","height","service","method","headers","body","JSON","stringify","status","result","generateVideo","safeDefaults","resolution","enable_safety_checker","enable_prompt_expansion","duration","aspect_ratio","model","seed","negative_prompt","frames_per_second","guidance_scale","executeCommand","command","getAvailableServices","LiveCommandClient","ChocoDroClient","TRANSLATION_DICTIONARY","createObjectKeywords","keywords","japanese","english","Object","entries","includes","push","translateKeyword","matchKeywordWithFilename","keyword","filename","lowerFilename","toLowerCase","jp","aliases","alias","englishKeyword","module","exports","SceneManager","scene","camera","renderer","labelRenderer","client","experimentGroup","THREE","Group","name","add","commandHistory","spawnedObjects","Map","objectCounter","selectedObject","selectedImageService","selectedVideoService","audioControls","audioControlUpdateInterval","audioControlUpdateListener","clock","Clock","raycaster","Raycaster","mouse","Vector2","lastHoveredObject","showLocationIndicator","indicatorDuration","defaultObjectScale","enableObjectSelection","enableMouseInteraction","enableDebugLogging","setupClickEvents","globalThis","sceneManager","setupObjectDragging","debugSceneInfo","position","x","toFixed","y","z","rotation","Math","PI","fov","near","far","children","length","getObjectByName","size","forEach","obj","id","worldPos","Vector3","getWorldPosition","userData","type","visible","scale","box","Box3","setFromObject","getSize","center","getCenter","meshCount","traverse","child","isMesh","distance","distanceTo","selectObject","object","deselectObject","createModernSelectionIndicator","commandUI","objectInfo","addOutput","modelName","currentMode","objectName","originalPrompt","input","value","focus","setSelectionRange","existingIndicator","remove","indicatorGroup","adjustedSize","geometry","parameters","shape","Shape","moveTo","lineTo","points","getPoints","geometryLine","BufferGeometry","setFromPoints","adaptiveColor","getAdaptiveSelectionColor","materialLine","LineBasicMaterial","color","linewidth","transparent","opacity","line","Line","set","edgesGeometry","EdgesGeometry","BoxGeometry","edgesMaterial","edges","LineSegments","copy","addResizeHandles","parentObject","handleSize","handleGeometry","handleMaterial","MeshBasicMaterial","depthTest","depthWrite","handleHoverMaterial","getAdaptiveHoverColor","corner","pos","index","handle","Mesh","clone","isResizeHandle","handleIndex","defaultMaterial","material","hoverMaterial","renderOrder","onHover","setScalar","document","style","cursor","onHoverExit","updateSelectionIndicatorScale","indicator","dispose","Array","isArray","canvas","domElement","isDragging","dragObject","dragOffset","mouseStart","dragMode","originalScale","addEventListener","event","button","rect","getBoundingClientRect","clientX","left","clientY","top","setFromCamera","intersects","intersectObjects","resizeHandleInfo","isRotateHandle","source","showDeleteConfirmation","then","confirmed","removeObject","catch","point","sub","handleHoverEffects","deltaX","deltaY","scaleMultiplier","abs","newScale","max","min","cameraRight","cameraUp","getWorldDirection","setFromMatrixColumn","matrixWorld","normalize","moveScale","worldMove","multiplyScalar","preventDefault","scaleFactor","emissive","setHex","setTimeout","activeEl","activeElement","tagName","isContentEditable","rotationStep","rotated","key","newRotationX","newRotationXDown","cameraDirection","targetPoint","lookAt","angles","timestamp","Date","now","parsed","parseCommand","dispatchCommand","message","startsWith","actualCommand","replace","parseObjectModificationCommand","trim","parseDeleteCommand","cmd","naturalLanguagePattern","parseNaturalLanguageCommand","isAnimationForVideo","some","parsePosition","parseSize","fileType","getObjectKeywords","normalizeTargetPhrase","phrase","referentialPattern","test","trailingPatterns","pattern","englishLeadingPattern","isReferentialCommand","getObjectSourceType","getRecentObjects","objects","from","values","importContext","generatedContext","candidates","filter","sort","a","b","aTime","lastModified","createdAt","findRecentObjectByContext","normalizedTarget","objectKeywords","candidate","matchesObjectName","extractTextTokens","text","split","map","token","buildObjectKeywordHints","fileName","baseType","Set","baseName","Boolean","findObjectByKeyword","normalizedCommand","importOrderMatch","match","orderNumber","parseInt","findImportedObjectByOrder","sourceMatch","sourceType","isImported","findObjectBySourceAndName","recentObject","findObjectByName","importedObjects","importOrder","matchingObjects","foundObject","childSource","sourceLabel","target","targetLower","keywordLower","aliasLower","promptLower","parseImageGenerationCommand","particles","particle","parts","colorMap","colorName","colorValue","effects","parseEffects","parseFloat","movement","parsePositionFromPrompt","degreeMatch","flip","requiresSelection","effectKeywords","intensity","metalness","roughness","animation","speed","amplitude","axis","colors","presetEffects","presetName","presetEffectList","chromaRequested","requiresChromaKey","chromaConfig","detectChromaKeyConfig","canApplyChroma","effect","threshold","smoothing","toString","showInputFeedback","term","detectChromaKeyColor","hexMatch","colorKeywords","tokens","entry","applyEffects","targetObject","applied","applyOpacityEffect","applyGlowEffect","applyMaterialEffect","applyAnimationEffect","applyCosmicEffect","applyWatercolorEffect","applyChromaKeyEffect","needsUpdate","ensureEmissiveSupport","Color","emissiveIntensity","fallbackColor","originalColor","lerp","undefined","animations","startAnimationLoop","animationId","uuid","has","delete","animationData","startTime","originalPosition","originalRotation","useColorFallback","cosmicAnimationId","cosmicData","cosmicType","getCosmicSpeed","colorIndex","originalEmissive","originalEmissiveIntensity","texture","isChromaKeyMaterial","uniforms","keyColor","shaderMaterial","ShaderMaterial","vertexShader","fragmentShader","side","DoubleSide","toneMapped","watercolorAnimationId","watercolorData","artType","getWatercolorSpeed","originalOpacity","animationLoopRunning","animate","updateAnimations","requestAnimationFrame","currentTime","elapsed","updateFloatAnimation","updatePulseAnimation","updateSpinAnimation","updateSparkleAnimation","updateRainbowAnimation","updateGlitchAnimation","updateCosmicAnimation","updateWatercolorAnimation","yOffset","sin","rotationAmount","hue","setHSL","random","offset","colorCycleSpeed","numColors","colorProgress","currentColorIndex","floor","nextColorIndex","lerpFactor","currentColor","nextColor","blendedColor","intensityMultiplier","cos","opacityMultiplier","getAutoEffectsFromPrompt","lowerPrompt","applyRecognitionFeedback","stopRecognitionFeedback","feedbackAnimationId","movePatterns","regex","RegExp","direction","targetObjectName","requiresObjectSearch","colorPatterns","colorKey","rotationPatterns","flipPatterns","effectPatterns","effectName","distanceMatch","executeImageGeneration","executeVideoGeneration","executeObjectModification","executeNaturalObjectModification","executeDelete","executeFileImport","executeObjectSelection","fallbackSizes","imageResult","lastError","i","dimensions","success","loader","TextureLoader","imageUrl","localPath","pop","loadAsync","colorSpace","SRGBColorSpace","createFallbackTexture","baseSize","imageWidth","image","naturalWidth","data","aspectRatio","naturalHeight","planeWidth","planeHeight","PlaneGeometry","plane","alphaTest","finalPosition","calculateCameraRelativePosition","alignPlaneToCamera","objectId","createLocationIndicator","videoResult","videoTexture","video","videoUrl","createElement","src","crossOrigin","loop","muted","playsInline","VideoTexture","play","createFallbackVideoTexture","requestedWidth","metadata","requestedHeight","planeAspect","videoElement","createAudioControl","fallbackVideoTexture","loadImageFile","fileUrl","loadVideoFile","autoplay","preload","Promise","resolve","reject","videoWidth","videoHeight","once","load","playError","objectUrl","targetObjects","findObjectsByName","selectObjectFromMultiple","modified","currentPos","newPos","modifications","searchName","results","searchLower","originalCommand","ordinalPatterns","matchedText","currentScale","newRotation","degrees","currentOpacity","currentScaleX","updateAllAudioControlPositions","clearAll","targetByKeyword","deleteReason","deletedObjectId","display","accept","appendChild","onchange","async","file","files","URL","createObjectURL","removeChild","oncancel","click","getSpawnedObjects","modal","cssText","container","title","textContent","objectList","item","time","toLocaleTimeString","innerHTML","round","onmouseover","borderColor","background","onmouseout","onclick","selectedObjectId","cancelBtn","ctx","getContext","hashString","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","font","textAlign","fillText","slice","CanvasTexture","animationFrame","icons","iconIndex","str","hash","charCodeAt","get","pause","removeAttribute","revokeObjectURL","cleanupCallbacks","cb","mat","keys","getCommandHistory","relativePosition","SphereGeometry","indicatorPos","parent","cameraPos","crossVectors","cameraUpActual","logDebug","forward","negate","up","applyQuaternion","quaternion","dot","right","orientation","Matrix4","makeBasis","setFromRotationMatrix","setCamera","updateConfig","newConfig","setImageService","serviceId","getImageService","setVideoService","getVideoService","videoObject","audioButton","className","tooltip","createTooltip","volumeSlider","sliderContainer","slider","head","e","volume","createVolumeSlider","isSliderVisible","transform","buttonRect","stopPropagation","pointerEvents","querySelector","contains","audioControlElement","updateAudioControlPosition","hideSlider","passive","setInterval","onDocumentClick","removeEventListener","parentNode","clearInterval","vector","project","offsetX","offsetY","toggleVideoAudio","initializeLabelRenderer","loadAndInitializeCSS2DRenderer","ensureCSS2DRenderer","css2dInitPromise","CSS2DRenderer","setupCSS2DRenderer","import","CSS2DObject","setSize","innerWidth","innerHeight","addLabelRendererResizeHandler","labelRendererResizeHandler","updateRenderer","render","args","backgroundColor","bgColor","r","g","isColor","pow","getLuminance","IMAGE_SERVICE_STORAGE_KEY","VIDEO_SERVICE_STORAGE_KEY","CommandUIDemo","onControlsToggle","isVisible","output","activeConnections","currentTaskId","activationKey","maxHeight","theme","showExamples","autoScroll","availableImageServices","availableVideoServices","imageServiceSelect","videoServiceSelect","serviceSelectorContainer","serviceSelectorStatus","serviceSelectorContent","serviceSelectorRetryButton","serviceSelectorSaveButton","serviceSelectorCancelButton","serviceModalOverlay","serviceModal","servicesLoading","isExpanded","overlayTextarea","pendingImageService","pendingVideoService","storedImage","localStorage","getItem","storedVideo","applyServiceSelectionToSceneManager","currentTheme","isDarkMode","isWabiSabiMode","currentHistoryIndex","maxHistorySize","initUI","bindEvents","createServiceModal","createFloatingChocolateIcon","refreshStyles","openServiceModal","showDemoMessage","showCompactToast","existingToast","getElementById","buttonContainer","radioModeContainer","toast","getContainerStyles","brandIndicator","brandText","outputDiv","getOutputStyles","floatingContainer","taskCards","inputWrapper","rows","placeholder","getInputStyles","expandButton","hideOverlayTextarea","showOverlayTextarea","modeSelector","createRadioModeSelector","actionContainer","createMinimalActions","closeButton","hide","applyTheme","isComposing","hasCompositionJustEnded","autoResizeTextarea","detectCommandType","navigator","userAgent","isSafari","leftSection","clearBtn","getActionButtonStyles","clearAllWithConfirmation","historyBtn","disabled","rightSection","themeToggle","getThemeIcon","light","dark","wabisabi","icon","getThemeIconWithFilter","getThemeTitle","toggleTheme","settingsButton","createServiceSelectorSection","fontSize","marginBottom","updateServiceSelectorTheme","closeServiceModal","subtitle","selector","actionRow","initializeServiceSelector","actionButtons","handleServiceSave","toggleServiceRetryButton","forceFetch","resetPendingSelections","force","setServiceSelectorStatus","setServiceButtonsEnabled","resolveServiceSelection","default","populateServiceSelector","dataset","statusType","classList","toggle","services","defaultId","storageKey","storedId","resolvedId","setItem","removeItem","hasImage","hasVideo","imageRow","buildServiceRow","videoRow","labelText","selectedId","row","label","fontWeight","select","serviceType","fontFamily","option","description","onServiceSelectionChange","findServiceInfo","lineHeight","minHeight","info","parentElement","newImageId","newVideoId","imageInfo","videoInfo","enabled","childElementCount","find","border","statusColor","querySelectorAll","padding","borderRadius","outline","boxShadow","desc","radioModeButtons","mode","autoBadge","triggerFileSelection","selectMode","isManual","detectedKeyword","selectedGlass","addPulseEffect","addContainerGlow","getPlaceholderForMode","clearInputOnModeSwitch","selectedFile","showImportInterface","hideImportInterface","handleDeleteModeSelection","handleModifyModeSelection","element","ensurePulseAnimation","glowColor","generate","modify","variant","baseStyles","getDestructiveButtonStyles","getCommandTypeIndicatorStyles","newHeight","scrollHeight","overflowY","commandType","analyzeCommandType","mediaInfo","detectMediaType","deletePatterns","modifyPatterns","generatePatterns","confidence","reason","mediaType","requiresConfirmation","showCommandTypeIndicator","commandInfo","showProactiveSuggestion","hideProactiveSuggestion","enableGestureControl","detectedType","proactiveSuggestion","insertBefore","suggestion","t","updateIndicatorForMode","gestureEnabled","createActionButtons","getModernButtonStyles","positions","backdropFilter","getHeaderStyles","addScrollbarStyles","primary","secondary","danger","getModeButtonStyles","isActive","ctrlKey","shiftKey","redo","undo","show","flexDirection","containerRect","floatingChocolateIcon","switchMode","btn","executeBtn","placeholders","handleDemoOrientationCommand","normalized","wantsVerticalFlip","wantsHorizontalFlip","wantsRotateRight","wantsRotateLeft","wantsRotateBack","handled","operations","currentX","currentY","join","taskId","addTaskCard","saveCommandToHistory","fullCommand","getModePrefix","handleImportCommand","orientationResult","modifySelectedObject","getSelectedObjects","confirmMessage","confirm","deleteObjects","connectToProgress","updateTaskCard","errorMessages","scrollToBottom","showConfirmationDialog","confirmText","cancelText","confirmColor","dialog","closeModalWithAnimation","escHandler","addSystemMessage","taskInfo","substr","card","setAttribute","getFloatingCardStyles","setProperty","friendlyMessage","getFriendlyMessage","pending","processing","progress","completed","updateCardDisplayLimit","endTime","contentType","settings","addCardDetailEvents","animateCardEntrance","taskData","animateCardSuccess","animateCardError","getTaskCardStyles","statusBorders","allCards","existingCounter","hiddenCount","counter","counterBaseColor","counterBorderColor","counterTextColor","firstChild","counterHoverColor","maxTouchPoints","showTaskDetailModal","hoverTimeout","clearTimeout","existingModal","createTaskDetailModal","overlayColor","modalBg","modalBorder","textColor","labelColor","statusText","modalContent","closeBtn","closeTaskDetailModal","transition","animateCardExit","addErrorTooltip","getResponseType","errorMessage","shortPrompt","substring","responseType","getStatusColor","createStatusIndicator","animateTaskCompletion","addSubtleParticleEffect","ensureTaskAnimations","angle","addTaskStatus","percent","updateTaskProgress","newMessage","completeTask","existingTask","serverTaskId","uiTaskId","eventSource","EventSource","onmessage","parse","handleProgressUpdate","onerror","disconnectProgress","connection","close","scrollTop","commandData","shift","updateUndoRedoButtons","canUndo","undoLastGenerate","undoLastModify","undoLastDelete","canRedo","redoCommand","undoBtn","redoBtn","showClearAllConfirmation","example","setSceneManager","setClient","generateBtn","themeOrder","nextIndex","indexOf","currentDisplay","currentFlexDirection","brandBadge","updateFloatingContainerTheme","updateExistingTextColors","glassmorphismDark","glassmorphismLight","system","hint","defaultTextColor","fileInput","handleFileSelection","enableDragAndDrop","fileSelectButton","disableDragAndDrop","openFileSelector","detectFileType","url","defaultPrompt","handleDragOver","bind","handleDrop","handleDragEnter","handleDragLeave","dataTransfer","ext","load3DModel","processedFileName","importedType","importedUrl","triggerAttentionAnimation","chatOutput","inputField","addMicroShakeEffect","addContextGlow","addEmotionalPulse","add3DDepthEffect","ensureMicroShakeAnimation","pulseColor","borderLeft","ensureEmotionalPulseAnimation","newMode","isPreviousModeMessage","getModeDisplayName","inputValue","importPatterns","showFloatingIconContextMenu","existingMenu","menu","openFormItem","textShadow","hideIconItem","hideFloatingIcon","bottom","closeMenu","showFloatingIcon","overlayBackground","overlayBorder","overlayInnerShadow","overlayTextColor","CommandUI","highlightOverlay","inputDefaultStyles","feedbackAutoClearTimer","currentFeedback","clearInputFeedback","applyKeywordHighlighting","glowColors","intensified","hasSelectedObject","trimmedText","needsTarget","explicitTargetMatched","hasExplicitTarget","mediaReferenceIndicators","getAllCommandKeywords","createHighlightOverlay","matches","clearKeywordHighlighting","computedStyle","getComputedStyle","captureInputDefaultStyles","letterSpacing","borderWidth","highlightedHTML","lastIndex","escapeHtml","start","getKeywordColor","end","backgroundImage","getInputTextColor","div","preValidation","preValidateCommand","canExecute","proceedWithExecution","ensureShimmerStyles","styleSheet","feedbackOverlay","overlay","isError","messageSpan","flex","actions","actionsContainer","action","onClick","ensureFeedbackStyles","foundTarget","executeCommandAfterValidation","newCommand","convertToGenerateCommand","patterns","to","shimmerEffect","updateServiceModalStyles","hadHighlight","themeConfig","createChocoDrop","sceneOptions","uiOptions","resolvedServerUrl","chocoDropClient","ui","createChocoDro","createLiveCommand","createChocoDropDemo","otherSceneOptions","mergedSceneOptions"],"mappings":"+hBAGO,MAAMA,EACX,WAAAC,CAAYC,EAAY,MACtBC,KAAKD,UAAY,KACjBC,KAAKC,aAAc,EACnBD,KAAKE,YAAc,KAEfH,GACFC,KAAKD,UAAYA,EACjBC,KAAKC,aAAc,EACnBE,QAAQC,IAAI,kCAAmCL,IAG/CC,KAAKE,YAAcF,KAAKK,sBAE5B,CAKA,0BAAMA,GACJ,IAEE,MAAMC,EAAU,GAAGC,OAAOC,SAASC,aAAaF,OAAOC,SAASE,YAAYH,OAAOC,SAASG,OAEtFC,QAAiBC,MAAM,GAAGP,gBAChC,GAAIM,EAASE,GAAI,CACf,MAAMC,QAAeH,EAASI,OAC9BhB,KAAKD,UAAYgB,EAAOhB,UACxBI,QAAQC,IAAI,8CAA+CJ,KAAKD,UAClE,MAEEC,KAAKD,UAAYC,KAAKiB,kBACtBd,QAAQC,IAAI,+CAAgDJ,KAAKD,UAErE,CAAE,MAAOmB,GACPf,QAAQgB,KAAK,oDAAqDD,GAClElB,KAAKD,UAAYC,KAAKiB,iBACxB,CAEAjB,KAAKC,aAAc,CACrB,CAKA,eAAAgB,GACE,MAAMG,EAAcb,OAAOC,SAASG,KAC9BF,EAAWF,OAAOC,SAASC,SAC3BC,EAAWH,OAAOC,SAASE,SAGjC,OAAKU,EAIE,GAAGX,MAAaC,KAAYU,IAH1B,GAAGX,MAAaC,QAI3B,CAKA,uBAAMW,GACJ,IAAIrB,KAAKC,YAAT,CAGA,IAAID,KAAKE,YAMT,MAAM,IAAIoB,MAAM,yCALRtB,KAAKE,WAJS,CAUxB,CAKA,mBAAMqB,CAAcC,EAAQC,EAAU,UAC9BzB,KAAKqB,oBACXlB,QAAQC,IAAI,oCAAoCoB,MAEhD,IACE,MAAME,EAAU,CACdF,SACAG,MAAOF,EAAQE,OAAS,IACxBC,OAAQH,EAAQG,QAAU,KAGxBH,EAAQI,UACVH,EAAQG,QAAUJ,EAAQI,SAG5B,MAAMjB,QAAiBC,MAAM,GAAGb,KAAKD,yBAA0B,CAC7D+B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,KAGvB,IAAKd,EAASE,GACZ,MAAM,IAAIQ,MAAM,iBAAiBV,EAASuB,UAG5C,MAAMC,QAAexB,EAASI,OAG9B,OAFAb,QAAQC,IAAI,6BAA8BgC,GAEnCA,CAET,CAAE,MAAOlB,GAEP,MADAf,QAAQe,MAAM,qCAAsCA,GAC9CA,CACR,CACF,CAKA,mBAAMmB,CAAcb,EAAQC,EAAU,UAC9BzB,KAAKqB,oBACXlB,QAAQC,IAAI,oCAAoCoB,MAEhD,IACE,MAAMc,EAAe,CAEnBC,WAAY,OACZC,uBAAuB,EACvBC,yBAAyB,GAGrBf,EAAU,CACdF,SACAkB,SAAsC,iBAArBjB,EAAQiB,UAAyBjB,EAAQiB,SAAW,EAAIjB,EAAQiB,SAAW,EAC5FH,WAAYd,EAAQc,YAAcD,EAAaC,WAC/CC,sBAAuBf,EAAQe,uBAAyBF,EAAaE,sBACrEC,wBAAyBhB,EAAQgB,yBAA2BH,EAAaG,yBAIvEhB,EAAQkB,eACVjB,EAAQiB,aAAelB,EAAQkB,cAI7BlB,EAAQmB,QACVlB,EAAQkB,MAAQnB,EAAQmB,OAGG,iBAAlBnB,EAAQE,OAAsBF,EAAQE,MAAQ,IACvDD,EAAQC,MAAQF,EAAQE,OAGI,iBAAnBF,EAAQG,QAAuBH,EAAQG,OAAS,IACzDF,EAAQE,OAASH,EAAQG,QAGC,iBAAjBH,EAAQoB,OACjBnB,EAAQmB,KAAOpB,EAAQoB,MAGrBpB,EAAQqB,kBACVpB,EAAQoB,gBAAkBrB,EAAQqB,iBAGK,iBAA9BrB,EAAQsB,mBAAkCtB,EAAQsB,kBAAoB,IAC/ErB,EAAQqB,kBAAoBtB,EAAQsB,mBAGA,iBAA3BtB,EAAQuB,iBACjBtB,EAAQsB,eAAiBvB,EAAQuB,gBAGnC,MAAMpC,QAAiBC,MAAM,GAAGb,KAAKD,+BAAgC,CACnE+B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,KAGvB,IAAKd,EAASE,GACZ,MAAM,IAAIQ,MAAM,iBAAiBV,EAASuB,UAG5C,MAAMC,QAAexB,EAASI,OAG9B,OAFAb,QAAQC,IAAI,6BAA8BgC,GAEnCA,CAET,CAAE,MAAOlB,GAEP,MADAf,QAAQe,MAAM,qCAAsCA,GAC9CA,CACR,CACF,CAKA,oBAAM+B,CAAeC,SACblD,KAAKqB,oBACXlB,QAAQC,IAAI,0BAA0B8C,MAEtC,IACE,MAAMtC,QAAiBC,MAAM,GAAGb,KAAKD,wBAAyB,CAC5D+B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEgB,cAGzB,IAAKtC,EAASE,GACZ,MAAM,IAAIQ,MAAM,iBAAiBV,EAASuB,UAG5C,MAAMC,QAAexB,EAASI,OAG9B,OAFAb,QAAQC,IAAI,8BAA+BgC,GAEpCA,CAET,CAAE,MAAOlB,GAEP,MADAf,QAAQe,MAAM,8BAA+BA,GACvCA,CACR,CACF,CAKA,0BAAMiC,SACEnD,KAAKqB,oBACX,IACE,MAAMT,QAAiBC,MAAM,GAAGb,KAAKD,0BAErC,IAAKa,EAASE,GACZ,MAAM,IAAIQ,MAAM,iBAAiBV,EAASuB,UAG5C,aAAavB,EAASI,MAExB,CAAE,MAAOE,GAEP,OADAf,QAAQe,MAAM,4BAA6BA,GACpC,EACT,CACF,EAIU,MAACkC,EAAoBvD,EACpBwD,EAAiBxD,ECvPxByD,EAAyB,CAE7B,QAAS,UACT,OAAQ,SACR,IAAK,SACL,KAAM,UACN,QAAS,UACT,OAAQ,SACR,MAAO,WACP,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,SACN,MAAO,aACP,IAAK,OACL,OAAQ,QACR,KAAM,QACN,KAAM,QACN,MAAO,eACP,MAAO,eACP,KAAM,gBACN,MAAO,WACP,SAAU,UACV,QAAS,UACT,OAAQ,UACR,QAAS,WAGT,KAAM,QACN,KAAM,QACN,OAAQ,QACR,IAAK,UACL,OAAQ,OACR,OAAQ,QACR,KAAM,QACN,KAAM,QACN,MAAO,QACP,OAAQ,QACR,KAAM,QACN,OAAQ,OACR,IAAK,MACL,KAAM,MACN,KAAM,MACN,IAAK,MACL,KAAM,MACN,KAAM,MACN,IAAK,OACL,IAAK,OACL,OAAQ,OACR,KAAM,QACN,IAAK,WACL,MAAO,UACP,OAAQ,QACR,MAAO,QACP,MAAO,SACP,KAAM,WACN,QAAS,UACT,OAAQ,MACR,KAAM,QACN,MAAO,OACP,KAAM,OACN,OAAQ,UACR,MAAO,UACP,MAAO,QACP,KAAM,QACN,KAAM,UACN,KAAM,OACN,KAAM,SAGN,IAAK,SACL,KAAM,SACN,KAAM,SACN,IAAK,iBACL,KAAM,OACN,OAAQ,YACR,SAAU,QACV,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,OACL,IAAK,QACL,IAAK,WACL,KAAM,WACN,KAAM,WACN,IAAK,SACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,KAAM,SACN,KAAM,SACN,IAAK,YACL,KAAM,OACN,IAAK,SACL,KAAM,gBACN,KAAM,SACN,KAAM,SAGN,IAAK,SACL,KAAM,SACN,KAAM,SACN,KAAM,SACN,IAAK,QACL,IAAK,QACL,KAAM,SACN,KAAM,SACN,MAAO,UACP,KAAM,SACN,KAAM,WACN,IAAK,UACL,KAAM,UACN,IAAK,OACL,IAAK,SACL,KAAM,aACN,KAAM,WACN,IAAK,SACL,KAAM,OACN,MAAO,iBAGP,IAAK,MACL,KAAM,QACN,KAAM,MACN,MAAO,WACP,SAAU,aACV,IAAK,OACL,MAAO,QACP,MAAO,UACP,MAAO,aACP,OAAQ,SAGR,IAAK,OACL,KAAM,MACN,IAAK,OACL,KAAM,QACN,MAAO,gBACP,IAAK,UACL,IAAK,YACL,IAAK,OACL,IAAK,OACL,IAAK,QACL,IAAK,MACL,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,OACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,UACL,KAAM,UAGN,IAAK,MACL,IAAK,OACL,IAAK,QACL,KAAM,SACN,IAAK,QACL,IAAK,QACL,IAAK,SACL,MAAO,OACP,OAAQ,SACR,KAAM,QACN,MAAO,OACP,IAAK,OACL,IAAK,SACL,OAAQ,WACR,IAAK,SACL,IAAK,OACL,IAAK,QACL,KAAM,OACN,MAAO,QACP,KAAM,UACN,SAAU,UAGV,IAAK,OACL,KAAM,OACN,KAAM,QAOR,SAASC,IACP,MAAMC,EAAW,CAAA,EAGjB,IAAK,MAAOC,EAAUC,KAAYC,OAAOC,QAAQN,GAE1CE,EAASC,KACZD,EAASC,GAAY,IAIlBD,EAASC,GAAUI,SAASH,IAC/BF,EAASC,GAAUK,KAAKJ,GAI5B,OAAOF,CACT,CAKA,SAASO,EAAiBN,GACxB,OAAOH,EAAuBG,IAAaA,CAC7C,CAKA,SAASO,EAAyBC,EAASC,EAAUV,GACnD,MAAMW,EAAgBD,EAASE,cAG/B,GAAID,EAAcN,SAASI,EAAQG,eACjC,OAAO,EAIT,IAAK,MAAOC,EAAIC,KAAYX,OAAOC,QAAQJ,GAEzC,GAAIS,EAAQJ,SAASQ,GACnB,IAAK,MAAME,KAASD,EAClB,GAAIH,EAAcN,SAASU,EAAMH,eAC/B,OAAO,EAOf,MAAMI,EAAiBT,EAAiBE,GACxC,QAAIO,IAAmBP,IAAWE,EAAcN,SAASW,EAAeJ,eAK1E,CAMsB,oBAAXK,QAA0BA,OAAOC,UAC1CD,OAAOC,QAAU,CAAEpB,yBAAwBC,uBAAsBQ,mBAAkBC,6BCvP9E,MAAMW,EACX,WAAA7E,CAAY8E,EAAOnD,EAAU,IAC3B,IAAKmD,EACH,MAAM,IAAItD,MAAM,2BAGlBtB,KAAK4E,MAAQA,EACb5E,KAAK6E,OAASpD,EAAQoD,QAAU,KAChC7E,KAAK8E,SAAWrD,EAAQqD,UAAY,KACpC9E,KAAK+E,cAAgB,KAGrB/E,KAAKgF,OAASvD,EAAQuD,QAAU,IAAInF,EAAgB4B,EAAQ1B,WAG5DC,KAAKiF,gBAAkB,IAAIC,EAAMC,MACjCnF,KAAKiF,gBAAgBG,KAAO,kBAE5BpF,KAAK4E,MAAMS,IAAIrF,KAAKiF,iBAGpBjF,KAAKsF,eAAiB,GAGtBtF,KAAKuF,eAAiB,IAAIC,IAC1BxF,KAAKyF,cAAgB,EACrBzF,KAAK0F,eAAiB,KACtB1F,KAAK2F,qBAAuBlE,EAAQkE,sBAAwB,KAC5D3F,KAAK4F,qBAAuBnE,EAAQmE,sBAAwB,KAC5D5F,KAAK6F,cAAgB,IAAIL,IACzBxF,KAAK8F,2BAA6B,KAClC9F,KAAK+F,2BAA6B,KAGlC/F,KAAKgG,MAAQ,IAAId,EAAMe,MAGvBjG,KAAKkG,UAAY,IAAIhB,EAAMiB,UAC3BnG,KAAKoG,MAAQ,IAAIlB,EAAMmB,QACvBrG,KAAKsG,kBAAoB,KAGzBtG,KAAKe,OAAS,CACZwF,uBAAyD,IAAlC9E,EAAQ8E,sBAC/BC,kBAAmB/E,EAAQ+E,mBAAqB,IAChDC,mBAAoBhF,EAAQgF,oBAAsB,EAClDC,uBAAyD,IAAlCjF,EAAQiF,sBAC/BC,uBAAwBlF,EAAQkF,uBAChCC,oBAAmD,IAA/BnF,EAAQmF,sBACzBnF,EAAQV,QAIbf,KAAK6G,mBAEL1G,QAAQC,IAAI,oDAGc,oBAAf0G,aACTA,WAAWC,aAAe/G,KAE9B,CAIA,gBAAA6G,IAE6C,IAAvC7G,KAAKe,OAAO4F,wBAAmC3G,KAAK8E,UACtD9E,KAAKgH,sBACL7G,QAAQC,IAAI,iFACoC,IAAvCJ,KAAKe,OAAO4F,wBAAoC3G,KAAK8E,SAG9D3E,QAAQC,IAAI,2FAFZD,QAAQgB,KAAK,wFAIjB,CAGA,cAAA8F,GACE9G,QAAQC,IAAI,+BAGRJ,KAAK6E,QACP1E,QAAQC,IAAI,oCACKJ,KAAK6E,OAAOqC,SAASC,EAAEC,QAAQ,OAAOpH,KAAK6E,OAAOqC,SAASG,EAAED,QAAQ,OAAOpH,KAAK6E,OAAOqC,SAASI,EAAEF,QAAQ,8BACjF,IAAzBpH,KAAK6E,OAAO0C,SAASJ,EAAUK,KAAKC,IAAIL,QAAQ,SAAkC,IAAzBpH,KAAK6E,OAAO0C,SAASF,EAAUG,KAAKC,IAAIL,QAAQ,SAAkC,IAAzBpH,KAAK6E,OAAO0C,SAASD,EAAUE,KAAKC,IAAIL,QAAQ,wBACzKpH,KAAK6E,OAAO6C,KAAO,8BACd1H,KAAK6E,OAAO8C,MAAQ,SAAS3H,KAAK6E,OAAO+C,KAAO,SAIlEzH,QAAQC,IAAI,wDACkBJ,KAAK4E,MAAMiD,SAASC,2CACpB9H,KAAK4E,MAAMmD,gBAAgB,mBAAqB,MAAQ,2CACtD/H,KAAKiF,gBAAgB4C,SAASC,UAG9D3H,QAAQC,IAAI,uBAAuBJ,KAAKuF,eAAeyC,QACvDhI,KAAKuF,eAAe0C,QAAQ,CAACC,EAAKC,KAChC,MAAMC,EAAW,IAAIlD,EAAMmD,QAQ3B,GAPAH,EAAII,iBAAiBF,GACrBjI,QAAQC,IAAI,OAAO+H,MAAOD,EAAIK,SAASC,4BAC3BN,EAAIhB,SAASC,EAAEC,QAAQ,OAAOc,EAAIhB,SAASG,EAAED,QAAQ,OAAOc,EAAIhB,SAASI,EAAEF,QAAQ,wBACnFgB,EAASjB,EAAEC,QAAQ,OAAOgB,EAASf,EAAED,QAAQ,OAAOgB,EAASd,EAAEF,QAAQ,yBACtEc,EAAIO,mBAAmBP,EAAIQ,MAAMvB,EAAEC,QAAQ,MAG9B,uBAAtBc,EAAIK,SAASC,KAA+B,CAC9C,MAAMG,GAAM,IAAIzD,EAAM0D,MAAOC,cAAcX,GACrCF,EAAOW,EAAIG,QAAQ,IAAI5D,EAAMmD,SAC7BU,EAASJ,EAAIK,UAAU,IAAI9D,EAAMmD,SACvClI,QAAQC,IAAI,kCAAkC2I,EAAO5B,EAAEC,QAAQ,OAAO2B,EAAO1B,EAAED,QAAQ,OAAO2B,EAAOzB,EAAEF,QAAQ,eAAeY,EAAKb,EAAEC,QAAQ,OAAOY,EAAKX,EAAED,QAAQ,OAAOY,EAAKV,EAAEF,QAAQ,OAGzL,IAAI6B,EAAY,EAChBf,EAAIgB,SAAUC,IACRA,EAAMC,QAAQH,MAEpB9I,QAAQC,IAAI,kBAAkB6I,IAChC,IAIEjJ,KAAK6E,QAAU7E,KAAKuF,eAAeyC,KAAO,IAC5C7H,QAAQC,IAAI,6BACZJ,KAAKuF,eAAe0C,QAAQ,CAACC,EAAKC,KAChC,MAAMkB,EAAWrJ,KAAK6E,OAAOqC,SAASoC,WAAWpB,EAAIhB,UACrD/G,QAAQC,IAAI,OAAO+H,MAAOkB,EAASjC,QAAQ,eAI/CjH,QAAQC,IAAI,4BACd,CAOA,YAAAmJ,CAAaC,GAEX,GAAIxJ,KAAK0F,iBAAmB8D,IAK5BxJ,KAAKyJ,iBAELzJ,KAAK0F,eAAiB8D,EAEtBxJ,KAAK0J,+BAA+BF,GAEpCrJ,QAAQC,IAAI,sBAAsBoJ,EAAOpE,QAGrCpF,KAAK2J,WAAW,CAClB,MAAMC,EAAaJ,EAAOjB,UAAY,CAAA,EAUtC,GATAvI,KAAK2J,UAAUE,UAAU,UAAUL,EAAOpE,OAAQ,QAC9CwE,EAAWpI,QACbxB,KAAK2J,UAAUE,UAAU,aAAaD,EAAWpI,SAAU,QAEzDoI,EAAWE,WACb9J,KAAK2J,UAAUE,UAAU,WAAWD,EAAWE,YAAa,QAI3B,WAA/B9J,KAAK2J,UAAUI,YAA0B,CAC3C,MAAMC,EAAaJ,EAAWK,gBAAkBT,EAAOpE,MAAQ,aAC/DpF,KAAK2J,UAAUO,MAAMC,MAAQ,GAAGH,OAChChK,KAAK2J,UAAUO,MAAME,QAErBpK,KAAK2J,UAAUO,MAAMG,kBAAkBrK,KAAK2J,UAAUO,MAAMC,MAAMrC,OAAQ9H,KAAK2J,UAAUO,MAAMC,MAAMrC,QACrG9H,KAAK2J,UAAUE,UAAU,cAAcG,IAAc,SACvD,CACF,CACF,CAEA,8BAAAN,CAA+BF,GAG7B,MAAMc,EAAoBd,EAAOzB,gBAAgB,sBAC7CuC,GACFd,EAAOe,OAAOD,GAGhB,MAAME,EAAiB,IAAItF,EAAMC,MACjCqF,EAAepF,KAAO,qBAGtB,MAAMuD,GAAM,IAAIzD,EAAM0D,MAAOC,cAAcW,GACrCxB,EAAOW,EAAIG,QAAQ,IAAI5D,EAAMmD,SAC7BU,EAASJ,EAAIK,UAAU,IAAI9D,EAAMmD,SAIjCoC,EAAe,IAAIvF,EAAMmD,QAC7BL,EAAKb,EAFQ,GAGba,EAAKX,EAHQ,GAIbW,EAAKV,EAJQ,IASf,GAAIkC,EAAOkB,UAAqC,kBAAzBlB,EAAOkB,SAASlC,KAA0B,CAE/D,MAAM7G,EAAQ6H,EAAOkB,SAASC,WAAWhJ,MACnCC,EAAS4H,EAAOkB,SAASC,WAAW/I,OAGpCgJ,EAAQ,IAAI1F,EAAM2F,MACxBD,EAAME,QAAQnJ,EAAM,GAAIC,EAAO,GAC/BgJ,EAAMG,OAAOpJ,EAAM,GAAIC,EAAO,GAC9BgJ,EAAMG,OAAOpJ,EAAM,EAAGC,EAAO,GAC7BgJ,EAAMG,QAAQpJ,EAAM,EAAGC,EAAO,GAC9BgJ,EAAMG,QAAQpJ,EAAM,GAAIC,EAAO,GAE/B,MAAMoJ,EAASJ,EAAMK,YACfC,GAAe,IAAIhG,EAAMiG,gBAAiBC,cAAcJ,GAExDK,EAAgBrL,KAAKsL,4BACrBC,EAAe,IAAIrG,EAAMsG,kBAAkB,CAC/CC,MAAOJ,EACPK,UAAW,EACXC,aAAa,EACbC,QAAS,KAGLC,EAAO,IAAI3G,EAAM4G,KAAKZ,EAAcK,GAC1CM,EAAK3E,SAAS6E,IAAI,EAAG,EAAG,KACxBvB,EAAenF,IAAIwG,EACrB,KAAO,CAEL,MAAMG,EAAgB,IAAI9G,EAAM+G,cAC9B,IAAI/G,EAAMgH,YAAYzB,EAAatD,EAAGsD,EAAapD,EAAGoD,EAAanD,IAG/D+D,EAAgBrL,KAAKsL,4BACrBa,EAAgB,IAAIjH,EAAMsG,kBAAkB,CAChDC,MAAOJ,EACPK,UAAW,EACXC,aAAa,EACbC,QAAS,KAGLQ,EAAQ,IAAIlH,EAAMmH,aAAaL,EAAeG,GACpDC,EAAMlF,SAASoF,KAAKvD,GACpByB,EAAenF,IAAI+G,EACrB,CAGA5C,EAAOnE,IAAImF,GACXA,EAAetD,SAAS6E,IAAI,EAAG,EAAG,GAGlC/L,KAAKuM,iBAAiB/B,EAAgBC,EAAc1B,EAAQS,EAC9D,CAKA,gBAAA+C,CAAiB/B,EAAgBxC,EAAMe,EAAQyD,GAI7C,GAFArM,QAAQC,IAAI,+BAEPoM,EAEH,YADArM,QAAQC,IAAI,+BAId,IAAKoM,EAAa9B,SAEhB,YADAvK,QAAQC,IAAI,4BAId,GAAmC,kBAA/BoM,EAAa9B,SAASlC,KAExB,YADArI,QAAQC,IAAI,sBAAsBoM,EAAa9B,SAASlC,2BAI1DrI,QAAQC,IAAI,8CAEZ,MAAMqM,EAAa,IACbC,EAAiB,IAAIxH,EAAMgH,YAAYO,EAAYA,EAAYA,GAK/DpB,EAAgBrL,KAAKsL,4BACrBqB,EAAiB,IAAIzH,EAAM0H,kBAAkB,CACjDnB,MAAOJ,EACPM,aAAa,EACbC,QAAS,GACTiB,WAAW,EACXC,YAAY,IAGRC,EAAsB,IAAI7H,EAAM0H,kBAAkB,CACtDnB,MAAOzL,KAAKgN,wBACZrB,aAAa,EACbC,QAAS,EACTiB,WAAW,EACXC,YAAY,IAIRnL,EAAQ6K,EAAa9B,SAASC,WAAWhJ,MACzCC,EAAS4K,EAAa9B,SAASC,WAAW/I,OAE9B,CAChB,CAAEuF,EAAGxF,EAAM,EAAG0F,EAAGzF,EAAO,EAAG0F,EAAG,GAAK2F,OAAQ,aAC3C,CAAE9F,GAAIxF,EAAM,EAAG0F,EAAGzF,EAAO,EAAG0F,EAAG,GAAK2F,OAAQ,YAC5C,CAAE9F,EAAGxF,EAAM,EAAG0F,GAAIzF,EAAO,EAAG0F,EAAG,GAAK2F,OAAQ,gBAC5C,CAAE9F,GAAIxF,EAAM,EAAG0F,GAAIzF,EAAO,EAAG0F,EAAG,GAAK2F,OAAQ,gBAGrChF,QAAQ,CAACiF,EAAKC,KACtB,MAAMC,EAAS,IAAIlI,EAAMmI,KAAKX,EAAgBC,EAAeW,SAC7DF,EAAOlG,SAAS6E,IAAImB,EAAI/F,EAAG+F,EAAI7F,EAAG6F,EAAI5F,GACtC8F,EAAO7E,SAAW,CAChBgF,gBAAgB,EAChBC,YAAaL,EACbF,OAAQC,EAAID,OACZQ,gBAAiBL,EAAOM,SACxBC,cAAeZ,EAAoBO,SAKrCF,EAAOQ,YAAc,KAErBR,EAAOS,QAAU,KACfT,EAAOM,SAAWN,EAAO7E,SAASoF,cAClCP,EAAO1E,MAAMoF,UAAU,KACvBC,SAAS/L,KAAKgM,MAAMC,OAAS,aAG/Bb,EAAOc,YAAc,KACnBd,EAAOM,SAAWN,EAAO7E,SAASkF,gBAClCL,EAAO1E,MAAMoF,UAAU,GACvBC,SAAS/L,KAAKgM,MAAMC,OAAS,WAG/BzD,EAAenF,IAAI+H,GAGnBjN,QAAQC,IAAI,6BAA6B8M,EAAID,WAEjD,CAKA,6BAAAkB,CAA8B3E,GAM9B,CAKA,cAAAC,GAEE,GAAIzJ,KAAK0F,eAAgB,CAEvB,MAAM0I,EAAYpO,KAAK0F,eAAeqC,gBAAgB,sBAClDqG,IACFpO,KAAK0F,eAAe6E,OAAO6D,GAG3BA,EAAUlF,SAAUC,IACdA,EAAMuB,UAAUvB,EAAMuB,SAAS2D,UAC/BlF,EAAMuE,WACJY,MAAMC,QAAQpF,EAAMuE,UACtBvE,EAAMuE,SAASzF,QAAQyF,GAAYA,EAASW,WAE5ClF,EAAMuE,SAASW,cAMvBlO,QAAQC,IAAI,iBAAiBJ,KAAK0F,eAAeN,QACjDpF,KAAK0F,eAAiB,IACxB,CACF,CAKA,mBAAAsB,GACE,IAAKhH,KAAK8E,SAAU,OAEpB,MAAM0J,EAASxO,KAAK8E,SAAS2J,WAC7B,IAAIC,GAAa,EACbC,EAAa,KACbC,EAAa,IAAI1J,EAAMmD,QACvBwG,EAAa,IAAI3J,EAAMmB,QACvByI,EAAW,OACXC,EAAgB,IAAI7J,EAAMmD,QAE9BmG,EAAOQ,iBAAiB,YAAcC,IACpC,GAAqB,IAAjBA,EAAMC,OAAc,OAGxB,MAAMC,EAAOX,EAAOY,wBACpBpP,KAAKoG,MAAMe,GAAM8H,EAAMI,QAAUF,EAAKG,MAAQH,EAAKxN,MAAS,EAAI,EAChE3B,KAAKoG,MAAMiB,IAAO4H,EAAMM,QAAUJ,EAAKK,KAAOL,EAAKvN,OAAU,EAAI,EAEjE5B,KAAKkG,UAAUuJ,cAAczP,KAAKoG,MAAOpG,KAAK6E,QAE9C,MAAM6K,EAAa1P,KAAKkG,UAAUyJ,iBAAiB3P,KAAKiF,gBAAgB4C,UAAU,GAElF,GAAI6H,EAAW5H,OAAS,EAAG,CACzB,MAAM0B,EAASkG,EAAW,GAAGlG,OAG7B,GAAIA,EAAOjB,UAAYiB,EAAOjB,SAASgF,eAgBrC,OAdAmB,GAAa,EACbC,EAAa3O,KAAK0F,eAClBoJ,EAAW,SAGX9O,KAAK4P,iBAAmB,CACtB3C,OAAQzD,EAAOjB,SAAS0E,OACxBO,YAAahE,EAAOjB,SAASiF,aAG/BuB,EAAczC,KAAKqC,EAAWjG,OAC9BmG,EAAW9C,IAAIkD,EAAMI,QAASJ,EAAMM,SACpCf,EAAOR,MAAMC,OAAS,iBACtB9N,QAAQC,IAAI,wBAAwBuO,EAAWvJ,aAAaoE,EAAOjB,SAAS0E,UAK9E,GAAIzD,EAAOjB,UAAYiB,EAAOjB,SAASsH,eAGrC,YADA1P,QAAQC,IAAI,mCAAmCJ,KAAK0F,eAAeN,QAKrE,IAAIoE,EAAOjB,UAAsC,oBAAzBiB,EAAOjB,SAASC,MAAuD,oBAAzBgB,EAAOjB,SAASC,MAAuD,uBAAzBgB,EAAOjB,SAASC,MAA4D,kBAA3BgB,EAAOjB,SAASuH,OA8CnL9P,KAAKuJ,aAAaC,OA9C8L,CAGhN,GAAIxJ,KAAK2J,WAA4C,WAA/B3J,KAAK2J,UAAUI,YAA0B,CAE7D,MAAMC,EAAaR,EAAOpE,KAgB1B,OAfAjF,QAAQC,IAAI,+BAA+B4J,UAE3ChK,KAAK2J,UAAUoG,uBAAuB,UAAU/F,SAC7CgG,KAAKC,IACAA,GACFjQ,KAAKkQ,aAAalG,GAClBhK,KAAK2J,UAAUE,UAAU,aAAaG,IAAc,YAEpDhK,KAAK2J,UAAUE,UAAU,cAAcG,IAAc,UAGxDmG,MAAMjP,IACLf,QAAQe,MAAM,6BAA8BA,GAC5ClB,KAAK2J,UAAUE,UAAU,YAAYG,IAAc,UAGzD,CAGA0E,GAAa,EACbC,EAAanF,EACbsF,EAAW,OACXF,EAAWtC,KAAKoD,EAAW,GAAGU,OAAOC,IAAI7G,EAAOtC,UAChD2H,EAAW9C,IAAIkD,EAAMI,QAASJ,EAAMM,SAGhC/F,EAAOkE,SAOXc,EAAOR,MAAMC,OAAS,OACtB9N,QAAQC,IAAI,sBAAsBoJ,EAAOpE,iCAGzCpF,KAAKuJ,aAAaC,EACpB,CAIF,MACExJ,KAAKyJ,mBAIT+E,EAAOQ,iBAAiB,YAAcC,IAEpC,IAAKP,EAEH,YADA1O,KAAKsQ,mBAAmBrB,EAAOT,GAKjC,IAAKG,EAAY,OAGjB,MAAM4B,EAAStB,EAAMI,QAAUR,EAAW1H,EACpCqJ,EAASvB,EAAMM,QAAUV,EAAWxH,EAE1C,GAAiB,WAAbyH,EAAuB,CAEzB,IAAK9O,KAAK4P,iBAER,YADAzP,QAAQe,MAAM,gCAKhB,IAAIuP,EAAkB,EAGtB,OAJezQ,KAAK4P,iBAAiB3C,QAKnC,IAAK,YAEHwD,EAAmBF,EAAS,GAAKC,EAAS,EAAK,EAA4C,MAAvChJ,KAAKkJ,IAAIH,GAAU/I,KAAKkJ,IAAIF,IAAmB,EAA4C,MAAvChJ,KAAKkJ,IAAIH,GAAU/I,KAAKkJ,IAAIF,IACpI,MACF,IAAK,WAEHC,EAAmBF,EAAS,GAAKC,EAAS,EAAK,EAA4C,MAAvChJ,KAAKkJ,IAAIH,GAAU/I,KAAKkJ,IAAIF,IAAmB,EAA4C,MAAvChJ,KAAKkJ,IAAIH,GAAU/I,KAAKkJ,IAAIF,IACpI,MACF,IAAK,eAEHC,EAAmBF,EAAS,GAAKC,EAAS,EAAK,EAA4C,MAAvChJ,KAAKkJ,IAAIH,GAAU/I,KAAKkJ,IAAIF,IAAmB,EAA4C,MAAvChJ,KAAKkJ,IAAIH,GAAU/I,KAAKkJ,IAAIF,IACpI,MACF,IAAK,cAEHC,EAAmBF,EAAS,GAAKC,EAAS,EAAK,EAA4C,MAAvChJ,KAAKkJ,IAAIH,GAAU/I,KAAKkJ,IAAIF,IAAmB,EAA4C,MAAvChJ,KAAKkJ,IAAIH,GAAU/I,KAAKkJ,IAAIF,IACpI,MACF,QACEC,EAAkB,EAAwB,MAAnBF,EAASC,GAGpC,MAAMG,EAAWnJ,KAAKoJ,IAAI,GAAKpJ,KAAKqJ,IAAI,EAAK9B,EAAc5H,EAAIsJ,IAC/D9B,EAAWjG,MAAMoF,UAAU6C,GAG3B3Q,KAAKmO,8BAA8BQ,EAErC,MAAO,GAAiB,SAAbG,EAAqB,CAE9B,MAAMgC,EAAc,IAAI5L,EAAMmD,QACxB0I,EAAW,IAAI7L,EAAMmD,QAC3BrI,KAAK6E,OAAOmM,kBAAkB,IAAI9L,EAAMmD,SACxCyI,EAAYG,oBAAoBjR,KAAK6E,OAAOqM,YAAa,GAAGC,YAC5DJ,EAASE,oBAAoBjR,KAAK6E,OAAOqM,YAAa,GAAGC,YAGzD,MAAMC,EAAY,IACZC,GAAY,IAAInM,EAAMmD,SACzBhD,IAAIyL,EAAYxD,QAAQgE,eAAef,EAASa,IAChD/L,IAAI0L,EAASzD,QAAQgE,gBAAgBd,EAASY,IAEjDzC,EAAWzH,SAAS7B,IAAIgM,GACxBxC,EAAW9C,IAAIkD,EAAMI,QAASJ,EAAMM,QACtC,IAGFf,EAAOQ,iBAAiB,UAAW,KAC7BN,GAAcC,IAEZA,EAAWjB,WACbiB,EAAWjB,SAAS9B,QAAU,EAC9B+C,EAAWjB,SAAS/B,aAAc,GAMpCxL,QAAQC,IAAI,wBAAwBuO,EAAWvJ,YAAYuJ,EAAWzH,SAASC,EAAEC,QAAQ,OAAOuH,EAAWzH,SAASG,EAAED,QAAQ,OAAOuH,EAAWzH,SAASI,EAAEF,QAAQ,OAEnKsH,GAAa,EACbC,EAAa,KACbG,EAAW,OACX9O,KAAK4P,iBAAmB,KACxBpB,EAAOR,MAAMC,OAAS,aAK1BO,EAAOQ,iBAAiB,QAAUC,IAChCA,EAAMsC,iBAEN,MAAMpC,EAAOX,EAAOY,wBACdhJ,EAAQ,IAAIlB,EAAMmB,QACxBD,EAAMe,GAAM8H,EAAMI,QAAUF,EAAKG,MAAQH,EAAKxN,MAAS,EAAI,EAC3DyE,EAAMiB,IAAO4H,EAAMM,QAAUJ,EAAKK,KAAOL,EAAKvN,OAAU,EAAI,EAE5D5B,KAAKkG,UAAUuJ,cAAcrJ,EAAOpG,KAAK6E,QACzC,MAAM6K,EAAa1P,KAAKkG,UAAUyJ,iBAAiB3P,KAAKiF,gBAAgB4C,UAAU,GAElF,GAAI6H,EAAW5H,OAAS,EAAG,CACzB,MAAMI,EAAMwH,EAAW,GAAGlG,OAE1B,GAAItB,EAAIK,WAAmC,oBAAtBL,EAAIK,SAASC,MAAoD,oBAAtBN,EAAIK,SAASC,MAAoD,uBAAtBN,EAAIK,SAASC,MAAgC,CACtJ,MAAMgJ,EAAcvC,EAAMuB,OAAS,EAAI,GAAM,IACvCG,EAAWzI,EAAIQ,MAAMvB,EAAIqK,EAG3Bb,GAAY,IAAOA,GAAY,IACjCzI,EAAIQ,MAAMoF,UAAU6C,GAGhBzI,EAAIwF,WACNxF,EAAIwF,SAAS+D,SAASC,OAAO,SAC7BC,WAAW,KACLzJ,EAAIwF,UACNxF,EAAIwF,SAAS+D,SAASC,OAAO,IAE9B,MAGLvR,QAAQC,IAAI,cAAc8H,EAAIK,SAASC,SAASN,EAAI9C,iBAAiBuL,EAASvJ,QAAQ,+BAE1F,CACF,IAIF2G,SAASiB,iBAAiB,UAAYC,IACpC,MAAM2C,EAAW7D,SAAS8D,cAC1B,GAAID,IAAkC,UAArBA,EAASE,SAA4C,aAArBF,EAASE,SAA0BF,EAASG,mBAC3F,OAEF,IAAK/R,KAAK0F,eAAgB,OAE1B,MAAM8D,EAASxJ,KAAK0F,eAEpB,IAAK8D,EAAOjB,UAAsC,oBAAzBiB,EAAOjB,SAASC,MAAuD,oBAAzBgB,EAAOjB,SAASC,KACrF,OAGF,MAAMwJ,EAAexK,KAAKC,GAAK,GAC/B,IAAIwK,GAAU,EAEd,OAAQhD,EAAMiD,KACZ,IAAK,YACH1I,EAAOjC,SAASF,GAAK2K,EACrBC,GAAU,EACV,MACF,IAAK,aACHzI,EAAOjC,SAASF,GAAK2K,EACrBC,GAAU,EACV,MACF,IAAK,UAEH,MAAME,EAAe3I,EAAOjC,SAASJ,EAAI6K,EACrCG,IAAiB3K,KAAKC,GAAG,GAAK0K,GAAgB3K,KAAKC,GAAG,IACxD+B,EAAOjC,SAASJ,EAAIgL,EACpBF,GAAU,GAEZ,MACF,IAAK,YAEH,MAAMG,EAAmB5I,EAAOjC,SAASJ,EAAI6K,EACzCI,IAAqB5K,KAAKC,GAAG,GAAK2K,GAAoB5K,KAAKC,GAAG,IAChE+B,EAAOjC,SAASJ,EAAIiL,EACpBH,GAAU,GAEZ,MACF,IAAK,IACL,IAAK,IAEHzI,EAAOjC,SAASJ,EAAI,EAEpB,MAAMkL,EAAkB,IAAInN,EAAMmD,QAClCrI,KAAK6E,OAAOmM,kBAAkBqB,GAC9B,MAAMC,EAAc9I,EAAOtC,SAASoG,QAAQjI,IAAIgN,EAAgBf,gBAAe,IAC/E9H,EAAO+I,OAAOD,GACd9I,EAAOjC,SAASJ,EAAI,EACpB8K,GAAU,EACV9R,QAAQC,IAAI,0BAA0BoJ,EAAOpE,QAC7C,MAEF,IAAK,IACL,IAAK,IAEHpF,KAAKiH,iBACLgI,EAAMsC,iBAIV,GAAIU,EAAS,CACXhD,EAAMsC,iBACN,MAAMiB,EAAS,CACbrL,GAAwB,IAApBqC,EAAOjC,SAASJ,EAAUK,KAAKC,IAAIL,QAAQ,GAC/CC,GAAwB,IAApBmC,EAAOjC,SAASF,EAAUG,KAAKC,IAAIL,QAAQ,GAC/CE,GAAwB,IAApBkC,EAAOjC,SAASD,EAAUE,KAAKC,IAAIL,QAAQ,IAEjDjH,QAAQC,IAAI,cAAcoJ,EAAOjB,SAASC,SAASgB,EAAOpE,YAAYoN,EAAOrL,OAAOqL,EAAOnL,OAAOmL,EAAOlL,MAC3G,IAGFnH,QAAQC,IAAI,sFACZD,QAAQC,IAAI,+FACZD,QAAQC,IAAI,iFACd,CAEA,kBAAAkQ,CAAmBrB,EAAOT,GAExB,MAAMW,EAAOX,EAAOY,wBACpBpP,KAAKoG,MAAMe,GAAM8H,EAAMI,QAAUF,EAAKG,MAAQH,EAAKxN,MAAS,EAAI,EAChE3B,KAAKoG,MAAMiB,IAAO4H,EAAMM,QAAUJ,EAAKK,KAAOL,EAAKvN,OAAU,EAAI,EAEjE5B,KAAKkG,UAAUuJ,cAAczP,KAAKoG,MAAOpG,KAAK6E,QAG9C,MAAM6K,EAAa1P,KAAKkG,UAAUyJ,iBAAiB3P,KAAKiF,gBAAgB4C,UAAU,GASlF,GANI7H,KAAKsG,mBAAqBtG,KAAKsG,kBAAkB4H,cACnDlO,KAAKsG,kBAAkB4H,cACvBlO,KAAKsG,kBAAoB,MAIvBoJ,EAAW5H,OAAS,EAAG,CACzB,MAAM0B,EAASkG,EAAW,GAAGlG,OAG7B,GAAIA,EAAOjB,UAAYiB,EAAOjB,SAASgF,gBAAkB/D,EAAOqE,QAG9D,OAFArE,EAAOqE,eACP7N,KAAKsG,kBAAoBkD,GAK3B,GAAIA,EAAOjB,WAAsC,oBAAzBiB,EAAOjB,SAASC,MAAuD,oBAAzBgB,EAAOjB,SAASC,MAKpF,OAHAgG,EAAOR,MAAMC,OAAS,YAEtBjO,KAAKsG,kBAAoB,CAAE4H,YAAa,KAAQM,EAAOR,MAAMC,OAAS,YAG1E,CAGAO,EAAOR,MAAMC,OAAS,SACxB,CAMA,oBAAMhL,CAAeC,GACnB,MAAMuP,EAAYC,KAAKC,MACvBxS,QAAQC,IAAI,kBAAkB8C,MAE9B,IAEE,MAAM0P,EAAS5S,KAAK6S,aAAa3P,GACjC/C,QAAQC,IAAI,aAAcwS,GAG1B,MAAMxQ,QAAepC,KAAK8S,gBAAgBF,GAW1C,OARA5S,KAAKsF,eAAexB,KAAK,CACvB2O,YACAvP,UACA0P,SACAxQ,SACAD,OAAQ,YAGHC,CAET,CAAE,MAAOlB,GAUP,MATAf,QAAQe,MAAM,8BAA+BA,GAE7ClB,KAAKsF,eAAexB,KAAK,CACvB2O,YACAvP,UACAhC,MAAOA,EAAM6R,QACb5Q,OAAQ,UAGJjB,CACR,CACF,CAOA,YAAA2R,CAAa3P,GAEX,GAAIA,EAAQ8P,WAAW,SAAU,CAC/B,MAAMC,EAAgB/P,EAAQgQ,QAAQ,QAAS,IAC/C,OAAOlT,KAAKmT,+BAA+BF,EAAc7O,cAAcgP,OACzE,CAEA,GAAIlQ,EAAQ8P,WAAW,SAAU,CAC/B,MAAMC,EAAgB/P,EAAQgQ,QAAQ,QAAS,IAC/C,OAAOlT,KAAKqT,mBAAmBJ,EAAc7O,cAAcgP,OAC7D,CAGA,MAAME,EAAMpQ,EAAQkB,cAAcgP,OAG5BG,EAAyBvT,KAAKwT,4BAA4BF,GAChE,GAAIC,EACF,OAAOA,EAIT,MAIME,EAAsBH,EAAIzP,SAAS,aACtCyP,EAAIzP,SAAS,QAAUyP,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,MAC1DyP,EAAIzP,SAAS,WAAayP,EAAIzP,SAAS,SAAWyP,EAAIzP,SAAS,aAMlE,GAZsB,CAAC,KAAM,MAAO,OAAQ,KAAM,KAC5B,QAAS,QAAS,SAAU,SAAU,QAOvB6P,KAAKzP,GAAWqP,EAAIzP,SAASI,KAC/DqP,EAAIzP,SAAS,aAAeyP,EAAIzP,SAAS,MAC1C4P,EAGA,MAAO,CACLjL,KAAM,mBACNhH,OAAQ0B,EACRgE,SAAUlH,KAAK2T,cAAcL,GAC7BtL,KAAMhI,KAAK4T,UAAUN,IAQzB,GAHuB,CAAC,KAAM,SAAU,WAAY,KAAM,YACnBI,KAAKzP,GAAWqP,EAAIzP,SAASI,IAGlE,MAAO,CACLuE,KAAM,mBACNtB,SAAUlH,KAAK2T,cAAcL,IAQjC,GAHuB,CAAC,QAAS,SAAU,MAAO,KAAM,OAAQ,OAAQ,QAAS,QAAS,UACnDI,KAAKzP,GAAWqP,EAAIzP,SAASI,IAE/C,CAEnB,MAAO,CACLuE,KAAM,cACNqL,SAHoBP,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,UAAYyP,EAAIzP,SAAS,OAGtD,QAAU,QACpCqD,SAAUlH,KAAK2T,cAAcL,GAC7BtL,KAAMhI,KAAK4T,UAAUN,GAEzB,CAQA,MALsB,CAAC,KAAM,KAAM,OAAQ,IAAK,QAC1B,QAAS,UAAW,QAAS,WAAY,SAAU,OAAQ,QAC5CI,KAAKzP,GAAWqP,EAAIzP,SAASI,IAG3D,CACLuE,KAAM,mBACNhH,OAAQ0B,EACRgE,SAAUlH,KAAK2T,cAAcL,GAC7BtL,KAAMhI,KAAK4T,UAAUN,GAEzB,CAQA,iBAAAQ,GACE,OAAOvQ,GACT,CAEA,qBAAAwQ,CAAsBC,GACpB,IAAKA,EACH,MAAO,GAGT,IAAI5R,EAAS,GAAG4R,IAASZ,OAEzBhR,EAASA,EAAO8Q,QAAQ,eAAgB,KAAKE,OAE7C,MAAMa,EAAqB,gEAC3B,KAAOA,EAAmBC,KAAK9R,IAC7BA,EAASA,EAAO8Q,QAAQe,EAAoB,IAAIb,OAIlDhR,EAASA,EAAO8Q,QADM,wEACiB,IAAIE,OAE3C,MAAMe,EAAmB,CACvB,wOACA,4BAGF,IAAK,MAAMC,KAAWD,EACpB/R,EAASA,EAAO8Q,QAAQkB,EAAS,IAAIhB,OAKvC,GAFAhR,EAASA,EAAO8Q,QAAQ,2BAA4B,IAAIE,QAEnDhR,EAAQ,CACX,MAAMiS,EAAwB,sFAC1BA,EAAsBH,KAAKF,EAAOZ,UACpChR,EAAS4R,EAAOZ,OAAOF,QAAQmB,EAAuB,IAAIjB,OAE9D,CAIA,OAFAhR,EAASA,EAAO8Q,QAAQ,2BAA4B,IAAIE,OAEjDhR,CACT,CAEA,oBAAAkS,CAAqBpR,GACnB,QAAKA,GAGE,oDAAoDgR,KAAKhR,EAClE,CAEA,mBAAAqR,CAAoB/K,GAClB,OAAKA,GAAWA,EAAOjB,WAGhBiB,EAAOjB,SAASuH,QAAUtG,EAAOjB,SAASC,OAFxC,IAGX,CAEA,gBAAAgM,CAAiBtR,GACf,MAAMuR,EAAUnG,MAAMoG,KAAK1U,KAAKuF,eAAeoP,UAC/C,GAAuB,IAAnBF,EAAQ3M,OACV,MAAO,GAGT,MAAM8M,EAAgB,yBAAyBV,KAAKhR,GAC9C2R,EAAmB,6BAA6BX,KAAKhR,GAE3D,IAAI4R,EAAaL,EAcjB,OAbIG,EACFE,EAAaA,EAAWC,OAAO7M,GAAyC,kBAAlClI,KAAKuU,oBAAoBrM,IACtD2M,IACTC,EAAaA,EAAWC,OAAO7M,IAC7B,MAAM4H,EAAS9P,KAAKuU,oBAAoBrM,GACxC,MAAkB,oBAAX4H,GAA2C,oBAAXA,KAIjB,IAAtBgF,EAAWhN,SACbgN,EAAaL,GAGRK,EAAWE,KAAK,CAACC,EAAGC,KACzB,MAAMC,EAAQF,EAAE1M,UAAU6M,cAAgBH,EAAE1M,UAAU8M,WAAa,EAEnE,OADcH,EAAE3M,UAAU6M,cAAgBF,EAAE3M,UAAU8M,WAAa,GACpDF,GAEnB,CAEA,yBAAAG,CAA0BpS,EAASqS,EAAkBC,GACnD,MAAMV,EAAa9U,KAAKwU,iBAAiBtR,GACzC,GAA0B,IAAtB4R,EAAWhN,OACb,OAAO,KAGT,GAAIyN,EACF,IAAK,MAAME,KAAaX,EACtB,GAAI9U,KAAK0V,kBAAkBD,EAAWF,EAAkBC,GACtD,OAAOC,EAKb,OAAOX,EAAW,EACpB,CAEA,iBAAAa,CAAkBC,GAChB,OAAKA,EAIEA,EACJ1C,QAAQ,eAAgB,KACxB2C,MAAM,aACNC,IAAIC,GAASA,EAAM3C,QACnB2B,OAAOgB,GAASA,EAAMjO,OAAS,GAPzB,EAQX,CAEA,uBAAAkO,EAAwBxU,OAAEA,EAAS,GAAEyU,SAAEA,EAAW,GAAEC,SAAEA,EAAW,MAAS,IACxE,MAAM1S,EAAW,IAAI2S,IAErB,GAAI3U,EAAQ,CACVgC,EAAS6B,IAAI7D,EAAO4C,eACpB,IAAK,MAAM2R,KAAS/V,KAAK2V,kBAAkBnU,GACzCgC,EAAS6B,IAAI0Q,EAAM3R,cAEvB,CAEA,GAAI6R,EAAU,CACZ,MAAMG,EAAWH,EAAS/C,QAAQ,YAAa,IAC/C1P,EAAS6B,IAAI+Q,EAAShS,eACtB,IAAK,MAAM2R,KAAS/V,KAAK2V,kBAAkBS,GACzC5S,EAAS6B,IAAI0Q,EAAM3R,cAEvB,CAQA,MANiB,UAAb8R,EACF,CAAC,QAAS,QAAS,UAAW,KAAM,KAAM,QAAQjO,QAAQhE,GAAWT,EAAS6B,IAAIpB,IAC5D,UAAbiS,GACT,CAAC,QAAS,QAAS,OAAQ,KAAM,MAAO,OAAQ,MAAMjO,QAAQhE,GAAWT,EAAS6B,IAAIpB,IAGjFqK,MAAMoG,KAAKlR,GAAUuR,OAAOsB,QACrC,CAEA,mBAAAC,CAAoBpT,GAElB,MAAMsS,EAAiBxV,KAAK8T,oBACtByC,EAAoBvW,KAAK+T,sBAAsB7Q,GAG/CsT,EAAmBtT,EAAQuT,MAAM,yCACvC,GAAID,EAAkB,CACpB,IAAIE,EAAc,EACdF,EAAiB,GAEnBE,EAAcC,SAASH,EAAiB,KACP,OAAxBA,EAAiB,IAAuC,OAAxBA,EAAiB,IAEzB,QAAxBA,EAAiB,MAD1BE,EAAc,GAIhB,MAAM1M,EAAahK,KAAK+T,sBAAsByC,EAAiB,KAAOA,EAAiB,GAAGpD,OAC1F,OAAOpT,KAAK4W,0BAA0B5M,EAAY0M,EAAalB,EACjE,CAGA,MAAMqB,EAAc3T,EAAQuT,MAAM,wCAClC,GAAII,EAAa,CACf,MAAMC,EAAaD,EAAY,GACzB7M,EAAahK,KAAK+T,sBAAsB8C,EAAY,KAAOA,EAAY,GAAGzD,OAC1E2D,EAA4B,UAAfD,GAAyC,QAAfA,EAC7C,OAAO9W,KAAKgX,0BAA0BhN,EAAY+M,EAAYvB,EAChE,CAEA,GAAIxV,KAAKsU,qBAAqBpR,GAAU,CACtC,MAAM+T,EAAejX,KAAKsV,0BAA0BpS,EAASqT,EAAmBf,GAChF,GAAIyB,EACF,OAAOA,CAEX,CAGA,OAAOjX,KAAKkX,iBAAiBX,GAAqBrT,EAASsS,EAC7D,CAKA,yBAAAoB,CAA0B5M,EAAY0M,EAAalB,GAEjD,MAAM2B,EAAkB,GACxB,IAAK,MAAMhO,KAASnJ,KAAKuF,eAAeoP,SACjCxL,EAAMZ,UAAgD,kBAApCvI,KAAKuU,oBAAoBpL,IAChDgO,EAAgBrT,KAAKqF,GAIvBgO,EAAgBnC,KAAK,CAACC,EAAGC,KAAOD,EAAE1M,SAAS6O,aAAe,IAAMlC,EAAE3M,SAAS6O,aAAe,IAG1F,MAAMC,EAAkBrN,EACpBmN,EAAgBpC,OAAO5L,GAASnJ,KAAK0V,kBAAkBvM,EAAOa,EAAYwL,IAC1E2B,EAEJ,GAAIE,EAAgBvP,QAAU4O,EAAa,CACzC,MAAMY,EAAcD,EAAgBX,EAAc,GAElD,OADAvW,QAAQC,IAAI,YAAYsW,wBAAkC1M,OAAgBsN,EAAYlS,QAC/EkS,CACT,CAGA,OADAnX,QAAQgB,KAAK,MAAMuV,eAAyB1M,cACrC,IACT,CAKA,yBAAAgN,CAA0BhN,EAAY+M,EAAYvB,GAChD,IAAK,MAAMrM,KAASnJ,KAAKuF,eAAeoP,SAAU,CAChD,IAAKxL,EAAMZ,SAAU,SAErB,MAAMgP,EAAcvX,KAAKuU,oBAAoBpL,GAI7C,KAAI4N,GAHoC,kBAAhBQ,MAInBR,IAHoC,oBAAhBQ,GAAqD,oBAAhBA,KAK1DvX,KAAK0V,kBAAkBvM,EAAOa,EAAYwL,IAAiB,CAC7D,MAAMgC,EAAcT,EAAa,UAAY,OAE7C,OADA5W,QAAQC,IAAI,YAAYoX,aAAuBxN,OAAgBb,EAAM/D,QAC9D+D,CACT,CACF,CAEA,MAAMqO,EAAcT,EAAa,UAAY,OAE7C,OADA5W,QAAQgB,KAAK,MAAMqW,KAAexN,cAC3B,IACT,CAKA,gBAAAkN,CAAiBhU,EAASsS,GACxB,MAAMiC,EAASvU,GAAWA,EAAQkQ,OAClC,IAAKqE,EACH,OAAO,KAGT,IAAK,MAAMtO,KAASnJ,KAAKuF,eAAeoP,SACtC,GAAKxL,GACDnJ,KAAK0V,kBAAkBvM,EAAOsO,EAAQjC,GACxC,OAAOrM,EAGX,OAAO,IACT,CAKA,iBAAAuM,CAAkBvM,EAAOa,EAAYwL,GACnC,IAAKrM,IAAUa,EACb,OAAO,EAGT,MAAM0N,EAAc1N,EAAW5F,cAE/B,GAAI+E,EAAMZ,UAAY+F,MAAMC,QAAQpF,EAAMZ,SAAS/E,UACjD,IAAK,MAAMS,KAAWkF,EAAMZ,SAAS/E,SAAU,CAC7C,IAAKS,EAAS,SACd,MAAM0T,EAAe1T,EAAQG,cAC7B,GAAIsT,EAAY7T,SAAS8T,IAAiBA,EAAa9T,SAAS6T,GAC9D,OAAO,CAEX,CAGF,IAAK,MAAOzT,EAASK,KAAYX,OAAOC,QAAQ4R,GAAiB,CAC/D,MAAMmC,EAAe1T,EAAQG,cAC7B,GAAIsT,EAAY7T,SAAS8T,GACvB,OAAO,EAGT,IAAK,MAAMpT,KAASD,EAAS,CAC3B,MAAMsT,EAAarT,EAAMH,cACzB,GAAIsT,EAAY7T,SAAS+T,GACvB,OAAO,CAEX,CACF,CAEA,GAAIzO,EAAMZ,UAAYY,EAAMZ,SAAS/G,OAAQ,CAC3C,MAAMqW,EAAc1O,EAAMZ,SAAS/G,OAAO4C,cAC1C,GAAIyT,EAAYhU,SAAS6T,IAAgBA,EAAY7T,SAASgU,GAC5D,OAAO,CAEX,CAEA,SAAI1O,EAAMZ,UAAYY,EAAMZ,SAAS0N,UAC/BjS,EAAyBgG,EAAYb,EAAMZ,SAAS0N,SAAUT,GAMtE,CAKA,2BAAAsC,CAA4B5U,GAE1B,IAAI1B,EAAS0B,EACb,MAAM6U,EAAY,CAAC,IAAK,IAAK,IAAK,KAElC,IAAK,MAAMC,KAAYD,EACrB,GAAI7U,EAAQW,SAASmU,GAAW,CAC9B,MAAMC,EAAQ/U,EAAQ2S,MAAMmC,GAC5B,GAAIC,EAAM,GAAI,CACZzW,EAASyW,EAAM,GAAG7E,OAClB,KACF,CACF,CAQF,OAJA5R,EAASA,EACN0R,QAAQ,uBAAwB,IAChCE,OAEI,CACL5K,KAAM,mBACNhH,SACA0F,SAAUlH,KAAK2T,cAAczQ,GAC7B8E,KAAMhI,KAAK4T,UAAU1Q,GAEzB,CAKA,8BAAAiQ,CAA+BjQ,GAC7B,MAAMoQ,EAAMpQ,EAAQkB,cAAcgP,OAGlC,IAAI3H,EAAQ,KACZ,MAAMyM,EAAW,CACf,IAAK,SAAU,KAAM,SACrB,IAAK,IAAU,KAAM,IACrB,IAAK,MAAU,KAAM,MACrB,IAAK,SAAU,KAAM,SAAU,MAAO,SACtC,IAAK,SAAU,KAAM,SACrB,IAAK,SAAU,KAAM,SAAU,OAAQ,SAAU,QAAS,SAC1D,IAAK,SAAU,KAAM,SACrB,IAAK,EAAU,KAAM,EACrB,IAAK,QAAU,KAAM,QAAU,MAAO,QAAU,OAAQ,QACxD,MAAO,SAAU,OAAQ,SACzB,IAAK,QAAU,KAAM,QACrB,IAAK,SAAU,KAAM,SACrB,IAAK,SAAU,KAAM,UAGvB,IAAK,MAAOC,EAAWC,KAAezU,OAAOC,QAAQsU,GACnD,GAAI5E,EAAIzP,SAASsU,GAAY,CAC3B1M,EAAQ2M,EACR,KACF,CAIF,MAAMC,EAAUrY,KAAKsY,aAAahF,GAGlC,IAAI5K,EAAQ,KACZ,GAAI4K,EAAIzP,SAAS,QAAUyP,EAAIzP,SAAS,MACtC6E,EAAQ,SACH,GAAI4K,EAAIzP,SAAS,QAAUyP,EAAIzP,SAAS,MAC7C6E,EAAQ,QACH,GAAI4K,EAAIzP,SAAS,KAAM,CAC5B,MAAM4S,EAAQnD,EAAImD,MAAM,uBACpBA,IACF/N,EAAQ6P,WAAW9B,EAAM,IAE7B,CAGA,IAAI+B,EAAW,MACXlF,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,QAC3D2U,EAAWxY,KAAKyY,wBAAwBnF,IAI1C,IAAI/L,EAAW,KACf,GAAI+L,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,QAAUyP,EAAIzP,SAAS,UAAW,CAE7F,MAAM6U,EAAcpF,EAAImD,MAAM,aAE5BlP,EADEmR,EACSH,WAAWG,EAAY,IAAMlR,KAAKC,GAAK,IAEvCD,KAAKC,GAAK,CAEzB,CAGA,IAAImE,EAAU,KACV0H,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,eAEnC+H,EADE0H,EAAIzP,SAAS,OACL,GAEA,IAEHyP,EAAIzP,SAAS,QAAUyP,EAAIzP,SAAS,aAC7C+H,EAAU,GAIZ,IAAI+M,EAAO,KAKX,OAJIrF,EAAIzP,SAAS,SAAWyP,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,UAAYyP,EAAIzP,SAAS,WACtF8U,GAAO,GAGF,CACLnQ,KAAM,sBACNtF,QAASA,EACTuI,MAAOA,EACP/C,MAAOA,EACP8P,SAAUA,EACVjR,SAAUA,EACVqE,QAASA,EACT+M,KAAMA,EACNN,QAASA,EACTO,mBAAmB,EAEvB,CAKA,YAAAN,CAAahF,GACX,MAAM+E,EAAU,GAGVQ,EAAiB,CAErB,KAAM,CAAErQ,KAAM,UAAW2B,MAAO,EAAK/E,KAAM,eAC3C,MAAO,CAAEoD,KAAM,UAAW2B,MAAO,GAAK/E,KAAM,oBAC5C,MAAO,CAAEoD,KAAM,UAAW2B,MAAO,EAAK/E,KAAM,UAC5C,KAAM,CAAEoD,KAAM,UAAW2B,MAAO,EAAK/E,KAAM,SAG3C,MAAO,CAAEoD,KAAM,OAAQiD,MAAO,SAAUqN,UAAW,GAAK1T,KAAM,cAC9D,KAAM,CAAEoD,KAAM,OAAQiD,MAAO,SAAUqN,UAAW,GAAK1T,KAAM,cAC7D,MAAO,CAAEoD,KAAM,OAAQiD,MAAO,MAAUqN,UAAW,GAAK1T,KAAM,aAC9D,QAAS,CAAEoD,KAAM,OAAQiD,MAAO,MAAUqN,UAAW,GAAK1T,KAAM,YAGhE,QAAS,CAAEoD,KAAM,WAAYuQ,UAAW,GAAKC,UAAW,GAAK5T,KAAM,YACnE,MAAO,CAAEoD,KAAM,WAAYuQ,UAAW,GAAKC,UAAW,GAAK5T,KAAM,kBACjE,MAAO,CAAEoD,KAAM,WAAYuQ,UAAW,EAAKC,UAAW,EAAK5T,KAAM,SACjE,MAAO,CAAEoD,KAAM,WAAYuQ,UAAW,EAAKC,UAAW,EAAK5T,KAAM,SAGjE,OAAQ,CAAEoD,KAAM,YAAayQ,UAAW,QAASC,MAAO,KAAOC,UAAW,GAAK/T,KAAM,gBACrF,KAAM,CAAEoD,KAAM,YAAayQ,UAAW,QAASC,MAAO,KAAOC,UAAW,GAAK/T,KAAM,gBACnF,KAAM,CAAEoD,KAAM,YAAayQ,UAAW,QAASC,MAAO,KAAOC,UAAW,GAAK/T,KAAM,cAEnF,OAAQ,CAAEoD,KAAM,YAAayQ,UAAW,QAASC,MAAO,KAAOC,UAAW,IAAM/T,KAAM,mBACtF,KAAM,CAAEoD,KAAM,YAAayQ,UAAW,QAASC,MAAO,MAAQC,UAAW,GAAK/T,KAAM,eACpF,KAAM,CAAEoD,KAAM,YAAayQ,UAAW,QAASC,MAAO,KAAOC,UAAW,GAAK/T,KAAM,eAEnF,OAAQ,CAAEoD,KAAM,YAAayQ,UAAW,OAAQC,MAAO,IAAME,KAAM,IAAKhU,KAAM,UAC9E,MAAO,CAAEoD,KAAM,YAAayQ,UAAW,OAAQC,MAAO,IAAME,KAAM,IAAKhU,KAAM,aAC7E,KAAM,CAAEoD,KAAM,YAAayQ,UAAW,OAAQC,MAAO,KAAOE,KAAM,IAAKhU,KAAM,aAE7E,MAAO,CAAEoD,KAAM,YAAayQ,UAAW,UAAWH,UAAW,GAAK1T,KAAM,WACxE,IAAK,CAAEoD,KAAM,YAAayQ,UAAW,UAAWH,UAAW,EAAK1T,KAAM,SACtE,OAAQ,CAAEoD,KAAM,YAAayQ,UAAW,UAAWH,UAAW,GAAK1T,KAAM,WAGzE,KAAM,CAAEoD,KAAM,SAAU6Q,OAAQ,CAAC,QAAU,SAAU,SAAWP,UAAW,GAAK1T,KAAM,UACtF,OAAQ,CAAEoD,KAAM,SAAU6Q,OAAQ,CAAC,MAAU,QAAU,UAAWP,UAAW,GAAK1T,KAAM,UACxF,KAAM,CAAEoD,KAAM,SAAU6Q,OAAQ,CAAC,QAAU,SAAU,SAAWP,UAAW,EAAK1T,KAAM,UACtF,QAAS,CAAEoD,KAAM,SAAU6Q,OAAQ,CAAC,SAAU,MAAU,UAAWP,UAAW,GAAK1T,KAAM,UACzF,MAAO,CAAEoD,KAAM,SAAU6Q,OAAQ,CAAC,SAAU,SAAU,SAAWP,UAAW,GAAK1T,KAAM,UAGvF,KAAM,CAAEoD,KAAM,iBAAkB6Q,OAAQ,CAAC,SAAU,QAAU,SAAU,SAAWzN,QAAS,GAAKxG,KAAM,cACtG,MAAO,CAAEoD,KAAM,iBAAkB6Q,OAAQ,CAAC,SAAU,QAAU,SAAU,SAAWzN,QAAS,GAAKxG,KAAM,cACvG,OAAQ,CAAEoD,KAAM,aAAc6Q,OAAQ,CAAC,SAAU,SAAU,SAAU,SAAU,UAAWzN,QAAS,GAAKxG,KAAM,UAC9G,KAAM,CAAEoD,KAAM,eAAgB6Q,OAAQ,CAAC,SAAU,SAAU,SAAU,MAAU,MAAU,IAAU,SAAWP,UAAW,GAAK1T,KAAM,iBAIhIkU,EAAgB,CACpB,QAAS,CACP,CAAE9Q,KAAM,OAAQiD,MAAO,SAAUqN,UAAW,GAAK1T,KAAM,cACvD,CAAEoD,KAAM,YAAayQ,UAAW,QAASC,MAAO,KAAOC,UAAW,GAAK/T,KAAM,eAC7E,CAAEoD,KAAM,YAAayQ,UAAW,UAAWH,UAAW,GAAK1T,KAAM,kBAEnE,KAAM,CACJ,CAAEoD,KAAM,UAAW2B,MAAO,GAAK/E,KAAM,qBACrC,CAAEoD,KAAM,YAAayQ,UAAW,QAASC,MAAO,KAAOC,UAAW,GAAK/T,KAAM,eAC7E,CAAEoD,KAAM,OAAQiD,MAAO,SAAUqN,UAAW,GAAK1T,KAAM,eAEzD,OAAQ,CACN,CAAEoD,KAAM,OAAQiD,MAAO,MAAUqN,UAAW,GAAK1T,KAAM,cACvD,CAAEoD,KAAM,WAAYuQ,UAAW,GAAKC,UAAW,GAAK5T,KAAM,eAC1D,CAAEoD,KAAM,YAAayQ,UAAW,SAAUH,UAAW,GAAK1T,KAAM,iBAElE,OAAQ,CACN,CAAEoD,KAAM,UAAW2B,MAAO,GAAK/E,KAAM,cACrC,CAAEoD,KAAM,YAAayQ,UAAW,QAASC,MAAO,MAAQC,UAAW,GAAK/T,KAAM,eAC9E,CAAEoD,KAAM,YAAayQ,UAAW,UAAWC,MAAO,KAAO9T,KAAM,mBAKnE,IAAK,MAAOmU,EAAYC,KAAqB7V,OAAOC,QAAQ0V,GACtDhG,EAAIzP,SAAS0V,KACflB,EAAQvU,QAAQ0V,GAChBrZ,QAAQC,IAAI,4BAA4BmZ,MAK5C,MAAME,EAAkBzZ,KAAK0Z,kBAAkBpG,GACzCqG,EAAeF,EAAkBzZ,KAAK4Z,sBAAsBtG,GAAO,KACnEuG,EAAkC,OAAjBF,EAGvB,IAAK,MAAO1V,EAAS6V,KAAWnW,OAAOC,QAAQiV,GACzCgB,GAA8B,OAAZ5V,GAGlBqP,EAAIzP,SAASI,KACfoU,EAAQvU,KAAKgW,GACb3Z,QAAQC,IAAI,uBAAuB6D,QAAc6V,EAAO1U,SAmB5D,OAfIqU,IACEI,GACFxB,EAAQvU,KAAK,CACX0E,KAAM,aACNiD,MAAOkO,EAAalO,MACpBsO,UAAWJ,EAAaI,UACxBC,UAAWL,EAAaK,UACxB5U,KAAM,eAERjF,QAAQC,IAAI,oCAAoCuZ,EAAalO,MAAMwO,SAAS,mBAAmBN,EAAaI,eACnG/Z,KAAK2J,WACd3J,KAAK2J,UAAUuQ,kBAAkB,uCAAwC,SAItE7B,CACT,CAEA,iBAAAqB,CAAkBpG,GAChB,IAAKA,EAAK,OAAO,EAEjB,GADuB,CAAC,QAAS,UAAW,oBAAqB,0BAC9CI,KAAKzP,GAAWqP,EAAIzP,SAASI,IAC9C,OAAO,EAIT,SAFwB,CAAC,MAAO,MAAO,MAEnByP,KAAKyG,GAAQ7G,EAAIzP,SAASsW,MAD1B,CAAC,KAAM,KAAM,IAAK,IAAK,QACyBzG,KAAKyG,GAAQ7G,EAAIzP,SAASsW,IAIhG,CAEA,qBAAAP,CAAsBtG,GACpB,MAAM7H,EAAQzL,KAAKoa,qBAAqB9G,GACxC,GAAc,OAAV7H,EACF,OAAO,KAET,IAAIsO,EACJ,OAAQtO,GACN,KAAK,SACHsO,EAAY,IACZ,MACF,KAAK,EACHA,EAAY,IACZ,MACF,KAAK,MACHA,EAAY,IACZ,MACF,KAAK,IACHA,EAAY,GACZ,MACF,QACEA,EAAY,GAEhB,MAAO,CACLtO,QACAsO,YACAC,UAAW,GAEf,CAEA,oBAAAI,CAAqB9G,GACnB,MAAM+G,EAAW/G,EAAImD,MAAM,qBAC3B,GAAI4D,EACF,OAAO1D,SAAS0D,EAAS,GAAI,IAG/B,MAAMC,EAAgB,CACpB,CAAEC,OAAQ,CAAC,IAAK,OAAQ,MAAOpQ,MAAO,UACtC,CAAEoQ,OAAQ,CAAC,IAAK,OAAQ,MAAOpQ,MAAO,GACtC,CAAEoQ,OAAQ,CAAC,IAAK,OAAQ,OAAQpQ,MAAO,OACvC,CAAEoQ,OAAQ,CAAC,IAAK,MAAO,MAAOpQ,MAAO,KACrC,CAAEoQ,OAAQ,CAAC,IAAK,MAAO,MAAOpQ,MAAO,UACrC,CAAEoQ,OAAQ,CAAC,IAAK,OAAQ,OAAQpQ,MAAO,UACvC,CAAEoQ,OAAQ,CAAC,OAAQpQ,MAAO,UAC1B,CAAEoQ,OAAQ,CAAC,QAASpQ,MAAO,WAG7B,IAAK,MAAMqQ,KAASF,EAClB,GAAIE,EAAMD,OAAO7G,KAAKqC,GAASzC,EAAIzP,SAASkS,IAC1C,OAAOyE,EAAMrQ,MAIjB,OAAImJ,EAAIzP,SAAS,WACR,MAGF,IACT,CAKA,YAAA4W,CAAaC,EAAcrC,GACzB,IAAIsC,GAAU,EAEd,IAAK,MAAMb,KAAUzB,EAGnB,OAFAlY,QAAQC,IAAI,sBAAsB0Z,EAAO1U,SAAS0U,EAAOtR,SAEjDsR,EAAOtR,MACb,IAAK,UACHmS,EAAU3a,KAAK4a,mBAAmBF,EAAcZ,IAAWa,EAC3D,MACF,IAAK,OACHA,EAAU3a,KAAK6a,gBAAgBH,EAAcZ,IAAWa,EACxD,MACF,IAAK,WACHA,EAAU3a,KAAK8a,oBAAoBJ,EAAcZ,IAAWa,EAC5D,MACF,IAAK,YACHA,EAAU3a,KAAK+a,qBAAqBL,EAAcZ,IAAWa,EAC7D,MACF,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,eACHA,EAAU3a,KAAKgb,kBAAkBN,EAAcZ,IAAWa,EAC1D,MACF,IAAK,iBACL,IAAK,aACHA,EAAU3a,KAAKib,sBAAsBP,EAAcZ,IAAWa,EAC9D,MACF,IAAK,aACHA,EAAU3a,KAAKkb,qBAAqBR,EAAcZ,IAAWa,EAC7D,MACF,QACExa,QAAQgB,KAAK,2BAA2B2Y,EAAOtR,QAIrD,OAAOmS,CACT,CAKA,kBAAAC,CAAmBF,EAAcZ,GAC/B,QAAKY,EAAahN,WAElBgN,EAAahN,SAAS/B,aAAc,EACpC+O,EAAahN,SAAS9B,QAAUkO,EAAO3P,MACvCuQ,EAAahN,SAASyN,aAAc,EAEpChb,QAAQC,IAAI,sBAAsB0Z,EAAO3P,UAAU2P,EAAO1U,UACnD,EACT,CAKA,eAAAyV,CAAgBH,EAAcZ,GAC5B,IAAKY,EAAahN,SAAU,OAAO,EAEnC,GAAI1N,KAAKob,sBAAsBV,GAK7B,OAJAA,EAAahN,SAAS+D,SAAW,IAAIvM,EAAMmW,MAAMvB,EAAOrO,OACxDiP,EAAahN,SAAS4N,kBAAoBxB,EAAOhB,UACjD4B,EAAahN,SAASyN,aAAc,EACpChb,QAAQC,IAAI,4BAA4B0Z,EAAOrO,MAAMwO,SAAS,kBAAkBH,EAAOhB,cAChF,EAIT,MAAMyC,EAAgB,IAAIrW,EAAMmW,MAAMvB,EAAOrO,OAI7C,OAHKiP,EAAanS,SAASiT,gBACzBd,EAAanS,SAASiT,cAAgBd,EAAahN,SAASjC,MAAQiP,EAAahN,SAASjC,MAAM6B,QAAU,MAExGoN,EAAahN,SAASjC,OACxBiP,EAAahN,SAASjC,MAAMgQ,KAAKF,EAAe,IAChDb,EAAahN,SAASyN,aAAc,EACpChb,QAAQC,IAAI,4CACL,IAGTD,QAAQgB,KAAK,wCACN,EACT,CAEA,qBAAAia,CAAsBV,GACpB,MAAMhN,EAAWgN,EAAahN,SAC9B,QAAKA,IACE,aAAcA,QAAkCgO,IAAtBhO,EAAS+D,SAC5C,CAKA,mBAAAqJ,CAAoBJ,EAAcZ,GAChC,QAAKY,EAAahN,WAGiB,yBAA/BgN,EAAahN,SAASlF,WACCkT,IAArB5B,EAAOf,YACT2B,EAAahN,SAASqL,UAAYe,EAAOf,gBAElB2C,IAArB5B,EAAOd,YACT0B,EAAahN,SAASsL,UAAYc,EAAOd,WAE3C0B,EAAahN,SAASyN,aAAc,EAEpChb,QAAQC,IAAI,kCAAkC0Z,EAAOf,wBAAwBe,EAAOd,cAC7E,IAEP7Y,QAAQgB,KAAK,sDAAsDuZ,EAAahN,SAASlF,SAClF,GAEX,CAKA,oBAAAuS,CAAqBL,EAAcZ,GAE5B9Z,KAAK2b,aACR3b,KAAK2b,WAAa,IAAInW,IACtBxF,KAAK4b,sBAGP,MAAMC,EAAc,GAAGnB,EAAaoB,QAAQhC,EAAOb,YAG/CjZ,KAAK2b,WAAWI,IAAIF,IACtB7b,KAAK2b,WAAWK,OAAOH,GAIzB,MAAMI,EAAgB,CACpBzS,OAAQkR,EACRlS,KAAMsR,EAAOb,UACbC,MAAOY,EAAOZ,MACdC,UAAWW,EAAOX,WAAa,EAC/BC,KAAMU,EAAOV,MAAQ,IACrBN,UAAWgB,EAAOhB,WAAa,EAC/BoD,UAAWxJ,KAAKC,MAChBwJ,iBAAkB,IAAKzB,EAAaxT,UACpC6H,cAAe,IAAK2L,EAAahS,OACjC0T,iBAAkB,IAAK1B,EAAanT,WAKtC,OAFAvH,KAAK2b,WAAW5P,IAAI8P,EAAaI,GACjC9b,QAAQC,IAAI,yBAAyB0Z,EAAOb,iBAAiByB,EAAatV,SACnE,CACT,CAKA,iBAAA4V,CAAkBN,EAAcZ,GAC9B,IAAKY,EAAahN,SAAU,OAAO,EAEnC,MAAM2O,GAAoBrc,KAAKob,sBAAsBV,GAGhD1a,KAAK2b,aACR3b,KAAK2b,WAAa,IAAInW,IACtBxF,KAAK4b,sBAIP,MAAMU,EAAoB,GAAG5B,EAAaoB,QAAQhC,EAAOtR,OAGrDxI,KAAK2b,WAAWI,IAAIO,IACtBtc,KAAK2b,WAAWK,OAAOM,GAGrBD,EACE3B,EAAahN,SAASjC,OACnBiP,EAAanS,SAASiT,gBACzBd,EAAanS,SAASiT,cAAgBd,EAAahN,SAASjC,MAAM6B,SAEpEoN,EAAahN,SAASjC,MAAMM,IAAI+N,EAAOT,OAAO,IAC9CqB,EAAahN,SAASyN,aAAc,GAEpChb,QAAQgB,KAAK,8CAGfuZ,EAAahN,SAAS+D,SAAW,IAAIvM,EAAMmW,MAAMvB,EAAOT,OAAO,IAC/DqB,EAAahN,SAAS4N,kBAAoBxB,EAAOhB,UACjD4B,EAAahN,SAASyN,aAAc,GAItC,MAAMoB,EAAa,CACjB/S,OAAQkR,EACRlS,KAAM,SACNgU,WAAY1C,EAAOtR,KACnB6Q,OAAQS,EAAOT,OACfP,UAAWgB,EAAOhB,UAClBI,MAAOlZ,KAAKyc,eAAe3C,EAAOtR,MAClC0T,UAAWxJ,KAAKC,MAChB+J,WAAY,EACZC,kBAAmBN,GAAoB3B,EAAahN,SAAS+D,SAAWiJ,EAAahN,SAAS+D,SAASnE,QAAU,KACjHsP,0BAA4BP,EAAoE,EAAhD3B,EAAahN,SAAS4N,mBAAqB,EAC3Fe,oBAKF,OAFArc,KAAK2b,WAAW5P,IAAIuQ,EAAmBC,GACvCpc,QAAQC,IAAI,6BAA6B0Z,EAAOtR,aAAasR,EAAOT,OAAOvR,kBACpE,CACT,CAEA,oBAAAoT,CAAqBR,EAAcZ,GACjC,IAAKY,EAAahN,SAAU,OAAO,EACnC,MAAMA,EAAWgN,EAAahN,SACxBmP,EAAUnP,EAASoI,IAEzB,IAAK+G,EAEH,OADA1c,QAAQgB,KAAK,uCACN,EAGT,GAAIuM,EAASnF,UAAYmF,EAASnF,SAASuU,qBAAuBpP,EAASqP,SAMzE,OALArP,EAASqP,SAASC,SAAS7S,MAAMuH,OAAOoI,EAAOrO,OAC/CiC,EAASqP,SAAShD,UAAU5P,MAAQ2P,EAAOC,UAC3CrM,EAASqP,SAAS/C,UAAU7P,MAAQ2P,EAAOE,UAC3CtM,EAASyN,aAAc,EACvBhb,QAAQC,IAAI,4CACL,EAGT,MAAM6c,EAAiB,IAAI/X,EAAMgY,eAAe,CAC9CH,SAAU,CACRjH,IAAK,CAAE3L,MAAO0S,GACdG,SAAU,CAAE7S,MAAO,IAAIjF,EAAMmW,MAAMvB,EAAOrO,QAC1CsO,UAAW,CAAE5P,MAAO2P,EAAOC,WAC3BC,UAAW,CAAE7P,MAAO2P,EAAOE,YAE7BmD,aAAc,8HACdC,eAAgB,qXAChBzR,aAAa,EACb0R,KAAMnY,EAAMoY,WACZzQ,UAAWa,EAASb,UACpBC,WAAYY,EAASZ,WACrByQ,YAAoC,IAAxB7P,EAAS6P,aAWvB,OARAN,EAAe1U,SAASuU,qBAAsB,EAC9CpC,EAAahN,SAAWuP,EAEQ,mBAArBvP,EAASW,SAClBX,EAASW,UAGXlO,QAAQC,IAAI,0CACL,CACT,CAKA,cAAAqc,CAAeD,GACb,OAAQA,GACN,IAAK,SAAU,OAAO,KACtB,IAAK,SAKL,QAAS,OAAO,KAJhB,IAAK,SAAU,OAAO,KACtB,IAAK,SAAU,MAAO,MACtB,IAAK,SAAU,OAAO,KACtB,IAAK,eAAgB,MAAO,KAGhC,CAKA,qBAAAvB,CAAsBP,EAAcZ,GAClC,IAAKY,EAAahN,SAAU,OAAO,EAGnCgN,EAAahN,SAAS/B,aAAc,EACpC+O,EAAahN,SAAS9B,QAAUkO,EAAOlO,QAGlC5L,KAAK2b,aACR3b,KAAK2b,WAAa,IAAInW,IACtBxF,KAAK4b,sBAIP,MAAM4B,EAAwB,GAAG9C,EAAaoB,QAAQhC,EAAOtR,OAGzDxI,KAAK2b,WAAWI,IAAIyB,IACtBxd,KAAK2b,WAAWK,OAAOwB,GAIzB9C,EAAahN,SAASjC,MAAQ,IAAIvG,EAAMmW,MAAMvB,EAAOT,OAAO,IAC5DqB,EAAahN,SAASyN,aAAc,EAGpC,MAAMsC,EAAiB,CACrBjU,OAAQkR,EACRlS,KAAM,aACNkV,QAAS5D,EAAOtR,KAChB6Q,OAAQS,EAAOT,OACfzN,QAASkO,EAAOlO,QAChBsN,MAAOlZ,KAAK2d,mBAAmB7D,EAAOtR,MACtC0T,UAAWxJ,KAAKC,MAChB+J,WAAY,EACZlB,cAAe,IAAItW,EAAMmW,MAAMX,EAAahN,SAASjC,OACrDmS,gBAAiBlD,EAAahN,SAAS9B,SAKzC,OAFA5L,KAAK2b,WAAW5P,IAAIyR,EAAuBC,GAC3Ctd,QAAQC,IAAI,iCAAiC0Z,EAAOtR,aAAasR,EAAOT,OAAOvR,kBACxE,CACT,CAKA,kBAAA6V,CAAmBD,GACjB,OAAQA,GACN,IAAK,iBAEL,QAAS,OAAO,KADhB,IAAK,aAAc,OAAO,KAG9B,CAKA,kBAAA9B,GACE,GAAI5b,KAAK6d,qBAAsB,OAE/B7d,KAAK6d,sBAAuB,EAE5B,MAAMC,EAAU,KACV9d,KAAK2b,YAAc3b,KAAK2b,WAAW3T,KAAO,GAC5ChI,KAAK+d,mBAGH/d,KAAK6d,sBACPG,sBAAsBF,IAI1BA,IACA3d,QAAQC,IAAI,4BACd,CAKA,gBAAA2d,GACE,MAAME,EAAcvL,KAAKC,MAEzB,IAAK,MAAOxK,EAAI8Q,KAAcjZ,KAAK2b,WAAW/X,UAAW,CACvD,MAAMsa,EAAgD,MAArCD,EAAchF,EAAUiD,WAEzC,OAAQjD,EAAUzQ,MAChB,IAAK,QACHxI,KAAKme,qBAAqBlF,EAAWiF,GACrC,MACF,IAAK,QACHle,KAAKoe,qBAAqBnF,EAAWiF,GACrC,MACF,IAAK,OACHle,KAAKqe,oBAAoBpF,EAAWiF,GACpC,MACF,IAAK,UACHle,KAAKse,uBAAuBrF,EAAWiF,GACvC,MACF,IAAK,UACHle,KAAKue,uBAAuBtF,EAAWiF,GACvC,MACF,IAAK,SACHle,KAAKwe,sBAAsBvF,EAAWiF,GACtC,MACF,IAAK,SACHle,KAAKye,sBAAsBxF,EAAWiF,GACtC,MACF,IAAK,aACHle,KAAK0e,0BAA0BzF,EAAWiF,GAGhD,CACF,CAKA,oBAAAC,CAAqBlF,EAAWiF,GAC9B,MAAMS,EAAUnX,KAAKoX,IAAIV,EAAUjF,EAAUC,MAAQ,EAAI1R,KAAKC,IAAMwR,EAAUE,UAC9EF,EAAUzP,OAAOtC,SAASG,EAAI4R,EAAUkD,iBAAiB9U,EAAIsX,CAC/D,CAKA,oBAAAP,CAAqBnF,EAAWiF,GAC9B,MACMvN,EAAW,EADGnJ,KAAKoX,IAAIV,EAAUjF,EAAUC,MAAQ,EAAI1R,KAAKC,IAAMwR,EAAUE,UAElFF,EAAUzP,OAAOd,MAAMoF,UAAUmL,EAAUlK,cAAc5H,EAAIwJ,EAC/D,CAKA,mBAAA0N,CAAoBpF,EAAWiF,GAC7B,MAAMW,EAAiBX,EAAUjF,EAAUC,MAAQ,EAAI1R,KAAKC,GACrC,MAAnBwR,EAAUG,KACZH,EAAUzP,OAAOjC,SAASJ,EAAI8R,EAAUmD,iBAAiBjV,EAAI0X,EACjC,MAAnB5F,EAAUG,KACnBH,EAAUzP,OAAOjC,SAASF,EAAI4R,EAAUmD,iBAAiB/U,EAAIwX,EACjC,MAAnB5F,EAAUG,OACnBH,EAAUzP,OAAOjC,SAASD,EAAI2R,EAAUmD,iBAAiB9U,EAAIuX,EAEjE,CAKA,sBAAAP,CAAuBrF,EAAWiF,GAChC,GAAIjF,EAAUzP,OAAOkE,SAAU,CAC7B,MAAMoL,GAAmD,GAAtCtR,KAAKoX,IAAc,EAAVV,EAAc,EAAI1W,KAAKC,IAAY,IAAOwR,EAAUH,UAChFG,EAAUzP,OAAOkE,SAAS4N,kBAAoBxC,EAC9CG,EAAUzP,OAAOkE,SAASyN,aAAc,CAC1C,CACF,CAKA,sBAAAoD,CAAuBtF,EAAWiF,GAChC,GAAIjF,EAAUzP,OAAOkE,SAAU,CAC7B,MAAMoR,EAAOZ,EAAUjF,EAAUC,MAAS,EACpCzN,GAAQ,IAAIvG,EAAMmW,OAAQ0D,OAAOD,EAAK,EAAG,IAC/C7F,EAAUzP,OAAOkE,SAASjC,MAAQA,EAClCwN,EAAUzP,OAAOkE,SAASyN,aAAc,CAC1C,CACF,CAKA,qBAAAqD,CAAsBvF,EAAWiF,GAC/B,GAAI1W,KAAKwX,SAAW,GAAK,CACvB,MAAMC,GAAUzX,KAAKwX,SAAW,IAAO/F,EAAUH,UACjDG,EAAUzP,OAAOtC,SAASC,EAAI8R,EAAUkD,iBAAiBhV,EAAI8X,EAC7DhG,EAAUzP,OAAOtC,SAASI,EAAI2R,EAAUkD,iBAAiB7U,EAAI2X,CAC/D,MACEhG,EAAUzP,OAAOtC,SAASC,EAAI8R,EAAUkD,iBAAiBhV,EACzD8R,EAAUzP,OAAOtC,SAASI,EAAI2R,EAAUkD,iBAAiB7U,CAE7D,CAKA,qBAAAmX,CAAsBxF,EAAWiF,GAC/B,IAAKjF,EAAUzP,OAAOkE,SAAU,OAGhC,MAAMwR,EAAkBhB,EAAUjF,EAAUC,MACtCiG,EAAYlG,EAAUI,OAAOvR,OAG7BsX,EAAiBF,EAAkBC,EACnCE,EAAoB7X,KAAK8X,MAAMF,GAC/BG,GAAkBF,EAAoB,GAAKF,EAC3CK,EAAaJ,EAAgBC,EAG7BI,EAAe,IAAIva,EAAMmW,MAAMpC,EAAUI,OAAOgG,IAChDK,EAAY,IAAIxa,EAAMmW,MAAMpC,EAAUI,OAAOkG,IAC7CI,EAAeF,EAAahE,KAAKiE,EAAWF,GAGlD,IAAII,EAAsB,EAC1B,OAAQ3G,EAAUuD,YAChB,IAAK,SAEHoD,EAAsB,GAAM,GAAMpY,KAAKoX,IAAc,IAAVV,GAC3C,MACF,IAAK,SAEH0B,EAAsB,GAAM,GAAMpY,KAAKoX,IAAc,IAAVV,GAC3C,MACF,IAAK,SAEH0B,EAAsB,GAAapY,KAAKoX,IAAc,EAAVV,GAAe1W,KAAKqY,IAAc,EAAV3B,GAAxC,GAC5B,MACF,IAAK,SAEH0B,EAAsB,GAAM,GAAMpY,KAAKoX,IAAc,IAAVV,GAC3C,MACF,IAAK,SAEH0B,EAAsB,GAAM,GAAMpY,KAAKoX,IAAc,IAAVV,GAAiB1W,KAAKqY,IAAc,GAAV3B,GACrE,MACF,IAAK,eAEH0B,EAAsB,GAAM,GAAMpY,KAAKoX,IAAc,EAAVV,GAI3CjF,EAAUoD,iBACRpD,EAAUzP,OAAOkE,SAASjC,QAC5BwN,EAAUzP,OAAOkE,SAASjC,MAAMa,KAAKqT,GACrC1G,EAAUzP,OAAOkE,SAASyN,aAAc,IAG1ClC,EAAUzP,OAAOkE,SAAS+D,SAAWkO,EACrC1G,EAAUzP,OAAOkE,SAAS4N,kBAAoBrC,EAAUH,UAAY8G,EACpE3G,EAAUzP,OAAOkE,SAASyN,aAAc,EAE5C,CAKA,yBAAAuD,CAA0BzF,EAAWiF,GACnC,IAAKjF,EAAUzP,OAAOkE,SAAU,OAGhC,MAAMwR,EAAkBhB,EAAUjF,EAAUC,MACtCiG,EAAYlG,EAAUI,OAAOvR,OAG7BsX,EAAiBF,EAAkBC,EACnCE,EAAoB7X,KAAK8X,MAAMF,GAC/BG,GAAkBF,EAAoB,GAAKF,EAC3CK,EAAaJ,EAAgBC,EAG7BI,EAAe,IAAIva,EAAMmW,MAAMpC,EAAUI,OAAOgG,IAChDK,EAAY,IAAIxa,EAAMmW,MAAMpC,EAAUI,OAAOkG,IAC7CI,EAAeF,EAAahE,KAAKiE,EAAWF,GAGlD,IAAIM,EAAoB,EACxB,OAAQ7G,EAAUyE,SAChB,IAAK,iBAEHoC,EAAoB,GAAM,GAAMtY,KAAKoX,IAAc,GAAVV,GACzC,MACF,IAAK,aAEH4B,EAAoB,IAAO,IAAOtY,KAAKoX,IAAc,GAAVV,GAK/CjF,EAAUzP,OAAOkE,SAASjC,MAAQkU,EAClC1G,EAAUzP,OAAOkE,SAAS9B,QAAUqN,EAAUrN,QAAUkU,EACxD7G,EAAUzP,OAAOkE,SAASyN,aAAc,CAC1C,CAKA,wBAAA4E,CAAyBve,GACvB,IAAKA,EAAQ,OAAO,KAEpB,MAAMwe,EAAcxe,EAAO4C,cAG3B,OAAI4b,EAAYnc,SAAS,UAAYmc,EAAYnc,SAAS,YACtDmc,EAAYnc,SAAS,OAASmc,EAAYnc,SAAS,UACnDmc,EAAYnc,SAAS,OAASmc,EAAYnc,SAAS,WACnDmc,EAAYnc,SAAS,UAAYmc,EAAYnc,SAAS,MACjD,CAAC,SAINmc,EAAYnc,SAAS,SAAWmc,EAAYnc,SAAS,WACrDmc,EAAYnc,SAAS,OAASmc,EAAYnc,SAAS,UACnDmc,EAAYnc,SAAS,MAAQmc,EAAYnc,SAAS,QAC7C,CAAC,MAINmc,EAAYnc,SAAS,OAASmc,EAAYnc,SAAS,UACnDmc,EAAYnc,SAAS,OAASmc,EAAYnc,SAAS,UAC9C,CAAC,MAINmc,EAAYnc,SAAS,SAAWmc,EAAYnc,SAAS,UACrDmc,EAAYnc,SAAS,SAAWmc,EAAYnc,SAAS,UACrDmc,EAAYnc,SAAS,OAASmc,EAAYnc,SAAS,UAC9C,CAAC,QAINmc,EAAYnc,SAAS,MAAQmc,EAAYnc,SAAS,QAClDmc,EAAYnc,SAAS,MAAQmc,EAAYnc,SAAS,QAClDmc,EAAYnc,SAAS,MAAQmc,EAAYnc,SAAS,QAC7C,CAAC,OAINmc,EAAYnc,SAAS,MAAQmc,EAAYnc,SAAS,WAClDmc,EAAYnc,SAAS,MAAQmc,EAAYnc,SAAS,WAClDmc,EAAYnc,SAAS,OAASmc,EAAYnc,SAAS,UAC9C,CAAC,QAGH,IACT,CAKA,wBAAAoc,CAAyBvF,GACvBva,QAAQC,IAAI,qCAAqCsa,EAAatV,QAU9DpF,KAAKya,aAAaC,EAPK,CAAC,CACtBlS,KAAM,YACNyQ,UAAW,UACXH,UAAW,GACX1T,KAAM,0BAMRuM,WAAW,KACT3R,KAAKkgB,wBAAwBxF,IAC5B,IACL,CAKA,uBAAAwF,CAAwBxF,GACtB,IAAK1a,KAAK2b,WAAY,OAEtB,MAAMwE,EAAsB,GAAGzF,EAAaoB,eACxC9b,KAAK2b,WAAWI,IAAIoE,KACtBngB,KAAK2b,WAAWK,OAAOmE,GAGnBzF,EAAahN,WACfgN,EAAahN,SAAS4N,kBAAoB,EAC1CZ,EAAahN,SAASyN,aAAc,GAGtChb,QAAQC,IAAI,uCAAuCsa,EAAatV,QAEpE,CAKA,kBAAAiO,CAAmBnQ,GACjB,MAAMoQ,EAAMpQ,EAAQkB,cAAcgP,OAGlC,OAAIE,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,MACpD,CACL2E,KAAM,SACNiP,OAAQ,WACRmB,mBAAmB,GAInBtF,EAAIzP,SAAS,OAASyP,EAAIzP,SAAS,QAAUyP,EAAIzP,SAAS,MACrD,CACL2E,KAAM,SACNiP,OAAQ,OAKL,CACLjP,KAAM,SACNiP,OAAQ,WACRmB,mBAAmB,EAEvB,CAMA,2BAAApF,CAA4BtQ,GAE1B,MAAMkd,EAAe,CACnB,iBACA,iBACA,iBACA,kBAGF,IAAK,MAAMhM,KAAWgM,EAAc,CAClC,MAAMC,EAAQ,IAAIC,OAAOlM,GACnBqC,EAAQvT,EAAQuT,MAAM4J,GAC5B,GAAI5J,EAAO,CACT,MAAMzM,EAAayM,EAAM,GACnB8J,EAAY9J,EAAM,GAIxB,OAFAtW,QAAQC,IAAI,uCAAuC4J,UAAmBuW,MAE/D,CACL/X,KAAM,8BACNgY,iBAAkBxW,EAClBwO,SAAUxY,KAAKyY,wBAAwB8H,GACvCE,sBAAsB,EAE1B,CACF,CAGA,MAAMC,EAAgB,CACpB,gBACA,gBAIIpG,EAAgB,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,MAAO,IAAK,KACzD,IAAK,KAAM,OAAQ,QAAS,IAAK,KAAM,IAAK,KAC5C,IAAK,KAAM,MAAO,OAAQ,MAAO,OAAQ,IAAK,KAAM,IAAK,KAAM,IAAK,MAE1F,IAAK,MAAMlG,KAAWsM,EAAe,CACnC,MAAML,EAAQ,IAAIC,OAAOlM,GACnBqC,EAAQvT,EAAQuT,MAAM4J,GAC5B,GAAI5J,GAAS6D,EAAc5G,KAAKjI,GAASgL,EAAM,GAAG5S,SAAS4H,IAAS,CAClE,MAAMzB,EAAayM,EAAM,GACnB0B,EAAY1B,EAAM,GAExBtW,QAAQC,IAAI,+CAA+C4J,UAAmBmO,MAG9E,MAAMD,EAAW,CACf,IAAK,SAAU,KAAM,SACrB,IAAK,IAAU,KAAM,IACrB,IAAK,MAAU,KAAM,MACrB,IAAK,SAAU,KAAM,SAAU,MAAO,SACtC,IAAK,SAAU,KAAM,SACrB,IAAK,SAAU,KAAM,SAAU,OAAQ,SAAU,QAAS,SAC1D,IAAK,SAAU,KAAM,SACrB,IAAK,EAAU,KAAM,EACrB,IAAK,QAAU,KAAM,QAAU,MAAO,QAAU,OAAQ,QACxD,MAAO,SAAU,OAAQ,SACzB,IAAK,QAAU,KAAM,QACrB,IAAK,SAAU,KAAM,SACrB,IAAK,SAAU,KAAM,UAGvB,IAAIE,EAAa,KACjB,IAAK,MAAOuI,EAAUxW,KAAUxG,OAAOC,QAAQsU,GAC7C,GAAIC,EAAUtU,SAAS8c,GAAW,CAChCvI,EAAajO,EACb,KACF,CAGF,MAAO,CACL3B,KAAM,8BACNgY,iBAAkBxW,EAClByB,MAAO2M,EACPqI,sBAAsB,EAE1B,CACF,CAGA,MAAMG,EAAmB,CACvB,WACA,WACA,YACA,UACA,aAGF,IAAK,MAAMxM,KAAWwM,EAAkB,CACtC,MAAMP,EAAQ,IAAIC,OAAOlM,GACnBqC,EAAQvT,EAAQuT,MAAM4J,GAC5B,GAAI5J,EAAO,CACT,MAAMzM,EAAayM,EAAM,GAEzBtW,QAAQC,IAAI,2CAA2C4J,MAGvD,MAAM0O,EAAcxV,EAAQuT,MAAM,aAKlC,MAAO,CACLjO,KAAM,8BACNgY,iBAAkBxW,EAClBzC,SAPemR,EACfH,WAAWG,EAAY,IAAMlR,KAAKC,GAAK,IACvCD,KAAKC,GAAK,EAMVgZ,sBAAsB,EAE1B,CACF,CAGA,MAAMI,EAAe,CACnB,aACA,WACA,UACA,cACA,cAGF,IAAK,MAAMzM,KAAWyM,EAAc,CAClC,MAAMR,EAAQ,IAAIC,OAAOlM,GACnBqC,EAAQvT,EAAQuT,MAAM4J,GAC5B,GAAI5J,EAAO,CACT,MAAMzM,EAAayM,EAAM,GAIzB,OAFAtW,QAAQC,IAAI,uCAAuC4J,MAE5C,CACLxB,KAAM,8BACNgY,iBAAkBxW,EAClB2O,MAAM,EACN8H,sBAAsB,EAE1B,CACF,CAGA,MAAMK,EAAiB,CACrB,iBACA,eACA,gBACA,kBAGIjI,EAAiB,CAAC,KAAM,MAAO,KAAM,OAAQ,KAAM,QAAS,MAC1C,OAAQ,KAAM,KAAM,OAAQ,IAAK,IAAK,MACtC,QAAS,KAAM,MAAO,OAE9C,IAAK,MAAMzE,KAAW0M,EAAgB,CACpC,MAAMT,EAAQ,IAAIC,OAAOlM,GACnBqC,EAAQvT,EAAQuT,MAAM4J,GAC5B,GAAI5J,GAASoC,EAAenF,KAAKoG,GAAUrD,EAAM,GAAG5S,SAASiW,IAAU,CACrE,MAAM9P,EAAayM,EAAM,GACnBsK,EAAatK,EAAM,GAIzB,OAFAtW,QAAQC,IAAI,wCAAwC4J,YAAqB+W,MAElE,CACLvY,KAAM,8BACNgY,iBAAkBxW,EAClB9G,QAAS6d,EACTN,sBAAsB,EAE1B,CACF,CAEA,OAAO,IACT,CAKA,uBAAAhI,CAAwBvV,GACtB,IAAIiE,EAAI,EAAGE,EAAI,EAAGC,EAAI,EAGlBpE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OAASX,EAAQW,SAAS,QAAUX,EAAQW,SAAS,OAClGsD,EAAI,GACKjE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OAASX,EAAQW,SAAS,QAAUX,EAAQW,SAAS,UACzGsD,GAAI,GAIFjE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OAASX,EAAQW,SAAS,OACvEwD,EAAI,GACKnE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OAASX,EAAQW,SAAS,UAC9EwD,GAAI,GAIFnE,EAAQW,SAAS,OAASX,EAAQW,SAAS,QAAUX,EAAQW,SAAS,OACxEyD,EAAI,GACKpE,EAAQW,SAAS,QAAUX,EAAQW,SAAS,OAASX,EAAQW,SAAS,UAC/EyD,GAAI,GAIN,MAAM0Z,EAAgB9d,EAAQuT,MAAM,gCACpC,GAAIuK,EAAe,CACjB,MAAM3X,EAAWkP,WAAWyI,EAAc,IAEtCxZ,KAAKkJ,IAAIvJ,GAAK,IAAGA,EAAIA,EAAI,EAAIkC,GAAYA,GACzC7B,KAAKkJ,IAAIrJ,GAAK,IAAGA,EAAIA,EAAI,EAAIgC,GAAYA,GACzC7B,KAAKkJ,IAAIpJ,GAAK,IAAGA,EAAIA,EAAI,EAAI+B,GAAYA,EAC/C,CAWA,OARInG,EAAQW,SAAS,OAASX,EAAQW,SAAS,SAC7CsD,GAAK,GAAKE,GAAK,GAAKC,GAAK,KAChBpE,EAAQW,SAAS,QAAUX,EAAQW,SAAS,WACrDsD,GAAK,EAAGE,GAAK,EAAGC,GAAK,GAGvBnH,QAAQC,IAAI,qCAAqC8C,QAAciE,MAAME,MAAMC,MAEpE,CAAEH,IAAGE,IAAGC,IACjB,CAKA,aAAAqM,CAAczQ,GAIZ,IAAIiE,EAAI,EAAGE,EAAI,EAAGC,EAAI,GAGtB,OAAIpE,EAAQW,SAAS,OACnBsD,GAAI,EAAIE,EAAI,EAAGC,EAAI,GACnBnH,QAAQC,IAAI,4BAA4B8C,WAAiBiE,MAAME,MAAMC,MAC9D,CAAEH,IAAGE,IAAGC,MACNpE,EAAQW,SAAS,OAC1BsD,EAAI,EAAGE,EAAI,EAAGC,EAAI,GAClBnH,QAAQC,IAAI,4BAA4B8C,WAAiBiE,MAAME,MAAMC,MAC9D,CAAEH,IAAGE,IAAGC,MACNpE,EAAQW,SAAS,OAC1BsD,GAAI,EAAIE,EAAI,EAAGC,EAAI,GACnBnH,QAAQC,IAAI,4BAA4B8C,WAAiBiE,MAAME,MAAMC,MAC9D,CAAEH,IAAGE,IAAGC,MACNpE,EAAQW,SAAS,OAC1BsD,EAAI,EAAGE,EAAI,EAAGC,EAAI,GAClBnH,QAAQC,IAAI,4BAA4B8C,WAAiBiE,MAAME,MAAMC,MAC9D,CAAEH,IAAGE,IAAGC,MAIbpE,EAAQW,SAAS,OAASX,EAAQW,SAAS,QAAUX,EAAQW,SAAS,OACxEsD,EAAI,EAAGE,EAAI,EAAGC,EAAI,GAClBnH,QAAQC,IAAI,4BAA4B8C,WAAiBiE,MAAME,MAAMC,MAC9D,CAAEH,IAAGE,IAAGC,MACNpE,EAAQW,SAAS,MAAQX,EAAQW,SAAS,OACnDsD,EAAI,EAAGE,EAAI,GAAIC,EAAI,GACnBnH,QAAQC,IAAI,4BAA4B8C,WAAiBiE,MAAME,MAAMC,MAC9D,CAAEH,IAAGE,IAAGC,MACNpE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OACpDsD,EAAI,EAAGE,EAAI,EAAGC,EAAI,EAClBnH,QAAQC,IAAI,4BAA4B8C,WAAiBiE,MAAME,MAAMC,MAC9D,CAAEH,IAAGE,IAAGC,OAKbpE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OAC7CyD,EAAI,GACKpE,EAAQW,SAAS,QAAUX,EAAQW,SAAS,OAASX,EAAQW,SAAS,UAC/EyD,EAAI,IAIFpE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OAASX,EAAQW,SAAS,QACvEsD,EAAI,GACKjE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OAASX,EAAQW,SAAS,WAC9EsD,GAAI,GAIFjE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OAASX,EAAQW,SAAS,SAAWX,EAAQW,SAAS,UAAYX,EAAQW,SAAS,OAChIwD,EAAI,GACKnE,EAAQW,SAAS,OAASX,EAAQW,SAAS,OAASX,EAAQW,SAAS,SAAWX,EAAQW,SAAS,UAAYX,EAAQW,SAAS,UACvIwD,GAAI,GAIFnE,EAAQW,SAAS,QAAUX,EAAQW,SAAS,QAC9CyD,EAAIE,KAAKqJ,IAAQ,GAAJvJ,EAAS,IACbpE,EAAQW,SAAS,QAAUX,EAAQW,SAAS,WACrDyD,GAAQ,KAGVnH,QAAQC,IAAI,4BAA4B8C,QAAciE,MAAME,MAAMC,MAE3D,CAAEH,IAAGE,IAAGC,KACjB,CAKA,SAAAsM,CAAU1Q,GACR,OAAIA,EAAQW,SAAS,QAAUX,EAAQW,SAAS,OAAe,CAAE6E,MAAO,GACpExF,EAAQW,SAAS,QAAUX,EAAQW,SAAS,OAAe,CAAE6E,MAAO,IACjE,CAAEA,MAAO1I,KAAKe,OAAO0F,mBAC9B,CAKA,qBAAMqM,CAAgBF,GACpB,OAAQA,EAAOpK,MACb,IAAK,mBAEH,IAAKxI,KAAKgF,SAAWhF,KAAKgF,OAAOjF,UAC/B,MAAM,IAAIuB,MAAM,6CAElB,aAAatB,KAAKihB,uBAAuBrO,GAE3C,IAAK,mBAEH,IAAK5S,KAAKgF,SAAWhF,KAAKgF,OAAOjF,UAC/B,MAAM,IAAIuB,MAAM,6CAElB,aAAatB,KAAKkhB,uBAAuBtO,GAE3C,IAAK,sBACH,aAAa5S,KAAKmhB,0BAA0BvO,GAE9C,IAAK,8BACH,aAAa5S,KAAKohB,iCAAiCxO,GAErD,IAAK,SACH,aAAa5S,KAAKqhB,cAAczO,GAElC,IAAK,cACH,aAAa5S,KAAKshB,kBAAkB1O,GAEtC,IAAK,mBACH,aAAa5S,KAAKuhB,uBAAuB3O,GAE3C,QACE,MAAM,IAAItR,MAAM,yBAAyBsR,EAAOpK,QAEtD,CAKA,4BAAMyY,CAAuBrO,GAC3B,IACEzS,QAAQC,IAAI,yBAAyBwS,EAAOpR,WAG5C,MAAMggB,EAAgB,CACpB,CAAE7f,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,KAAMC,OAAQ,MACvB,CAAED,MAAO,IAAKC,OAAQ,MAGxB,IAAI6f,EACAC,EAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAc1Z,OAAQ6Z,IAAK,CAC7C,MAAMC,EAAaJ,EAAcG,GACjC,IASE,GARAxhB,QAAQC,IAAI,aAAawhB,EAAWjgB,SAASigB,EAAWhgB,aAExD6f,QAAoBzhB,KAAKgF,OAAOzD,cAAcqR,EAAOpR,OAAQ,CAC3DG,MAAOigB,EAAWjgB,MAClBC,OAAQggB,EAAWhgB,OACnBC,QAAS7B,KAAK2F,2BAAwB+V,IAGpC+F,EAAYI,QAAS,CACvB1hB,QAAQC,IAAI,kBAAkBwhB,EAAWjgB,SAASigB,EAAWhgB,UAC7D,KACF,CACF,CAAE,MAAOV,GAKP,GAJAwgB,EAAYxgB,EACZf,QAAQC,IAAI,kBAAkBwhB,EAAWjgB,SAASigB,EAAWhgB,WAAWV,EAAM6R,WAG1E4O,EAAIH,EAAc1Z,OAAS,EAAG,CAChC3H,QAAQC,IAAI,iCACZ,QACF,CACF,CACF,CAGIqhB,GAAeA,EAAY3X,WAC7B3J,QAAQC,IAAI,kBAAkBqhB,EAAY3X,aAG5C,MAAMgY,EAAS,IAAI5c,EAAM6c,cACzB,IAAIlF,EACJ,GAAI4E,GAAeA,EAAYI,UAAYJ,EAAYO,UAAYP,EAAYQ,WAAY,CAEzF,IAAID,EAAWP,EAAYO,SAG3B,IAAKA,GAAYP,EAAYQ,UAAW,CACtC,MAAM/d,EAAWud,EAAYQ,UAAUpM,MAAM,KAAKqM,MAClDF,EAAW,GAAGhiB,KAAKgF,OAAOjF,uBAAuBmE,GACnD,CAEA/D,QAAQC,IAAI,mCAAmC4hB,KAC/CnF,QAAgBiF,EAAOK,UAAUH,GAGjCnF,EAAQuF,WAAald,EAAMmd,cAC7B,MAEEliB,QAAQC,IAAI,wCAAwCshB,GAAW3O,SAAW,cAC1E8J,EAAU7c,KAAKsiB,sBAAsB1P,EAAOpR,QAG9C,MACM+gB,EAAW,GADC3P,EAAO5K,MAAMU,OAAS1I,KAAKe,OAAO0F,oBAAsB,GAGpE+b,EAAa3F,EAAQ4F,OAAOC,cAAgB7F,EAAQ4F,OAAO9gB,OAASkb,EAAQ/M,QAAQ6S,MAAMhhB,OAAS,EAEnGihB,EAAcJ,GADA3F,EAAQ4F,OAAOI,eAAiBhG,EAAQ4F,OAAO7gB,QAAUib,EAAQ/M,QAAQ6S,MAAM/gB,QAAU,IAC7D,EAEhD,IAAIkhB,EAAaP,EACbQ,EAAcR,EACdK,GAAe,GACjBE,EAAaP,EACbQ,EAAcR,EAAWK,IAEzBE,EAAaP,EAAWK,EACxBG,EAAcR,GAIhB,MAAM7X,EAAW,IAAIxF,EAAM8d,cAAcF,EAAYC,GAC/CrV,EAAW,IAAIxI,EAAM0H,kBAAkB,CAC3CkJ,IAAK+G,EACLlR,aAAa,EACb0R,KAAMnY,EAAMoY,WACZC,YAAY,IAGR0F,EAAQ,IAAI/d,EAAMmI,KAAK3C,EAAUgD,GAUvC,GAPAuV,EAAMrV,YAAc,IACpBF,EAASb,WAAY,EACrBa,EAASZ,YAAa,EACtBY,EAASwV,UAAY,IACrBxV,EAASyN,aAAc,EAGnBnb,KAAK6E,OAAQ,CACf,MAAMse,EAAgBnjB,KAAKojB,gCAAgCxQ,EAAO1L,UAClE+b,EAAM/b,SAASoF,KAAK6W,GACpBnjB,KAAKqjB,mBAAmBJ,EAC1B,MAEEA,EAAM/b,SAAS6E,IAAI6G,EAAO1L,SAASC,EAAGyL,EAAO1L,SAASG,EAAGuL,EAAO1L,SAASI,GAI3E2b,EAAMva,MAAMoF,UAAU,GAGtB,MAAMwV,EAAW,gBAAetjB,KAAKyF,cAsBrC,OArBAwd,EAAM7d,KAAOke,EACbL,EAAM1a,SAAW,CACfJ,GAAImb,EACJ9hB,OAAQoR,EAAOpR,OACf6T,UAAW3C,KAAKC,MAChBnK,KAAM,kBACNsH,OAAQ,kBACRhG,UAAW2X,GAAa3X,WAAa9J,KAAK2F,sBAAwB,KAClEnC,SAAUxD,KAAKgW,wBAAwB,CAAExU,OAAQoR,EAAOpR,OAAQ0U,SAAU,WAG5ElW,KAAKiF,gBAAgBI,IAAI4d,GACzBjjB,KAAKuF,eAAewG,IAAIuX,EAAUL,GAElC9iB,QAAQC,IAAI,qBAAqBkjB,SAAgB1Q,EAAO1L,SAASC,MAAMyL,EAAO1L,SAASG,MAAMuL,EAAO1L,SAASI,MAGzGtH,KAAKe,OAAOwF,uBACdvG,KAAKujB,wBAAwB3Q,EAAO1L,UAG/B,CACLoc,WACApc,SAAU0L,EAAO1L,SACjB1F,OAAQoR,EAAOpR,OACfsI,UAAW2X,GAAa3X,UACxB+X,SAAS,EAGb,CAAE,MAAO3gB,GAEP,MADAf,QAAQe,MAAM,8BAA+BA,GACvCA,CACR,CACF,CAKA,4BAAMggB,CAAuBtO,GAC3B,IACEzS,QAAQC,IAAI,yBAAyBwS,EAAOpR,WAC5CrB,QAAQC,IAAI,8CAA+CJ,KAAK4F,sBAIhE,MAAM4d,QAAoBxjB,KAAKgF,OAAO3C,cAAcuQ,EAAOpR,OAAQ,CACjEkB,SAAU,EACVE,MAAO5C,KAAK4F,2BAAwB8V,IAStC,IAAI+H,EAJAD,EAAY1Z,WACd3J,QAAQC,IAAI,kBAAkBojB,EAAY1Z,aAI5C,IAAI4Z,EAAQ,KAERF,EAAY3B,SAAW2B,EAAYG,UAErCxjB,QAAQC,IAAI,mCAAmCojB,EAAYG,YAG3DD,EAAQ3V,SAAS6V,cAAc,SAC/BF,EAAMG,IAAML,EAAYG,SACxBD,EAAMI,YAAc,YACpBJ,EAAMK,MAAO,EACbL,EAAMM,OAAQ,EACdN,EAAMO,aAAc,EAGpBR,EAAe,IAAIve,EAAMgf,aAAaR,GACtCD,EAAarB,WAAald,EAAMmd,eAGhCqB,EAAM1U,iBAAiB,aAAc,KACnC0U,EAAMS,OAAOhU,MAAMhQ,QAAQe,WAK7Bf,QAAQC,IAAI,mCACZqjB,EAAezjB,KAAKokB,2BAA2BxR,EAAOpR,SAIxD,MACM+gB,EAAW,GADC3P,EAAO5K,MAAMU,OAAS1I,KAAKe,OAAO0F,oBAAsB,GAGpE4d,EAAiBb,EAAYc,UAAU3iB,OAAS,IAChD4iB,EAAkBf,EAAYc,UAAU1iB,QAAU,IAClD4iB,EAAcH,GAAkBE,EAAkBF,EAAiBE,EAAkB,EAE3F,IAAIzB,EAAaP,EACbQ,EAAcR,EAEdiC,GAAe,EACjBzB,EAAcR,EAAWiC,EAEzB1B,EAAaP,EAAWiC,EAG1B,MAAM9Z,EAAW,IAAIxF,EAAM8d,cAAcF,EAAYC,GAC/CrV,EAAW,IAAIxI,EAAM0H,kBAAkB,CAC3CkJ,IAAK2N,EACL9X,aAAa,EACb0R,KAAMnY,EAAMoY,WACZC,YAAY,IAGR0F,EAAQ,IAAI/d,EAAMmI,KAAK3C,EAAUgD,GAQvC,GALAuV,EAAMrV,YAAc,IACpBF,EAASb,WAAY,EACrBa,EAASZ,YAAa,EAGlB9M,KAAK6E,OAAQ,CACf,MAAMse,EAAgBnjB,KAAKojB,gCAAgCxQ,EAAO1L,UAClE+b,EAAM/b,SAASoF,KAAK6W,GACpBnjB,KAAKqjB,mBAAmBJ,EAC1B,MACEA,EAAM/b,SAAS6E,IAAI6G,EAAO1L,SAASC,EAAGyL,EAAO1L,SAASG,EAAGuL,EAAO1L,SAASI,GAI3E2b,EAAMva,MAAMoF,UAAU,GAGtB,MAAMwV,EAAW,sBAAqBtjB,KAAKyF,cA6B3C,OA5BAwd,EAAM7d,KAAOke,EACbL,EAAM1a,SAAW,CACfJ,GAAImb,EACJ9hB,OAAQoR,EAAOpR,OACf6T,UAAW3C,KAAKC,MAChBnK,KAAM,kBACNsH,OAAQ,kBACR6T,SAAUH,EAAYG,SACtB7Z,UAAW0Z,EAAY1Z,WAAa9J,KAAK4F,sBAAwB,KACjEjE,MAAO0iB,EACPziB,OAAQ2iB,EACRE,aAAcf,EACdlgB,SAAUxD,KAAKgW,wBAAwB,CAAExU,OAAQoR,EAAOpR,OAAQ0U,SAAU,WAI5ElW,KAAK0kB,mBAAmBzB,GAExBjjB,KAAKiF,gBAAgBI,IAAI4d,GACzBjjB,KAAKuF,eAAewG,IAAIuX,EAAUL,GAElC9iB,QAAQC,IAAI,2BAA2BkjB,SAAgB1Q,EAAO1L,SAASC,MAAMyL,EAAO1L,SAASG,MAAMuL,EAAO1L,SAASI,MAG/GtH,KAAKe,OAAOwF,uBACdvG,KAAKujB,wBAAwB3Q,EAAO1L,UAG/B,CACLoc,WACApc,SAAU0L,EAAO1L,SACjB1F,OAAQoR,EAAOpR,OACfsI,UAAW0Z,EAAY1Z,UACvB6Z,SAAUH,EAAYG,SACtB9B,SAAS,EAGb,CAAE,MAAO3gB,GACPf,QAAQe,MAAM,8BAA+BA,GAG7Cf,QAAQC,IAAI,4DACZ,MAAMukB,EAAuB3kB,KAAKokB,2BAA2BxR,EAAOpR,QAI9D+gB,EAAW,GADC3P,EAAO5K,MAAMU,OAAS1I,KAAKe,OAAO0F,oBAAsB,GAEpEiE,EAAW,IAAIxF,EAAM8d,cAAcT,EAAUA,GAC7C7U,EAAW,IAAIxI,EAAM0H,kBAAkB,CAC3CkJ,IAAK6O,EACLhZ,aAAa,EACb0R,KAAMnY,EAAMoY,WACZC,YAAY,IAGR0F,EAAQ,IAAI/d,EAAMmI,KAAK3C,EAAUgD,GAGvC,GAAI1N,KAAK6E,OAAQ,CACf,MAAMse,EAAgBnjB,KAAKojB,gCAAgCxQ,EAAO1L,UAClE+b,EAAM/b,SAASoF,KAAK6W,GACpBnjB,KAAKqjB,mBAAmBJ,EAC1B,MACEA,EAAM/b,SAAS6E,IAAI6G,EAAO1L,SAASC,EAAGyL,EAAO1L,SAASG,EAAGuL,EAAO1L,SAASI,GAG3E2b,EAAMva,MAAMoF,UAAU,GAGtB,MAAMwV,EAAW,sBAAqBtjB,KAAKyF,cAqB3C,OApBAwd,EAAM7d,KAAOke,EACbL,EAAM1a,SAAW,CACfJ,GAAImb,EACJ9hB,OAAQoR,EAAOpR,OACf6T,UAAW3C,KAAKC,MAChBnK,KAAM,kBACNsH,OAAQ,kBACR6T,SAAU,KACV7Z,UAAW,iBACXnI,MAAO,IACPC,OAAQ,IACR6iB,aAAc,KACdvjB,MAAOA,EAAM6R,QACbvP,SAAUxD,KAAKgW,wBAAwB,CAAExU,OAAQoR,EAAOpR,OAAQ0U,SAAU,WAI5ElW,KAAK4E,MAAMS,IAAI4d,GACf9iB,QAAQC,IAAI,0CAEL,CACLyhB,SAAS,EACT3gB,MAAOA,EAAM6R,QACbvJ,OAAQyZ,EACRzhB,OAAQoR,EAAOpR,OAEnB,CACF,CAEA,mBAAMojB,CAAcC,EAASpjB,EAAU,IACrC,IACE,MAAMyF,SAAEA,EAAW,CAAEC,EAAG,EAAGE,EAAG,EAAGC,GAAI,IAAI2O,SAAEA,EAAW,MAASxU,EAE/DtB,QAAQC,IAAI,0BAA0BykB,KAGtC,MAAM/C,EAAS,IAAI5c,EAAM6c,cACnBlF,QAAgBiF,EAAOK,UAAU0C,GAGvChI,EAAQuF,WAAald,EAAMmd,eAG3B,MAAMG,EAAa3F,EAAQ4F,OAAOC,cAAgB7F,EAAQ4F,OAAO9gB,OAASkb,EAAQ/M,QAAQ6S,MAAMhhB,OAAS,EAEnGihB,EAAcJ,GADA3F,EAAQ4F,OAAOI,eAAiBhG,EAAQ4F,OAAO7gB,QAAUib,EAAQ/M,QAAQ6S,MAAM/gB,QAAU,IAC7D,EAE1C2gB,EAAW,EACjB,IAAI5gB,EAAQ4gB,EACR3gB,EAAS2gB,EACTK,GAAe,GACjBjhB,EAAQ4gB,EACR3gB,EAAS2gB,EAAWK,IAEpBjhB,EAAQ4gB,EAAWK,EACnBhhB,EAAS2gB,GAIX,MAAM7X,EAAW,IAAIxF,EAAM8d,cAAcrhB,EAAOC,GAC1C8L,EAAW,IAAIxI,EAAM0H,kBAAkB,CAC3CkJ,IAAK+G,EACLlR,aAAa,EACb0R,KAAMnY,EAAMoY,WACZC,YAAY,IAEd7P,EAASwV,UAAY,IACrBxV,EAASyN,aAAc,EAEvB,MAAM8H,EAAQ,IAAI/d,EAAMmI,KAAK3C,EAAUgD,GAQvC,GALAuV,EAAMrV,YAAc,IACpBF,EAASb,WAAY,EACrBa,EAASZ,YAAa,EAGlB9M,KAAK6E,OAAQ,CACf,MAAMse,EAAgBnjB,KAAKojB,gCAAgClc,GAC3D+b,EAAM/b,SAASoF,KAAK6W,GACpBnjB,KAAKqjB,mBAAmBJ,EAC1B,MACEA,EAAM/b,SAAS6E,IAAI7E,EAASC,EAAGD,EAASG,EAAGH,EAASI,GAGtD2b,EAAMva,MAAMoF,UAAU,GAGtB,MAAMtM,EAASyU,EAAWA,EAAS/C,QAAQ,YAAa,IAAM,iBAGxDoQ,EAAW,qBAAoBtjB,KAAKyF,cAuB1C,OAtBAwd,EAAM7d,KAAOke,EACbL,EAAM1a,SAAW,CACfJ,GAAImb,EACJxT,OAAQ,gBACRuF,UAAW3C,KAAKC,MAChBnK,KAAM,kBACNhH,OAAQA,EACRyU,SAAUA,EACVmB,YAAapX,KAAKyF,cAClBjC,SAAUxD,KAAKgW,wBAAwB,CAAExU,SAAQyU,WAAUC,SAAU,WAGvElW,KAAKiF,gBAAgBI,IAAI4d,GACzBjjB,KAAKuF,eAAewG,IAAIuX,EAAUL,GAElC9iB,QAAQC,IAAI,6BAA6BkjB,SAAgBpc,EAASC,MAAMD,EAASG,MAAMH,EAASI,MAG5FtH,KAAKe,OAAOwF,uBACdvG,KAAKujB,wBAAwBrc,GAGxB,CACLoc,WACApc,SAAUA,EACV2a,SAAS,EAGb,CAAE,MAAO3gB,GAEP,MADAf,QAAQe,MAAM,gCAAiCA,GACzCA,CACR,CACF,CAEA,mBAAM4jB,CAAcD,EAASpjB,EAAU,IACrC,IACE,MAAMyF,SAAEA,EAAW,CAAEC,EAAG,EAAGE,EAAG,EAAGC,GAAI,IAAI2O,SAAEA,EAAW,MAASxU,EAE/DtB,QAAQC,IAAI,0BAA0BykB,KAGtC,MAAMnB,EAAQ3V,SAAS6V,cAAc,SACrCF,EAAMG,IAAMgB,EACZnB,EAAMK,MAAO,EACbL,EAAMM,OAAQ,EACdN,EAAMO,aAAc,EACpBP,EAAMqB,UAAW,EACjBrB,EAAMsB,QAAU,OAGhB,MAAMvB,EAAe,IAAIve,EAAMgf,aAAaR,GAC5CD,EAAarB,WAAald,EAAMmd,qBAG1B,IAAI4C,QAAQ,CAACC,EAASC,KAS1BzB,EAAM1U,iBAAiB,iBARF,KACnB7O,QAAQC,IAAI,oBAAoBsjB,EAAM0B,cAAc1B,EAAM2B,eAC1DH,KAMqD,CAAEI,MAAM,IAC/D5B,EAAM1U,iBAAiB,QALFC,IACnBkW,EAAOlW,GAAO/N,OAAS,IAAII,MAAM,0BAIU,CAAEgkB,MAAM,IACrD5B,EAAM6B,SAGR,UACQ7B,EAAMS,MACd,CAAE,MAAOqB,GACPrlB,QAAQgB,KAAK,2FAA4FqkB,EAC3G,CAGA,MAAM5C,EAAcc,EAAM0B,WAAa1B,EAAM2B,YACvC9C,EAAW,EACjB,IAAI5gB,EAAQ4gB,EACR3gB,EAAS2gB,EAETK,EAAc,EAChBhhB,EAAS2gB,EAAWK,EAEpBjhB,EAAQ4gB,EAAWK,EAIrB,MAAMlY,EAAW,IAAIxF,EAAM8d,cAAcrhB,EAAOC,GAC1C8L,EAAW,IAAIxI,EAAM0H,kBAAkB,CAC3CkJ,IAAK2N,EACL9X,aAAa,EACb0R,KAAMnY,EAAMoY,WACZC,YAAY,IAEd7P,EAASwV,UAAY,IACrBxV,EAASyN,aAAc,EAEvB,MAAM8H,EAAQ,IAAI/d,EAAMmI,KAAK3C,EAAUgD,GAQvC,GALAuV,EAAMrV,YAAc,IACpBF,EAASb,WAAY,EACrBa,EAASZ,YAAa,EAGlB9M,KAAK6E,OAAQ,CACf,MAAMse,EAAgBnjB,KAAKojB,gCAAgClc,GAC3D+b,EAAM/b,SAASoF,KAAK6W,GACpBnjB,KAAKqjB,mBAAmBJ,EAC1B,MACEA,EAAM/b,SAAS6E,IAAI7E,EAASC,EAAGD,EAASG,EAAGH,EAASI,GAGtD2b,EAAMva,MAAMoF,UAAU,GAGtB,MAAMtM,EAASyU,EAAWA,EAAS/C,QAAQ,YAAa,IAAM,iBAGxDoQ,EAAW,qBAAoBtjB,KAAKyF,cA4B1C,OA3BAwd,EAAM7d,KAAOke,EACbL,EAAM1a,SAAW,CACfJ,GAAImb,EACJxT,OAAQ,gBACRuF,UAAW3C,KAAKC,MAChBnK,KAAM,kBACNic,aAAcf,EACd+B,UAAWZ,EACXrjB,OAAQA,EACRyU,SAAUA,EACVmB,YAAapX,KAAKyF,cAClBjC,SAAUxD,KAAKgW,wBAAwB,CAAExU,SAAQyU,WAAUC,SAAU,WAIvElW,KAAK0kB,mBAAmBzB,GAExBjjB,KAAKiF,gBAAgBI,IAAI4d,GACzBjjB,KAAKuF,eAAewG,IAAIuX,EAAUL,GAElC9iB,QAAQC,IAAI,6BAA6BkjB,SAAgBpc,EAASC,MAAMD,EAASG,MAAMH,EAASI,MAG5FtH,KAAKe,OAAOwF,uBACdvG,KAAKujB,wBAAwBrc,GAGxB,CACLoc,WACApc,SAAUA,EACV2a,SAAS,EAGb,CAAE,MAAO3gB,GAEP,MADAf,QAAQe,MAAM,gCAAiCA,GACzCA,CACR,CACF,CAKA,sCAAMkgB,CAAiCxO,GAErC,MAAM8S,EAAgB1lB,KAAK2lB,kBAAkB/S,EAAO4N,kBAEpD,GAA6B,IAAzBkF,EAAc5d,OAChB,MAAO,CACL+Z,SAAS,EACT9O,QAAS,UAAUH,EAAO4N,gCAI9BrgB,QAAQC,IAAI,YAAYslB,EAAc5d,8BAA8B8K,EAAO4N,qBAG3E,MAAM9F,EAAe1a,KAAK4lB,yBAAyBF,EAAe9S,EAAO4N,kBACzErgB,QAAQC,IAAI,2BAA2Bsa,EAAatV,QAEpD,IAAIygB,GAAW,EAiBf,GAdqB,OAAjBjT,EAAOnH,OAAkBiP,EAAahN,WACpCgN,EAAahN,SAASoI,KACxB4E,EAAahN,SAASjC,MAAMiG,OAAOkB,EAAOnH,OAC1CiP,EAAahN,SAASyN,aAAc,EACpChb,QAAQC,IAAI,sCAAsCwS,EAAOnH,MAAMwO,SAAS,SAExES,EAAahN,SAASjC,MAAMiG,OAAOkB,EAAOnH,OAC1CiP,EAAahN,SAASyN,aAAc,EACpChb,QAAQC,IAAI,kCAAkCwS,EAAOnH,MAAMwO,SAAS,QAEtE4L,GAAW,GAITjT,EAAOyF,SAAWzF,EAAOyF,QAAQvQ,OAAS,EAAG,CACxB9H,KAAKya,aAAaC,EAAc9H,EAAOyF,WAE5DwN,GAAW,EAEf,CAGA,GAAwB,OAApBjT,EAAO4F,SAAmB,CAC5B,MAAMsN,EAAapL,EAAaxT,SAC1B6e,EAAS,CACb5e,EAAG2e,EAAW3e,EAAIyL,EAAO4F,SAASrR,EAClCE,EAAGye,EAAWze,EAAIuL,EAAO4F,SAASnR,EAClCC,EAAGwe,EAAWxe,EAAIsL,EAAO4F,SAASlR,GAGpCoT,EAAaxT,SAAS6E,IAAIga,EAAO5e,EAAG4e,EAAO1e,EAAG0e,EAAOze,GACrDnH,QAAQC,IAAI,2BAA2B0lB,EAAW3e,EAAEC,QAAQ,OAAO0e,EAAWze,EAAED,QAAQ,OAAO0e,EAAWxe,EAAEF,QAAQ,WAAW2e,EAAO5e,EAAEC,QAAQ,OAAO2e,EAAO1e,EAAED,QAAQ,OAAO2e,EAAOze,EAAEF,QAAQ,OAChMye,GAAW,CACb,CAEA,OAAIA,GAEFnL,EAAanS,SAAS6M,aAAe1C,KAAKC,MAC1C+H,EAAanS,SAASyd,cAAgBtL,EAAanS,SAASyd,eAAiB,GAC7EtL,EAAanS,SAASyd,cAAcliB,KAAK,CACvC2O,UAAWC,KAAKC,MAChBlH,MAAOmH,EAAOnH,MACd+M,SAAU5F,EAAO4F,SACjBtV,QAAS,qBAAqB0P,EAAO4N,qBAGhC,CACLqB,SAAS,EACT9O,QAAS,UAAU2H,EAAatV,eAChCke,SAAU5I,EAAatV,KACvB4gB,cAAe,CACbva,MAAOmH,EAAOnH,MACd+M,SAAU5F,EAAO4F,YAId,CACLqJ,SAAS,EACT9O,QAAS,qBAGf,CAKA,iBAAA4S,CAAkBM,GAChB,MAAMC,EAAU,GACVC,EAAcF,EAAW7hB,cAG/B,IAAK,MAAOkf,EAAU9Z,KAAWxJ,KAAKuF,eAAgB,CAEpD,GAAIiE,EAAOjB,SAAS/G,OAAQ,CACNgI,EAAOjB,SAAS/G,OAAO4C,cAG3BP,SAASsiB,KACvBD,EAAQpiB,KAAK0F,GACbrJ,QAAQC,IAAI,yBAAyBkjB,eAAsB9Z,EAAOjB,SAAS/G,YAE/E,CAGIgI,EAAOpE,MAAQoE,EAAOpE,KAAKhB,cAAcP,SAASsiB,KACpDD,EAAQpiB,KAAK0F,GACbrJ,QAAQC,IAAI,yBAAyBkjB,aAAoB9Z,EAAOpE,UAEpE,CAEA,OAAO8gB,CACT,CAKA,wBAAAN,CAAyBnR,EAAS2R,GAEhC,MAAMC,EAAkB,CACtB,WAAY,WAAY,WACxB,qBACA,UACA,iBACA,kBAGF,IAAK,MAAMjS,KAAWiS,EAAiB,CACrC,MAAM5P,EAAQ2P,EAAgB3P,MAAMrC,GACpC,GAAIqC,EAAO,CACT,IAAItJ,EAEJ,GAAIsJ,EAAM,GAERtJ,EAAQwJ,SAASF,EAAM,IAAM,MACxB,CAEL,MAAM6P,EAAc7P,EAAM,GACtB6P,EAAYziB,SAAS,OAASyiB,EAAYziB,SAAS,QACnDyiB,EAAYziB,SAAS,QAAUyiB,EAAYziB,SAAS,OACtDsJ,EAAQ,EACCmZ,EAAYziB,SAAS,OAASyiB,EAAYziB,SAAS,MAC5DsJ,EAAQsH,EAAQ3M,OAAS,EAChBwe,EAAYziB,SAAS,QAAUyiB,EAAYziB,SAAS,QAAUyiB,EAAYziB,SAAS,OAC5FsJ,EAAQ,GACCmZ,EAAYziB,SAAS,QAAUyiB,EAAYziB,SAAS,QAAUyiB,EAAYziB,SAAS,UAC5FsJ,EAAQ,EAEZ,CAEA,GAAIA,GAAS,GAAKA,EAAQsH,EAAQ3M,OAEhC,OADA3H,QAAQC,IAAI,wCAAwC+M,EAAQ,QAAQsH,EAAQ3M,UACrE2M,EAAQtH,GAEfhN,QAAQgB,KAAK,6BAA6BgM,EAAQ,mBAAmBsH,EAAQ3M,UAEjF,CACF,CAIA,OADA3H,QAAQC,IAAI,+CACLqU,EAAQ,EACjB,CAKA,+BAAM0M,CAA0BvO,GAE9B,IAAI8H,EAAe1a,KAAKsW,oBAAoB1D,EAAO1P,SAGnD,GAAKwX,EAUH1a,KAAKuJ,aAAamR,GAGlB1a,KAAKigB,yBAAyBvF,OAbb,CACjB,IAAK1a,KAAK0F,eACR,MAAO,CACLmc,SAAS,EACT9O,QAAS,wCAGb2H,EAAe1a,KAAK0F,cACtB,CAOAvF,QAAQC,IAAI,wBAAwBsa,EAAatV,QACjDjF,QAAQC,IAAI,8BAA+BwS,EAAO4F,UAElD,IAAIqN,GAAW,EAmBf,GAhBqB,OAAjBjT,EAAOnH,OAAkBiP,EAAahN,WACpCgN,EAAahN,SAASoI,KAExB4E,EAAahN,SAASjC,MAAMiG,OAAOkB,EAAOnH,OAC1CiP,EAAahN,SAASyN,aAAc,EACpChb,QAAQC,IAAI,sCAAsCwS,EAAOnH,MAAMwO,SAAS,SAGxES,EAAahN,SAASjC,MAAMiG,OAAOkB,EAAOnH,OAC1CiP,EAAahN,SAASyN,aAAc,EACpChb,QAAQC,IAAI,kCAAkCwS,EAAOnH,MAAMwO,SAAS,QAEtE4L,GAAW,GAITjT,EAAOyF,SAAWzF,EAAOyF,QAAQvQ,OAAS,EAAG,CACxB9H,KAAKya,aAAaC,EAAc9H,EAAOyF,WAE5DwN,GAAW,EAEf,CAGA,GAAqB,OAAjBjT,EAAOlK,MAAgB,CACzB,MAAM6d,EAAe7L,EAAahS,MAAMvB,EAClCwJ,EAAW4V,EAAe3T,EAAOlK,MACvCgS,EAAahS,MAAMoF,UAAU6C,GAC7BxQ,QAAQC,IAAI,yBAAyBmmB,QAAmB5V,KACxDkV,GAAW,CACb,CAGA,GAAwB,OAApBjT,EAAO4F,SAAmB,CAE5B,MAAMsN,EAAapL,EAAaxT,SAC1B6e,EAAS,CACb5e,EAAG2e,EAAW3e,EAAIyL,EAAO4F,SAASrR,EAClCE,EAAGye,EAAWze,EAAIuL,EAAO4F,SAASnR,EAClCC,EAAGwe,EAAWxe,EAAIsL,EAAO4F,SAASlR,GAGpCoT,EAAaxT,SAAS6E,IAAIga,EAAO5e,EAAG4e,EAAO1e,EAAG0e,EAAOze,GACrDnH,QAAQC,IAAI,2BAA2B0lB,EAAW3e,EAAEC,QAAQ,OAAO0e,EAAWze,EAAED,QAAQ,OAAO0e,EAAWxe,EAAEF,QAAQ,WAAW2e,EAAO5e,EAAEC,QAAQ,OAAO2e,EAAO1e,EAAED,QAAQ,OAAO2e,EAAOze,EAAEF,QAAQ,OAChMye,GAAW,CACb,CAGA,GAAwB,OAApBjT,EAAOrL,SAAmB,CAC5B,MACMif,EADkB9L,EAAanT,SAASF,EACRuL,EAAOrL,SAC7CmT,EAAanT,SAASF,EAAImf,EAC1B,MAAMC,GAA6B,IAAlB7T,EAAOrL,SAAiBC,KAAKC,IAAIL,QAAQ,GAC1DjH,QAAQC,IAAI,0BAA0BqmB,wBAA4C,IAAdD,EAAoBhf,KAAKC,IAAIL,QAAQ,QACzGye,GAAW,CACb,CAGA,GAAuB,OAAnBjT,EAAOhH,SAAoB8O,EAAahN,SAAU,CACpD,MAAMgZ,EAAiBhM,EAAahN,SAAS9B,SAAW,EACxD8O,EAAahN,SAAS9B,QAAUgH,EAAOhH,QACvC8O,EAAahN,SAAS/B,YAAciH,EAAOhH,QAAU,EACrDzL,QAAQC,IAAI,2BAA2BsmB,EAAetf,QAAQ,SAASwL,EAAOhH,QAAQxE,QAAQ,MAC9Fye,GAAW,CACb,CAGA,GAAIjT,EAAO+F,KAAM,CACf,MAAMgO,EAAgBjM,EAAahS,MAAMvB,EACzCuT,EAAahS,MAAMvB,GAAKwf,EACxBxmB,QAAQC,IAAI,4CAA4CumB,OAAmBjM,EAAahS,MAAMvB,MAC9F0e,GAAW,CACb,CAEA,OAAIA,GAEFnL,EAAanS,SAAS6M,aAAe1C,KAAKC,MAC1C+H,EAAanS,SAASyd,cAAgBtL,EAAanS,SAASyd,eAAiB,GAC7EtL,EAAanS,SAASyd,cAAcliB,KAAK,CACvC2O,UAAWC,KAAKC,MAChBlH,MAAOmH,EAAOnH,MACd/C,MAAOkK,EAAOlK,MACd8P,SAAU5F,EAAO4F,SACjBjR,SAAUqL,EAAOrL,SACjBqE,QAASgH,EAAOhH,QAChB1I,QAAS0P,EAAO1P,UAGlBlD,KAAK4mB,iCAEE,CACL/E,SAAS,EACT9O,QAAS,UAAU2H,EAAatV,eAChCke,SAAU5I,EAAatV,KACvB4gB,cAAe,CACbva,MAAOmH,EAAOnH,MACd/C,MAAOkK,EAAOlK,MACd8P,SAAU5F,EAAO4F,SACjBjR,SAAUqL,EAAOrL,SACjBqE,QAASgH,EAAOhH,WAIb,CACLiW,SAAS,EACT9O,QAAS,qBAGf,CAKA,mBAAMsO,CAAczO,GAElB,MAAM1P,EAAU0P,EAAO1P,SAAW,GAGlC,GAAsB,QAAlB0P,EAAO6E,QAAoBvU,EAAQW,SAAS,QAAUX,EAAQW,SAAS,MAEzE,OADA7D,KAAK6mB,WACE,CAAEhF,SAAS,EAAM9O,QAAS,qBAInC,MAAM+T,EAAkB9mB,KAAKsW,oBAAoBpT,GAOjD,IAAIwX,EAAe,KACfqM,EAAe,GAmBnB,GAhB8B7jB,EAAQuT,MAAM,iCAEfzW,KAAK0F,gBAEhCgV,EAAe1a,KAAK0F,eACpBqhB,EAAe,eACND,GAETpM,EAAeoM,EACfC,EAAe,oBACN/mB,KAAK0F,iBAEdgV,EAAe1a,KAAK0F,eACpBqhB,EAAe,eAGbrM,EAAc,CAChB,MAAM4I,EAAW5I,EAAatV,KAC9BjF,QAAQC,IAAI,gBAAgB2mB,MAAiBzD,KAGzC5I,IAAiB1a,KAAK0F,gBACxB1F,KAAKyJ,iBAMP,OAFgBzJ,KAAKkQ,aAAaoT,GAGzB,CACLzB,SAAS,EACT9O,QAAS,GAAGgU,KAAgBzD,YAC5B0D,gBAAiB1D,GAGZ,CACLzB,SAAS,EACT9O,QAAS,mBAGf,CAEA,MAAO,CACL8O,SAAS,EACT9O,QAAS,2CAEb,CAEA,uBAAMuO,CAAkB1O,GACtB,IACEzS,QAAQC,IAAI,sCAGZ,MAAM8J,EAAQ6D,SAAS6V,cAAc,SAYrC,OAXA1Z,EAAM1B,KAAO,OACb0B,EAAM8D,MAAMiZ,QAAU,OAEE,UAApBrU,EAAOiB,SACT3J,EAAMgd,OAAS,UAEfhd,EAAMgd,OAAS,UAGjBnZ,SAAS/L,KAAKmlB,YAAYjd,GAEnB,IAAI+a,QAAQ,CAACC,EAASC,KAC3Bjb,EAAMkd,SAAWC,MAAOpY,IACtB,IACE,MAAMqY,EAAOrY,EAAMwI,OAAO8P,MAAM,GAChC,IAAKD,EAEH,YADAnC,EAAO,IAAI7jB,MAAM,oBAInBnB,QAAQC,IAAI,qBAAqBknB,EAAKliB,QAGtC,MAAMyf,EAAU2C,IAAIC,gBAAgBH,GAEpC,IAAIllB,EAEFA,EADsB,UAApBwQ,EAAOiB,UAAwByT,EAAK9e,KAAKwK,WAAW,gBACvChT,KAAK8kB,cAAcD,EAAS,CAAE3d,SAAU0L,EAAO1L,iBAE/ClH,KAAK4kB,cAAcC,EAAS,CAAE3d,SAAU0L,EAAO1L,WAGhE/G,QAAQC,IAAI,2BAA4BgC,GACxC8iB,EAAQ9iB,EAEV,CAAE,MAAOlB,GACPf,QAAQe,MAAM,wBAAyBA,GACvCikB,EAAOjkB,EACT,CAAC,QACC6M,SAAS/L,KAAK0lB,YAAYxd,EAC5B,GAGFA,EAAMyd,SAAW,KACf5Z,SAAS/L,KAAK0lB,YAAYxd,GAC1Bib,EAAO,IAAI7jB,MAAM,uBAGnB4I,EAAM0d,SAGV,CAAE,MAAO1mB,GAEP,MADAf,QAAQe,MAAM,kCAAmCA,GAC3CA,CACR,CACF,CAEA,4BAAMqgB,CAAuB3O,GAC3B,IACEzS,QAAQC,IAAI,mCAEZ,MAAMqU,EAAUzU,KAAK6nB,oBACrB,GAAuB,IAAnBpT,EAAQ3M,OACV,MAAM,IAAIxG,MAAM,yCAGlBnB,QAAQC,IAAI,yBAAyBqU,EAAQ3M,UAG7C,MAAMggB,EAAQ/Z,SAAS6V,cAAc,OACrCkE,EAAM9Z,MAAM+Z,QAAU,+QAatB,MAAMC,EAAYja,SAAS6V,cAAc,OACzCoE,EAAUha,MAAM+Z,QAAU,gPAW1B,MAAME,EAAQla,SAAS6V,cAAc,MACrCqE,EAAMC,YAAc,qBACpBD,EAAMja,MAAM+Z,QAAU,sCACtBC,EAAUb,YAAYc,GAEtB,MAAME,EAAapa,SAAS6V,cAAc,OAC1CuE,EAAWna,MAAM+Z,QAAU,uBAE3BtT,EAAQxM,QAAQ,CAACC,EAAKiF,KACpB,MAAMib,EAAOra,SAAS6V,cAAc,OACpCwE,EAAKpa,MAAM+Z,QAAU,4OAUrB,MAAM3iB,EAA8B,oBAAvB8C,EAAIK,UAAUC,KAA6B,SACpB,oBAAvBN,EAAIK,UAAUC,KAA6B,QAAU,UAC5D6f,EAAO,IAAI3V,KAAKxK,EAAIK,UAAU8M,WAAWiT,qBAE/CF,EAAKG,UAAY,+CACmBnjB,MAAS+H,EAAQ,wEACCkb,yEACC7gB,KAAKghB,MAAMtgB,EAAIhB,SAASC,OAAOK,KAAKghB,MAAMtgB,EAAIhB,SAASG,OAAOG,KAAKghB,MAAMtgB,EAAIhB,SAASI,sBAG7I8gB,EAAKK,YAAc,KACjBL,EAAKpa,MAAM0a,YAAc,UACzBN,EAAKpa,MAAM2a,WAAa,WAG1BP,EAAKQ,WAAa,KAChBR,EAAKpa,MAAM0a,YAAc,cACzBN,EAAKpa,MAAM2a,WAAa,WAG1BP,EAAKS,QAAU,KACb3D,QAAQ,CAAE4D,iBAAkB5gB,EAAIC,GAAIzC,eAAgBwC,IACpD6F,SAAS/L,KAAK0lB,YAAYI,IAG5BK,EAAWhB,YAAYiB,KAGzBJ,EAAUb,YAAYgB,GAEtB,MAAMY,EAAYhb,SAAS6V,cAAc,UAqBzC,OApBAmF,EAAUb,YAAc,QACxBa,EAAU/a,MAAM+Z,QAAU,iMAU1BgB,EAAUF,QAAU,KAClB9a,SAAS/L,KAAK0lB,YAAYI,GAC1B3C,OAAO,IAAI7jB,MAAM,yBAGnB0mB,EAAUb,YAAY4B,GACtBjB,EAAMX,YAAYa,GAClBja,SAAS/L,KAAKmlB,YAAYW,GAEnB,IAAI7C,QAAQ,CAACC,EAASC,OAI/B,CAAE,MAAOjkB,GAEP,MADAf,QAAQe,MAAM,6BAA8BA,GACtCA,CACR,CACF,CAKA,qBAAAohB,CAAsB9gB,GACpB,MAAMgN,EAAST,SAAS6V,cAAc,UACtCpV,EAAO7M,MAAQ,IACf6M,EAAO5M,OAAS,IAChB,MAAMonB,EAAMxa,EAAOya,WAAW,MAIxBnK,EADO9e,KAAKkpB,WAAW1nB,GACV,IAGb2nB,EAAWH,EAAII,qBAAqB,EAAG,EAAG,IAAK,KAoBrD,OAnBAD,EAASE,aAAa,EAAG,OAAOvK,gBAChCqK,EAASE,aAAa,EAAG,QAAQvK,EAAM,IAAM,kBAE7CkK,EAAIM,UAAYH,EAChBH,EAAIO,SAAS,EAAG,EAAG,IAAK,KAGxBP,EAAIM,UAAY,QAChBN,EAAIQ,KAAO,aACXR,EAAIS,UAAY,SAChBT,EAAIU,SAAS,KAAM,IAAK,KAExBV,EAAIQ,KAAO,aACXR,EAAIU,SAASloB,EAAOmoB,MAAM,EAAG,IAAK,IAAK,KAEvCX,EAAIQ,KAAO,aACXR,EAAIM,UAAY,wBAChBN,EAAIU,SAAS,oBAAqB,IAAK,KAEhC,IAAIxkB,EAAM0kB,cAAcpb,EACjC,CAKA,0BAAA4V,CAA2B5iB,GACzB,MAAMgN,EAAST,SAAS6V,cAAc,UACtCpV,EAAO7M,MAAQ,IACf6M,EAAO5M,OAAS,IAChB,MAAMonB,EAAMxa,EAAOya,WAAW,MAIxBnK,EADO9e,KAAKkpB,WAAW1nB,GACV,IAGnB,IAAIqoB,EAAiB,EAErB,MAAM/L,EAAU,KAEd,MAAMqL,EAAWH,EAAII,qBAAqB,EAAG,EAAG,IAAK,KAC/CnK,EAA2B,EAAjB4K,EAAsB,IACtCV,EAASE,aAAa,EAAG,QAAQvK,EAAMG,GAAU,kBACjDkK,EAASE,aAAa,EAAG,QAAQvK,EAAMG,EAAS,IAAM,kBAEtD+J,EAAIM,UAAYH,EAChBH,EAAIO,SAAS,EAAG,EAAG,IAAK,KAGxBP,EAAIM,UAAY,QAChBN,EAAIQ,KAAO,aACXR,EAAIS,UAAY,SAGhB,MAAMK,EAAQ,CAAC,KAAM,KAAM,KAAM,OAC3BC,EAAYviB,KAAK8X,MAAMuK,EAAiB,IAAMC,EAAMhiB,OAC1DkhB,EAAIU,SAASI,EAAMC,GAAY,IAAK,KAEpCf,EAAIQ,KAAO,aACXR,EAAIU,SAASloB,EAAOmoB,MAAM,EAAG,IAAK,IAAK,KAEvCX,EAAIQ,KAAO,aACXR,EAAIM,UAAY,wBAChBN,EAAIU,SAAS,oBAAqB,IAAK,KAEvCG,IAGAlY,WAAW,IAAMqM,sBAAsBF,GAAU,IAAK,KAMxD,OAFAA,IAEO,IAAI5Y,EAAM0kB,cAAcpb,EACjC,CAKA,UAAA0a,CAAWc,GACT,IAAIC,EAAO,EACX,IAAK,IAAItI,EAAI,EAAGA,EAAIqI,EAAIliB,OAAQ6Z,IAAK,CAEnCsI,GAASA,GAAQ,GAAKA,EADTD,EAAIE,WAAWvI,GAE5BsI,GAAcA,CAChB,CACA,OAAOziB,KAAKkJ,IAAIuZ,EAClB,CAKA,iBAAApC,GACE,OAAOvZ,MAAMoG,KAAK1U,KAAKuF,eAAe3B,WAAWkS,IAAI,EAAE3N,EAAIqB,MAAO,CAChErB,KACA/C,KAAMoE,EAAOpE,KACbmD,SAAUiB,EAAOjB,SACjBrB,SAAUsC,EAAOtC,SAASoG,UAE9B,CAKA,YAAA4C,CAAaoT,GACX,MAAM9Z,EAASxJ,KAAKuF,eAAe4kB,IAAI7G,GACvC,GAAI9Z,EAAQ,CACV,GAAIA,EAAOjB,UAAUkc,aAAc,CACjC,MAAMA,EAAejb,EAAOjB,SAASkc,aACrC,IACEA,EAAa2F,QAC+B,mBAAjC3F,EAAa4F,gBACtB5F,EAAa4F,gBAAgB,OAE7B5F,EAAaZ,IAAM,GAEY,mBAAtBY,EAAac,MACtBd,EAAac,MAEjB,CAAE,MAAOrkB,GACPf,QAAQgB,KAAK,gDAAiDD,EAChE,CACF,CAEA,GAAIsI,EAAOjB,UAAUkd,UACnB,IACE+B,IAAI8C,gBAAgB9gB,EAAOjB,SAASkd,UACtC,CAAE,MAAOvkB,GACPf,QAAQgB,KAAK,kCAAmCD,EAClD,CAGF,GAAIsI,EAAOjB,UAAUgiB,iBACnB,IACE/gB,EAAOjB,SAASgiB,iBAAiBtiB,QAAQuiB,IACrB,mBAAPA,GAAmBA,KAElC,CAAE,MAAOtpB,GACPf,QAAQgB,KAAK,+BAAgCD,EAC/C,CAQF,GALAlB,KAAKiF,gBAAgBsF,OAAOf,GAC5BxJ,KAAKuF,eAAeyW,OAAOsH,GAGvB9Z,EAAOkB,UAAUlB,EAAOkB,SAAS2D,UACjC7E,EAAOkE,SAAU,EACDY,MAAMC,QAAQ/E,EAAOkE,UAAYlE,EAAOkE,SAAW,CAAClE,EAAOkE,WACnEzF,QAAQwiB,IACZA,EAAI3U,KAAkC,mBAApB2U,EAAI3U,IAAIzH,SAC5Boc,EAAI3U,IAAIzH,UAEVoc,EAAIpc,WAER,CAGA,OADAlO,QAAQC,IAAI,uBAAuBkjB,MAC5B,CACT,CACA,OAAO,CACT,CAKA,QAAAuD,GACoBvY,MAAMoG,KAAK1U,KAAKuF,eAAemlB,QACvCziB,QAAQE,GAAMnI,KAAKkQ,aAAa/H,IAC1ChI,QAAQC,IAAI,sCACd,CAKA,iBAAAuqB,GACE,MAAO,IAAI3qB,KAAKsF,eAClB,CAKA,uBAAAie,CAAwBqH,GAEtB,MAAMlgB,EAAW,IAAIxF,EAAM2lB,eAAe,EAAG,GAAI,IAC3Cnd,EAAW,IAAIxI,EAAM0H,kBAAkB,CAC3CnB,MAAO,MACPE,aAAa,EACbC,QAAS,KAGLwC,EAAY,IAAIlJ,EAAMmI,KAAK3C,EAAUgD,GAG3C,GAAI1N,KAAK6E,OAAQ,CACf,MAAMimB,EAAe9qB,KAAKojB,gCAAgC,CACxDjc,EAAGyjB,EAAiBzjB,EACpBE,EAAGujB,EAAiBvjB,EAAI,EACxBC,EAAGsjB,EAAiBtjB,IAEtB8G,EAAUlH,SAASoF,KAAKwe,EAC1B,MACE1c,EAAUlH,SAAS6E,IAAI6e,EAAiBzjB,EAAGyjB,EAAiBvjB,EAAI,EAAGujB,EAAiBtjB,GAGtFnH,QAAQC,IAAI,kBAAkBgO,EAAUlH,SAASC,EAAEC,QAAQ,OAAOgH,EAAUlH,SAASG,EAAED,QAAQ,OAAOgH,EAAUlH,SAASI,EAAEF,QAAQ,OAEnIpH,KAAK4E,MAAMS,IAAI+I,GAGfuD,WAAW,KACT3R,KAAK4E,MAAM2F,OAAO6D,GAClB1D,EAAS2D,UACTX,EAASW,WACRrO,KAAKe,OAAOyF,mBAGf,IAAIoF,EAAU,GACV2U,GAAY,EAChB,MAAMzC,EAAU,KACdlS,GAAuB,IAAZ2U,EACP3U,GAAW,KAAK2U,EAAY,GAC5B3U,GAAW,KAAK2U,GAAY,GAEhC7S,EAAS9B,QAAUA,EAEfwC,EAAU2c,QACZ/M,sBAAsBF,IAG1BA,GACF,CAKA,+BAAAsF,CAAgCwH,GAC9B,IAAK5qB,KAAK6E,OAIR,OAHI7E,KAAKe,OAAO6F,oBACdzG,QAAQgB,KAAK,uDAER,IAAI+D,EAAMmD,QAAQuiB,EAAiBzjB,EAAGyjB,EAAiBvjB,EAAGujB,EAAiBtjB,GAGpF,IAEE,MAAM0jB,EAAYhrB,KAAK6E,OAAOqC,SAASoG,QACjC+E,EAAkB,IAAInN,EAAMmD,QAClCrI,KAAK6E,OAAOmM,kBAAkBqB,GAG9B,MAAMvB,EAAc,IAAI5L,EAAMmD,QACxB0I,EAAW,IAAI7L,EAAMmD,QAAQ,EAAG,EAAG,GACzCyI,EAAYma,aAAa5Y,EAAiBtB,GAAUI,YACpD,MAAM+Z,EAAiB,IAAIhmB,EAAMmD,QACjC6iB,EAAeD,aAAana,EAAauB,GAAiBlB,YAG1D,MAAMgS,EAAgB6H,EAAU1d,QAchC,OAXA6V,EAAc9d,IAAIgN,EAAgB/E,QAAQgE,eAAesZ,EAAiBtjB,IAG1E6b,EAAc9d,IAAIyL,EAAYxD,QAAQgE,eAAesZ,EAAiBzjB,IAGtEgc,EAAc9d,IAAI6lB,EAAe5d,QAAQgE,eAAesZ,EAAiBvjB,IAEzErH,KAAKmrB,SACH,4CAA4ChI,EAAchc,EAAEC,QAAQ,OAAO+b,EAAc9b,EAAED,QAAQ,OAAO+b,EAAc7b,EAAEF,QAAQ,OAE7H+b,CAET,CAAE,MAAOjiB,GAEP,OADAf,QAAQe,MAAM,iDAAkDA,GACzD,IAAIgE,EAAMmD,QAAQuiB,EAAiBzjB,EAAGyjB,EAAiBvjB,EAAGujB,EAAiBtjB,EACpF,CACF,CAKA,kBAAA+b,CAAmBJ,GACjB,IAAKjjB,KAAK6E,OACR,OAGF,MAAMumB,EAAU,IAAIlmB,EAAMmD,QAC1BrI,KAAK6E,OAAOmM,kBAAkBoa,GAC9BA,EAAQC,SAER,IAAIC,GAAK,IAAIpmB,EAAMmD,SAAUiE,KAAKtM,KAAK6E,OAAOymB,IAAIC,gBAAgBvrB,KAAK6E,OAAO2mB,YAAYra,YACtF3J,KAAKkJ,IAAI0a,EAAQK,IAAIH,IAAO,OAC9BA,EAAK,IAAIpmB,EAAMmD,QAAQ,EAAG,EAAG,GACzBb,KAAKkJ,IAAI0a,EAAQK,IAAIH,IAAO,OAC9BA,EAAK,IAAIpmB,EAAMmD,QAAQ,EAAG,EAAG,KAIjC,MAAMqjB,GAAQ,IAAIxmB,EAAMmD,SAAU4iB,aAAaK,EAAIF,GAASja,YAC5Dma,GAAK,IAAIpmB,EAAMmD,SAAU4iB,aAAaG,EAASM,GAAOva,YAEtD,MAAMwa,EAAc,IAAIzmB,EAAM0mB,QAC9BD,EAAYE,UAAUH,EAAOJ,EAAIF,GACjCnI,EAAMuI,WAAWM,sBAAsBH,EACzC,CAKA,SAAAI,CAAUlnB,GACR7E,KAAK6E,OAASA,CAChB,CAKA,YAAAmnB,CAAaC,GACXjsB,KAAKe,OAAS,IAAKf,KAAKe,UAAWkrB,EACrC,CAEA,eAAAC,CAAgBC,GACdnsB,KAAK2F,qBAAuBwmB,GAAa,KACzCnsB,KAAKmrB,SAAS,4BAA6BnrB,KAAK2F,qBAClD,CAEA,eAAAymB,GACE,OAAOpsB,KAAK2F,oBACd,CAEA,eAAA0mB,CAAgBF,GACdnsB,KAAK4F,qBAAuBumB,GAAa,KACzCnsB,KAAKmrB,SAAS,4BAA6BnrB,KAAK4F,qBAClD,CAEA,eAAA0mB,GACE,OAAOtsB,KAAK4F,oBACd,CASA,kBAAA8e,CAAmB6H,GACjB,MAAM9H,EAAe8H,EAAYhkB,SAASkc,aAC1C,IAAKA,EAAc,OAGnB,MAAM+H,EAAcze,SAAS6V,cAAc,OAC3C4I,EAAYC,UAAY,0BACxBD,EAAYjE,UAAY,IAExB,MA4BMmE,EA5BgB,MACpB,MAAMA,EAAU3e,SAAS6V,cAAc,OAwBvC,OAvBA8I,EAAQD,UAAY,0BACpBC,EAAQxE,YAAc,eACtBwE,EAAQ1e,MAAM+Z,QAAU,y6BAqBjB2E,GAGOC,GAChB5e,SAAS/L,KAAKmlB,YAAYuF,GAG1B,MAqGME,EArGqB,MACzB,MAAMC,EAAkB9e,SAAS6V,cAAc,OAC/CiJ,EAAgBJ,UAAY,0BAC5BI,EAAgB7e,MAAM+Z,QAAU,8yBAqBhC,MAAM+E,EAAS/e,SAAS6V,cAAc,SACtCkJ,EAAOtkB,KAAO,QACdskB,EAAOjc,IAAM,IACbic,EAAOlc,IAAM,MACbkc,EAAO3iB,MAAQ,MACf2iB,EAAO9e,MAAM+Z,QAAU,yaAcvB,MAAM/Z,EAAQD,SAAS6V,cAAc,SAuDrC,OAtDA5V,EAAMka,YAAc,sjCAiCpBna,SAASgf,KAAK5F,YAAYnZ,GAG1B8e,EAAO9d,iBAAiB,QAAUge,IAChC,MAAM7iB,EAAQ6iB,EAAEvV,OAAOtN,MACvBsa,EAAawI,OAAS9iB,EAAQ,IAGjB,GAATA,GACFqiB,EAAYjE,UAAY,yIACxBiE,EAAYxe,MAAM2a,WAAa,qCAC/B6D,EAAYvE,MAAQ,UAEpBuE,EAAYjE,UAAY,IACxBiE,EAAYxe,MAAM2a,WAAa,gCAC/B6D,EAAYxe,MAAMvC,MAAQ,mBAC1B+gB,EAAYvE,MAAQ,UAIxB4E,EAAgB1F,YAAY2F,GACrBD,GAGYK,GACrBnf,SAAS/L,KAAKmlB,YAAYyF,GAE1BJ,EAAYxe,MAAM+Z,QAAU,8vBAsB5B,IAAIoF,GAAkB,EAGtBX,EAAYxd,iBAAiB,aAAc,KAKzC,GAJAwd,EAAYxe,MAAM2a,WAAa,qBAC/B6D,EAAYxe,MAAMof,UAAY,cAC9BZ,EAAYxe,MAAM0a,YAAc,4BAE3ByE,EAAiB,CAEpB,MAAME,EAAab,EAAYpd,wBAC/Bsd,EAAQ1e,MAAMsB,KAAO,GAAG+d,EAAW/d,KAAO+d,EAAW1rB,MAAQ,MAC7D+qB,EAAQ1e,MAAMwB,IAAS6d,EAAW7d,IAAM,EAApB,KACpBkd,EAAQ1e,MAAMpC,QAAU,GAC1B,IAGF4gB,EAAYxd,iBAAiB,aAAc,KACzCwd,EAAYxe,MAAM2a,WAAa,qBAC/B6D,EAAYxe,MAAMof,UAAY,aAC9BZ,EAAYxe,MAAM0a,YAAc,2BAGhCgE,EAAQ1e,MAAMpC,QAAU,MAI1B4gB,EAAYxd,iBAAiB,QAAUge,IAIrC,GAHAA,EAAEM,kBAGEH,EAIF,OAHAA,GAAkB,EAClBP,EAAa5e,MAAMpC,QAAU,SAC7BghB,EAAa5e,MAAMuf,cAAgB,QAKjC9I,EAAaT,OAAiC,IAAxBS,EAAawI,QACrCxI,EAAaT,OAAQ,EACrBS,EAAawI,OAASL,EAAaY,cAAc,SAASrjB,MAAQ,IAClEqiB,EAAYjE,UAAY,IACxBiE,EAAYxe,MAAM2a,WAAa,gCAC/B6D,EAAYxe,MAAMvC,MAAQ,mBAC1B+gB,EAAYvE,MAAQ,SAEpBxD,EAAaT,OAAQ,EACrBwI,EAAYjE,UAAY,yIACxBiE,EAAYxe,MAAM2a,WAAa,qCAC/B6D,EAAYvE,MAAQ,WAKxBuE,EAAYxd,iBAAiB,cAAgBge,IAM3C,GALAA,EAAEzb,iBACFyb,EAAEM,kBAEFH,GAAmBA,EAEfA,EAAiB,CAEnB,MAAME,EAAab,EAAYpd,wBAC/Bwd,EAAa5e,MAAMsB,KAAU+d,EAAW/d,KAAO+d,EAAW1rB,MAAQ,EAAI,GAA5C,KAC1BirB,EAAa5e,MAAMwB,IAAS6d,EAAW7d,IAAM,IAApB,KACzBod,EAAa5e,MAAMpC,QAAU,IAC7BghB,EAAa5e,MAAMuf,cAAgB,OAGnCb,EAAQ1e,MAAMpC,QAAU,GAC1B,MAEEghB,EAAa5e,MAAMpC,QAAU,IAC7BghB,EAAa5e,MAAMuf,cAAgB,SAKvCxf,SAASiB,iBAAiB,QAAUge,KAC9BG,GAAoBX,EAAYiB,SAAST,EAAEvV,SAAYmV,EAAaa,SAAST,EAAEvV,UACjF0V,GAAkB,EAClBP,EAAa5e,MAAMpC,QAAU,IAC7BghB,EAAa5e,MAAMuf,cAAgB,UAKvCxf,SAAS/L,KAAKmlB,YAAYqF,GAG1BD,EAAYhkB,SAASmlB,oBAAsBlB,EAG3CD,EAAYhkB,SAASolB,2BAA6B,KAChD3tB,KAAK2tB,2BAA2BpB,EAAaC,IAI/CxsB,KAAK2tB,2BAA2BpB,EAAaC,GAE7CxsB,KAAK6F,cAAckG,IAAIwgB,EAAYhkB,SAASJ,IAAMokB,EAAYzQ,KAAM,CAClEtS,OAAQ+iB,EACRC,cACAE,UACAE,eACAgB,WAAY,KACVT,GAAkB,EAClBP,EAAa5e,MAAMpC,QAAU,IAC7BghB,EAAa5e,MAAMuf,cAAgB,UAKlCvtB,KAAK+F,6BACR/F,KAAK+F,2BAA6B,KAChC/F,KAAK4mB,kCAEPrmB,OAAOyO,iBAAiB,SAAUhP,KAAK+F,2BAA4B,CAAE8nB,SAAS,IAC9EttB,OAAOyO,iBAAiB,SAAUhP,KAAK+F,2BAA4B,CAAE8nB,SAAS,KAG3E7tB,KAAK8F,6BACR9F,KAAK8F,2BAA6BgoB,YAAY,KAC5C9tB,KAAK4mB,kCACJ,MAGL,MAoBMmH,EAAmBf,KACnBG,GAAoBX,EAAYiB,SAAST,EAAEvV,SAAYmV,EAAaa,SAAST,EAAEvV,UACjF0V,GAAkB,EAClBP,EAAa5e,MAAMpC,QAAU,IAC7BghB,EAAa5e,MAAMuf,cAAgB,SAIvCxf,SAASiB,iBAAiB,QAAS+e,GAAiB,GAEpDxB,EAAYhkB,SAASgiB,iBAAmBgC,EAAYhkB,SAASgiB,kBAAoB,GACjFgC,EAAYhkB,SAASgiB,iBAAiBzmB,KA/BtB,KACdiK,SAASigB,oBAAoB,QAASD,GAAiB,GACnDvB,EAAYyB,YAAYzB,EAAYyB,WAAWvG,YAAY8E,GAC3DE,EAAQuB,YAAYvB,EAAQuB,WAAWvG,YAAYgF,GACnDE,EAAaqB,YAAYrB,EAAaqB,WAAWvG,YAAYkF,GACjE5sB,KAAK6F,cAAcmW,OAAOuQ,EAAYhkB,SAASJ,IAAMokB,EAAYzQ,MAEjC,IAA5B9b,KAAK6F,cAAcmC,OACjBhI,KAAK8F,6BACPooB,cAAcluB,KAAK8F,4BACnB9F,KAAK8F,2BAA6B,MAEhC9F,KAAK+F,6BACPxF,OAAOytB,oBAAoB,SAAUhuB,KAAK+F,4BAC1CxF,OAAOytB,oBAAoB,SAAUhuB,KAAK+F,4BAC1C/F,KAAK+F,2BAA6B,SAkBxC5F,QAAQC,IAAI,sCAAuCmsB,EAAYhkB,SAASJ,GAC1E,CAKA,0BAAAwlB,CAA2BpB,EAAaC,GACtC,IAAKxsB,KAAK6E,SAAW7E,KAAK8E,WAAa0nB,EAAYyB,WAAY,OAG/D,MAAME,EAAS,IAAIjpB,EAAMmD,QACzBkkB,EAAYjkB,iBAAiB6lB,GAC7BA,EAAOC,QAAQpuB,KAAK6E,QAGpB,MACMsK,EADSnP,KAAK8E,SAAS2J,WACTW,wBAEdjI,GAAgB,GAAXgnB,EAAOhnB,EAAU,IAAOgI,EAAKxN,MAAQwN,EAAKG,KAC/CjI,IAAiB,GAAX8mB,EAAO9mB,EAAU,IAAO8H,EAAKvN,OAASuN,EAAKK,IAGjD9E,EAAW6hB,EAAY7hB,SAC7B,GAAIA,GAAYA,EAASC,WAAY,CACrBD,EAASC,WAAWhJ,MAAQ4qB,EAAY7jB,MAAMvB,EAC5D,MAAMknB,EAAU,IACVC,GAAU,GAEhB9B,EAAYxe,MAAMsB,KAAO,GAAGnI,EAAIknB,MAChC7B,EAAYxe,MAAMwB,IAAM,GAAGnI,EAAIinB,KACjC,MAEE9B,EAAYxe,MAAMsB,KAAO,GAAGnI,EAAI,OAChCqlB,EAAYxe,MAAMwB,IAASnI,EAAI,GAAP,IAE5B,CAEA,8BAAAuf,GACO5mB,KAAK6F,eAA6C,IAA5B7F,KAAK6F,cAAcmC,MAI9ChI,KAAK6F,cAAcoC,QAASuS,IAC1B,MAAMtS,EAAMsS,EAAMhR,OACdtB,GAAOA,EAAIK,UAAYL,EAAIK,SAASolB,4BACtCzlB,EAAIK,SAASolB,8BAGnB,CAKA,gBAAAY,CAAiBhC,EAAaC,GAC5B,MAAM/H,EAAe8H,EAAYhkB,SAASkc,aACrCA,IAEDA,EAAaT,OAEfS,EAAaT,OAAQ,EACrBwI,EAAYjE,UAAY,KACxBpoB,QAAQC,IAAI,8BAA+BmsB,EAAYhkB,SAASJ,MAGhEsc,EAAaT,OAAQ,EACrBwI,EAAYjE,UAAY,KACxBpoB,QAAQC,IAAI,4BAA6BmsB,EAAYhkB,SAASJ,KAElE,CAKA,uBAAAqmB,GACMxuB,KAAK+E,eAKT/E,KAAKyuB,gCACP,CAKA,yBAAMC,GACA1uB,KAAK+E,gBAKJ/E,KAAK2uB,mBACR3uB,KAAK2uB,iBAAmB3uB,KAAKyuB,wCAIzBzuB,KAAK2uB,iBACb,CAKA,oCAAMF,GACJ,IAEE,GAAIluB,OAAO2E,OAAS3E,OAAO2E,MAAM0pB,cAE/B,YADA5uB,KAAK6uB,qBAKP1uB,QAAQC,IAAI,4CAGZ,MAAMqE,QAAeqqB,OAAO,iFAGvBvuB,OAAO2E,QAAO3E,OAAO2E,MAAQ,CAAA,GAClC3E,OAAO2E,MAAM0pB,cAAgBnqB,EAAOmqB,cACpCruB,OAAO2E,MAAM6pB,YAActqB,EAAOsqB,YAElC5uB,QAAQC,IAAI,uCACZJ,KAAK6uB,oBAEP,CAAE,MAAO3tB,GACPf,QAAQgB,KAAK,mCAAoCD,GACjDf,QAAQgB,KAAK,uFACf,CACF,CAKA,kBAAA0tB,GACE,IACE7uB,KAAK+E,cAAgB,IAAIxE,OAAO2E,MAAM0pB,cACtC5uB,KAAK+E,cAAciqB,QAAQzuB,OAAO0uB,WAAY1uB,OAAO2uB,aACrDlvB,KAAK+E,cAAc0J,WAAWT,MAAM9G,SAAW,WAC/ClH,KAAK+E,cAAc0J,WAAWT,MAAMwB,IAAM,MAC1CxP,KAAK+E,cAAc0J,WAAWT,MAAMuf,cAAgB,OAGhDvtB,KAAK8E,UAAY9E,KAAK8E,SAAS2J,WAAWwf,WAC5CjuB,KAAK8E,SAAS2J,WAAWwf,WAAW9G,YAAYnnB,KAAK+E,cAAc0J,YAEnEV,SAAS/L,KAAKmlB,YAAYnnB,KAAK+E,cAAc0J,YAG/CtO,QAAQC,IAAI,iDAGZJ,KAAKmvB,+BAEP,CAAE,MAAOjuB,GACPf,QAAQgB,KAAK,oCAAqCD,EACpD,CACF,CAKA,6BAAAiuB,GACOnvB,KAAKovB,6BACRpvB,KAAKovB,2BAA6B,KAC5BpvB,KAAK+E,eACP/E,KAAK+E,cAAciqB,QAAQzuB,OAAO0uB,WAAY1uB,OAAO2uB,cAGzD3uB,OAAOyO,iBAAiB,SAAUhP,KAAKovB,4BAE3C,CAKA,cAAAC,GACMrvB,KAAK+E,eAAiB/E,KAAK4E,OAAS5E,KAAK6E,QAC3C7E,KAAK+E,cAAcuqB,OAAOtvB,KAAK4E,MAAO5E,KAAK6E,OAE/C,CAEA,QAAAsmB,IAAYoE,GACLvvB,KAAKe,OAAO6F,oBAGjBzG,QAAQC,OAAOmvB,EACjB,CAMA,yBAAAjkB,GAEE,MAAMkkB,EAAkBxvB,KAAK4E,MAAM+jB,WACnC,IAAI8G,EAAU,CAAEC,EAAG,GAAKC,EAAG,GAAKza,EAAG,IAE/Bsa,GACEA,EAAgBI,UAClBH,EAAU,CACRC,EAAGF,EAAgBE,EACnBC,EAAGH,EAAgBG,EACnBza,EAAGsa,EAAgBta,IAkBzB,MAZqB,CAACzJ,IACpB,MAAMikB,EAAEA,EAACC,EAAEA,EAACza,EAAEA,GAAMzJ,EAIpB,MAAO,OAHIikB,GAAK,OAAUA,EAAI,MAAQloB,KAAKqoB,KAAKH,EAAI,MAAS,MAAO,MAG/C,OAFVC,GAAK,OAAUA,EAAI,MAAQnoB,KAAKqoB,KAAKF,EAAI,MAAS,MAAO,MAEjC,OADxBza,GAAK,OAAUA,EAAI,MAAQ1N,KAAKqoB,KAAK3a,EAAI,MAAS,MAAO,OAIlD4a,CAAaL,GAIf,GAET,MAGA,OAEX,CAKA,qBAAAziB,GACE,MAAMwiB,EAAkBxvB,KAAK4E,MAAM+jB,WACnC,IAAI8G,EAAU,CAAEC,EAAG,GAAKC,EAAG,GAAKza,EAAG,IAE/Bsa,GAAmBA,EAAgBI,UACrCH,EAAU,CACRC,EAAGF,EAAgBE,EACnBC,EAAGH,EAAgBG,EACnBza,EAAGsa,EAAgBta,IAcvB,MAVqB,CAACzJ,IACpB,MAAMikB,EAAEA,EAACC,EAAEA,EAACza,EAAEA,GAAMzJ,EAIpB,MAAO,OAHIikB,GAAK,OAAUA,EAAI,MAAQloB,KAAKqoB,KAAKH,EAAI,MAAS,MAAO,MAG/C,OAFVC,GAAK,OAAUA,EAAI,MAAQnoB,KAAKqoB,KAAKF,EAAI,MAAS,MAAO,MAEjC,OADxBza,GAAK,OAAUA,EAAI,MAAQ1N,KAAKqoB,KAAK3a,EAAI,MAAS,MAAO,OAIlD4a,CAAaL,GAEf,GAET,MAGA,QAEX,CAKA,OAAAphB,GACErO,KAAK6mB,WACD7mB,KAAKiF,gBAAgB8lB,QACvB/qB,KAAKiF,gBAAgB8lB,OAAOxgB,OAAOvK,KAAKiF,gBAE5C,ECrjJF,MAAM8qB,EAA4B,0BAC5BC,EAA4B,0BAM3B,MAAMC,EACX,WAAAnwB,CAAY2B,EAAU,IACpBzB,KAAK+G,aAAetF,EAAQsF,cAAgB,KAC5C/G,KAAKgF,OAASvD,EAAQuD,QAAU,KAChChF,KAAKkwB,iBAAmBzuB,EAAQyuB,kBAAgB,MAAa,GAE7DlwB,KAAKmwB,WAAY,EACjBnwB,KAAKgoB,UAAY,KACjBhoB,KAAKkK,MAAQ,KACblK,KAAKowB,OAAS,KACdpwB,KAAK+J,YAAc,WAGnB/J,KAAKqwB,kBAAoB,IAAI7qB,IAC7BxF,KAAKswB,cAAgB,KAGrBtwB,KAAKe,OAAS,CACZwvB,cAAe9uB,EAAQ8uB,eAAiB,IACxCrpB,SAAUzF,EAAQyF,UAAY,eAC9BvF,MAAOF,EAAQE,OAAS,IACxB6uB,UAAW/uB,EAAQ+uB,WAAa,IAChCC,MAAOhvB,EAAQgvB,OAAS,OACxBC,cAAuC,IAAzBjvB,EAAQivB,aACtBC,YAAmC,IAAvBlvB,EAAQkvB,WACpB/pB,oBAAmD,IAA/BnF,EAAQmF,sBACzBnF,EAAQV,QAGbf,KAAK4wB,uBAAyB,GAC9B5wB,KAAK6wB,uBAAyB,GAC9B7wB,KAAK2F,qBAAuB,KAC5B3F,KAAK4F,qBAAuB,KAC5B5F,KAAK8wB,mBAAqB,KAC1B9wB,KAAK+wB,mBAAqB,KAC1B/wB,KAAKgxB,yBAA2B,KAChChxB,KAAKixB,sBAAwB,KAC7BjxB,KAAKkxB,uBAAyB,KAC9BlxB,KAAKmxB,2BAA6B,KAClCnxB,KAAKoxB,0BAA4B,KACjCpxB,KAAKqxB,4BAA8B,KACnCrxB,KAAKsxB,oBAAsB,KAC3BtxB,KAAKuxB,aAAe,KACpBvxB,KAAKwxB,iBAAkB,EACvBxxB,KAAKyxB,YAAa,EAClBzxB,KAAK0xB,gBAAkB,KACvB1xB,KAAK2xB,oBAAsB,KAC3B3xB,KAAK4xB,oBAAsB,KAE3B,IACE,MAAMC,EAAcC,aAAaC,QAAQhC,GACnCiC,EAAcF,aAAaC,QAAQ/B,GACrC6B,IACF7xB,KAAK2F,qBAAuBksB,GAE1BG,IACFhyB,KAAK4F,qBAAuBosB,EAEhC,CAAE,MAAO9wB,GACPf,QAAQgB,KAAK,+CAAgDD,EAC/D,CAEAlB,KAAK2xB,oBAAsB3xB,KAAK2F,qBAChC3F,KAAK4xB,oBAAsB5xB,KAAK4F,qBAEhC5F,KAAKiyB,sCAGLjyB,KAAKkyB,aAAeJ,aAAaC,QAAQ,uBAAyB,QAClE/xB,KAAKmyB,WAAmC,SAAtBnyB,KAAKkyB,aACvBlyB,KAAKoyB,eAAuC,aAAtBpyB,KAAKkyB,aAG3BlyB,KAAKsF,eAAiB,GACtBtF,KAAKqyB,qBAAsB,EAC3BryB,KAAKsyB,eAAiB,GAEtBtyB,KAAKuyB,SACLvyB,KAAKwyB,cAEAxyB,KAAKgF,QAAUhF,KAAK+G,cAAgB/G,KAAK+G,aAAa/B,SACzDhF,KAAKgF,OAAShF,KAAK+G,aAAa/B,QAGlChF,KAAKyyB,qBACLzyB,KAAK0yB,8BAGL3kB,SAASiB,iBAAiB,mBAAoB,KAC5ChP,KAAK2yB,kBAGP3yB,KAAKmrB,SAAS,4BAETnrB,KAAK2F,sBAAyB3F,KAAK4F,sBACtC5F,KAAK4yB,kBAAiB,EAE1B,CAEA,QAAAzH,IAAYoE,GACLvvB,KAAKe,OAAO6F,oBAGjBzG,QAAQC,OAAOmvB,EACjB,CAKA,eAAAsD,GACE7yB,KAAK8yB,iBAAiB,iBACxB,CAKA,gBAAAA,CAAiB/f,GAEf,MAAMggB,EAAgBhlB,SAASilB,eAAe,cAC1CD,GACFA,EAAcxoB,SAIhB,MAAM0oB,EAAkBjzB,KAAKkzB,mBAC7B,IAAKD,EAAiB,OAEtB,MAAME,EAAQplB,SAAS6V,cAAc,OACrCuP,EAAMhrB,GAAK,aACXgrB,EAAMjL,YAAcnV,EACpBogB,EAAMnlB,MAAM+Z,QAAU,2HAKN/nB,KAAKmyB,WAAa,0BAA4B,gUAc9Dc,EAAgBjlB,MAAM9G,SAAW,WACjC+rB,EAAgB9L,YAAYgM,GAG5BxhB,WAAW,KACTwhB,EAAMnlB,MAAMpC,QAAU,KACrB,IAGH+F,WAAW,KACLwhB,EAAMlF,aACRkF,EAAMnlB,MAAMpC,QAAU,IACtB+F,WAAW,KACLwhB,EAAMlF,YACRkF,EAAM5oB,UAEP,OAEJ,IACL,CAKA,MAAAgoB,GAEEvyB,KAAKgoB,UAAYja,SAAS6V,cAAc,OACxC5jB,KAAKgoB,UAAU7f,GAAK,kBACpBnI,KAAKgoB,UAAUha,MAAM+Z,QAAU/nB,KAAKozB,qBAGpC,MAAMC,EAAiBtlB,SAAS6V,cAAc,OAC9CyP,EAAe5G,UAAY,8BAC3B4G,EAAerlB,MAAM+Z,QAAU,oUAe/B,MAAMuL,EAAYvlB,SAAS6V,cAAc,OACzC0P,EAAU7G,UAAY,yBACtB6G,EAAUtlB,MAAM+Z,QAAU,uKAMJ/nB,KAAKmyB,WAAa,2BAA6B,+JAG1DnyB,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,6aAc5EmB,EAAU/K,UAAY,mIAGtB8K,EAAerkB,iBAAiB,aAAc,KAC5CskB,EAAUtlB,MAAMpC,QAAU,IAC1B0nB,EAAUtlB,MAAMof,UAAY,yBAC5BiG,EAAerlB,MAAMof,UAAY,aACjCiG,EAAerlB,MAAMpC,QAAU,MAGjCynB,EAAerkB,iBAAiB,aAAc,KAC5CskB,EAAUtlB,MAAMpC,QAAU,IAC1B0nB,EAAUtlB,MAAMof,UAAY,6BAC5BiG,EAAerlB,MAAMof,UAAY,WACjCiG,EAAerlB,MAAMpC,QAAU,QAGjCynB,EAAelM,YAAYmM,GAC3BtzB,KAAKgoB,UAAUb,YAAYkM,GAG3BrzB,KAAKowB,OAASriB,SAAS6V,cAAc,OACrC5jB,KAAKuzB,UAAYvzB,KAAKowB,OACtBpwB,KAAKowB,OAAOjoB,GAAK,iBACjBnI,KAAKowB,OAAO3D,UAAY,iBACxBzsB,KAAKowB,OAAOpiB,MAAM+Z,QAAU/nB,KAAKwzB,kBAEjCxzB,KAAKyzB,kBAAoB1lB,SAAS6V,cAAc,OAChD5jB,KAAKyzB,kBAAkBtrB,GAAK,2BAC5BnI,KAAKyzB,kBAAkBzlB,MAAM+Z,QAAU,2WAiBvC/nB,KAAK0zB,UAAY,IAAIluB,IAGrBxF,KAAK2zB,aAAe5lB,SAAS6V,cAAc,OAC3C5jB,KAAK2zB,aAAa3lB,MAAM+Z,QAAU,iFAOlC/nB,KAAKkK,MAAQ6D,SAAS6V,cAAc,YACpC5jB,KAAKkK,MAAM0pB,KAAO,EAClB5zB,KAAKkK,MAAM/B,GAAK,gBAChBnI,KAAKkK,MAAM2pB,YAAc,gCACzB7zB,KAAKkK,MAAM8D,MAAM+Z,QAAU/nB,KAAK8zB,iBAGhC9zB,KAAK+zB,aAAehmB,SAAS6V,cAAc,OAC3C5jB,KAAK+zB,aAAaxL,UAAY,IAC9BvoB,KAAK+zB,aAAa9L,MAAQ,YAC1BjoB,KAAK+zB,aAAa/lB,MAAM+Z,QAAU,oNASlB/nB,KAAKmyB,WAAa,2BAA6B,kDACzCnyB,KAAKmyB,WAAa,2BAA6B,kEAE1DnyB,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,wHAQ5EnyB,KAAK+zB,aAAa/kB,iBAAiB,aAAc,KAC/ChP,KAAK+zB,aAAa/lB,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,qBACpFnyB,KAAK+zB,aAAa/lB,MAAMof,UAAY,eAGtCptB,KAAK+zB,aAAa/kB,iBAAiB,aAAc,KAC/ChP,KAAK+zB,aAAa/lB,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,qBACpFnyB,KAAK+zB,aAAa/lB,MAAMof,UAAY,aAItCptB,KAAK+zB,aAAa/kB,iBAAiB,QAAS,KACtChP,KAAKyxB,WACPzxB,KAAKg0B,sBAELh0B,KAAKi0B,wBAKTj0B,KAAK2zB,aAAaxM,YAAYnnB,KAAKkK,OACnClK,KAAK2zB,aAAaxM,YAAYnnB,KAAK+zB,cAKnC,MAAMG,EAAel0B,KAAKm0B,0BAGpBC,EAAkBp0B,KAAKq0B,uBAGvBC,EAAcvmB,SAAS6V,cAAc,OAC3C0Q,EAAY/L,UAAY,IACxB+L,EAAYtmB,MAAM+Z,QAAU,4JAOZ/nB,KAAKmyB,WAAa,2BAA6B,uCACpDnyB,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,0QAY5EmC,EAAYtlB,iBAAiB,YAAa,KACxCslB,EAAYtmB,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,qBAC9EmC,EAAYtmB,MAAMof,UAAY,eAGhCkH,EAAYtlB,iBAAiB,WAAY,KACvCslB,EAAYtmB,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,qBAC9EmC,EAAYtmB,MAAMvC,MAAQzL,KAAKmyB,WAAa,UAAY,UACxDmC,EAAYtmB,MAAMof,UAAY,aAGhCkH,EAAYtlB,iBAAiB,QAAS,KACpChP,KAAKu0B,SAKPv0B,KAAKgoB,UAAUb,YAAYmN,GAC3Bt0B,KAAKgoB,UAAUb,YAAY+M,GAC3Bl0B,KAAKgoB,UAAUb,YAAYnnB,KAAK2zB,cAChC3zB,KAAKgoB,UAAUb,YAAYiN,GAG3BrmB,SAAS/L,KAAKmlB,YAAYnnB,KAAKyzB,mBAG/B1lB,SAAS/L,KAAKmlB,YAAYnnB,KAAKgoB,WAG/BhoB,KAAKw0B,aAGLx0B,KAAKy0B,aAAc,EACnBz0B,KAAK00B,yBAA0B,EAG/B10B,KAAKkK,MAAM8E,iBAAiB,QAAS,KAE/BhP,KAAKy0B,cAKTz0B,KAAK20B,qBAEL30B,KAAK40B,uBAIP50B,KAAKkK,MAAM8E,iBAAiB,mBAAoB,KAC9ChP,KAAKy0B,aAAc,IAGrBz0B,KAAKkK,MAAM8E,iBAAiB,iBAAkB,KAC5ChP,KAAKy0B,aAAc,EAGF,SAASvgB,KAAK2gB,UAAUC,YAAc,UAAU5gB,KAAK2gB,UAAUC,aAE9E90B,KAAK00B,yBAA0B,GAIjC/iB,WAAW,KACT3R,KAAK20B,qBACL30B,KAAK40B,qBACJ,MAIL,MAAMG,EAAW,SAAS7gB,KAAK2gB,UAAUC,YAAc,UAAU5gB,KAAK2gB,UAAUC,WAGhF90B,KAAKkK,MAAM8E,iBAAiB,UAAYge,IACtC,GAAc,UAAVA,EAAE9a,IAAiB,CAErB,GAAI6iB,GAAY/0B,KAAK00B,wBAEnB,YADA10B,KAAK00B,yBAA0B,GAKjC,IAAKK,IAAa/H,EAAEyH,aAAez0B,KAAKy0B,aACtC,OAIF,GAAyB,aAArBz0B,KAAK+J,YAGP,OAFAijB,EAAEzb,sBACFvR,KAAK6yB,kBAIP7F,EAAEzb,iBACFvR,KAAKiD,gBACP,IAIEjD,KAAKe,OAAO2vB,YAIlB,CAKA,oBAAA2D,GACE,MAAMrM,EAAYja,SAAS6V,cAAc,OACzCoE,EAAUha,MAAM+Z,QAAU,+KAU1B,MAAMiN,EAAcjnB,SAAS6V,cAAc,OAC3CoR,EAAYhnB,MAAM+Z,QAAU,gDAE5B,MAAMkN,EAAWlnB,SAAS6V,cAAc,UACxCqR,EAAS1M,UAAY,8FACrB0M,EAASjnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,aACpDD,EAASjmB,iBAAiB,QAAS,IAAMhP,KAAKm1B,4BAG9C,MAAMC,EAAarnB,SAAS6V,cAAc,UAC1CwR,EAAW7M,UAAY,4FACvB6M,EAAWpnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,aACtDE,EAAWpnB,MAAMpC,QAAU,MAC3BwpB,EAAWC,UAAW,EACtBD,EAAWnN,MAAQ,YAEnB+M,EAAY7N,YAAY8N,GACxBD,EAAY7N,YAAYiO,GAGxB,MAAME,EAAevnB,SAAS6V,cAAc,OAC5C0R,EAAatnB,MAAM+Z,QAAU,gDAE7B,MAAMwN,EAAcxnB,SAAS6V,cAAc,UACrC4R,EAAe,KACC,CAClBC,MAAO,KACPC,KAAM,KACNC,SAAU,MAEO31B,KAAKkyB,eAAiB,MAwB3CqD,EAAYhN,UAZmB,MAC7B,MAAMqN,EAAOJ,IAEb,MAAa,OAATI,EACK,wDAAwDA,WAC7C,OAATA,EACF,0EAA0EA,WAE1E,2EAA2EA,YAI9DC,GACxBN,EAAYvnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,QACvDK,EAAYtN,MAvBU,MACA,CAClBwN,MAAO,cACPC,KAAM,eACNC,SAAU,eAEO31B,KAAKkyB,eAAiB,eAiBvB4D,GACpBP,EAAYvmB,iBAAiB,QAAS,IAAMhP,KAAK+1B,eAEjD,MAAMC,EAAiBjoB,SAAS6V,cAAc,UAkB9C,OAjBAoS,EAAezN,UAAY,oFAC3ByN,EAAehoB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,QAC1Dc,EAAe/N,MAAQ,YACvB+N,EAAehnB,iBAAiB,QAAS,IAAMhP,KAAK4yB,oBAEpD0C,EAAanO,YAAYoO,GACzBD,EAAanO,YAAY6O,GAEzBhO,EAAUb,YAAY6N,GACtBhN,EAAUb,YAAYmO,GAGtBt1B,KAAKi1B,SAAWA,EAChBj1B,KAAKo1B,WAAaA,EAClBp1B,KAAKu1B,YAAcA,EACnBv1B,KAAKg2B,eAAiBA,EAEfhO,CACT,CAEA,4BAAAiO,GAsBE,OArBAj2B,KAAKgxB,yBAA2BjjB,SAAS6V,cAAc,OACvD5jB,KAAKgxB,yBAAyB7oB,GAAK,mBACnCnI,KAAKgxB,yBAAyBhjB,MAAM+Z,QAAU,wLAQ9C/nB,KAAKixB,sBAAwBljB,SAAS6V,cAAc,OACpD5jB,KAAKixB,sBAAsB/I,YAAc,qBACzCloB,KAAKixB,sBAAsBjjB,MAAMkoB,SAAW,OAC5Cl2B,KAAKixB,sBAAsBjjB,MAAMpC,QAAU,MAC3C5L,KAAKixB,sBAAsBjjB,MAAMmoB,aAAe,MAChDn2B,KAAKgxB,yBAAyB7J,YAAYnnB,KAAKixB,uBAE/CjxB,KAAKkxB,uBAAyBnjB,SAAS6V,cAAc,OACrD5jB,KAAKgxB,yBAAyB7J,YAAYnnB,KAAKkxB,wBAE/ClxB,KAAKo2B,6BACEp2B,KAAKgxB,wBACd,CAEA,kBAAAyB,GACMzyB,KAAKsxB,sBACPtxB,KAAKsxB,oBAAoB/mB,SACzBvK,KAAKsxB,oBAAsB,KAC3BtxB,KAAKuxB,aAAe,MAGtBvxB,KAAKsxB,oBAAsBvjB,SAAS6V,cAAc,OAClD5jB,KAAKsxB,oBAAoBnpB,GAAK,kCAC9BnI,KAAKsxB,oBAAoBtjB,MAAM+Z,QAAU,oUAczC/nB,KAAKsxB,oBAAoBtiB,iBAAiB,QAAUC,IAC9CA,EAAMwI,SAAWzX,KAAKsxB,qBACxBtxB,KAAKq2B,sBAITr2B,KAAKuxB,aAAexjB,SAAS6V,cAAc,OAC3C5jB,KAAKuxB,aAAa9E,UAAY,0BAC9BzsB,KAAKuxB,aAAavjB,MAAM+Z,QAAU,8aAgBlC,MAAME,EAAQla,SAAS6V,cAAc,MACrCqE,EAAMC,YAAc,SACpBD,EAAMja,MAAM+Z,QAAU,2GAOtB,MAAMuO,EAAWvoB,SAAS6V,cAAc,KACxC0S,EAASpO,YAAc,qBACvBoO,EAAStoB,MAAM+Z,QAAU,yEAMzB,MAAMwO,EAAWv2B,KAAKi2B,+BAEhBO,EAAYzoB,SAAS6V,cAAc,OACzC4S,EAAUxoB,MAAM+Z,QAAU,oHAO1B/nB,KAAKmxB,2BAA6BpjB,SAAS6V,cAAc,UACzD5jB,KAAKmxB,2BAA2BjJ,YAAc,QAC9CloB,KAAKmxB,2BAA2BnjB,MAAM+Z,QAAU,6MAShD/nB,KAAKmxB,2BAA2BniB,iBAAiB,QAAS,IAAMhP,KAAKy2B,2BAA0B,IAE/F,MAAMC,EAAgB3oB,SAAS6V,cAAc,OAC7C8S,EAAc1oB,MAAM+Z,QAAU,2BAE9B/nB,KAAKqxB,4BAA8BtjB,SAAS6V,cAAc,UAC1D5jB,KAAKqxB,4BAA4BnJ,YAAc,SAC/CloB,KAAKqxB,4BAA4BrjB,MAAM+Z,QAAU,qOASjD/nB,KAAKqxB,4BAA4BriB,iBAAiB,QAAS,IAAMhP,KAAKq2B,qBAEtEr2B,KAAKoxB,0BAA4BrjB,SAAS6V,cAAc,UACxD5jB,KAAKoxB,0BAA0BlJ,YAAc,OAC7CloB,KAAKoxB,0BAA0BpjB,MAAM+Z,QAAU,2UAY/C/nB,KAAKoxB,0BAA0BpiB,iBAAiB,QAAS,IAAMhP,KAAK22B,qBAEpED,EAAcvP,YAAYnnB,KAAKqxB,6BAC/BqF,EAAcvP,YAAYnnB,KAAKoxB,2BAE/BoF,EAAUrP,YAAYnnB,KAAKmxB,4BAC3BqF,EAAUrP,YAAYuP,GAEtB12B,KAAKuxB,aAAapK,YAAYc,GAC9BjoB,KAAKuxB,aAAapK,YAAYmP,GAC9Bt2B,KAAKuxB,aAAapK,YAAYoP,GAC9Bv2B,KAAKuxB,aAAapK,YAAYqP,GAE9Bx2B,KAAKsxB,oBAAoBnK,YAAYnnB,KAAKuxB,cAC1CxjB,SAAS/L,KAAKmlB,YAAYnnB,KAAKsxB,qBAE/BtxB,KAAKo2B,6BACLp2B,KAAK42B,0BAAyB,EAChC,CAEA,gBAAAhE,CAAiBiE,GAAa,GACvB72B,KAAKsxB,qBACRtxB,KAAKyyB,qBAGPzyB,KAAKsxB,oBAAoBtjB,MAAMiZ,QAAU,OACzCjJ,sBAAsB,KAChBhe,KAAKsxB,sBACPtxB,KAAKsxB,oBAAoBtjB,MAAMpC,QAAU,OAI7C5L,KAAK82B,yBACL92B,KAAKy2B,0BAA0BI,EACjC,CAEA,iBAAAR,GACOr2B,KAAKsxB,sBAIVtxB,KAAKsxB,oBAAoBtjB,MAAMpC,QAAU,IACzC+F,WAAW,KACL3R,KAAKsxB,sBACPtxB,KAAKsxB,oBAAoBtjB,MAAMiZ,QAAU,QAE3CjnB,KAAK82B,0BACJ,KACL,CAEA,+BAAML,CAA0BM,GAAQ,GACtC,IAAI/2B,KAAKwxB,iBAAoBuF,EAA7B,CAIA,IAAK/2B,KAAKgF,QAAsD,mBAArChF,KAAKgF,OAAO7B,qBAIrC,OAHAnD,KAAKg3B,yBAAyB,uDAAwD,SACtFh3B,KAAK42B,0BAAyB,QAC9B52B,KAAKi3B,0BAAyB,GAIhCj3B,KAAKwxB,iBAAkB,EACvBxxB,KAAKg3B,yBAAyB,qBAAsB,QACpDh3B,KAAK42B,0BAAyB,GAC9B52B,KAAKi3B,0BAAyB,GAE9B,IAC+C,mBAAlCj3B,KAAKgF,OAAO3D,yBACfrB,KAAKgF,OAAO3D,oBAGpB,MAAMT,QAAiBZ,KAAKgF,OAAO7B,uBACnC,IAAKvC,IAAiC,IAArBA,EAASihB,UAAsBjhB,EAAS0jB,SACvD,MAAM,IAAIhjB,MAAMV,GAAUM,OAAS,qBAGrClB,KAAK4wB,uBAAyBtiB,MAAMC,QAAQ3N,EAAS0jB,UAAU7B,OAAS7hB,EAAS0jB,SAAS7B,MAAQ,GAClGziB,KAAK6wB,uBAAyBviB,MAAMC,QAAQ3N,EAAS0jB,UAAUZ,OAAS9iB,EAAS0jB,SAASZ,MAAQ,GAElG1jB,KAAK2F,qBAAuB3F,KAAKk3B,wBAC/B,QACAl3B,KAAK4wB,uBACLhwB,EAASu2B,SAAS1U,OAGpBziB,KAAK4F,qBAAuB5F,KAAKk3B,wBAC/B,QACAl3B,KAAK6wB,uBACLjwB,EAASu2B,SAASzT,OAGpB1jB,KAAK2xB,oBAAsB3xB,KAAK2F,qBAChC3F,KAAK4xB,oBAAsB5xB,KAAK4F,qBAEhC5F,KAAKo3B,0BACLp3B,KAAKiyB,sCACLjyB,KAAKi3B,0BAAyB,EAChC,CAAE,MAAO/1B,GACPf,QAAQe,MAAM,2CAA4CA,GAC1DlB,KAAKg3B,yBAAyB,mDAAoD,SAClFh3B,KAAK42B,0BAAyB,GAC9B52B,KAAKi3B,0BAAyB,EAChC,CAAC,QACCj3B,KAAKwxB,iBAAkB,CACzB,CApDA,CAqDF,CAEA,wBAAAwF,CAAyBjkB,EAASvK,EAAO,QAClCxI,KAAKixB,wBAGVjxB,KAAKixB,sBAAsB/I,YAAcnV,EACzC/S,KAAKixB,sBAAsBoG,QAAQC,WAAa9uB,EAChDxI,KAAKixB,sBAAsBsG,UAAUC,OAAO,0BAAoC,UAAThvB,GACvExI,KAAKo2B,6BACP,CAEA,wBAAAQ,CAAyBnuB,GAClBzI,KAAKmxB,6BAGVnxB,KAAKmxB,2BAA2BnjB,MAAMiZ,QAAUxe,EAAU,cAAgB,OAC1EzI,KAAKo2B,6BACP,CAEA,uBAAAc,CAAwB1uB,EAAMivB,EAAUC,GACtC,IAAKD,GAAgC,IAApBA,EAAS3vB,OACxB,OAAO,KAGT,MAAM6vB,EAAsB,UAATnvB,EAAmBunB,EAA4BC,EAClE,IAAI4H,EAAW,KACf,IACEA,EAAW9F,aAAaC,QAAQ4F,EAClC,CAAE,MAAOz2B,GACPf,QAAQgB,KAAK,oCAAqCD,EACpD,CAGA,IAAI22B,EADkBD,GAAYH,EAAS/jB,KAAK7R,GAAWA,EAAQsG,KAAOyvB,GACzCA,EAAW,MAEvCC,GAAcH,GAAaD,EAAS/jB,KAAK7R,GAAWA,EAAQsG,KAAOuvB,KACtEG,EAAaH,GAGVG,IACHA,EAAaJ,EAAS,IAAItvB,IAAM,MAGlC,IACM0vB,EACF/F,aAAagG,QAAQH,EAAYE,GAEjC/F,aAAaiG,WAAWJ,EAE5B,CAAE,MAAOz2B,GACPf,QAAQgB,KAAK,0CAA2CD,EAC1D,CAEA,OAAO22B,CACT,CAEA,uBAAAT,GACE,IAAKp3B,KAAKkxB,uBACR,OAGFlxB,KAAKkxB,uBAAuB3I,UAAY,GAExC,MAAMyP,EAAWh4B,KAAK4wB,uBAAuB9oB,OAAS,EAChDmwB,EAAWj4B,KAAK6wB,uBAAuB/oB,OAAS,EAEtD,GAAKkwB,GAAaC,EAAlB,CAOA,GAFAj4B,KAAKg3B,yBAAyB,qBAAsB,QAEhDgB,EAAU,CACZ,MAAME,EAAWl4B,KAAKm4B,gBAAgB,QAAS,WAAYn4B,KAAK4wB,uBAAwB5wB,KAAK2xB,qBAAuB3xB,KAAK2F,sBACzH3F,KAAKkxB,uBAAuB/J,YAAY+Q,EAC1C,CAEA,GAAID,EAAU,CACZ,MAAMG,EAAWp4B,KAAKm4B,gBAAgB,QAAS,WAAYn4B,KAAK6wB,uBAAwB7wB,KAAK4xB,qBAAuB5xB,KAAK4F,sBACzH5F,KAAKkxB,uBAAuB/J,YAAYiR,EAC1C,CAEAp4B,KAAKo2B,4BAdL,MAFEp2B,KAAKg3B,yBAAyB,wBAAyB,QAiB3D,CAEA,eAAAmB,CAAgB3vB,EAAM6vB,EAAWZ,EAAUa,GACzC,MAAMC,EAAMxqB,SAAS6V,cAAc,OACnC2U,EAAI9L,UAAY,2BAA2BjkB,IAC3C+vB,EAAIvqB,MAAM+Z,QAAU,2GAOpB,MAAMyQ,EAAQzqB,SAAS6V,cAAc,SACrC4U,EAAMtQ,YAAcmQ,EACpBG,EAAMxqB,MAAMkoB,SAAW,OACvBsC,EAAMxqB,MAAMyqB,WAAa,MACzBF,EAAIpR,YAAYqR,GAEhB,MAAME,EAAS3qB,SAAS6V,cAAc,UACtC8U,EAAOrB,QAAQsB,YAAcnwB,EAC7BkwB,EAAO1qB,MAAM4qB,WAAa,UAC1BF,EAAO1qB,MAAMrM,MAAQ,OAErB81B,EAASxvB,QAAQpG,IACf,MAAMg3B,EAAS9qB,SAAS6V,cAAc,UACtCiV,EAAO1uB,MAAQtI,EAAQsG,GACvB0wB,EAAO3Q,YAAcrmB,EAAQuD,MAAQvD,EAAQsG,GACzCtG,EAAQi3B,cACVD,EAAO5Q,MAAQpmB,EAAQi3B,aAEzBJ,EAAOvR,YAAY0R,KAGjBP,GAAcb,EAAS/jB,KAAK7R,GAAWA,EAAQsG,KAAOmwB,KACxDI,EAAOvuB,MAAQmuB,GAGjBI,EAAO1pB,iBAAiB,SAAWC,IACjCjP,KAAK+4B,yBAAyBvwB,EAAMyG,EAAMwI,OAAOtN,SAGnDouB,EAAIpR,YAAYuR,GAEhB,MAAMI,EAAc/qB,SAAS6V,cAAc,OAmB3C,OAlBAkV,EAAYrM,UAAY,sBACxBqM,EAAY5Q,YAAcloB,KAAKg5B,gBAAgBxwB,EAAMkwB,EAAOvuB,QAAQ2uB,aAAe,GACnFA,EAAY9qB,MAAMkoB,SAAW,OAC7B4C,EAAY9qB,MAAMpC,QAAU,OAC5BktB,EAAY9qB,MAAMirB,WAAa,MAC/BH,EAAY9qB,MAAMkrB,UAAY,OAC9BX,EAAIpR,YAAY2R,GAEhBJ,EAAO1pB,iBAAiB,SAAU,KAChC8pB,EAAY5Q,YAAcloB,KAAKg5B,gBAAgBxwB,EAAMkwB,EAAOvuB,QAAQ2uB,aAAe,KAGxE,UAATtwB,EACFxI,KAAK8wB,mBAAqB4H,EAE1B14B,KAAK+wB,mBAAqB2H,EAGrBH,CACT,CAEA,wBAAAQ,CAAyBvwB,EAAM2jB,GAChB,UAAT3jB,EACFxI,KAAK2xB,oBAAsBxF,EAE3BnsB,KAAK4xB,oBAAsBzF,EAG7B,MAAMgN,EAAOn5B,KAAKg5B,gBAAgBxwB,EAAM2jB,GAClC2M,EAAuB,UAATtwB,EAChBxI,KAAK8wB,oBAAoBsI,eAAe5L,cAAc,wBACtDxtB,KAAK+wB,oBAAoBqI,eAAe5L,cAAc,wBAEtDsL,IACFA,EAAY5Q,YAAciR,GAAML,aAAe,GAEnD,CAEA,iBAAAnC,GACE,MAAM0C,EAAar5B,KAAK2xB,qBAAuB3xB,KAAK2F,qBAC9C2zB,EAAat5B,KAAK4xB,qBAAuB5xB,KAAK4F,qBAEpD,GAAIyzB,EAAY,CACd,IACEvH,aAAagG,QAAQ/H,EAA2BsJ,EAClD,CAAE,MAAOn4B,GACPf,QAAQgB,KAAK,gDAAiDD,EAChE,CACAlB,KAAK2F,qBAAuB0zB,EAC5Br5B,KAAK+G,cAAcmlB,gBAAgBmN,EACrC,CAEA,GAAIC,EAAY,CACd,IACExH,aAAagG,QAAQ9H,EAA2BsJ,EAClD,CAAE,MAAOp4B,GACPf,QAAQgB,KAAK,gDAAiDD,EAChE,CACAlB,KAAK4F,qBAAuB0zB,EAC5Bt5B,KAAK+G,cAAcslB,gBAAgBiN,EACrC,CAEA,MAAMC,EAAYv5B,KAAKg5B,gBAAgB,QAASK,GAC1CG,EAAYx5B,KAAKg5B,gBAAgB,QAASM,GAE5CC,GACFv5B,KAAK6J,UAAU,eAAe0vB,EAAUn0B,eAAgB,UAEtDo0B,GACFx5B,KAAK6J,UAAU,cAAc2vB,EAAUp0B,eAAgB,UAGzDpF,KAAKq2B,mBACP,CAEA,wBAAAY,CAAyBwC,GACnBz5B,KAAKoxB,4BACPpxB,KAAKoxB,0BAA0BiE,UAAYoE,EAC3Cz5B,KAAKoxB,0BAA0BpjB,MAAMpC,QAAU6tB,EAAU,IAAM,MAC/Dz5B,KAAKoxB,0BAA0BpjB,MAAMC,OAASwrB,EAAU,UAAY,cAExE,CAEA,sBAAA3C,GACE92B,KAAK2xB,oBAAsB3xB,KAAK2F,qBAChC3F,KAAK4xB,oBAAsB5xB,KAAK4F,qBAE5B5F,KAAK8wB,oBAAsB9wB,KAAK2F,uBAClC3F,KAAK8wB,mBAAmB3mB,MAAQnK,KAAK2F,sBAEnC3F,KAAK+wB,oBAAsB/wB,KAAK4F,uBAClC5F,KAAK+wB,mBAAmB5mB,MAAQnK,KAAK4F,sBAGnC5F,KAAKkxB,wBAA0BlxB,KAAKkxB,uBAAuBwI,kBAAoB,GACjF15B,KAAKo3B,yBAET,CAEA,eAAA4B,CAAgBxwB,EAAM2jB,GAEpB,OADsB,UAAT3jB,EAAmBxI,KAAK4wB,uBAAyB5wB,KAAK6wB,wBACvD8I,KAAK93B,GAAWA,EAAQsG,KAAOgkB,IAAc,IAC3D,CAEA,mCAAA8F,GACOjyB,KAAK+G,eAGV/G,KAAK+G,aAAamlB,gBAAgBlsB,KAAK2F,sBACvC3F,KAAK+G,aAAaslB,gBAAgBrsB,KAAK4F,sBACzC,CAEA,0BAAAwwB,GAiBE,GAhBIp2B,KAAKsxB,sBACPtxB,KAAKsxB,oBAAoBtjB,MAAM2a,WAAa3oB,KAAKmyB,WAC7C,wBACA,6BAGFnyB,KAAKuxB,eACPvxB,KAAKuxB,aAAavjB,MAAM2a,WAAa3oB,KAAKmyB,WACtC,yBACA,4BACJnyB,KAAKuxB,aAAavjB,MAAM4rB,OAAS55B,KAAKmyB,WAClC,qCACA,qCACJnyB,KAAKuxB,aAAavjB,MAAMvC,MAAQzL,KAAKmyB,WAAa,UAAY,WAG5DnyB,KAAKixB,sBAAuB,CAC9B,MAAMzoB,EAAOxI,KAAKixB,sBAAsBoG,SAASC,WAC3CuC,EAAuB,UAATrxB,EACfxI,KAAKmyB,WAAa,UAAY,UAC9BnyB,KAAKmyB,WAAa,2BAA6B,yBACpDnyB,KAAKixB,sBAAsBjjB,MAAMvC,MAAQouB,CAC3C,CAEA,GAAI75B,KAAKgxB,yBAA0B,CAClBhxB,KAAKgxB,yBAAyB8I,iBAAiB,SACvD7xB,QAAQuwB,IACbA,EAAMxqB,MAAMvC,MAAQzL,KAAKmyB,WAAa,2BAA6B,0BAGrDnyB,KAAKgxB,yBAAyB8I,iBAAiB,UACvD7xB,QAAQywB,IACdA,EAAO1qB,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,2BACzEuG,EAAO1qB,MAAM4rB,OAAS55B,KAAKmyB,WAAa,sCAAwC,qCAChFuG,EAAO1qB,MAAMvC,MAAQzL,KAAKmyB,WAAa,UAAY,UACnDuG,EAAO1qB,MAAM+rB,QAAU,YACvBrB,EAAO1qB,MAAMgsB,aAAe,OAC5BtB,EAAO1qB,MAAMkoB,SAAW,OACxBwC,EAAO1qB,MAAMisB,QAAU,OACvBvB,EAAO1qB,MAAMksB,UAAYl6B,KAAKmyB,WAC1B,oCACA,wCAGenyB,KAAKgxB,yBAAyB8I,iBAAiB,wBACvD7xB,QAAQkyB,IACnBA,EAAKnsB,MAAMvC,MAAQzL,KAAKmyB,WAAa,2BAA6B,yBAEtE,CAEInyB,KAAKmxB,6BACPnxB,KAAKmxB,2BAA2BnjB,MAAM2a,WAAa3oB,KAAKmyB,WACpD,4BACA,2BACJnyB,KAAKmxB,2BAA2BnjB,MAAM4rB,OAAS55B,KAAKmyB,WAChD,qCACA,qCACJnyB,KAAKmxB,2BAA2BnjB,MAAMvC,MAAQzL,KAAKmyB,WAAa,UAAY,UAC5EnyB,KAAKmxB,2BAA2BnjB,MAAMksB,UAAYl6B,KAAKmyB,WACnD,oCACA,oCAGFnyB,KAAKqxB,8BACPrxB,KAAKqxB,4BAA4BrjB,MAAM4rB,OAAS55B,KAAKmyB,WACjD,qCACA,qCACJnyB,KAAKqxB,4BAA4BrjB,MAAMvC,MAAQzL,KAAKmyB,WAAa,4BAA8B,0BAG7FnyB,KAAKoxB,4BACPpxB,KAAKoxB,0BAA0BpjB,MAAM2a,WAAa3oB,KAAKmyB,WACnD,4CACA,4CACJnyB,KAAKoxB,0BAA0BpjB,MAAMksB,UAAYl6B,KAAKmyB,WAClD,sCACA,wCAER,CAKA,uBAAAgC,GACE,MAAMnM,EAAYja,SAAS6V,cAAc,OACzCoE,EAAUyE,UAAY,sBACtBzE,EAAUha,MAAM+Z,QAAU,8JAMV/nB,KAAKoyB,eACf,+EACCpyB,KAAKmyB,WACJ,wEACA,2GACcnyB,KAAKoyB,eACrB,0BACCpyB,KAAKmyB,WAAa,2BAA6B,kKA0GtD,OA5FAnyB,KAAKo6B,iBAAmB,CAAA,EAPV,CACZ,CAAEjwB,MAAO,WAAYquB,MAAO,WAAY5C,KAAM,KAAMP,UAAU,GAC9D,CAAElrB,MAAO,SAAUquB,MAAO,SAAU5C,KAAM,MAC1C,CAAEzrB,MAAO,SAAUquB,MAAO,SAAU5C,KAAM,MAC1C,CAAEzrB,MAAO,SAAUquB,MAAO,SAAU5C,KAAM,QAKtC3tB,QAAQoyB,IACZ,MAAMnrB,EAASnB,SAAS6V,cAAc,OACtC1U,EAAOud,UAAY,eAAe4N,EAAKlwB,QACvC+E,EAAOlB,MAAM+Z,QAAU,yLAOXsS,EAAKhF,SAAW,cAAgB,oJAKjCgF,EAAKhF,SAAW,0BAA4Br1B,KAAKoyB,eACtD,UACCpyB,KAAKmyB,WAAa,2BAA6B,qJAIzCkI,EAAKhF,SAAW,MAAQ,eAGrC,MAAMO,EAAO7nB,SAAS6V,cAAc,OACpCgS,EAAK1N,YAAcmS,EAAKzE,KACxBA,EAAK5nB,MAAM+Z,QAAU,4EAGTsS,EAAKhF,SAAW,mDAAqDr1B,KAAKmyB,WAChF,mDACA,qGAIN,MAAMqG,EAAQzqB,SAAS6V,cAAc,QACrC4U,EAAMtQ,YAAcmS,EAAK7B,MAGzB,MAAM8B,EAAYvsB,SAAS6V,cAAc,OACzC0W,EAAU7N,UAAY,aACtB6N,EAAUpS,YAAc,OACxBoS,EAAUtsB,MAAM+Z,QAAU,sYAgB1B7Y,EAAOiY,YAAYyO,GACnB1mB,EAAOiY,YAAYqR,GACnBtpB,EAAOiY,YAAYmT,GAGfD,EAAKhF,SAEPnmB,EAAOF,iBAAiB,QAAUge,IAChCA,EAAEzb,iBACFyb,EAAEM,kBACFttB,KAAK6yB,oBAIP3jB,EAAOF,iBAAiB,QAAS,KACZ,WAAfqrB,EAAKlwB,MACPnK,KAAKu6B,uBAELv6B,KAAKw6B,WAAWH,EAAKlwB,OAAO,KAKlCnK,KAAKo6B,iBAAiBC,EAAKlwB,OAAS,CAAE+E,SAAQorB,aAC9CtS,EAAUb,YAAYjY,KAIxBlP,KAAKkzB,mBAAqBlL,EAE1BhoB,KAAKw6B,WAAW,UAAU,GAEnBxS,CACT,CAKA,UAAAwS,CAAWH,EAAMI,GAAW,EAAOC,EAAkB,MACnD16B,KAAK+J,YAAcswB,EAGnB12B,OAAO+mB,KAAK1qB,KAAKo6B,kBAAkBnyB,QAAQiK,IACzC,MAAMhD,OAAEA,EAAMorB,UAAEA,GAAct6B,KAAKo6B,iBAAiBloB,GACpDhD,EAAOlB,MAAMvC,MAAQzL,KAAKoyB,eACtB,UACCpyB,KAAKmyB,WAAa,2BAA6B,wBACpDjjB,EAAOlB,MAAM2a,WAAa,cAC1BzZ,EAAOlB,MAAM4rB,OAAS,wBACtB1qB,EAAOlB,MAAMof,UAAY,WACzBle,EAAOlB,MAAMksB,UAAY,OAEzBI,EAAUtsB,MAAMiZ,QAAU,OAC1BqT,EAAUtsB,MAAMpC,QAAU,MAI5B,MAAMsD,OAAEA,EAAMorB,UAAEA,GAAct6B,KAAKo6B,iBAAiBC,GAG9CM,EAAgB36B,KAAKoyB,eACvB,CACEzJ,WAAY,4EACZiR,OAAQ,mCACRM,UAAW,8EACXzuB,MAAO,WAERzL,KAAKmyB,WACJ,CACExJ,WAAY,6EACZiR,OAAQ,oCACRM,UAAW,6EACXzuB,MAAO,WAET,CACEkd,WAAY,6EACZiR,OAAQ,oCACRM,UAAW,8EACXzuB,MAAO,WAGfyD,EAAOlB,MAAMvC,MAAQkvB,EAAclvB,MACnCyD,EAAOlB,MAAM2a,WAAagS,EAAchS,WACxCzZ,EAAOlB,MAAM4rB,OAASe,EAAcf,OACpC1qB,EAAOlB,MAAMksB,UAAYS,EAAcT,UACvChrB,EAAOlB,MAAMof,UAAY,eAGpBqN,GAAYC,IAEfJ,EAAUtsB,MAAMiZ,QAAU,eAC1BtV,WAAW,KACT2oB,EAAUtsB,MAAMpC,QAAU,IAC1B0uB,EAAUtsB,MAAMof,UAAY,YAC3B,KAGHzb,WAAW,KACT2oB,EAAUtsB,MAAMpC,QAAU,IAC1B0uB,EAAUtsB,MAAMof,UAAY,aAC5Bzb,WAAW,KACT2oB,EAAUtsB,MAAMiZ,QAAU,QACzB,MACF,MAIAwT,IACHz6B,KAAK46B,eAAe1rB,GACpBlP,KAAK66B,iBAAiBR,IAIxBr6B,KAAKkK,MAAM2pB,YAAc7zB,KAAK86B,sBAAsBT,GAGhDI,GACFz6B,KAAK+6B,uBAAuBV,GAIjB,WAATA,GAAqBr6B,KAAKg7B,aAC5Bh7B,KAAKi7B,sBAELj7B,KAAKk7B,sBAIM,WAATb,GAAqBI,GACvBz6B,KAAKm7B,4BAIM,WAATd,GAAqBI,GACvBz6B,KAAKo7B,2BAIT,CAKA,cAAAR,CAAeS,GAEbA,EAAQrtB,MAAMiL,UAAY,OAG1BtH,WAAW,KACT0pB,EAAQrtB,MAAMiL,UAAY,gCACzB,IAGHtH,WAAW,KACT0pB,EAAQrtB,MAAMiL,UAAY,IACzB,KAGHjZ,KAAKs7B,sBACP,CAKA,oBAAAA,GACE,GAAIvtB,SAASilB,eAAe,8BAA+B,OAE3D,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,6BACX6F,EAAMka,YAAc,gTAOpBna,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAKA,gBAAA6sB,CAAiBR,GACf,MAAMrS,EAAYhoB,KAAKkzB,mBACvB,IAAKlL,EAAW,OAGhB,MAaMuT,GAbav7B,KAAKoyB,eAAiB,CACvCoJ,SAAU,0BACV1M,OAAQ,0BACR2M,OAAQ,0BACRzf,OAAQ,2BACN,CACFwf,SAAU,yBACV1M,OAAQ,yBACR2M,OAAQ,0BACRzf,OAAQ,6BAImBqe,GACzBkB,IACFvT,EAAUha,MAAMksB,UAAY,YAAYqB,eAAuBA,IAC/DvT,EAAUha,MAAM0a,YAAc6S,EAAUroB,QAAQ,MAAO,OAAOA,QAAQ,MAAO,QAI/EvB,WAAW,KACTqW,EAAUha,MAAMksB,UAAY,GAC5BlS,EAAUha,MAAM0a,YAAc1oB,KAAKmyB,WAAa,2BAA6B,6BAC5E,IACL,CAEA,qBAAA+C,CAAsBwG,EAAU,aAC9B,MAAMC,EAAa,8QAYnB,MAAgB,cAAZD,EAEKC,EAAa,kQAUJ37B,KAAKoyB,eACf,2EACCpyB,KAAKmyB,WACJ,wEACA,+GACcnyB,KAAKoyB,eACrB,wBACCpyB,KAAKmyB,WAAa,2BAA6B,+CAC3CnyB,KAAKoyB,eACV,UACCpyB,KAAKmyB,WAAa,UAAY,gFAIhB,SAAZuJ,EAEFC,EAAa,6MAQJ37B,KAAKmyB,WACf,6EACA,6GACgBnyB,KAAKmyB,WAAa,0BAA4B,+CACzDnyB,KAAKmyB,WAAa,UAAY,0BAdpC,CAiBT,CAKA,0BAAAyJ,GACE,MAAO,0EAGe57B,KAAKmyB,WAAa,0BAA4B,4EAEpDnyB,KAAKmyB,WAAa,0BAA4B,4CACnDnyB,KAAKmyB,WAAa,UAAY,uRAW3C,CAEA,6BAAA0J,GACE,MAAO,4IAMI77B,KAAKmyB,WAAa,2BAA6B,6GAK5D,CAKA,kBAAAwC,GAEE30B,KAAKkK,MAAM8D,MAAMpM,OAAS,OAG1B,MAMMk6B,EAAYt0B,KAAKqJ,IAAI7Q,KAAKkK,MAAM6xB,aAHpB,IAMlB/7B,KAAKkK,MAAM8D,MAAMpM,OAASk6B,EAAY,KAGlC97B,KAAKkK,MAAM6xB,aATG,IAUhB/7B,KAAKkK,MAAM8D,MAAMguB,UAAY,OAEzBh8B,KAAK+zB,eACP/zB,KAAK+zB,aAAa/lB,MAAMiZ,QAAU,UAGpCjnB,KAAKkK,MAAM8D,MAAMguB,UAAY,SAEzBh8B,KAAK+zB,eACP/zB,KAAK+zB,aAAa/lB,MAAMiZ,QAAU,QAGxC,CAKA,iBAAA2N,GACE,MAAM1qB,EAAQlK,KAAKkK,MAAMC,MAAMiJ,OAC/B,IAAKlJ,EAEH,YADAlK,KAAKw6B,WAAW,YAAY,GAI9B,MAAMyB,EAAcj8B,KAAKk8B,mBAAmBhyB,GAGnB,WAArBlK,KAAK+J,aAAiD,WAArB/J,KAAK+J,aAI1C/J,KAAKw6B,WAAWyB,EAAYzzB,MAAM,EAAOyzB,EAAYvB,gBACvD,CAKA,kBAAAwB,CAAmBtmB,GACjB5V,KAAKmrB,SAAS,0BAA0BvV,MAGxC,MAAMumB,EAAYn8B,KAAKo8B,gBAAgBxmB,GAGjCymB,EAAiB,CACrB,CAAEjoB,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,OAAQnQ,QAAS,QAC5B,CAAEmQ,QAAS,UAAWnQ,QAAS,UAC/B,CAAEmQ,QAAS,UAAWnQ,QAAS,UAC/B,CAAEmQ,QAAS,SAAUnQ,QAAS,SAC9B,CAAEmQ,QAAS,SAAUnQ,QAAS,UAI1Bq4B,EAAiB,CACrB,CAAEloB,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,OAAQnQ,QAAS,QAC5B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,QAASnQ,QAAS,SAC7B,CAAEmQ,QAAS,QAASnQ,QAAS,SAC7B,CAAEmQ,QAAS,WAAYnQ,QAAS,QAChC,CAAEmQ,QAAS,WAAYnQ,QAAS,QAChC,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,QAASnQ,QAAS,UAC7B,CAAEmQ,QAAS,SAAUnQ,QAAS,OAC9B,CAAEmQ,QAAS,WAAYnQ,QAAS,SAChC,CAAEmQ,QAAS,WAAYnQ,QAAS,MAChC,CAAEmQ,QAAS,QAASnQ,QAAS,QAC7B,CAAEmQ,QAAS,UAAWnQ,QAAS,UAC/B,CAAEmQ,QAAS,UAAWnQ,QAAS,UAC/B,CAAEmQ,QAAS,QAASnQ,QAAS,SAIzBs4B,EAAmB,CACvB,CAAEnoB,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,UAAWnQ,QAAS,UAC/B,CAAEmQ,QAAS,YAAanQ,QAAS,YACjC,CAAEmQ,QAAS,QAASnQ,QAAS,QAC7B,CAAEmQ,QAAS,QAASnQ,QAAS,SAI/B,IAAK,MAAMmQ,QAAEA,EAAOnQ,QAAEA,KAAao4B,EACjC,GAAIjoB,EAAQF,KAAK0B,GAEf,OADA5V,KAAKmrB,SAAS,6BAA6BlnB,KACpC,CACLuE,KAAM,SACNg0B,WAAY,GACZC,OAAQ,aACRC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBjC,gBAAiBz2B,GAMvB,IAAK,MAAMmQ,QAAEA,EAAOnQ,QAAEA,KAAaq4B,EACjC,GAAIloB,EAAQF,KAAK0B,GAEf,OADA5V,KAAKmrB,SAAS,6BAA6BlnB,KACpC,CACLuE,KAAM,SACNg0B,WAAY,GACZC,OAAQ,aACRC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBjC,gBAAiBz2B,GAMvB,IAAK,MAAMmQ,QAAEA,EAAOnQ,QAAEA,KAAas4B,EACjC,GAAInoB,EAAQF,KAAK0B,GACf,MAAO,CACLpN,KAAM,WACNg0B,WAAYL,EAAUK,WACtBC,OAAQN,EAAUM,OAClBC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBjC,gBAAiBz2B,GAOvB,OADAjE,KAAKmrB,SAAS,+DACP,CACL3iB,KAAM,WACNg0B,WAAYL,EAAUK,WACtBC,OAAQN,EAAUM,OAClBC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBjC,gBAAiB,KAErB,CAKA,eAAA0B,CAAgBxmB,GAWd,MAVsB,CACpB,iBACA,qBAQgBlC,KAAKU,GAAWA,EAAQF,KAAK0B,IACtC,CACLpN,KAAM,QACNg0B,WAAY,GACZC,OAAQ,YATU,CACpB,oBACA,qCAWgB/oB,KAAKU,GAAWA,EAAQF,KAAK0B,IACtC,CACLpN,KAAM,QACNg0B,WAAY,GACZC,OAAQ,YAKL,CACLj0B,KAAM,QACNg0B,WAAY,GACZC,OAAQ,kBAEZ,CAKA,wBAAAG,CAAyBC,GACvB,MAAMr0B,KAAEA,EAAIg0B,WAAEA,EAAUC,OAAEA,GAAWI,EAiBjCL,EAAa,GACfx8B,KAAK88B,wBAAwBt0B,EAAMg0B,GAEnCx8B,KAAK+8B,0BASP/8B,KAAKg9B,sBACP,CAKA,uBAAAF,CAAwBG,EAAcT,GAC/Bx8B,KAAKk9B,sBACRl9B,KAAKk9B,oBAAsBnvB,SAAS6V,cAAc,OAClD5jB,KAAKk9B,oBAAoB/0B,GAAK,uBAC9BnI,KAAKk9B,oBAAoBlvB,MAAM+Z,QAAU,0UAczC/nB,KAAKgoB,UAAUmV,aAAan9B,KAAKk9B,oBAAqBl9B,KAAKkK,QAG7D,MACMkzB,EADmB,CAAC,WAAY,SAAU,UAAUroB,OAAOsoB,GAAKA,IAAMJ,GACxC,GAQpCj9B,KAAKk9B,oBAAoB3U,UAAY,oBANZ,CACvBiT,SAAU,QACVC,OAAQ,QACRzf,OAAQ,UAIoBohB,iIAM9Bp9B,KAAKk9B,oBAAoBlvB,MAAMiZ,QAAU,QAGzCjnB,KAAKk9B,oBAAoBrU,QAAU,KACjC7oB,KAAK+J,YAAcqzB,EACnBp9B,KAAK+8B,0BACL/8B,KAAKs9B,uBAAuBF,EAAY,IAE5C,CAKA,uBAAAL,GACM/8B,KAAKk9B,sBACPl9B,KAAKk9B,oBAAoBlvB,MAAMiZ,QAAU,OAE7C,CAKA,sBAAAqW,CAAuBjD,EAAMmC,GAiB7B,CAKA,oBAAAQ,GAGEh9B,KAAKu9B,gBAAiB,CACxB,CAKA,mBAAAC,GACE,MAAMxV,EAAYja,SAAS6V,cAAc,OACzCoE,EAAUha,MAAM+Z,QAAU,wEAS1B,MAAMkN,EAAWlnB,SAAS6V,cAAc,UAQxC,OAPAqR,EAAS1M,UAAY,SACrB0M,EAASjnB,MAAM+Z,QAAU/nB,KAAKy9B,sBAAsB,UACpDxI,EAASjmB,iBAAiB,QAAS,IAAMhP,KAAK6mB,YAG9CmB,EAAUb,YAAY8N,GAEfjN,CACT,CAKA,kBAAAoL,GACE,MAAMsK,EAAY,CAChB,eAAgB,6BAChB,cAAe,4BACf,YAAa,0BACb,WAAY,yBACZ30B,OAAU,0DA0BN0nB,EAAQzwB,KAAKoyB,eAPW,CAC5BzJ,WAAY,wEACZgV,eAAgB,4BAChB/D,OAAQ,kCACRM,UAAW,8GAGgDl6B,KAAKmyB,WAtBxC,CACxBxJ,WAAY,yEACZgV,eAAgB,4BAChB/D,OAAQ,oCACRM,UAAW,+GAGc,CACzBvR,WAAY,gFACZgV,eAAgB,4BAChB/D,OAAQ,qCACRM,UAAW,6GAab,MAAO,mCAEHwD,EAAU19B,KAAKe,OAAOmG,WAAaw2B,EAAU,2DAEjC19B,KAAKe,OAAOyvB,mCACZC,EAAM9H,8BACV8H,EAAMmJ,qDAEP55B,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,gNAK5D1B,EAAMyJ,sCACDzJ,EAAMkN,mDACElN,EAAMkN,sIAKrC,CAEA,eAAAC,GAIE,MAAO,oXAYT,CAEA,eAAApK,GAIE,OAFAxzB,KAAK69B,qBAEE,sEAGS79B,KAAKmyB,WAAa,4BAA8B,wDAC1CnyB,KAAKmyB,WAAa,4BAA8B,uRAUjDnyB,KAAKmyB,WAAa,oDAAsD,gDAE/F,CAKA,kBAAA0L,GACE,GAAI9vB,SAASilB,eAAe,2BAA4B,OAExD,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,0BACX6F,EAAMka,YAAc,uJAMFloB,KAAKmyB,WAAa,2BAA6B,wIAK/CnyB,KAAKmyB,WAAa,2BAA6B,yLAM/CnyB,KAAKmyB,WAAa,2BAA6B,oqEA2EjEpkB,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAEA,cAAA8lB,GAEE,MAkBMrD,EAAQzwB,KAAKoyB,eANW,CAC5BzJ,WAAY,wEACZiR,OAAQ,kCACRM,UAAW,4EAGgDl6B,KAAKmyB,WAlBxC,CACxBxJ,WAAY,wEACZiR,OAAQ,qCACRM,UAAW,6EAGc,CACzBvR,WAAY,8EACZiR,OAAQ,qCACRM,UAAW,0EAWb,MAAO,sEAGSzJ,EAAM9H,8BACV8H,EAAMmJ,qDAEP55B,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,qRAQ5D1B,EAAMyJ,wCACCl6B,KAAKmyB,WAAa,2BAA6B,4JAOxE,CAEA,qBAAAsL,CAAsBj1B,GAuDpB,MAAO,sNAtDQ,CACbs1B,QAAS99B,KAAKoyB,eAAiB,+QAO3B,8KAOJ2L,UAAW/9B,KAAKoyB,eAAiB,2QAS7B,oPASJ4L,OAAQh+B,KAAKoyB,eAAiB,wQAS1B,0QAoBK5pB,UAEb,CAEA,mBAAAy1B,CAAoBC,EAAU7D,GAS5B,MAAO,6GAKI6D,EAAW,QAAWl+B,KAAKoyB,eAAiB,UAAY,kDACnD8L,EAbG,CACjB1C,SAAU,4CACV1M,OAAQ,4CACR2M,OAAQ,4CACRzf,OAAQ,6CAS4Bqe,GAAQ,oLAQhD,CAKA,UAAA7H,GAEEzkB,SAASiB,iBAAiB,UAAYge,IAEpC,GAAIA,EAAE9a,MAAQlS,KAAKe,OAAOwvB,cAGxB,OAFAvD,EAAEzb,sBACFvR,KAAKw3B,SAQHx3B,KAAKmwB,WAAuB,WAAVnD,EAAE9a,KACtBlS,KAAKu0B,OAIHv0B,KAAKmwB,WAAanD,EAAEmR,UACR,MAAVnR,EAAE9a,KAAgB8a,EAAEoR,UAGH,MAAVpR,EAAE9a,KAA0B,MAAV8a,EAAE9a,KAAe8a,EAAEoR,YAC9CpR,EAAEzb,iBACFvR,KAAKq+B,SAJLrR,EAAEzb,iBACFvR,KAAKs+B,WASXt+B,KAAKkK,MAAM8E,iBAAiB,QAAS,KACnChP,KAAKkK,MAAM8D,MAAM0a,YAAc,UAC/B1oB,KAAKkK,MAAM8D,MAAMksB,UAAY,qCAG/Bl6B,KAAKkK,MAAM8E,iBAAiB,OAAQ,KAClChP,KAAKkK,MAAM8D,MAAM0a,YAAc,UAC/B1oB,KAAKkK,MAAM8D,MAAMksB,UAAY,QAEjC,CAKA,MAAA1C,GACMx3B,KAAKmwB,UACPnwB,KAAKu0B,OAELv0B,KAAKu+B,MAET,CAKA,IAAAA,GACEv+B,KAAKgoB,UAAUha,MAAMiZ,QAAU,OAC/BjnB,KAAKgoB,UAAUha,MAAMwwB,cAAgB,SACrCx+B,KAAKyzB,kBAAkBzlB,MAAMiZ,QAAU,OAGvCtV,WAAW,KACT,MAAM8sB,EAAgBz+B,KAAKgoB,UAAU5Y,wBACrCpP,KAAKyzB,kBAAkBzlB,MAAMsB,KAAOmvB,EAAcnvB,KAAO,KACzDtP,KAAKyzB,kBAAkBzlB,MAAMwB,IAAOivB,EAAcjvB,IAAM,GAAM,KAC9DxP,KAAKyzB,kBAAkBzlB,MAAMrM,MAAQ88B,EAAc98B,MAAQ,KAC3D3B,KAAKyzB,kBAAkBzlB,MAAMof,UAAY,QACxC,IAEHptB,KAAKmwB,WAAY,EACjBnwB,KAAKkK,MAAME,QAGPpK,KAAK0+B,wBACP1+B,KAAK0+B,sBAAsB1wB,MAAMpC,QAAU,IAC3C5L,KAAK0+B,sBAAsB1wB,MAAMuf,cAAgB,QAInDvtB,KAAKkwB,kBAAiB,EAExB,CAKA,IAAAqE,GACEv0B,KAAKgoB,UAAUha,MAAMiZ,QAAU,OAC/BjnB,KAAKyzB,kBAAkBzlB,MAAMiZ,QAAU,OACvCjnB,KAAKmwB,WAAY,EAGbnwB,KAAK0+B,wBACP1+B,KAAK0+B,sBAAsB1wB,MAAMpC,QAAU,MAC3C5L,KAAK0+B,sBAAsB1wB,MAAMuf,cAAgB,QAInDvtB,KAAKkwB,kBAAiB,GACtBlwB,KAAKmrB,SAAS,eAChB,CAKA,UAAAwT,CAAWtE,GACT,GAAIr6B,KAAK+J,cAAgBswB,EAAM,OAE/Br6B,KAAK+J,YAAcswB,EAGnBr6B,KAAKgoB,UAAU8R,iBAAiB,eAAe7xB,QAAQ22B,IACrD,MAAMV,EAAWU,EAAIvH,QAAQgD,OAASA,EACtCuE,EAAI5wB,MAAM+Z,QAAU/nB,KAAKi+B,oBAAoBC,EAAUU,EAAIvH,QAAQgD,QAIrEr6B,KAAKkK,MAAM2pB,YAAc7zB,KAAK86B,sBAAsBT,GAGpD,MAAMwE,EAAa7+B,KAAKgoB,UAAUwF,cAAc,gBAahDqR,EAAWtW,UAAY,SAZR,CACbiT,SAAU,qBACVC,OAAQ,mBACRzf,OAAQ,sBAS6Bqe,YACvCwE,EAAW7wB,MAAM2a,WAPI,CACnB6S,SAAU,4CACVC,OAAQ,4CACRzf,OAAQ,6BAIiCqe,EAG7C,CAKA,qBAAAS,CAAsBT,GACpB,MAAMyE,EAAe,CACnBtD,SAAU,uBACV1M,OAAQ,iBACR2M,OAAQ,uBACRzf,OAAQ,0BAEV,OAAO8iB,EAAazE,IAASyE,EAAatD,QAC5C,CAKA,4BAAAuD,CAA6B77B,GAC3B,IAAKlD,KAAK+G,aACR,OAAO,KAGT,MAAMi4B,EAAa97B,EAAQkB,cACrB66B,EAAoB,kBAAkB/qB,KAAK8qB,GAC3CE,EAAsB,4BAA4BhrB,KAAK8qB,GACvDG,EAAmB,eAAejrB,KAAK8qB,GACvCI,EAAkB,eAAelrB,KAAK8qB,GACtCK,EAAkB,wBAAwBnrB,KAAK8qB,GAGrD,KAD8BC,GAAqBC,GAAuBC,GAAoBC,GAAmBC,GAE/G,OAAO,KAGT,IAAI3kB,EAAe1a,KAAK+G,aAAarB,eAQrC,GAPKgV,GAAiE,mBAA1C1a,KAAK+G,aAAauP,sBAC5CoE,EAAe1a,KAAK+G,aAAauP,oBAAoB0oB,GACjDtkB,GACF1a,KAAK+G,aAAawC,aAAamR,KAI9BA,EAEH,OADA1a,KAAK6J,UAAU,6BAA8B,WACtC,CAAEy1B,SAAS,EAAMl9B,OAAQ,CAAEyf,SAAS,EAAO9O,QAAS,wBAG7D,MAAMwsB,EAAa,GAEnB,GAAIL,EAAqB,CACvB,MAAMM,EAAoC,IAAzB9kB,EAAahS,MAAMvB,EAAU,EAAIuT,EAAahS,MAAMvB,EACrEuT,EAAahS,MAAMvB,GAAKq4B,EACxBD,EAAWz7B,KAAK,OAClB,CAEA,GAAIm7B,EAAmB,CACrB,MAAMQ,EAAoC,IAAzB/kB,EAAahS,MAAMrB,EAAU,EAAIqT,EAAahS,MAAMrB,EACrEqT,EAAahS,MAAMrB,GAAKo4B,EACxBF,EAAWz7B,KAAK,OAClB,CAiBA,GAfIq7B,IACFzkB,EAAanT,SAASF,EAAIG,KAAKC,GAAK,EACpC83B,EAAWz7B,KAAK,QAGds7B,IACF1kB,EAAanT,SAASF,GAAKG,KAAKC,GAAK,EACrC83B,EAAWz7B,KAAK,QAGdu7B,IACF3kB,EAAanT,SAASF,EAAIG,KAAKC,GAC/B83B,EAAWz7B,KAAK,SAGQ,IAAtBy7B,EAAWz3B,OAEb,MAAO,CAAEw3B,SAAS,GAIpB5kB,EAAanS,SAAWmS,EAAanS,UAAY,CAAA,EACjDmS,EAAanS,SAASyd,cAAgBtL,EAAanS,SAASyd,eAAiB,GAC7EtL,EAAanS,SAASyd,cAAcliB,KAAK,CACvC2O,UAAWC,KAAKC,MAChBnK,KAAM,cACN+2B,aACAr8B,YAI8D,mBAArDlD,KAAK+G,aAAa2C,gCAC3B1J,KAAK+G,aAAa2C,+BAA+BgR,GAGnD,MAAM3H,EAAU,MAAMwsB,EAAWG,KAAK,eAGtC,OAFA1/B,KAAK6J,UAAUkJ,EAAS,WAEjB,CACLusB,SAAS,EACTl9B,OAAQ,CACNyf,SAAS,EACT9O,UACAuQ,SAAU5I,EAAatV,KACvBm6B,cAGN,CAKA,oBAAMt8B,GACJ,MAAMC,EAAUlD,KAAKkK,MAAMC,MAAMiJ,OACjC,IAAKlQ,EAAS,OAGd,MAAM+4B,EAAcj8B,KAAKk8B,mBAAmBh5B,GAY5C,GAVIlD,KAAKg7B,cACkB,WAArBh7B,KAAK+J,aACP/J,KAAKw6B,WAAW,UAAU,GAE5Bx6B,KAAK+J,YAAc,UAEnB/J,KAAK+J,YAAckyB,EAAYzzB,KAI7ByzB,EAAYU,qBAAsB,CAEpC,UADwB38B,KAAK+P,uBAAuB7M,GAGlD,YADAlD,KAAK6J,UAAU,iBAAkB,SAGrC,CAGA7J,KAAKkK,MAAMC,MAAQ,GAGnBnK,KAAK+8B,0BAGad,EAAYS,UAE9B,MAAMiD,EAAS3/B,KAAK4/B,YAAY18B,EAAS,CAAEf,OAAQ,eAGnDnC,KAAK6/B,qBAAqB,CACxB38B,QAASA,EACTm3B,KAAMr6B,KAAK+J,YACX2yB,UAAWT,EAAYS,UACvBjqB,UAAWC,KAAKC,QAGlB,IAKE,IAAIvQ,EAGJ,MACM09B,EAAc,GADD9/B,KAAK+/B,cAAc//B,KAAK+J,eACP7G,IAIpC,GADAlD,KAAKmrB,SAAS,yBAA0BnrB,KAAK+J,aACpB,WAArB/J,KAAK+J,YAA0B,CAGjC,GAFA/J,KAAKmrB,SAAS,qDAETnrB,KAAKg7B,aACR,MAAM,IAAI15B,MAAM,mCAElBc,QAAepC,KAAKggC,oBAAoB98B,EAC1C,MAAO,GAAIlD,KAAK+G,aACd,GAAyB,WAArB/G,KAAK+J,YAA0B,CACjC,MAAMk2B,EAAoBjgC,KAAK++B,6BAA6B77B,GAE1Dd,EADE69B,GAAqBA,EAAkBX,QAChCW,EAAkB79B,aAEZpC,KAAK+G,aAAa9D,eAAe68B,EAEpD,MACE19B,QAAepC,KAAK+G,aAAa9D,eAAe68B,OAE7C,KAAI9/B,KAAKgF,OAuCd,MAAM,IAAI1D,MAAM,sCArChB,GAAyB,aAArBtB,KAAK+J,YAGL3H,EAD4B,UAA1B65B,EAAYS,gBACC18B,KAAKgF,OAAO3C,cAAca,EAAS,CAChDN,MAAO5C,KAAK4F,2BAAwB8V,UAGvB1b,KAAKgF,OAAOzD,cAAc2B,EAAS,CAChDrB,QAAS7B,KAAK2F,2BAAwB+V,SAGrC,GAAyB,WAArB1b,KAAK+J,YAA0B,CAExC,IAAK/J,KAAK0F,eACR,MAAM,IAAIpE,MAAM,6CAElBc,QAAepC,KAAKgF,OAAOk7B,qBAAqBlgC,KAAK0F,eAAgBxC,EACvE,MAAO,GAAyB,WAArBlD,KAAK+J,YAA0B,CAExC,IAAK/J,KAAK0F,iBAAmB1F,KAAK+G,cAAco5B,sBAAsBr4B,OAEpE,YADA9H,KAAK6J,UAAU,2EAA4E,UAI7F,MAAMu2B,EAAiB,OAAOl9B,8BAG9B,IAAKm9B,QAAQD,GAEX,YADApgC,KAAK6J,UAAU,kBAAmB,UAGpCzH,QAAepC,KAAKgF,OAAOs7B,cAAcp9B,EAC3C,MAEEd,QAAepC,KAAKgF,OAAO/B,eAAe68B,EAI9C,CAGI19B,GAAUA,EAAOu9B,SACnB3/B,KAAKugC,kBAAkBn+B,EAAOu9B,OAAQA,GACtC3/B,KAAKswB,cAAgBluB,EAAOu9B,QAW1BA,GACF3/B,KAAKwgC,eAAeb,EAAQ,aAI1Bv9B,EAAO0H,UAIP1H,EAAOkhB,SAIPlhB,EAAO8E,SAIP+0B,EAAYS,SAIlB,CAAE,MAAOx7B,GACP,MAAMu/B,EAAgB,CACpBjF,SAAU,KAA+B,UAA1BS,EAAYS,UAAwB,KAAO,YAC1DjB,OAAQ,UACRzf,OAAQ,WAGN2jB,GACF3/B,KAAKwgC,eAAeb,EAAQ,SAG9B3/B,KAAK6J,UAAU,GAAG42B,EAAczgC,KAAK+J,iBAAiB7I,EAAM6R,UAAW,SACvE5S,QAAQe,MAAM,2BAA4BA,EAC5C,CAGIlB,KAAK+G,cAAgB/G,KAAK+G,aAAarB,iBAEhB,WAArB1F,KAAK+J,aAAiD,WAArB/J,KAAK+J,aACxC4H,WAAW,KACT3R,KAAK+G,aAAa0C,kBACjB,MAKHzJ,KAAKe,OAAO4vB,YACd3wB,KAAK0gC,gBAET,CAKA,4BAAMC,CAAuBl/B,GAC3B,MAAMm0B,KACJA,EAAO,MAAK3N,MACZA,EAAQ,KAAIlV,QACZA,EAAU,eAAc6tB,YACxBA,EAAc,KAAIC,WAClBA,EAAa,QAAOC,aACpBA,EAAe,WACbr/B,EAEJ,OAAO,IAAIwjB,QAASC,IAClB,MAAM4C,EAAQ/Z,SAAS6V,cAAc,OACrCkE,EAAM9Z,MAAM+Z,QAAU,mYAetB,MAAMgZ,EAAShzB,SAAS6V,cAAc,OACtCmd,EAAO/yB,MAAM+Z,QAAU,yBACP/nB,KAAKmyB,WACf,yEACA,6GACgBnyB,KAAKmyB,WAAa,0BAA4B,6JAKzDnyB,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,oLAI5DnyB,KAAKmyB,WACf,sEACA,gMAMN4O,EAAOxY,UAAY,gEACoCqN,0DACb51B,KAAKmyB,WAAa,UAAY,sFAClElK,kEAEmCjoB,KAAKmyB,WAAa,UAAY,8DACjEpf,iMAKc/S,KAAKmyB,WACf,wEACA,mHACgBnyB,KAAKmyB,WAAa,2BAA6B,qFAE1DnyB,KAAKmyB,WAAa,UAAY,6RAQrC0O,oHAG6B,YAAjBC,EACV,4CACiB,YAAjBA,EACA,4CACA,kVASsC,YAAjBA,EACrB,0BACiB,YAAjBA,EACA,yBACA,qIAGFF,qCAIR9Y,EAAMX,YAAY4Z,GAClBhzB,SAAS/L,KAAKmlB,YAAYW,GAG1B9J,sBAAsB,KACpB8J,EAAM9Z,MAAMpC,QAAU,IACtBm1B,EAAO/yB,MAAMof,UAAY,WACzB2T,EAAO/yB,MAAMpC,QAAU,MAIzBm1B,EAAOvT,cAAc,eAAe3E,QAAU,KAC5C7oB,KAAKghC,wBAAwBlZ,GAC7B5C,GAAQ,IAGV6b,EAAOvT,cAAc,gBAAgB3E,QAAU,KAC7C7oB,KAAKghC,wBAAwBlZ,GAC7B5C,GAAQ,IAIV,MAAM+b,EAAcjU,IACJ,WAAVA,EAAE9a,MACJlS,KAAKghC,wBAAwBlZ,GAC7B/Z,SAASigB,oBAAoB,UAAWiT,GACxC/b,GAAQ,KAGZnX,SAASiB,iBAAiB,UAAWiyB,GAGrCnZ,EAAMe,QAAWmE,IACXA,EAAEvV,SAAWqQ,IACf9nB,KAAKghC,wBAAwBlZ,GAC7B5C,GAAQ,MAIhB,CAEA,4BAAMnV,CAAuB7M,GAC3B,OAAOlD,KAAK2gC,uBAAuB,CACjC/K,KAAM,MACN3N,MAAO,QACPlV,QAAS,IAAI7P,mCACb09B,YAAa,OACbC,WAAY,QACZC,aAAc,WAElB,CAQA,SAAAj3B,CAAUkJ,EAASvK,EAAO,UAAW/G,EAAU,CAAA,GAE7C,GAAa,SAAT+G,GAA4B,aAATA,EACrB,OAAOxI,KAAK4/B,YAAY7sB,EAAStR,GAItB,UAAT+G,GAA6B,WAATA,GACtBxI,KAAKkhC,iBAAiBnuB,EAASvK,EAEnC,CAKA,WAAAo3B,CAAYuB,EAAU1/B,EAAU,IACzBzB,KAAK0zB,YAAW1zB,KAAK0zB,UAAY,IAAIluB,KAE1C,MAAMm6B,EAASl+B,EAAQk+B,QAAU,QAAQjtB,KAAKC,SAASnL,KAAKwX,SAAS/E,SAAS,IAAImnB,OAAO,EAAG,KACtFj/B,EAASV,EAAQU,QAAU,UAC3BX,EAAS2/B,EAAS3/B,QAAU2/B,EAASj+B,SAAWi+B,EAGhDE,EAAOtzB,SAAS6V,cAAc,OACpCyd,EAAK5U,UAAY,qBACjB4U,EAAKC,aAAa,eAAgB3B,GAGlC0B,EAAKrzB,MAAM+Z,QAAU/nB,KAAKuhC,sBAAsBp/B,GAEhDk/B,EAAKrzB,MAAMwzB,YAAY,UAAW,IAAK,aACvCH,EAAKrzB,MAAMwzB,YAAY,YAAa,+BAAgC,aACpEH,EAAKrzB,MAAMwzB,YAAY,SAAU,YAAa,aAE9C,MAiBMC,EAAkBzhC,KAAK0hC,mBAAmBv/B,EAAQX,GA8BxD,OA7BA6/B,EAAK9Y,UAAY,0CAlBD,CACdoZ,QAAS,IACTC,WAAY,KACZC,SAAU,IACVC,UAAW,IACX5gC,MAAO,KAckCiB,qEACUs/B,iBAIrDzhC,KAAKyzB,kBAAkBtM,YAAYka,GAGnCrhC,KAAK+hC,yBAEL/hC,KAAK0zB,UAAU3nB,IAAI4zB,EAAQ,CACzBtE,QAASgG,EACTl/B,OAAQA,EACRX,OAAQA,EACRyI,eAAgBzI,EAChB0a,UAAWxJ,KAAKC,MAChBqvB,QAAS,KACT9gC,MAAO,KACP+gC,YAAa,QACbr/B,MAAO,KACPs/B,SAAU,OAIZliC,KAAKmiC,oBAAoBd,EAAM1B,GAG/B3/B,KAAKoiC,oBAAoBf,GAClB1B,CACT,CAKA,cAAAa,CAAeb,EAAQx9B,EAAQV,EAAU,CAAA,GACvC,IAAKzB,KAAK0zB,YAAc1zB,KAAK0zB,UAAU3X,IAAI4jB,GAAS,OAEpD,MAAM0C,EAAWriC,KAAK0zB,UAAUvJ,IAAIwV,GAC9B0B,EAAOgB,EAAShH,QAGtBgH,EAASlgC,OAASA,EAElB,MASMs/B,EAAkBzhC,KAAK0hC,mBAAmBv/B,EAAQkgC,EAAS7gC,QACjE6/B,EAAK9Y,UAAY,0CAVD,CACdoZ,QAAS,IACTC,WAAY,KACZC,SAAU,IACVC,UAAW,IACX5gC,MAAO,KAMkCiB,qEACUs/B,iBAItC,cAAXt/B,EACFnC,KAAKsiC,mBAAmBjB,EAAM1B,GACV,UAAXx9B,GACTnC,KAAKuiC,iBAAiBlB,EAAM1B,EAEhC,CAKA,gBAAAuB,CAAiBnuB,EAASvK,GACxB,MAAMgS,EAAQzM,SAAS6V,cAAc,OACrCpJ,EAAMiS,UAAY,kBAAkBjkB,IACpCgS,EAAMxM,MAAM+Z,QAAU,4LAOG,UAATvf,EAAmB,yBAA2B,wDAC/B,UAATA,EAAmB,yBAA2B,6CAChD,UAATA,EAAmB,UAAaxI,KAAKmyB,WAAa,UAAY,mBAEzE3X,EAAM0N,YAAcnV,EACpB/S,KAAKuzB,UAAUpM,YAAY3M,GAC3Bxa,KAAK0gC,gBACP,CAKA,iBAAA8B,CAAkBrgC,GAChB,MAWMsgC,EAAgB,CACpBd,QAAS,2BACTC,WAAY,2BACZC,SAAU,0BACVC,UAAW,2BACX5gC,MAAO,0BAGT,MAnBmB,uBACHlB,KAAKmyB,WAAa,4BAA8B,yDAC1CnyB,KAAKmyB,WAAa,4BAA8B,oOAiBlD,0BAA0BsQ,EAActgC,IAAWsgC,EAAcd,UACvF,CAKA,qBAAAJ,CAAsBp/B,GAEpB,MAcMsuB,EAAQzwB,KAAKmyB,WAdO,CACxBxJ,WAAY,yEACZiR,OAAQ,qCACRM,UAAW,sEACXzuB,MAAO,WAGkB,CACzBkd,WAAY,gFACZiR,OAAQ,qCACRM,UAAW,qEACXzuB,MAAO,WAKT,MAAO,8IAMSglB,EAAM9H,4IAGV8H,EAAMmJ,qDAEPnJ,EAAMhlB,0OAMDglB,EAAMyJ,mIAKxB,CAKA,sBAAA6H,GACE,MACMW,EAAWp0B,MAAMoG,KAAK1U,KAAKyzB,kBAAkB5rB,UAAUkN,OAAO5L,IACjEA,EAAMouB,UAAU9J,SAAS,qBAItBkV,EAAkB3iC,KAAKyzB,kBAAkBjG,cAAc,qBAK7D,GAJImV,GACFA,EAAgBp4B,SAGdm4B,EAAS56B,QAXW,EAatB46B,EAASz6B,QAAQo5B,IACfA,EAAKrzB,MAAMiZ,QAAU,aAElB,CAEgByb,EAAS/Y,OAlBR,GAmBtB,MAAMiZ,EAAcF,EAAS56B,OAnBP,EAsBtB46B,EAASz6B,QAAQ,CAACo5B,EAAMl0B,KAClBA,EAAQu1B,EAAS56B,OAvBD,EAwBlBu5B,EAAKrzB,MAAMiZ,QAAU,OAErBoa,EAAKrzB,MAAMiZ,QAAU,SAKzB,MAAM4b,EAAU90B,SAAS6V,cAAc,OACvCif,EAAQpW,UAAY,mBAEpB,MAAMqW,EAAmB9iC,KAAKmyB,WAAa,4BAA8B,sBACnE4Q,EAAqB/iC,KAAKmyB,WAAa,2BAA6B,sBACpE6Q,EAAmBhjC,KAAKmyB,WAAa,2BAA6B,qBAExE0Q,EAAQ70B,MAAM+Z,QAAU,qKAMR+a,qGAGMC,gDAEXC,0JAMXH,EAAQta,UAAY,KAAKqa,IAGzB5iC,KAAKyzB,kBAAkB0J,aAAa0F,EAAS7iC,KAAKyzB,kBAAkBwP,YAGpE,MAAMC,EAAoBljC,KAAKmyB,WAAa,4BAA8B,sBAE1E0Q,EAAQ7zB,iBAAiB,aAAc,KACrC6zB,EAAQ70B,MAAM2a,WAAaua,EAC3BL,EAAQ70B,MAAMof,UAAY,gBAG5ByV,EAAQ7zB,iBAAiB,aAAc,KACrC6zB,EAAQ70B,MAAM2a,WAAama,EAC3BD,EAAQ70B,MAAMof,UAAY,YAE9B,CACF,CAKA,mBAAA+U,CAAoBd,EAAM1B,GAIxB,GAFsB,iBAAkBp/B,QAAUs0B,UAAUsO,eAAiB,EAI3E9B,EAAKryB,iBAAiB,QAAUge,IAC9BA,EAAEzb,iBACFyb,EAAEM,kBACFttB,KAAKojC,oBAAoBzD,SAEtB,CAEL,IAAI0D,EAEJhC,EAAKryB,iBAAiB,aAAc,KAClCq0B,EAAe1xB,WAAW,KACxB3R,KAAKojC,oBAAoBzD,IACxB,OAGL0B,EAAKryB,iBAAiB,aAAc,KAC9Bq0B,GACFC,aAAaD,KAKjBhC,EAAKryB,iBAAiB,QAAUge,IAC9BA,EAAEzb,iBACFyb,EAAEM,kBACFttB,KAAKojC,oBAAoBzD,IAE7B,CACF,CAKA,mBAAAyD,CAAoBzD,GAClB,MAAM0C,EAAWriC,KAAK0zB,UAAUvJ,IAAIwV,GACpC,IAAK0C,EAAU,OAGf,MAAMkB,EAAgBx1B,SAASyf,cAAc,sBACzC+V,GACFA,EAAch5B,SAIhB,MAAMud,EAAQ9nB,KAAKwjC,sBAAsBnB,GACzCt0B,SAAS/L,KAAKmlB,YAAYW,GAG1B9J,sBAAsB,KACpB8J,EAAM9Z,MAAMpC,QAAU,IACtBkc,EAAM0F,cAAc,kBAAkBxf,MAAMof,UAAY,0BAE5D,CAKA,qBAAAoW,CAAsBnB,GACpB,MAAMva,EAAQ/Z,SAAS6V,cAAc,OACrCkE,EAAM2E,UAAY,oBAGlB,MAAMgX,EAAezjC,KAAKmyB,WAAa,qBAAuB,qBACxDuR,EAAU1jC,KAAKmyB,WAAa,yBAA2B,4BACvDwR,EAAc3jC,KAAKmyB,WAAa,2BAA6B,qBAC7DyR,EAAY5jC,KAAKmyB,WAAa,2BAA6B,qBAC3D0R,EAAa7jC,KAAKmyB,WAAa,2BAA6B,qBAElErK,EAAM9Z,MAAM+Z,QAAU,uHAMN0b,mQAYhB,MAAM/gC,EAAW2/B,EAASL,UACpBK,EAASL,QAAUK,EAASnmB,WAAa,KAAM9U,QAAQ,KACvDsL,KAAKC,MAAQ0vB,EAASnmB,WAAa,KAAM9U,QAAQ,GAGjD08B,EAAiC,YAApBzB,EAASlgC,OAAuB,MACb,gBAApBkgC,EAASlgC,OAA2B,MAChB,cAApBkgC,EAASlgC,OAAyB,KAClC,MAEZ4hC,EAAeh2B,SAAS6V,cAAc,OAC5CmgB,EAAatX,UAAY,gBACzBsX,EAAa/1B,MAAM+Z,QAAU,uBACb2b,mEAEMC,kWAatBI,EAAaxb,UAAY,4JAEUqb,oMAKpBC,oPAUYA,2GACAD,0CAAkDvB,EAASp4B,+FAI3D45B,yGACAD,wBAAgCE,kFAIhCD,wGACAD,wBAAgClhC,+CAGrD2/B,EAASnhC,MAAQ,iDAEI2iC,qJAC6CxB,EAASnhC,wCAEzE,6DAGmB2iC,4GACAD,wBAAgCvB,EAASJ,aAAe,iDAMnF8B,EAAa/0B,iBAAiB,QAAUge,IACtCA,EAAEM,oBAGJ,MAAM0W,EAAWD,EAAavW,cAAc,cAkB5C,OAjBAwW,EAASh1B,iBAAiB,QAAS,KACjChP,KAAKikC,qBAAqBnc,KAG5Bkc,EAASh1B,iBAAiB,aAAc,KACtCg1B,EAASh2B,MAAMvC,MAAQm4B,IAGzBI,EAASh1B,iBAAiB,aAAc,KACtCg1B,EAASh2B,MAAMvC,MAAQo4B,IAGzB/b,EAAM9Y,iBAAiB,QAAS,KAC9BhP,KAAKikC,qBAAqBnc,KAG5BA,EAAMX,YAAY4c,GACXjc,CACT,CAKA,oBAAAmc,CAAqBnc,GACnBA,EAAM9Z,MAAMpC,QAAU,IACtBkc,EAAM0F,cAAc,kBAAkBxf,MAAMof,UAAY,+BAExDzb,WAAW,KACLmW,EAAMmG,YACRnG,EAAMmG,WAAWvG,YAAYI,IAE9B,IACL,CAKA,mBAAAsa,CAAoBf,GAElBA,EAAKrzB,MAAMof,UAAY,+BACvBiU,EAAKrzB,MAAMpC,QAAU,IACrBy1B,EAAKrzB,MAAM+G,OAAS,YAEpBiJ,sBAAsB,KACpBqjB,EAAKrzB,MAAMk2B,WAAa,yCACxB7C,EAAKrzB,MAAMof,UAAY,yBACvBiU,EAAKrzB,MAAMpC,QAAU,IACrBy1B,EAAKrzB,MAAM+G,OAAS,YAGpBssB,EAAKrzB,MAAMksB,UAAY,2EAE3B,CAKA,kBAAAoI,CAAmBjB,EAAM1B,GAEvB0B,EAAKrzB,MAAMk2B,WAAa,yCACxB7C,EAAKrzB,MAAM0a,YAAc,yBACzB2Y,EAAKrzB,MAAMof,UAAY,cACvBiU,EAAKrzB,MAAMksB,UAAY,qEACvBmH,EAAKrzB,MAAM+G,OAAS,gCAGpBpD,WAAW,KACT0vB,EAAKrzB,MAAMof,UAAY,cACvBiU,EAAKrzB,MAAM+G,OAAS,kCACnB,KAGHpD,WAAW,KACT3R,KAAKmkC,gBAAgB9C,EAAM1B,IAC1B,IACL,CAKA,gBAAA4C,CAAiBlB,EAAM1B,GAErB0B,EAAKrzB,MAAMk2B,WAAa,yCACxB7C,EAAKrzB,MAAM0a,YAAc,yBACzB2Y,EAAKrzB,MAAMksB,UAAY,sEACvBmH,EAAKrzB,MAAM+G,OAAS,gCAGpBssB,EAAKrzB,MAAMiL,UAAY,kDAGvBjZ,KAAKokC,gBAAgB/C,EAAM1B,GAG3B0B,EAAKrzB,MAAMC,OAAS,UACpBozB,EAAKxY,QAAU,IAAM7oB,KAAKmkC,gBAAgB9C,EAAM1B,GAGhDhuB,WAAW,KACL3R,KAAK0zB,UAAU3X,IAAI4jB,IACrB3/B,KAAKmkC,gBAAgB9C,EAAM1B,IAE5B,IACL,CAKA,eAAAyE,CAAgB/C,EAAM1B,GACpB,MAAM0C,EAAWriC,KAAK0zB,UAAUvJ,IAAIwV,GACpC,IAAK0C,IAAaA,EAASnhC,MAAO,OAGlC,MAAMwrB,EAAU3e,SAAS6V,cAAc,OACvC8I,EAAQ1e,MAAM+Z,QAAU,kcAkBxB2E,EAAQxE,YAAcma,EAASnhC,MAE/BmgC,EAAKrzB,MAAM9G,SAAW,WACtBm6B,EAAKla,YAAYuF,GAGjB1O,sBAAsB,KACpB0O,EAAQ1e,MAAMpC,QAAU,MAI1B+F,WAAW,KACL+a,EAAQuB,aACVvB,EAAQ1e,MAAMpC,QAAU,IACxB+F,WAAW,KACL+a,EAAQuB,YACVvB,EAAQuB,WAAWvG,YAAYgF,IAEhC,OAEJ,IACL,CAKA,eAAAyX,CAAgB9C,EAAM1B,GAEpB0B,EAAKrzB,MAAMk2B,WAAa,yCACxB7C,EAAKrzB,MAAMof,UAAY,gCACvBiU,EAAKrzB,MAAMpC,QAAU,IACrBy1B,EAAKrzB,MAAM+G,OAAS,4BAGpBssB,EAAKrzB,MAAMksB,UAAY,uEAEvBvoB,WAAW,KACL0vB,EAAKpT,YACPoT,EAAKpT,WAAWvG,YAAY2Z,GAE9BrhC,KAAK0zB,UAAU1X,OAAO2jB,GAEtB3/B,KAAK+hC,0BACJ,IACL,CAKA,eAAAsC,CAAgB7iC,GAEd,MAAI,mBAAmB0S,KAAK1S,IAAWA,EAAOsG,OAAS,GAC9C,SAEL,qBAAqBoM,KAAK1S,GACrB,UAEF,UACT,CAKA,kBAAAkgC,CAAmBv/B,EAAQX,EAAQ8iC,EAAe,MAChD,MAAMC,EAAc/iC,EAAOsG,OAAS,GAAKtG,EAAOgjC,UAAU,EAAG,IAAM,MAAQhjC,EAGrEijC,EAAezkC,KAAKqkC,gBAAgB7iC,GAE1C,OAAQW,GACN,IAAK,UACH,MAAwB,WAAjBsiC,EAA4B,gBACX,YAAjBA,EAA6B,mBAC7B,iBACT,IAAK,aACL,IAAK,cACL,IAAK,WAEH,MAAyB,WAArBzkC,KAAK+J,YACiB,WAAjB06B,EAA4B,gBACX,YAAjBA,EAA6B,mBAC7B,gBAEe,WAAjBA,EAA4B,gBACX,YAAjBA,EAA6B,oBAC7B,oBACT,IAAK,YAEH,MAAyB,WAArBzkC,KAAK+J,YACiB,WAAjB06B,EAA4B,eACX,YAAjBA,EAA6B,eAC7B,qBAGgB,WAArBzkC,KAAK+J,YACiB,WAAjB06B,EAA4B,eACX,YAAjBA,EAA6B,aAC7B,qBAGe,WAAjBA,EAA4B,iBACX,YAAjBA,EAA6B,gBAC7B,mBACT,IAAK,QAEH,GAAIH,EAAc,CAEhB,MAAO,KADYA,EAAax8B,OAAS,GAAKw8B,EAAaE,UAAU,EAAG,IAAM,MAAQF,GAExF,CACA,MAAwB,WAAjBG,EAA4B,iBACX,YAAjBA,EAA6B,sBAC7B,yBACT,QACE,OAAOF,EAEb,CAKA,cAAAG,CAAeviC,GAEb,MAAMkX,EAAS,CACbsoB,QAAS3hC,KAAKmyB,WAAa,UAAY,UACvCyP,WAAY5hC,KAAKmyB,WAAa,UAAY,UAC1C0P,SAAU7hC,KAAKmyB,WAAa,UAAY,UACxC2P,UAAW9hC,KAAKmyB,WAAa,UAAY,UACzCjxB,MAAOlB,KAAKmyB,WAAa,UAAY,WAEvC,OAAO9Y,EAAOlX,IAAWkX,EAAOsoB,OAClC,CAKA,qBAAAgD,CAAsBxiC,GACpB,MAAe,eAAXA,GAAsC,aAAXA,EACtB,0EAEWnC,KAAKmyB,WAAa,4BAA8B,gpBAgBJnyB,KAAKmyB,WAAa,UAAY,iIAMvF,EACT,CAKA,qBAAAyS,CAAsBvD,GAEpBA,EAAKrzB,MAAMiL,UAAY,6BAGvBjZ,KAAK6kC,wBAAwBxD,GAE7B1vB,WAAW,KACT0vB,EAAKrzB,MAAMiL,UAAY,IACtB,KAEHjZ,KAAK8kC,sBACP,CAKA,uBAAAD,CAAwBxD,GACtB,MACMlyB,EAAOkyB,EAAKjyB,wBAElB,IAAK,IAAIuS,EAAI,EAAGA,EAHE,EAGaA,IAAK,CAClC,MAAM3J,EAAWjK,SAAS6V,cAAc,OACxC5L,EAAShK,MAAM+Z,QAAU,2OAQf5Y,EAAKuc,MAAQ,uBACdvc,EAAKK,IAAM,gIAOpB,MAAMu1B,EAASpjB,EArBC,EAqBgBna,KAAKC,GAAK,EACpC4B,EAAW,GACjB2O,EAAShK,MAAMwzB,YAAY,WAAeh6B,KAAKqY,IAAIklB,GAAS17B,EAArB,MACvC2O,EAAShK,MAAMwzB,YAAY,WAAeh6B,KAAKoX,IAAImmB,GAAS17B,EAArB,MAEvC0E,SAAS/L,KAAKmlB,YAAYnP,GAG1BrG,WAAW,IAAMqG,EAASzN,SAAU,KACtC,CACF,CAKA,oBAAAu6B,GACE,GAAI/2B,SAASilB,eAAe,mBAAoB,OAEhD,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,kBACX6F,EAAMka,YAAc,0mEA+EpBna,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAKA,aAAAg3B,CAAcjyB,EAASkyB,EAAU,EAAGtF,EAAS,MAC3C,MAAMx3B,EAAKw3B,GAAU,QAAQjtB,KAAKC,QAClC,OAAO3S,KAAK4/B,YAAY7sB,EAAS,CAC/BkyB,QAASz9B,KAAKqJ,IAAIrJ,KAAKoJ,IAAIq0B,EAAS,GAAI,KACxCtF,OAAQx3B,EACRhG,OAAQ8iC,EAAU,EAAI,WAAa,WAEvC,CAKA,kBAAAC,CAAmBvF,EAAQsF,EAASE,EAAa,MAC1BnlC,KAAKowB,OAAO5C,cAAc,kBAAkBmS,QAC7CwF,GAElBnlC,KAAK6J,UAAUs7B,EAAY,WAAY,CACrCF,QAASz9B,KAAKqJ,IAAIrJ,KAAKoJ,IAAIq0B,EAAS,GAAI,KACxCtF,UAGN,CAKA,YAAAyF,CAAazF,GACX,MAAM0F,EAAerlC,KAAKowB,OAAO5C,cAAc,kBAAkBmS,OAC7D0F,IAEFA,EAAar3B,MAAMk2B,WAAa,yCAChCmB,EAAar3B,MAAMpC,QAAU,IAC7By5B,EAAar3B,MAAMof,UAAY,mBAE/Bzb,WAAW,KACL0zB,EAAapX,YACfoX,EAAa96B,UAEd,KAEP,CAKA,iBAAAg2B,CAAkB+E,EAAcC,EAAW,MACzC,GAAIvlC,KAAKqwB,kBAAkBtU,IAAIupB,GAC7B,OAGF,MAAME,EAAc,IAAIC,YAAY,iBAAiBH,KACrDtlC,KAAKqwB,kBAAkBtkB,IAAIu5B,EAAcE,GAEzCA,EAAYE,UAAaz2B,IACvB,IACE,MAAM0T,EAAO1gB,KAAK0jC,MAAM12B,EAAM0T,MAC9BA,EAAK4iB,SAAWA,EAChBvlC,KAAK4lC,qBAAqBjjB,EAC5B,CAAE,MAAOzhB,GACPf,QAAQe,MAAM,wBAAyBA,EACzC,GAGFskC,EAAYK,QAAW3kC,IACrBf,QAAQe,MAAM,wBAAyBA,GACvClB,KAAK8lC,mBAAmBR,GAE5B,CAKA,oBAAAM,CAAqBjjB,GACnB,OAAQA,EAAKna,MACX,IAAK,YACHxI,KAAKmrB,SAAS,oCAAoCxI,EAAKgd,UACvD,MAEF,IAAK,gBACkBjkB,IAAjBiH,EAAKsiB,SAAyBtiB,EAAK4iB,UACrCvlC,KAAKwgC,eAAe7d,EAAK4iB,SAAU,WAAY,CAAEN,QAAStiB,EAAKsiB,UAEjE,MAEF,IAAK,YACCtiB,EAAK4iB,UACPvlC,KAAKwgC,eAAe7d,EAAK4iB,SAAU,aAErCvlC,KAAK8lC,mBAAmBnjB,EAAKgd,QAC7B,MAEF,IAAK,QACChd,EAAK4iB,UACPvlC,KAAKwgC,eAAe7d,EAAK4iB,SAAU,SAErCvlC,KAAK6J,UAAU,KAAK8Y,EAAK5P,UAAW,SACpC/S,KAAK8lC,mBAAmBnjB,EAAKgd,QAGnC,CAKA,kBAAAmG,CAAmBnG,GACjB,MAAMoG,EAAa/lC,KAAKqwB,kBAAkBlG,IAAIwV,GAC1CoG,IACFA,EAAWC,QACXhmC,KAAKqwB,kBAAkBrU,OAAO2jB,GAElC,CAKA,cAAAe,GACM1gC,KAAKuzB,YACPvzB,KAAKuzB,UAAU0S,UAAYjmC,KAAKuzB,UAAUwI,aAE9C,CAKA,aAAAgE,CAAc1F,GAOZ,MALiB,CACfmB,SAAU,GACVC,OAAQ,QACRzf,OAAQ,SAEMqe,IAAS,EAC3B,CAKA,oBAAAwF,CAAqBqG,GAEnBlmC,KAAKsF,eAAiBtF,KAAKsF,eAAeqkB,MAAM,EAAG3pB,KAAKqyB,oBAAsB,GAG9EryB,KAAKsF,eAAexB,KAAKoiC,GACzBlmC,KAAKqyB,oBAAsBryB,KAAKsF,eAAewC,OAAS,EAGpD9H,KAAKsF,eAAewC,OAAS9H,KAAKsyB,iBACpCtyB,KAAKsF,eAAe6gC,QACpBnmC,KAAKqyB,uBAIPryB,KAAKomC,uBACP,CAKA,IAAA9H,GACE,IAAKt+B,KAAKqmC,UAER,YADArmC,KAAK6J,UAAU,oBAAqB,QAItC,MAAM3G,EAAUlD,KAAKsF,eAAetF,KAAKqyB,qBACzCryB,KAAKqyB,sBAGgB,aAAjBnvB,EAAQm3B,MACVr6B,KAAK6J,UAAU,YAAY3G,EAAQA,uBAAwB,UAEvDlD,KAAK+G,cAAgB/G,KAAK+G,aAAau/B,kBACzCtmC,KAAK+G,aAAau/B,oBAEM,WAAjBpjC,EAAQm3B,MACjBr6B,KAAK6J,UAAU,YAAY3G,EAAQA,uBAAwB,UAEvDlD,KAAK+G,cAAgB/G,KAAK+G,aAAaw/B,gBACzCvmC,KAAK+G,aAAaw/B,kBAEM,WAAjBrjC,EAAQm3B,OACjBr6B,KAAK6J,UAAU,YAAY3G,EAAQA,uBAAwB,UAEvDlD,KAAK+G,cAAgB/G,KAAK+G,aAAay/B,gBACzCxmC,KAAK+G,aAAay/B,kBAItBxmC,KAAKomC,uBACP,CAKA,IAAA/H,GACE,IAAKr+B,KAAKymC,UAER,YADAzmC,KAAK6J,UAAU,oBAAqB,QAItC7J,KAAKqyB,sBACL,MAAMnvB,EAAUlD,KAAKsF,eAAetF,KAAKqyB,qBAGzCryB,KAAK6J,UAAU,YAAY3G,EAAQA,oBAAqB,UAGpDlD,KAAK+G,cAAgB/G,KAAK+G,aAAa2/B,aACzC1mC,KAAK+G,aAAa2/B,YAAYxjC,GAGhClD,KAAKomC,uBACP,CAKA,OAAAC,GACE,OAAOrmC,KAAKqyB,qBAAuB,CACrC,CAKA,OAAAoU,GACE,OAAOzmC,KAAKqyB,oBAAsBryB,KAAKsF,eAAewC,OAAS,CACjE,CAKA,qBAAAs+B,GACMpmC,KAAK2mC,UACP3mC,KAAK2mC,QAAQtR,UAAYr1B,KAAKqmC,UAC9BrmC,KAAK2mC,QAAQ34B,MAAMpC,QAAU5L,KAAKqmC,UAAY,IAAM,MACpDrmC,KAAK2mC,QAAQ34B,MAAMC,OAASjO,KAAKqmC,UAAY,UAAY,eAGvDrmC,KAAK4mC,UACP5mC,KAAK4mC,QAAQvR,UAAYr1B,KAAKymC,UAC9BzmC,KAAK4mC,QAAQ54B,MAAMpC,QAAU5L,KAAKymC,UAAY,IAAM,MACpDzmC,KAAK4mC,QAAQ54B,MAAMC,OAASjO,KAAKymC,UAAY,UAAY,cAE7D,CAKA,8BAAMtR,SACoBn1B,KAAK6mC,4BAE3B7mC,KAAK6mB,UAET,CAKA,8BAAMggB,GACJ,OAAO7mC,KAAK2gC,uBAAuB,CACjC/K,KAAM,KACN3N,MAAO,gBACPlV,QAAS,2CACT6tB,YAAa,eACbC,WAAY,QACZC,aAAc,WAElB,CAKA,uBAAAE,CAAwBlZ,GACtB,MAAMiZ,EAASjZ,EAAM0F,cAAc,kBACnCuT,EAAO/yB,MAAMof,UAAY,aACzB2T,EAAO/yB,MAAMpC,QAAU,IACvBkc,EAAM9Z,MAAMpC,QAAU,IAEtB+F,WAAW,KACLmW,EAAMsR,eACRrrB,SAAS/L,KAAK0lB,YAAYI,IAE3B,IACL,CAKA,QAAAjB,GACM7mB,KAAK+G,cACP/G,KAAK+G,aAAa8f,WAClB7mB,KAAK6J,UAAU,wBAAyB,WAC/B7J,KAAKgF,QAEdhF,KAAK6J,UAAU,iBAAkB,QAErC,CAOA,YAAA6mB,GASE1wB,KAAK6J,UAAU,YAAa,UARX,CACf,cACA,iBACA,cACA,WACA,aAIO5B,QAAQ6+B,IACf9mC,KAAK6J,UAAU,OAAOi9B,KAAY,SAEtC,CAKA,eAAAC,CAAgBhgC,GACd/G,KAAK+G,aAAeA,EACpB/G,KAAKiyB,qCACP,CAKA,SAAA+U,CAAUhiC,GACRhF,KAAKgF,OAASA,CAChB,CAKA,YAAAgnB,CAAaC,GACXjsB,KAAKe,OAAS,IAAKf,KAAKe,UAAWkrB,GAE/BA,EAAUsE,eAEZvwB,KAAKwyB,YAET,CAQA,aAAAG,GAEE5kB,SAAS/L,KAAKyqB,UAAYzsB,KAAKoyB,eAAiB,gBAAmBpyB,KAAKmyB,WAAa,YAAc,aAGnG,MAAM8U,EAAcjnC,KAAKgoB,WAAWwF,cAAc,0BAC9CyZ,IACFA,EAAYj5B,MAAM+Z,QAAU/nB,KAAKi+B,qBAAoB,EAAM,aAI7D,MAAMY,EAAa7+B,KAAKgoB,WAAWwF,cAAc,gBAC7CqR,IACFA,EAAW7wB,MAAM+Z,QAAU/nB,KAAKy9B,sBAAsB,WAE1D,CAKA,WAAA1H,GACE,MAAMmR,EAAa,CAAC,QAAS,OAAQ,YAE/BC,GADeD,EAAWE,QAAQpnC,KAAKkyB,cACX,GAAKgV,EAAWp/B,OASlD,GAPA9H,KAAKkyB,aAAegV,EAAWC,GAC/BnnC,KAAKmyB,WAAmC,SAAtBnyB,KAAKkyB,aACvBlyB,KAAKoyB,eAAuC,aAAtBpyB,KAAKkyB,aAE3BJ,aAAagG,QAAQ,qBAAsB93B,KAAKkyB,cAG5ClyB,KAAKu1B,YAAa,CACpB,MAAMC,EAAe,KACC,CAClBC,MAAO,KACPC,KAAM,KACNC,SAAU,MAEO31B,KAAKkyB,eAAiB,MAGrC4D,EAAgB,KACA,CAClBL,MAAO,cACPC,KAAM,eACNC,SAAU,eAEO31B,KAAKkyB,eAAiB,eAGrC2D,EAAyB,KAC7B,MAAMD,EAAOJ,IACb,MAAa,OAATI,EACK,wDAAwDA,WAC7C,OAATA,EACF,0EAA0EA,WAE1E,2EAA2EA,YAItF51B,KAAKu1B,YAAYhN,UAAYsN,IAC7B71B,KAAKu1B,YAAYtN,MAAQ6N,GAC3B,CAGA91B,KAAKw0B,YAGP,CAKA,UAAAA,GAEEzmB,SAAS/L,KAAKyqB,UAAYzsB,KAAKmyB,WAAa,YAAc,aAG1D,MAAMkV,EAAiBrnC,KAAKgoB,UAAUha,MAAMiZ,QACtCqgB,EAAuBtnC,KAAKgoB,UAAUha,MAAMwwB,cAClDx+B,KAAKgoB,UAAUha,MAAM+Z,QAAU/nB,KAAKozB,qBACpCpzB,KAAKgoB,UAAUha,MAAMiZ,QAAUogB,GAAkB,OACjDrnC,KAAKgoB,UAAUha,MAAMwwB,cAAgB8I,GAAwB,SAG7D,MAAMC,EAAavnC,KAAKgoB,UAAUwF,cAAc,yBAoDhD,GAnDI+Z,IACFA,EAAWv5B,MAAM2a,WAAa3oB,KAAKmyB,WAC/B,4EACA,4EACJoV,EAAWv5B,MAAM4rB,OAAS,cAAa55B,KAAKmyB,WAAa,2BAA6B,6BAIxFnyB,KAAKkK,MAAM8D,MAAM+Z,QAAU/nB,KAAK8zB,iBAGhC9zB,KAAKowB,OAAOpiB,MAAM+Z,QAAU/nB,KAAKwzB,kBAG7BxzB,KAAKkzB,qBACPlzB,KAAKkzB,mBAAmBllB,MAAM2a,WAAa3oB,KAAKoyB,eAC5C,wEACCpyB,KAAKmyB,WACJ,wEACA,8EACNnyB,KAAKkzB,mBAAmBllB,MAAM0a,YAAc1oB,KAAKoyB,eAC7C,wBACCpyB,KAAKmyB,WACJ,2BACA,4BAGNxuB,OAAO+mB,KAAK1qB,KAAKo6B,kBAAkBnyB,QAAQiK,IACzC,MAAMhD,OAAEA,GAAWlP,KAAKo6B,iBAAiBloB,GACrClS,KAAK+J,cAAgBmI,IACvBhD,EAAOlB,MAAMvC,MAAQzL,KAAKoyB,eACtB,2BACCpyB,KAAKmyB,WAAa,2BAA6B,wBACpDjjB,EAAOlB,MAAM2a,WAAa,cAC1BzZ,EAAOlB,MAAM4rB,OAAS,wBACtB1qB,EAAOlB,MAAMksB,UAAY,UAK7Bl6B,KAAKw6B,WAAWx6B,KAAK+J,aAAa,IAIhC/J,KAAKi1B,WACPj1B,KAAKi1B,SAASjnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,cAEvDl1B,KAAKo1B,aACPp1B,KAAKo1B,WAAWpnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,aAC3Dl1B,KAAKo1B,WAAWpnB,MAAMpC,QAAU,OAE9B5L,KAAKu1B,YAAa,CACpB,MAAMC,EAAe,KACC,CAClBC,MAAO,KACPC,KAAM,KACNC,SAAU,MAEO31B,KAAKkyB,eAAiB,MAErC4D,EAAgB,KACA,CAClBL,MAAO,cACPC,KAAM,eACNC,SAAU,eAEO31B,KAAKkyB,eAAiB,eAErC2D,EAAyB,KAC7B,MAAMD,EAAOJ,IAEb,MAAa,OAATI,EACK,wDAAwDA,WAC7C,OAATA,EACF,0EAA0EA,WAE1E,2EAA2EA,YAGtF51B,KAAKu1B,YAAYhN,UAAYsN,IAC7B71B,KAAKu1B,YAAYtN,MAAQ6N,IACzB91B,KAAKu1B,YAAYvnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,OAC9D,CACIl1B,KAAKg2B,iBACPh2B,KAAKg2B,eAAehoB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,SAGjEl1B,KAAKo2B,6BAGL,MAAM9B,EAAct0B,KAAKgoB,UAAUwF,cAAc,iBAC7C8G,IACFA,EAAYtmB,MAAMvC,MAAQzL,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,UAC3FmC,EAAYtmB,MAAM2a,WAAa3oB,KAAKoyB,eAChC,2BACCpyB,KAAKmyB,WACJ,2BACA,sBAIRnyB,KAAKwnC,+BAGLxnC,KAAKynC,0BACP,CAKA,4BAAAD,GACE,IAAKxnC,KAAKyzB,kBAAmB,OAG7B,MAAM4T,EAAiBrnC,KAAKyzB,kBAAkBzlB,MAAMiZ,QAGhDjnB,KAAK0zB,WAAa1zB,KAAK0zB,UAAU1rB,KAAO,GAC1ChI,KAAK0zB,UAAUzrB,QAAQ,CAACo6B,EAAU1C,KAChC,MAAM0B,EAAOgB,EAAShH,QACtB,GAAIgG,EAAM,CAGR,MAAMqG,EAAoB,CACxB/e,WAAY,yEACZiR,OAAQ,qCACRnuB,MAAO,WAGHk8B,EAAqB,CACzBhf,WAAY,gFACZiR,OAAQ,qCACRnuB,MAAO,WAGHglB,EAAQzwB,KAAKmyB,WAAauV,EAAoBC,EAGpDtG,EAAKrzB,MAAMwzB,YAAY,aAAc/Q,EAAM9H,WAAY,aACvD0Y,EAAKrzB,MAAMwzB,YAAY,SAAU/Q,EAAMmJ,OAAQ,aAC/CyH,EAAKrzB,MAAMwzB,YAAY,QAAS/Q,EAAMhlB,MAAO,YAC/C,IAKJzL,KAAKyzB,kBAAkBzlB,MAAMiZ,QAAUogB,CACzC,CAKA,wBAAAI,GACE,MAAMpuB,EAASrZ,KAAKmyB,WAAa,CAC/ByV,OAAQ,UACR1kC,QAAS,UACT2e,QAAS,UACT3gB,MAAO,UACP0gC,WAAY,UACZzI,KAAM,UACN0O,KAAM,WACJ,CACFD,OAAQ,UACR1kC,QAAS,UACT2e,QAAS,UACT3gB,MAAO,UACP0gC,WAAY,UACZzI,KAAM,UACN0O,KAAM,WAGFC,EAAmB9nC,KAAKmyB,WAAa,UAAY,UAGvDnyB,KAAKowB,OAAO0J,iBAAiB,OAAO7xB,QAAQ4D,IAC1C,MAAM+J,EAAO/J,EAAKqc,YAClB,IAAI1f,EAAO,UAGPoN,EAAK/R,SAAS,OAAS+R,EAAK/R,SAAS,OAAS+R,EAAK/R,SAAS,OAAS+R,EAAK/R,SAAS,QACrF2E,EAAO,SACEoN,EAAK5C,WAAW,MACzBxK,EAAO,UACEoN,EAAK/R,SAAS,MAAQ+R,EAAK/R,SAAS,MAAQ+R,EAAK/R,SAAS,UACnE2E,EAAO,UACEoN,EAAK/R,SAAS,MAAQ+R,EAAK/R,SAAS,OAC7C2E,EAAO,QACEoN,EAAK/R,SAAS,QACvB2E,EAAO,aACEoN,EAAK/R,SAAS,OAAS+R,EAAK/R,SAAS,WAAa+R,EAAK/R,SAAS,OACzE2E,EAAO,OACEoN,EAAK/R,SAAS,SACvB2E,EAAO,QAGTqD,EAAKmC,MAAMvC,MAAQ4N,EAAO7Q,IAASs/B,GAEvC,CAKA,mBAAA7M,GAEOj7B,KAAK+nC,YACR/nC,KAAK+nC,UAAYh6B,SAAS6V,cAAc,SACxC5jB,KAAK+nC,UAAUv/B,KAAO,OACtBxI,KAAK+nC,UAAU7gB,OAAS,uCACxBlnB,KAAK+nC,UAAU/5B,MAAMiZ,QAAU,OAC/BjnB,KAAK+nC,UAAU3gB,SAAY4F,GAAMhtB,KAAKgoC,oBAAoBhb,GAC1Djf,SAAS/L,KAAKmlB,YAAYnnB,KAAK+nC,YAIjC/nC,KAAKioC,mBACP,CAKA,mBAAA/M,GACMl7B,KAAKkoC,kBAAoBloC,KAAKkoC,iBAAiBja,YACjDjuB,KAAKkoC,iBAAiBja,WAAWvG,YAAY1nB,KAAKkoC,kBAEpDloC,KAAKmoC,oBACP,CAKA,gBAAAC,GACMpoC,KAAK+nC,WACP/nC,KAAK+nC,UAAUngB,OAEnB,CAKA,oBAAA2S,GAEOv6B,KAAK+nC,WACR/nC,KAAKi7B,sBAIPj7B,KAAKooC,mBAGLpoC,KAAKw6B,WAAW,UAAU,EAC5B,CAKA,yBAAMwN,CAAoB/4B,GACxB,MAAMqY,EAAOrY,EAAMwI,OAAO8P,MAAM,GAChC,GAAKD,EAEL,IAEE,MAAMzT,EAAW7T,KAAKqoC,eAAe/gB,EAAKliB,MAGpCyf,EAAU2C,IAAIC,gBAAgBH,GAGpCtnB,KAAKg7B,aAAe,CAClB1T,KAAMA,EACNghB,IAAKzjB,EACLrc,KAAMqL,EACNzO,KAAMkiB,EAAKliB,MAGbpF,KAAKw6B,WAAW,UAAU,GAG1B,MAAM+N,EAAgB,UAAUjhB,EAAKliB,QACrCpF,KAAKkK,MAAMC,MAAQo+B,EAEnBvoC,KAAK6J,UAAU,cAAcyd,EAAKliB,SAASyO,KAAa,UACxD7T,KAAK6J,UAAU,kBAAkB0+B,IAAiB,UAGlD52B,WAAW,KACT3R,KAAKiD,kBACJ,IAEL,CAAE,MAAO/B,GACPf,QAAQe,MAAM,wBAAyBA,GACvClB,KAAK6J,UAAU,gBAAgB3I,EAAM6R,UAAW,QAClD,CACF,CAKA,iBAAAk1B,GACOjoC,KAAKkK,QAEVlK,KAAKkK,MAAM8E,iBAAiB,WAAYhP,KAAKwoC,eAAeC,KAAKzoC,OACjEA,KAAKkK,MAAM8E,iBAAiB,OAAQhP,KAAK0oC,WAAWD,KAAKzoC,OACzDA,KAAKkK,MAAM8E,iBAAiB,YAAahP,KAAK2oC,gBAAgBF,KAAKzoC,OACnEA,KAAKkK,MAAM8E,iBAAiB,YAAahP,KAAK4oC,gBAAgBH,KAAKzoC,OACrE,CAKA,kBAAAmoC,GACOnoC,KAAKkK,QAEVlK,KAAKkK,MAAM8jB,oBAAoB,WAAYhuB,KAAKwoC,eAAeC,KAAKzoC,OACpEA,KAAKkK,MAAM8jB,oBAAoB,OAAQhuB,KAAK0oC,WAAWD,KAAKzoC,OAC5DA,KAAKkK,MAAM8jB,oBAAoB,YAAahuB,KAAK2oC,gBAAgBF,KAAKzoC,OACtEA,KAAKkK,MAAM8jB,oBAAoB,YAAahuB,KAAK4oC,gBAAgBH,KAAKzoC,OACxE,CAKA,cAAAwoC,CAAexb,GACbA,EAAEzb,iBACFvR,KAAKkK,MAAM8D,MAAM2a,WAAa3oB,KAAKmyB,WAAa,0BAA4B,0BAC9E,CAKA,eAAAwW,CAAgB3b,GACdA,EAAEzb,iBACFvR,KAAKkK,MAAM8D,MAAM2a,WAAa3oB,KAAKmyB,WAAa,0BAA4B,0BAC9E,CAKA,eAAAyW,CAAgB5b,GACdA,EAAEzb,iBACFvR,KAAKkK,MAAM8D,MAAM2a,WAAa,EAChC,CAKA,gBAAM+f,CAAW1b,GACfA,EAAEzb,iBACFvR,KAAKkK,MAAM8D,MAAM2a,WAAa,GAE9B,MAAMpB,EAAQjZ,MAAMoG,KAAKsY,EAAE6b,aAAathB,OACxC,GAAqB,IAAjBA,EAAMzf,OAAc,OAExB,MAAMwf,EAAOC,EAAM,GAGFvnB,KAAKqoC,eAAe/gB,EAAKliB,MAO1CpF,KAAKgoC,oBAAoB,CAAEvwB,OAAQ,CAAE8P,MAAO,CAACD,MAL3CtnB,KAAK6J,UAAU,uBAAwB,QAM3C,CAKA,cAAAw+B,CAAepyB,GACb,MAAM6yB,EAAM7yB,EAAS7R,cAAcyR,MAAM,KAAKqM,MAE9C,MAAI,CAAC,MAAO,QAAQre,SAASilC,GAAa,KACtC,CAAC,MAAO,OAAQ,MAAO,QAAQjlC,SAASilC,GAAa,QACrD,CAAC,MAAO,MAAO,QAAQjlC,SAASilC,GAAa,QAE1C,IACT,CAKA,yBAAM9I,CAAoB98B,GACxB,IAAKlD,KAAKg7B,aACR,MAAM,IAAI15B,MAAM,kBAGlB,IAEE,MAAM4F,EAAWlH,KAAK+G,aAAe/G,KAAK+G,aAAa4M,cAAczQ,GAAW,CAAEiE,EAAG,EAAGE,EAAG,EAAGC,GAAI,IAElG,IAAIlF,EAEJ,OAAQpC,KAAKg7B,aAAaxyB,MACxB,IAAK,KAEH,IAAIxI,KAAK+G,aAMP,MAAM,IAAIzF,MAAM,yBALhBc,QAAepC,KAAK+G,aAAagiC,YAAY/oC,KAAKg7B,aAAasN,IAAK,CAClEphC,SAAUA,IAMd,MAEF,IAAK,QAEH,IAAIlH,KAAK+G,aAMP,MAAM,IAAIzF,MAAM,yBALhBc,QAAepC,KAAK+G,aAAa6d,cAAc5kB,KAAKg7B,aAAasN,IAAK,CACpEphC,SAAUA,EACV+O,SAAUjW,KAAKg7B,aAAa51B,OAKhC,MAEF,IAAK,QAEH,IAAIpF,KAAK+G,aAMP,MAAM,IAAIzF,MAAM,yBALhBc,QAAepC,KAAK+G,aAAa+d,cAAc9kB,KAAKg7B,aAAasN,IAAK,CACpEphC,SAAUA,EACV+O,SAAUjW,KAAKg7B,aAAa51B,OAKhC,MAEF,QACE,MAAM,IAAI9D,MAAM,sBAAsBtB,KAAKg7B,aAAaxyB,QAI5D,MAAMwgC,EAAoBhpC,KAAKg7B,cAAc51B,KACvC6jC,EAAejpC,KAAKg7B,cAAcxyB,KAClC0gC,EAAclpC,KAAKg7B,cAAcsN,IASvC,MAPqB,UAAjBW,GAA4BC,GAC9B1hB,IAAI8C,gBAAgB4e,GAGtBlpC,KAAKg7B,aAAe,KACpBh7B,KAAKw6B,WAAW,YAAY,GAErB,CACL3Y,SAAS,EACT9O,QAAS,GAAGi2B,GAAqB,YAAY9hC,EAASC,MAAMD,EAASG,MAAMH,EAASI,YACpFgc,SAAUlhB,EAAOkhB,SAGrB,CAAE,MAAOpiB,GAOP,MALIlB,KAAKg7B,cAAcsN,KACrB9gB,IAAI8C,gBAAgBtqB,KAAKg7B,aAAasN,KAExCtoC,KAAKg7B,aAAe,KACpBh7B,KAAKw6B,WAAW,YAAY,GACtBt5B,CACR,CACF,CAKA,yBAAAi6B,GAEE,MAAMz1B,EAAiB1F,KAAK+G,cAAcrB,eAE1C,GAAIA,EAAgB,CAElB,MAAMsE,EAAatE,EAAe6C,UAAU0B,gBAAkBvE,EAAeN,MAAQ,aACrFpF,KAAKkK,MAAMC,MAAQ,GAAGH,SACtBhK,KAAKkK,MAAME,QAGXpK,KAAKkK,MAAMG,kBAAkBrK,KAAKkK,MAAMC,MAAMrC,OAAQ9H,KAAKkK,MAAMC,MAAMrC,QAEvE9H,KAAK6J,UAAU,YAAYG,IAAc,SAC3C,MAEEhK,KAAKkK,MAAMC,MAAQ,GACnBnK,KAAK6J,UAAU,iCAAkC,UAGjD7J,KAAKmpC,0BAA0B,SAInC,CAKA,yBAAA/N,GAEE,MAAM11B,EAAiB1F,KAAK+G,cAAcrB,eAE1C,GAAIA,EAAgB,CAElB,MAAMsE,EAAatE,EAAe6C,UAAU0B,gBAAkBvE,EAAeN,MAAQ,aACrFpF,KAAKkK,MAAMC,MAAQ,GAAGH,KACtBhK,KAAKkK,MAAME,QAGXpK,KAAKkK,MAAMG,kBAAkBrK,KAAKkK,MAAMC,MAAMrC,OAAQ9H,KAAKkK,MAAMC,MAAMrC,QAEvE9H,KAAK6J,UAAU,YAAYG,IAAc,SAC3C,MAEEhK,KAAKkK,MAAMC,MAAQ,GACnBnK,KAAK6J,UAAU,iCAAkC,UAGjD7J,KAAKmpC,0BAA0B,SAInC,CAMA,yBAAAA,CAA0B9O,GACxB,MAAM+O,EAAappC,KAAKopC,WAClBC,EAAarpC,KAAKkK,MAGxBlK,KAAKspC,oBAAoBF,GAGzBppC,KAAKupC,eAAeF,EAAYhP,GAGhCr6B,KAAKwpC,kBAAkBJ,EAAY/O,GAGnCr6B,KAAKypC,iBAAiBL,EACxB,CAKA,mBAAAE,CAAoBjO,GAClBA,EAAQrtB,MAAMiL,UAAY,kCAG1BjZ,KAAK0pC,4BAGL/3B,WAAW,KACT0pB,EAAQrtB,MAAMiL,UAAY,IACzB,IACL,CAKA,cAAAswB,CAAelO,EAAShB,GACtB,MAAMkB,EAAqB,WAATlB,EAAoB,yBAA2B,0BAEjEgB,EAAQrtB,MAAMk2B,WAAa,gBAC3B7I,EAAQrtB,MAAMksB,UAAY,YAAYqB,eAAuBA,IAG7D5pB,WAAW,KACT0pB,EAAQrtB,MAAMksB,UAAY,IACzB,IACL,CAKA,iBAAAsP,CAAkBnO,EAAShB,GACzB,MAAMsP,EAAsB,WAATtP,EAAoB,UAAY,UAEnDgB,EAAQrtB,MAAM47B,WAAa,aAAaD,IACxCtO,EAAQrtB,MAAMiL,UAAY,6CAG1BjZ,KAAK6pC,gCAGLl4B,WAAW,KACT0pB,EAAQrtB,MAAMiL,UAAY,GAC1BoiB,EAAQrtB,MAAM47B,WAAa,IAC1B,IACL,CAKA,gBAAAH,CAAiBpO,GACfA,EAAQrtB,MAAMof,UAAY,gCAC1BiO,EAAQrtB,MAAMk2B,WAAa,sBAG3BvyB,WAAW,KACT0pB,EAAQrtB,MAAMof,UAAY,IACzB,IACL,CAKA,yBAAAsc,GACE,GAAI37B,SAASilB,eAAe,oBAAqB,OAEjD,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,mBACX6F,EAAMka,YAAc,wgBAYpBna,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAKA,6BAAA67B,GACE,GAAI97B,SAASilB,eAAe,wBAAyB,OAErD,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,uBACX6F,EAAMka,YAAc,yWAgBpBna,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAMA,sBAAA+sB,CAAuB+O,GAErB,GAAI9pC,KAAKkK,MAAMC,MAAMiJ,OAAQ,CAEGpT,KAAK+pC,sBAAsB/pC,KAAKkK,MAAMC,MAAO2/B,KAIzE9pC,KAAKkK,MAAMC,MAAQ,GACnBnK,KAAK6J,UAAU,MAAM7J,KAAKgqC,mBAAmBF,gBAAuB,UAExE,CACF,CAKA,qBAAAC,CAAsBE,EAAYlgC,GAEhC,MAAMsyB,EAAiB,CACrB,SACA,OAGIC,EAAiB,CACrB,OACA,QACA,SACA,SACA,SACA,QACA,KACA,KACA,MACA,KACA,QACA,SACA,YAGI4N,EAAiB,CACrB,OACA,KACA,SAIF,OAAQngC,GACN,IAAK,SACH,OAAOuyB,EAAe5oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5CC,EAAex2B,KAAKU,GAAWA,EAAQF,KAAK+1B,IAErD,IAAK,SACH,OAAO5N,EAAe3oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5CC,EAAex2B,KAAKU,GAAWA,EAAQF,KAAK+1B,IAErD,IAAK,SACH,OAAO5N,EAAe3oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5C3N,EAAe5oB,KAAKU,GAAWA,EAAQF,KAAK+1B,IAErD,IAAK,WACH,OAAO5N,EAAe3oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5C3N,EAAe5oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5CC,EAAex2B,KAAKU,GAAWA,EAAQF,KAAK+1B,IAErD,QACE,OAAO,EAEb,CAKA,kBAAAD,CAAmB3P,GAOjB,MANkB,CAChBmB,SAAY,KACZ1M,OAAU,QACV2M,OAAU,KACVzf,OAAU,MAEKqe,IAASA,CAC5B,CAKA,2BAAA3H,GAEM1yB,KAAK0+B,uBACP1+B,KAAK0+B,sBAAsBn0B,SAG7BvK,KAAK0+B,sBAAwB3wB,SAAS6V,cAAc,OACpD5jB,KAAK0+B,sBAAsBnW,UAAY,KACvCvoB,KAAK0+B,sBAAsBzW,MAAQ,4BACnCjoB,KAAK0+B,sBAAsB1wB,MAAM+Z,QAAU,2qBAyB3C/nB,KAAK0+B,sBAAsB1vB,iBAAiB,YAAa,KACvDhP,KAAK0+B,sBAAsB1wB,MAAMof,UAAY,8BAC7CptB,KAAK0+B,sBAAsB1wB,MAAMksB,UAAY,mEAC7Cl6B,KAAK0+B,sBAAsB1wB,MAAMpC,QAAU,IAC3C5L,KAAK0+B,sBAAsB1wB,MAAM+G,OAAS,SAG5C/U,KAAK0+B,sBAAsB1vB,iBAAiB,WAAY,KACtDhP,KAAK0+B,sBAAsB1wB,MAAMof,UAAY,yBAC7CptB,KAAK0+B,sBAAsB1wB,MAAMksB,UAAY,oEAC7Cl6B,KAAK0+B,sBAAsB1wB,MAAMpC,QAAU,MAC3C5L,KAAK0+B,sBAAsB1wB,MAAM+G,OAAS,SAI5C/U,KAAK0+B,sBAAsB1vB,iBAAiB,QAAS,KAC/ChP,KAAKmwB,UACPnwB,KAAKu0B,OAELv0B,KAAKu+B,SAKTv+B,KAAK0+B,sBAAsB1vB,iBAAiB,cAAgBge,IAC1DA,EAAEzb,iBACFvR,KAAKmqC,4BAA4Bnd,KAInCjf,SAAS/L,KAAKmlB,YAAYnnB,KAAK0+B,sBACjC,CAKA,2BAAAyL,CAA4Bl7B,GAE1B,MAAMm7B,EAAer8B,SAASyf,cAAc,+BACxC4c,GACFA,EAAa7/B,SAIf,MAAM8/B,EAAOt8B,SAAS6V,cAAc,OACpCymB,EAAK5d,UAAY,6BACjB4d,EAAKr8B,MAAM+Z,QAAU,wCAEZ9Y,EAAMM,2BACLN,EAAMI,iCACArP,KAAKmyB,WAAa,yBAA2B,yIAGvCnyB,KAAKmyB,WAAa,2BAA6B,mVAQ1DnyB,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,mBAI5E,MAAMmY,EAAev8B,SAAS6V,cAAc,OAC5C0mB,EAAa/hB,UAAY,aACzB+hB,EAAat8B,MAAM+Z,QAAU,8OAW7BuiB,EAAat7B,iBAAiB,YAAa,KACzCs7B,EAAat8B,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,0BAC/EmY,EAAat8B,MAAMu8B,WAAa,sCAGlCD,EAAat7B,iBAAiB,WAAY,KACxCs7B,EAAat8B,MAAM2a,WAAa,cAChC2hB,EAAat8B,MAAMu8B,WAAa,sCAGlCD,EAAat7B,iBAAiB,QAAS,KACrCq7B,EAAK9/B,SACDvK,KAAKmwB,UACPnwB,KAAKu0B,OAELv0B,KAAKu+B,SAKT,MAAMiM,EAAez8B,SAAS6V,cAAc,OAC5C4mB,EAAajiB,UAAY,aACzBiiB,EAAax8B,MAAM+Z,QAAU,8OAW7ByiB,EAAax7B,iBAAiB,YAAa,KACzCw7B,EAAax8B,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,0BAC/EqY,EAAax8B,MAAMu8B,WAAa,sCAGlCC,EAAax7B,iBAAiB,WAAY,KACxCw7B,EAAax8B,MAAM2a,WAAa,cAChC6hB,EAAax8B,MAAMu8B,WAAa,sCAGlCC,EAAax7B,iBAAiB,QAAS,KACrCq7B,EAAK9/B,SACLvK,KAAKyqC,qBAIPJ,EAAKljB,YAAYmjB,GACjBD,EAAKljB,YAAYqjB,GAGjBz8B,SAAS/L,KAAKmlB,YAAYkjB,GAG1B,MAAMl7B,EAAOk7B,EAAKj7B,wBACdD,EAAKuc,MAAQnrB,OAAO0uB,aACtBob,EAAKr8B,MAAMsB,KAAUL,EAAMI,QAAUF,EAAKxN,MAAxB,MAEhBwN,EAAKu7B,OAASnqC,OAAO2uB,cACvBmb,EAAKr8B,MAAMwB,IAASP,EAAMM,QAAUJ,EAAKvN,OAAxB,MAInB,MAAM+oC,EAAa3d,IACZqd,EAAK5c,SAAST,EAAEvV,UACnB4yB,EAAK9/B,SACLwD,SAASigB,oBAAoB,QAAS2c,KAI1Ch5B,WAAW,KACT5D,SAASiB,iBAAiB,QAAS27B,IAClC,GACL,CAKA,gBAAAF,GACMzqC,KAAK0+B,wBACP1+B,KAAK0+B,sBAAsB1wB,MAAMiZ,QAAU,OAE/C,CAKA,gBAAA2jB,GACM5qC,KAAK0+B,wBACP1+B,KAAK0+B,sBAAsB1wB,MAAMiZ,QAAU,OAE/C,CAEA,OAAA5Y,GAEMrO,KAAK+nC,WAAa/nC,KAAK+nC,UAAU9Z,YACnCjuB,KAAK+nC,UAAU9Z,WAAWvG,YAAY1nB,KAAK+nC,WAEzC/nC,KAAKg7B,cAAgBh7B,KAAKg7B,aAAasN,KACzC9gB,IAAI8C,gBAAgBtqB,KAAKg7B,aAAasN,KAIpCtoC,KAAK0+B,uBAAyB1+B,KAAK0+B,sBAAsBzQ,YAC3DjuB,KAAK0+B,sBAAsBzQ,WAAWvG,YAAY1nB,KAAK0+B,uBAGrD1+B,KAAKgoB,WAAahoB,KAAKgoB,UAAUoR,eACnCp5B,KAAKgoB,UAAUoR,cAAc1R,YAAY1nB,KAAKgoB,UAElD,CAEA,mBAAAiM,GACE,GAAIj0B,KAAK0xB,gBAAiB,OAE1B1xB,KAAKyxB,YAAa,EAGlBzxB,KAAK0xB,gBAAkB3jB,SAAS6V,cAAc,YAC9C5jB,KAAK0xB,gBAAgBvnB,MAAQnK,KAAKkK,MAAMC,MACxCnK,KAAK0xB,gBAAgBmC,YAAc7zB,KAAKkK,MAAM2pB,YAG9C,MAAM4K,EAAgBz+B,KAAKgoB,UAAU5Y,wBAI/B2qB,EAAU,GAEhB,IAAIvqB,EAAMivB,EAAcjvB,IAAM,GAC1BF,EAAOmvB,EAAcnvB,KACrB3N,EAAQ88B,EAAc98B,MAGtB2N,EAAO3N,EAAQpB,OAAO0uB,WAAa8K,IACrCzqB,EAAO/O,OAAO0uB,WAAattB,EAAQo4B,GAIjCzqB,EAAOyqB,IACTzqB,EAAOyqB,EACPp4B,EAAQ6F,KAAKqJ,IAAIlP,EAAOpB,OAAO0uB,WAAa,KAI1Czf,EAnBkB,IAmBIjP,OAAO2uB,YAAc6K,IAC7CvqB,EAAMhI,KAAKoJ,IAAImpB,EAASx5B,OAAO2uB,YApBX,IAoByC6K,IAG/D,MAAM8Q,EAAoB7qC,KAAKoyB,eAC3B,wEACCpyB,KAAKmyB,WACJ,wEACA,8EAEA2Y,EAAgB9qC,KAAKoyB,eACvB,kCACCpyB,KAAKmyB,WACJ,qCACA,qCAEA4Y,EAAqB/qC,KAAKoyB,eAC5B,2EACCpyB,KAAKmyB,WACJ,4EACA,yEAEA6Y,EAAmBhrC,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,UAG1FnyB,KAAK0xB,gBAAgB1jB,MAAM+Z,QAAU,wCAE5BvY,qBACCF,sBACC3N,gFAGKkpC,wEAEJC,yBACIC,gDAELC,oWAcXj9B,SAAS/L,KAAKmlB,YAAYnnB,KAAK0xB,iBAG/B1T,sBAAsB,KACpBhe,KAAK0xB,gBAAgB1jB,MAAMpC,QAAU,MAIvC5L,KAAK0xB,gBAAgBtnB,QAGrBpK,KAAK0xB,gBAAgB1iB,iBAAiB,QAAUge,IAC9ChtB,KAAKkK,MAAMC,MAAQ6iB,EAAEvV,OAAOtN,QAI9BnK,KAAK0xB,gBAAgB1iB,iBAAiB,UAAYge,IAClC,WAAVA,EAAE9a,KACJlS,KAAKg0B,wBAKTh0B,KAAK0xB,gBAAgB1iB,iBAAiB,OAAQ,KAC5C2C,WAAW,IAAM3R,KAAKg0B,sBAAuB,MAEjD,CAEA,mBAAAA,GACOh0B,KAAK0xB,kBAEV1xB,KAAKyxB,YAAa,EAGlBzxB,KAAK0xB,gBAAgB1jB,MAAMpC,QAAU,IAErC+F,WAAW,KACL3R,KAAK0xB,kBACP3jB,SAAS/L,KAAK0lB,YAAY1nB,KAAK0xB,iBAC/B1xB,KAAK0xB,gBAAkB,OAExB,KACL,CAEA,mBAAAsC,GACOh0B,KAAK0xB,kBAEV1xB,KAAKyxB,YAAa,EAGlBzxB,KAAK0xB,gBAAgB1jB,MAAMpC,QAAU,IAErC+F,WAAW,KACL3R,KAAK0xB,kBACP3jB,SAAS/L,KAAK0lB,YAAY1nB,KAAK0xB,iBAC/B1xB,KAAK0xB,gBAAkB,OAExB,KACL,ECtrKF,MAAM3B,EAA4B,0BAC5BC,EAA4B,0BAO3B,MAAMib,EACX,WAAAnrC,CAAY2B,EAAU,IACpBzB,KAAK+G,aAAetF,EAAQsF,cAAgB,KAC5C/G,KAAKgF,OAASvD,EAAQuD,QAAU,KAChChF,KAAKkwB,iBAAmBzuB,EAAQyuB,kBAAgB,MAAa,GAE7DlwB,KAAKmwB,WAAY,EACjBnwB,KAAKgoB,UAAY,KACjBhoB,KAAKkK,MAAQ,KACblK,KAAKowB,OAAS,KACdpwB,KAAK+J,YAAc,WAGnB/J,KAAKqwB,kBAAoB,IAAI7qB,IAC7BxF,KAAKswB,cAAgB,KAGrBtwB,KAAKe,OAAS,CACZwvB,cAAe9uB,EAAQ8uB,eAAiB,IACxCrpB,SAAUzF,EAAQyF,UAAY,eAC9BvF,MAAOF,EAAQE,OAAS,IACxB6uB,UAAW/uB,EAAQ+uB,WAAa,IAChCC,MAAOhvB,EAAQgvB,OAAS,OACxBC,cAAuC,IAAzBjvB,EAAQivB,aACtBC,YAAmC,IAAvBlvB,EAAQkvB,WACpB/pB,oBAAmD,IAA/BnF,EAAQmF,sBACzBnF,EAAQV,QAGbf,KAAK4wB,uBAAyB,GAC9B5wB,KAAK6wB,uBAAyB,GAC9B7wB,KAAK2F,qBAAuB,KAC5B3F,KAAK4F,qBAAuB,KAC5B5F,KAAKkrC,iBAAmB,KACxBlrC,KAAKmrC,mBAAqB,KAC1BnrC,KAAK8wB,mBAAqB,KAC1B9wB,KAAK+wB,mBAAqB,KAC1B/wB,KAAKgxB,yBAA2B,KAChChxB,KAAKixB,sBAAwB,KAC7BjxB,KAAKkxB,uBAAyB,KAC9BlxB,KAAKmxB,2BAA6B,KAClCnxB,KAAKoxB,0BAA4B,KACjCpxB,KAAKqxB,4BAA8B,KACnCrxB,KAAKsxB,oBAAsB,KAC3BtxB,KAAKuxB,aAAe,KACpBvxB,KAAKwxB,iBAAkB,EACvBxxB,KAAKyxB,YAAa,EAClBzxB,KAAK0xB,gBAAkB,KACvB1xB,KAAK2xB,oBAAsB,KAC3B3xB,KAAK4xB,oBAAsB,KAC3B5xB,KAAKorC,uBAAyB,KAC9BprC,KAAKqrC,gBAAkB,KAEvB,IACE,MAAMxZ,EAAcC,aAAaC,QAAQhC,GACnCiC,EAAcF,aAAaC,QAAQ/B,GACzC7vB,QAAQC,IAAI,8BAA+B,CAAEyxB,cAAaG,cAAajC,4BAA2BC,8BAC9F6B,IACF7xB,KAAK2F,qBAAuBksB,EAC5B1xB,QAAQC,IAAI,8BAA+BJ,KAAK2F,uBAE9CqsB,IACFhyB,KAAK4F,qBAAuBosB,EAC5B7xB,QAAQC,IAAI,8BAA+BJ,KAAK4F,uBAElDzF,QAAQC,IAAI,mBAAoB,CAAEuF,qBAAsB3F,KAAK2F,qBAAsBC,qBAAsB5F,KAAK4F,sBAChH,CAAE,MAAO1E,GACPf,QAAQgB,KAAK,+CAAgDD,EAC/D,CAEAlB,KAAK2xB,oBAAsB3xB,KAAK2F,qBAChC3F,KAAK4xB,oBAAsB5xB,KAAK4F,qBAEhC5F,KAAKiyB,sCACL9xB,QAAQC,IAAI,qDAAsD,CAAEuF,qBAAsB3F,KAAK2F,qBAAsBC,qBAAsB5F,KAAK4F,uBAChJzF,QAAQC,IAAI,+DAAgE,CAAEuF,qBAAsB3F,KAAK+G,cAAcpB,qBAAsBC,qBAAsB5F,KAAK+G,cAAcnB,uBAGtL5F,KAAKkyB,aAAeJ,aAAaC,QAAQ,uBAAyB,QAClE/xB,KAAKmyB,WAAmC,SAAtBnyB,KAAKkyB,aACvBlyB,KAAKoyB,eAAuC,aAAtBpyB,KAAKkyB,aAG3BlyB,KAAKsF,eAAiB,GACtBtF,KAAKqyB,qBAAsB,EAC3BryB,KAAKsyB,eAAiB,GAEtBtyB,KAAKuyB,SACLvyB,KAAKwyB,cAEAxyB,KAAKgF,QAAUhF,KAAK+G,cAAgB/G,KAAK+G,aAAa/B,SACzDhF,KAAKgF,OAAShF,KAAK+G,aAAa/B,QAGlChF,KAAKyyB,qBACLzyB,KAAK0yB,8BAGL3kB,SAASiB,iBAAiB,mBAAoB,KAC5ChP,KAAK2yB,kBAGP3yB,KAAKmrB,SAAS,4BAETnrB,KAAK2F,sBAAyB3F,KAAK4F,sBACtC5F,KAAK4yB,kBAAiB,EAE1B,CAEA,QAAAzH,IAAYoE,GACLvvB,KAAKe,OAAO6F,oBAGjBzG,QAAQC,OAAOmvB,EACjB,CAKA,MAAAgD,GAEEvyB,KAAKgoB,UAAYja,SAAS6V,cAAc,OACxC5jB,KAAKgoB,UAAU7f,GAAK,kBACpBnI,KAAKgoB,UAAUha,MAAM+Z,QAAU/nB,KAAKozB,qBAGpC,MAAMC,EAAiBtlB,SAAS6V,cAAc,OAC9CyP,EAAe5G,UAAY,8BAC3B4G,EAAerlB,MAAM+Z,QAAU,sJAMS/nB,KAAKoyB,eAAiB,mBAAqB,mLASnF,MAAMkB,EAAYvlB,SAAS6V,cAAc,OACzC0P,EAAU7G,UAAY,yBACtB6G,EAAUtlB,MAAM+Z,QAAU,uKAMJ/nB,KAAKmyB,WAAa,2BAA6B,+JAG1DnyB,KAAKmyB,WAAa,UAAY,6aAczCmB,EAAU/K,UAAY,mIAGtB8K,EAAerkB,iBAAiB,aAAc,KAC5CskB,EAAUtlB,MAAMpC,QAAU,IAC1B0nB,EAAUtlB,MAAMof,UAAY,yBAC5BiG,EAAerlB,MAAMof,UAAY,aACjCiG,EAAerlB,MAAMpC,QAAU,MAGjCynB,EAAerkB,iBAAiB,aAAc,KAC5CskB,EAAUtlB,MAAMpC,QAAU,IAC1B0nB,EAAUtlB,MAAMof,UAAY,6BAC5BiG,EAAerlB,MAAMof,UAAY,WACjCiG,EAAerlB,MAAMpC,QAAU,QAGjCynB,EAAelM,YAAYmM,GAC3BtzB,KAAKgoB,UAAUb,YAAYkM,GAG3BrzB,KAAKowB,OAASriB,SAAS6V,cAAc,OACrC5jB,KAAKuzB,UAAYvzB,KAAKowB,OACtBpwB,KAAKowB,OAAOjoB,GAAK,iBACjBnI,KAAKowB,OAAO3D,UAAY,iBACxBzsB,KAAKowB,OAAOpiB,MAAM+Z,QAAU/nB,KAAKwzB,kBAEjCxzB,KAAKyzB,kBAAoB1lB,SAAS6V,cAAc,OAChD5jB,KAAKyzB,kBAAkBtrB,GAAK,2BAC5BnI,KAAKyzB,kBAAkBzlB,MAAM+Z,QAAU,4WAiBvC/nB,KAAK0zB,UAAY,IAAIluB,IAGrBxF,KAAK2zB,aAAe5lB,SAAS6V,cAAc,OAC3C5jB,KAAK2zB,aAAa3lB,MAAM+Z,QAAU,iFAOlC/nB,KAAKkK,MAAQ6D,SAAS6V,cAAc,YACpC5jB,KAAKkK,MAAM0pB,KAAO,EAClB5zB,KAAKkK,MAAM/B,GAAK,gBAChBnI,KAAKkK,MAAM2pB,YAAc,gCACzB7zB,KAAKkK,MAAM8D,MAAM+Z,QAAU/nB,KAAK8zB,iBAGhC9zB,KAAK+zB,aAAehmB,SAAS6V,cAAc,OAC3C5jB,KAAK+zB,aAAaxL,UAAY,IAC9BvoB,KAAK+zB,aAAa9L,MAAQ,YAC1BjoB,KAAK+zB,aAAa/lB,MAAM+Z,QAAU,oNASlB/nB,KAAKmyB,WAAa,2BAA6B,kDACzCnyB,KAAKmyB,WAAa,2BAA6B,kEAE1DnyB,KAAKmyB,WAAa,UAAY,wHAQzCnyB,KAAK+zB,aAAa/kB,iBAAiB,aAAc,KAC/ChP,KAAK+zB,aAAa/lB,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,qBACpFnyB,KAAK+zB,aAAa/lB,MAAMof,UAAY,eAGtCptB,KAAK+zB,aAAa/kB,iBAAiB,aAAc,KAC/ChP,KAAK+zB,aAAa/lB,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,qBACpFnyB,KAAK+zB,aAAa/lB,MAAMof,UAAY,aAItCptB,KAAK+zB,aAAa/kB,iBAAiB,QAAS,KACtChP,KAAKyxB,WACPzxB,KAAKg0B,sBAELh0B,KAAKi0B,wBAKTj0B,KAAK2zB,aAAaxM,YAAYnnB,KAAKkK,OACnClK,KAAK2zB,aAAaxM,YAAYnnB,KAAK+zB,cAKnC,MAAMG,EAAel0B,KAAKm0B,0BAGpBC,EAAkBp0B,KAAKq0B,uBAGvBC,EAAcvmB,SAAS6V,cAAc,OAC3C0Q,EAAY/L,UAAY,IACxB+L,EAAYtmB,MAAM+Z,QAAU,4JAOZ/nB,KAAKmyB,WAAa,2BAA6B,uCACpDnyB,KAAKmyB,WAAa,UAAY,0QAYzCmC,EAAYtlB,iBAAiB,YAAa,KACxCslB,EAAYtmB,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,qBAC9EmC,EAAYtmB,MAAMof,UAAY,eAGhCkH,EAAYtlB,iBAAiB,WAAY,KACvCslB,EAAYtmB,MAAM2a,WAAa3oB,KAAKmyB,WAAa,2BAA6B,qBAC9EmC,EAAYtmB,MAAMvC,MAAQzL,KAAKmyB,WAAa,UAAY,UACxDmC,EAAYtmB,MAAMof,UAAY,aAGhCkH,EAAYtlB,iBAAiB,QAAS,KACpChP,KAAKu0B,SAKPv0B,KAAKgoB,UAAUb,YAAYmN,GAC3Bt0B,KAAKgoB,UAAUb,YAAY+M,GAC3Bl0B,KAAKgoB,UAAUb,YAAYnnB,KAAK2zB,cAChC3zB,KAAKgoB,UAAUb,YAAYiN,GAG3BrmB,SAAS/L,KAAKmlB,YAAYnnB,KAAKyzB,mBAG/B1lB,SAAS/L,KAAKmlB,YAAYnnB,KAAKgoB,WAG/BhoB,KAAKw0B,aAGLx0B,KAAKy0B,aAAc,EACnBz0B,KAAK00B,yBAA0B,EAG/B10B,KAAKkK,MAAM8E,iBAAiB,QAAS,KAE/BhP,KAAKy0B,cAKLz0B,KAAKqrC,iBACPrrC,KAAKsrC,qBAIPtrC,KAAK20B,qBAGL30B,KAAKurC,2BAELvrC,KAAK40B,uBAIP50B,KAAKkK,MAAM8E,iBAAiB,mBAAoB,KAC9ChP,KAAKy0B,aAAc,IAGrBz0B,KAAKkK,MAAM8E,iBAAiB,iBAAkB,KAC5ChP,KAAKy0B,aAAc,EAGF,SAASvgB,KAAK2gB,UAAUC,YAAc,UAAU5gB,KAAK2gB,UAAUC,aAE9E90B,KAAK00B,yBAA0B,GAIjC/iB,WAAW,KACT3R,KAAK20B,qBACL30B,KAAK40B,qBACJ,MAIL,MAAMG,EAAW,SAAS7gB,KAAK2gB,UAAUC,YAAc,UAAU5gB,KAAK2gB,UAAUC,WAGhF90B,KAAKkK,MAAM8E,iBAAiB,UAAYge,IACtC,GAAc,UAAVA,EAAE9a,IAAiB,CAErB,GAAI6iB,GAAY/0B,KAAK00B,wBAEnB,YADA10B,KAAK00B,yBAA0B,GAKjC,IAAKK,IAAa/H,EAAEyH,aAAez0B,KAAKy0B,aACtC,OAKFzH,EAAEzb,iBACFvR,KAAKiD,gBACP,IAIEjD,KAAKe,OAAO2vB,YAIlB,CAKA,oBAAA2D,GACE,MAAMrM,EAAYja,SAAS6V,cAAc,OACzCoE,EAAUha,MAAM+Z,QAAU,+KAU1B,MAAMiN,EAAcjnB,SAAS6V,cAAc,OAC3CoR,EAAYhnB,MAAM+Z,QAAU,gDAE5B,MAAMkN,EAAWlnB,SAAS6V,cAAc,UACxCqR,EAAS1M,UAAY,8FACrB0M,EAASjnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,aACpDD,EAASjmB,iBAAiB,QAAS,IAAMhP,KAAKm1B,4BAG9C,MAAMC,EAAarnB,SAAS6V,cAAc,UAC1CwR,EAAW7M,UAAY,4FACvB6M,EAAWpnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,aACtDE,EAAWpnB,MAAMpC,QAAU,MAC3BwpB,EAAWC,UAAW,EACtBD,EAAWnN,MAAQ,YAEnB+M,EAAY7N,YAAY8N,GACxBD,EAAY7N,YAAYiO,GAGxB,MAAME,EAAevnB,SAAS6V,cAAc,OAC5C0R,EAAatnB,MAAM+Z,QAAU,gDAE7B,MAAMwN,EAAcxnB,SAAS6V,cAAc,UACrC4R,EAAe,KACC,CAClBC,MAAO,KACPC,KAAM,KACNC,SAAU,MAEO31B,KAAKkyB,eAAiB,MAwB3CqD,EAAYhN,UAZmB,MAC7B,MAAMqN,EAAOJ,IAEb,MAAa,OAATI,EACK,wDAAwDA,WAC7C,OAATA,EACF,0EAA0EA,WAE1E,2EAA2EA,YAI9DC,GACxBN,EAAYvnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,QACvDK,EAAYtN,MAvBU,MACA,CAClBwN,MAAO,cACPC,KAAM,eACNC,SAAU,eAEO31B,KAAKkyB,eAAiB,eAiBvB4D,GACpBP,EAAYvmB,iBAAiB,QAAS,IAAMhP,KAAK+1B,eAEjD,MAAMC,EAAiBjoB,SAAS6V,cAAc,UAkB9C,OAjBAoS,EAAezN,UAAY,oFAC3ByN,EAAehoB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,QAC1Dc,EAAe/N,MAAQ,YACvB+N,EAAehnB,iBAAiB,QAAS,IAAMhP,KAAK4yB,oBAEpD0C,EAAanO,YAAYoO,GACzBD,EAAanO,YAAY6O,GAEzBhO,EAAUb,YAAY6N,GACtBhN,EAAUb,YAAYmO,GAGtBt1B,KAAKi1B,SAAWA,EAChBj1B,KAAKo1B,WAAaA,EAClBp1B,KAAKu1B,YAAcA,EACnBv1B,KAAKg2B,eAAiBA,EAEfhO,CACT,CAEA,4BAAAiO,GAsBE,OArBAj2B,KAAKgxB,yBAA2BjjB,SAAS6V,cAAc,OACvD5jB,KAAKgxB,yBAAyB7oB,GAAK,mBACnCnI,KAAKgxB,yBAAyBhjB,MAAM+Z,QAAU,wLAQ9C/nB,KAAKixB,sBAAwBljB,SAAS6V,cAAc,OACpD5jB,KAAKixB,sBAAsB/I,YAAc,qBACzCloB,KAAKixB,sBAAsBjjB,MAAMkoB,SAAW,OAC5Cl2B,KAAKixB,sBAAsBjjB,MAAMpC,QAAU,MAC3C5L,KAAKixB,sBAAsBjjB,MAAMmoB,aAAe,MAChDn2B,KAAKgxB,yBAAyB7J,YAAYnnB,KAAKixB,uBAE/CjxB,KAAKkxB,uBAAyBnjB,SAAS6V,cAAc,OACrD5jB,KAAKgxB,yBAAyB7J,YAAYnnB,KAAKkxB,wBAE/ClxB,KAAKo2B,6BACEp2B,KAAKgxB,wBACd,CAEA,kBAAAyB,GACMzyB,KAAKsxB,sBACPtxB,KAAKsxB,oBAAoB/mB,SACzBvK,KAAKsxB,oBAAsB,KAC3BtxB,KAAKuxB,aAAe,MAGtBvxB,KAAKsxB,oBAAsBvjB,SAAS6V,cAAc,OAClD5jB,KAAKsxB,oBAAoBnpB,GAAK,kCAC9BnI,KAAKsxB,oBAAoBtjB,MAAM+Z,QAAU,oUAczC/nB,KAAKsxB,oBAAoBtiB,iBAAiB,QAAUC,IAC9CA,EAAMwI,SAAWzX,KAAKsxB,qBACxBtxB,KAAKq2B,sBAITr2B,KAAKuxB,aAAexjB,SAAS6V,cAAc,OAC3C5jB,KAAKuxB,aAAa9E,UAAY,0BAC9BzsB,KAAKuxB,aAAavjB,MAAM+Z,QAAU,8aAgBlC,MAAME,EAAQla,SAAS6V,cAAc,MACrCqE,EAAMC,YAAc,SACpBD,EAAMja,MAAM+Z,QAAU,2GAOtB,MAAMuO,EAAWvoB,SAAS6V,cAAc,KACxC0S,EAASpO,YAAc,qBACvBoO,EAAStoB,MAAM+Z,QAAU,yEAMzB,MAAMwO,EAAWv2B,KAAKi2B,+BAEhBO,EAAYzoB,SAAS6V,cAAc,OACzC4S,EAAUxoB,MAAM+Z,QAAU,oHAO1B/nB,KAAKmxB,2BAA6BpjB,SAAS6V,cAAc,UACzD5jB,KAAKmxB,2BAA2BjJ,YAAc,QAC9CloB,KAAKmxB,2BAA2BnjB,MAAM+Z,QAAU,6MAShD/nB,KAAKmxB,2BAA2BniB,iBAAiB,QAAS,IAAMhP,KAAKy2B,2BAA0B,IAE/F,MAAMC,EAAgB3oB,SAAS6V,cAAc,OAC7C8S,EAAc1oB,MAAM+Z,QAAU,2BAE9B/nB,KAAKqxB,4BAA8BtjB,SAAS6V,cAAc,UAC1D5jB,KAAKqxB,4BAA4BnJ,YAAc,SAC/CloB,KAAKqxB,4BAA4BrjB,MAAM+Z,QAAU,qOASjD/nB,KAAKqxB,4BAA4BriB,iBAAiB,QAAS,IAAMhP,KAAKq2B,qBAEtEr2B,KAAKoxB,0BAA4BrjB,SAAS6V,cAAc,UACxD5jB,KAAKoxB,0BAA0BlJ,YAAc,OAC7CloB,KAAKoxB,0BAA0BpjB,MAAM+Z,QAAU,0KAMP/nB,KAAKoyB,eAAiB,mBAAqB,sKAMnFpyB,KAAKoxB,0BAA0BpiB,iBAAiB,QAAS,IAAMhP,KAAK22B,qBAEpED,EAAcvP,YAAYnnB,KAAKqxB,6BAC/BqF,EAAcvP,YAAYnnB,KAAKoxB,2BAE/BoF,EAAUrP,YAAYnnB,KAAKmxB,4BAC3BqF,EAAUrP,YAAYuP,GAEtB12B,KAAKuxB,aAAapK,YAAYc,GAC9BjoB,KAAKuxB,aAAapK,YAAYmP,GAC9Bt2B,KAAKuxB,aAAapK,YAAYoP,GAC9Bv2B,KAAKuxB,aAAapK,YAAYqP,GAE9Bx2B,KAAKsxB,oBAAoBnK,YAAYnnB,KAAKuxB,cAC1CxjB,SAAS/L,KAAKmlB,YAAYnnB,KAAKsxB,qBAE/BtxB,KAAKo2B,6BACLp2B,KAAK42B,0BAAyB,EAChC,CAEA,gBAAAhE,CAAiBiE,GAAa,GACvB72B,KAAKsxB,qBACRtxB,KAAKyyB,qBAGPzyB,KAAKsxB,oBAAoBtjB,MAAMiZ,QAAU,OACzCjJ,sBAAsB,KAChBhe,KAAKsxB,sBACPtxB,KAAKsxB,oBAAoBtjB,MAAMpC,QAAU,OAI7C5L,KAAK82B,yBACL92B,KAAKy2B,0BAA0BI,EACjC,CAEA,iBAAAR,GACOr2B,KAAKsxB,sBAIVtxB,KAAKsxB,oBAAoBtjB,MAAMpC,QAAU,IACzC+F,WAAW,KACL3R,KAAKsxB,sBACPtxB,KAAKsxB,oBAAoBtjB,MAAMiZ,QAAU,QAE3CjnB,KAAK82B,0BACJ,KACL,CAEA,+BAAML,CAA0BM,GAAQ,GACtC,IAAI/2B,KAAKwxB,iBAAoBuF,EAA7B,CAIA,IAAK/2B,KAAKgF,QAAsD,mBAArChF,KAAKgF,OAAO7B,qBAIrC,OAHAnD,KAAKg3B,yBAAyB,uDAAwD,SACtFh3B,KAAK42B,0BAAyB,QAC9B52B,KAAKi3B,0BAAyB,GAIhCj3B,KAAKwxB,iBAAkB,EACvBxxB,KAAKg3B,yBAAyB,qBAAsB,QACpDh3B,KAAK42B,0BAAyB,GAC9B52B,KAAKi3B,0BAAyB,GAE9B,IAC+C,mBAAlCj3B,KAAKgF,OAAO3D,yBACfrB,KAAKgF,OAAO3D,oBAGpB,MAAMT,QAAiBZ,KAAKgF,OAAO7B,uBACnC,IAAKvC,IAAiC,IAArBA,EAASihB,UAAsBjhB,EAAS0jB,SACvD,MAAM,IAAIhjB,MAAMV,GAAUM,OAAS,qBAGrClB,KAAK4wB,uBAAyBtiB,MAAMC,QAAQ3N,EAAS0jB,UAAU7B,OAAS7hB,EAAS0jB,SAAS7B,MAAQ,GAClGziB,KAAK6wB,uBAAyBviB,MAAMC,QAAQ3N,EAAS0jB,UAAUZ,OAAS9iB,EAAS0jB,SAASZ,MAAQ,GAElG1jB,KAAK2F,qBAAuB3F,KAAKk3B,wBAC/B,QACAl3B,KAAK4wB,uBACLhwB,EAASu2B,SAAS1U,OAGpBziB,KAAK4F,qBAAuB5F,KAAKk3B,wBAC/B,QACAl3B,KAAK6wB,uBACLjwB,EAASu2B,SAASzT,OAGpB1jB,KAAK2xB,oBAAsB3xB,KAAK2F,qBAChC3F,KAAK4xB,oBAAsB5xB,KAAK4F,qBAEhC5F,KAAKo3B,0BACLp3B,KAAKiyB,sCACLjyB,KAAKi3B,0BAAyB,EAChC,CAAE,MAAO/1B,GACPf,QAAQe,MAAM,2CAA4CA,GAC1DlB,KAAKg3B,yBAAyB,mDAAoD,SAClFh3B,KAAK42B,0BAAyB,GAC9B52B,KAAKi3B,0BAAyB,EAChC,CAAC,QACCj3B,KAAKwxB,iBAAkB,CACzB,CApDA,CAqDF,CAEA,wBAAAwF,CAAyBjkB,EAASvK,EAAO,QAClCxI,KAAKixB,wBAGVjxB,KAAKixB,sBAAsB/I,YAAcnV,EACzC/S,KAAKixB,sBAAsBoG,QAAQC,WAAa9uB,EAChDxI,KAAKixB,sBAAsBsG,UAAUC,OAAO,0BAAoC,UAAThvB,GACvExI,KAAKo2B,6BACP,CAEA,wBAAAQ,CAAyBnuB,GAClBzI,KAAKmxB,6BAGVnxB,KAAKmxB,2BAA2BnjB,MAAMiZ,QAAUxe,EAAU,cAAgB,OAC1EzI,KAAKo2B,6BACP,CAEA,uBAAAc,CAAwB1uB,EAAMivB,EAAUC,GACtC,IAAKD,GAAgC,IAApBA,EAAS3vB,OACxB,OAAO,KAGT,MAAM6vB,EAAsB,UAATnvB,EAAmBunB,EAA4BC,EAClE,IAAI4H,EAAW,KACf,IACEA,EAAW9F,aAAaC,QAAQ4F,EAClC,CAAE,MAAOz2B,GACPf,QAAQgB,KAAK,oCAAqCD,EACpD,CAGA,IAAI22B,EADkBD,GAAYH,EAAS/jB,KAAK7R,GAAWA,EAAQsG,KAAOyvB,GACzCA,EAAW,MAEvCC,GAAcH,GAAaD,EAAS/jB,KAAK7R,GAAWA,EAAQsG,KAAOuvB,KACtEG,EAAaH,GAGVG,IACHA,EAAaJ,EAAS,IAAItvB,IAAM,MAGlC,IACM0vB,EACF/F,aAAagG,QAAQH,EAAYE,GAEjC/F,aAAaiG,WAAWJ,EAE5B,CAAE,MAAOz2B,GACPf,QAAQgB,KAAK,0CAA2CD,EAC1D,CAEA,OAAO22B,CACT,CAEA,uBAAAT,GACE,IAAKp3B,KAAKkxB,uBACR,OAGFlxB,KAAKkxB,uBAAuB3I,UAAY,GAExC,MAAMyP,EAAWh4B,KAAK4wB,uBAAuB9oB,OAAS,EAChDmwB,EAAWj4B,KAAK6wB,uBAAuB/oB,OAAS,EAEtD,GAAKkwB,GAAaC,EAAlB,CAOA,GAFAj4B,KAAKg3B,yBAAyB,qBAAsB,QAEhDgB,EAAU,CACZ,MAAME,EAAWl4B,KAAKm4B,gBAAgB,QAAS,WAAYn4B,KAAK4wB,uBAAwB5wB,KAAK2xB,qBAAuB3xB,KAAK2F,sBACzH3F,KAAKkxB,uBAAuB/J,YAAY+Q,EAC1C,CAEA,GAAID,EAAU,CACZ,MAAMG,EAAWp4B,KAAKm4B,gBAAgB,QAAS,WAAYn4B,KAAK6wB,uBAAwB7wB,KAAK4xB,qBAAuB5xB,KAAK4F,sBACzH5F,KAAKkxB,uBAAuB/J,YAAYiR,EAC1C,CAEAp4B,KAAKo2B,4BAdL,MAFEp2B,KAAKg3B,yBAAyB,wBAAyB,QAiB3D,CAEA,eAAAmB,CAAgB3vB,EAAM6vB,EAAWZ,EAAUa,GACzC,MAAMC,EAAMxqB,SAAS6V,cAAc,OACnC2U,EAAI9L,UAAY,2BAA2BjkB,IAC3C+vB,EAAIvqB,MAAM+Z,QAAU,2GAOpB,MAAMyQ,EAAQzqB,SAAS6V,cAAc,SACrC4U,EAAMtQ,YAAcmQ,EACpBG,EAAMxqB,MAAMkoB,SAAW,OACvBsC,EAAMxqB,MAAMyqB,WAAa,MACzBF,EAAIpR,YAAYqR,GAEhB,MAAME,EAAS3qB,SAAS6V,cAAc,UACtC8U,EAAOrB,QAAQsB,YAAcnwB,EAC7BkwB,EAAO1qB,MAAM4qB,WAAa,UAC1BF,EAAO1qB,MAAMrM,MAAQ,OAErB81B,EAASxvB,QAAQpG,IACf,MAAMg3B,EAAS9qB,SAAS6V,cAAc,UACtCiV,EAAO1uB,MAAQtI,EAAQsG,GACvB0wB,EAAO3Q,YAAcrmB,EAAQuD,MAAQvD,EAAQsG,GACzCtG,EAAQi3B,cACVD,EAAO5Q,MAAQpmB,EAAQi3B,aAEzBJ,EAAOvR,YAAY0R,KAGjBP,GAAcb,EAAS/jB,KAAK7R,GAAWA,EAAQsG,KAAOmwB,KACxDI,EAAOvuB,MAAQmuB,GAGjBI,EAAO1pB,iBAAiB,SAAWC,IACjCjP,KAAK+4B,yBAAyBvwB,EAAMyG,EAAMwI,OAAOtN,SAGnDouB,EAAIpR,YAAYuR,GAEhB,MAAMI,EAAc/qB,SAAS6V,cAAc,OAmB3C,OAlBAkV,EAAYrM,UAAY,sBACxBqM,EAAY5Q,YAAcloB,KAAKg5B,gBAAgBxwB,EAAMkwB,EAAOvuB,QAAQ2uB,aAAe,GACnFA,EAAY9qB,MAAMkoB,SAAW,OAC7B4C,EAAY9qB,MAAMpC,QAAU,OAC5BktB,EAAY9qB,MAAMirB,WAAa,MAC/BH,EAAY9qB,MAAMkrB,UAAY,OAC9BX,EAAIpR,YAAY2R,GAEhBJ,EAAO1pB,iBAAiB,SAAU,KAChC8pB,EAAY5Q,YAAcloB,KAAKg5B,gBAAgBxwB,EAAMkwB,EAAOvuB,QAAQ2uB,aAAe,KAGxE,UAATtwB,EACFxI,KAAK8wB,mBAAqB4H,EAE1B14B,KAAK+wB,mBAAqB2H,EAGrBH,CACT,CAEA,wBAAAQ,CAAyBvwB,EAAM2jB,GAChB,UAAT3jB,EACFxI,KAAK2xB,oBAAsBxF,EAE3BnsB,KAAK4xB,oBAAsBzF,EAG7B,MAAMgN,EAAOn5B,KAAKg5B,gBAAgBxwB,EAAM2jB,GAClC2M,EAAuB,UAATtwB,EAChBxI,KAAK8wB,oBAAoBsI,eAAe5L,cAAc,wBACtDxtB,KAAK+wB,oBAAoBqI,eAAe5L,cAAc,wBAEtDsL,IACFA,EAAY5Q,YAAciR,GAAML,aAAe,GAEnD,CAEA,iBAAAnC,GACE,MAAM0C,EAAar5B,KAAK2xB,qBAAuB3xB,KAAK2F,qBAC9C2zB,EAAat5B,KAAK4xB,qBAAuB5xB,KAAK4F,qBAEpD,GAAIyzB,EAAY,CACd,IACEvH,aAAagG,QAAQ/H,EAA2BsJ,EAClD,CAAE,MAAOn4B,GACPf,QAAQgB,KAAK,gDAAiDD,EAChE,CACAlB,KAAK2F,qBAAuB0zB,EAC5Br5B,KAAK+G,cAAcmlB,gBAAgBmN,EACrC,CAEA,GAAIC,EAAY,CACd,IACExH,aAAagG,QAAQ9H,EAA2BsJ,EAClD,CAAE,MAAOp4B,GACPf,QAAQgB,KAAK,gDAAiDD,EAChE,CACAlB,KAAK4F,qBAAuB0zB,EAC5Bt5B,KAAK+G,cAAcslB,gBAAgBiN,EACrC,CAEA,MAAMC,EAAYv5B,KAAKg5B,gBAAgB,QAASK,GAC1CG,EAAYx5B,KAAKg5B,gBAAgB,QAASM,GAE5CC,GACFv5B,KAAK6J,UAAU,eAAe0vB,EAAUn0B,eAAgB,UAEtDo0B,GACFx5B,KAAK6J,UAAU,cAAc2vB,EAAUp0B,eAAgB,UAGzDpF,KAAKq2B,mBACP,CAEA,wBAAAY,CAAyBwC,GACnBz5B,KAAKoxB,4BACPpxB,KAAKoxB,0BAA0BiE,UAAYoE,EAC3Cz5B,KAAKoxB,0BAA0BpjB,MAAMpC,QAAU6tB,EAAU,IAAM,MAC/Dz5B,KAAKoxB,0BAA0BpjB,MAAMC,OAASwrB,EAAU,UAAY,cAExE,CAEA,sBAAA3C,GACE92B,KAAK2xB,oBAAsB3xB,KAAK2F,qBAChC3F,KAAK4xB,oBAAsB5xB,KAAK4F,qBAE5B5F,KAAK8wB,oBAAsB9wB,KAAK2F,uBAClC3F,KAAK8wB,mBAAmB3mB,MAAQnK,KAAK2F,sBAEnC3F,KAAK+wB,oBAAsB/wB,KAAK4F,uBAClC5F,KAAK+wB,mBAAmB5mB,MAAQnK,KAAK4F,sBAGnC5F,KAAKkxB,wBAA0BlxB,KAAKkxB,uBAAuBwI,kBAAoB,GACjF15B,KAAKo3B,yBAET,CAEA,eAAA4B,CAAgBxwB,EAAM2jB,GAEpB,OADsB,UAAT3jB,EAAmBxI,KAAK4wB,uBAAyB5wB,KAAK6wB,wBACvD8I,KAAK93B,GAAWA,EAAQsG,KAAOgkB,IAAc,IAC3D,CAEA,mCAAA8F,GACOjyB,KAAK+G,eAGV/G,KAAK+G,aAAamlB,gBAAgBlsB,KAAK2F,sBACvC3F,KAAK+G,aAAaslB,gBAAgBrsB,KAAK4F,sBACzC,CAEA,0BAAAwwB,GAiBE,GAhBIp2B,KAAKsxB,sBACPtxB,KAAKsxB,oBAAoBtjB,MAAM2a,WAAa3oB,KAAKmyB,WAC7C,wBACA,6BAGFnyB,KAAKuxB,eACPvxB,KAAKuxB,aAAavjB,MAAM2a,WAAa3oB,KAAKmyB,WACtC,yBACA,4BACJnyB,KAAKuxB,aAAavjB,MAAM4rB,OAAS55B,KAAKmyB,WAClC,qCACA,qCACJnyB,KAAKuxB,aAAavjB,MAAMvC,MAAQzL,KAAKmyB,WAAa,UAAY,WAG5DnyB,KAAKixB,sBAAuB,CAC9B,MAAMzoB,EAAOxI,KAAKixB,sBAAsBoG,SAASC,WAC3CuC,EAAuB,UAATrxB,EACfxI,KAAKmyB,WAAa,UAAY,UAC9BnyB,KAAKmyB,WAAa,2BAA6B,yBACpDnyB,KAAKixB,sBAAsBjjB,MAAMvC,MAAQouB,CAC3C,CAEA,GAAI75B,KAAKgxB,yBAA0B,CAClBhxB,KAAKgxB,yBAAyB8I,iBAAiB,SACvD7xB,QAAQuwB,IACbA,EAAMxqB,MAAMvC,MAAQzL,KAAKoyB,eACrB,UACCpyB,KAAKmyB,WAAa,2BAA6B,0BAGtCnyB,KAAKgxB,yBAAyB8I,iBAAiB,UACvD7xB,QAAQywB,IACdA,EAAO1qB,MAAM2a,WAAa3oB,KAAKoyB,eAC3B,4BACCpyB,KAAKmyB,WAAa,2BAA6B,2BACpDuG,EAAO1qB,MAAM4rB,OAAS55B,KAAKoyB,eACvB,qCACCpyB,KAAKmyB,WAAa,sCAAwC,qCAC/DuG,EAAO1qB,MAAMvC,MAAQzL,KAAKoyB,eACtB,UACCpyB,KAAKmyB,WAAa,UAAY,UACnCuG,EAAO1qB,MAAM+rB,QAAU,YACvBrB,EAAO1qB,MAAMgsB,aAAe,OAC5BtB,EAAO1qB,MAAMkoB,SAAW,OACxBwC,EAAO1qB,MAAMisB,QAAU,OACvBvB,EAAO1qB,MAAMksB,UAAYl6B,KAAKoyB,eAC1B,qCACCpyB,KAAKmyB,WACJ,oCACA,wCAGanyB,KAAKgxB,yBAAyB8I,iBAAiB,wBACvD7xB,QAAQkyB,IACnBA,EAAKnsB,MAAMvC,MAAQzL,KAAKoyB,eACpB,wBACCpyB,KAAKmyB,WAAa,2BAA6B,yBAExD,CAEInyB,KAAKmxB,6BACPnxB,KAAKmxB,2BAA2BnjB,MAAM2a,WAAa3oB,KAAKoyB,eACpD,4BACCpyB,KAAKmyB,WACJ,4BACA,2BACNnyB,KAAKmxB,2BAA2BnjB,MAAM4rB,OAAS55B,KAAKoyB,eAChD,qCACCpyB,KAAKmyB,WACJ,qCACA,qCACNnyB,KAAKmxB,2BAA2BnjB,MAAMvC,MAAQzL,KAAKoyB,eAC/C,UACCpyB,KAAKmyB,WAAa,UAAY,UACnCnyB,KAAKmxB,2BAA2BnjB,MAAMksB,UAAYl6B,KAAKoyB,eACnD,mCACCpyB,KAAKmyB,WACJ,oCACA,oCAGJnyB,KAAKqxB,8BACPrxB,KAAKqxB,4BAA4BrjB,MAAM4rB,OAAS55B,KAAKoyB,eACjD,qCACCpyB,KAAKmyB,WACJ,qCACA,qCACNnyB,KAAKqxB,4BAA4BrjB,MAAMvC,MAAQzL,KAAKoyB,eAChD,yBACCpyB,KAAKmyB,WAAa,4BAA8B,0BAGnDnyB,KAAKoxB,4BACPpxB,KAAKoxB,0BAA0BpjB,MAAM2a,WAAa3oB,KAAKoyB,eACnD,4CACCpyB,KAAKmyB,WACJ,4BAA8BnyB,KAAKoyB,eAAiB,mBAAqB,oBAAsB,IAC/F,4CACNpyB,KAAKoxB,0BAA0BpjB,MAAMksB,UAAYl6B,KAAKoyB,eAClD,qCACCpyB,KAAKmyB,WACJ,sCACA,wCAEV,CAKA,uBAAAgC,GACE,MAAMnM,EAAYja,SAAS6V,cAAc,OACzCoE,EAAUyE,UAAY,sBACtBzE,EAAUha,MAAM+Z,QAAU,8JAMV/nB,KAAKoyB,eACf,+EACCpyB,KAAKmyB,WACJ,wEACA,2GACcnyB,KAAKoyB,eACrB,0BACCpyB,KAAKmyB,WAAa,2BAA6B,kKA+FtD,OAjFAnyB,KAAKo6B,iBAAmB,CAAA,EAPV,CACZ,CAAEjwB,MAAO,WAAYquB,MAAO,WAAY5C,KAAM,KAC9C,CAAEzrB,MAAO,SAAUquB,MAAO,SAAU5C,KAAM,MAC1C,CAAEzrB,MAAO,SAAUquB,MAAO,SAAU5C,KAAM,MAC1C,CAAEzrB,MAAO,SAAUquB,MAAO,SAAU5C,KAAM,QAKtC3tB,QAAQoyB,IACZ,MAAMnrB,EAASnB,SAAS6V,cAAc,OACtC1U,EAAOud,UAAY,eAAe4N,EAAKlwB,QACvC+E,EAAOlB,MAAM+Z,QAAU,wUAYZ/nB,KAAKoyB,eACV,UACCpyB,KAAKmyB,WAAa,2BAA6B,0IAMtD,MAAMyD,EAAO7nB,SAAS6V,cAAc,OACpCgS,EAAK1N,YAAcmS,EAAKzE,KACxBA,EAAK5nB,MAAM+Z,QAAU,4EAGT/nB,KAAKmyB,WACX,mDACA,qGAIN,MAAMqG,EAAQzqB,SAAS6V,cAAc,QACrC4U,EAAMtQ,YAAcmS,EAAK7B,MAGzB,MAAM8B,EAAYvsB,SAAS6V,cAAc,OACzC0W,EAAU7N,UAAY,aACtB6N,EAAUpS,YAAc,OACxBoS,EAAUtsB,MAAM+Z,QAAU,sYAgB1B7Y,EAAOiY,YAAYyO,GACnB1mB,EAAOiY,YAAYqR,GACnBtpB,EAAOiY,YAAYmT,GAGnBprB,EAAOF,iBAAiB,QAAS,KACZ,WAAfqrB,EAAKlwB,MACPnK,KAAKu6B,uBAELv6B,KAAKw6B,WAAWH,EAAKlwB,OAAO,KAIhCnK,KAAKo6B,iBAAiBC,EAAKlwB,OAAS,CAAE+E,SAAQorB,aAC9CtS,EAAUb,YAAYjY,KAIxBlP,KAAKkzB,mBAAqBlL,EAE1BhoB,KAAKw6B,WAAW,YAAY,GAErBxS,CACT,CAKA,UAAAwS,CAAWH,EAAMI,GAAW,EAAOC,EAAkB,MACnD16B,KAAK+J,YAAcswB,EAGnB12B,OAAO+mB,KAAK1qB,KAAKo6B,kBAAkBnyB,QAAQiK,IACzC,MAAMhD,OAAEA,EAAMorB,UAAEA,GAAct6B,KAAKo6B,iBAAiBloB,GACpDhD,EAAOlB,MAAMvC,MAAQzL,KAAKoyB,eACtB,UACCpyB,KAAKmyB,WAAa,2BAA6B,wBACpDjjB,EAAOlB,MAAM2a,WAAa,cAC1BzZ,EAAOlB,MAAM4rB,OAAS,wBACtB1qB,EAAOlB,MAAMof,UAAY,WACzBle,EAAOlB,MAAMksB,UAAY,OAEzBI,EAAUtsB,MAAMiZ,QAAU,OAC1BqT,EAAUtsB,MAAMpC,QAAU,MAI5B,MAAMsD,OAAEA,EAAMorB,UAAEA,GAAct6B,KAAKo6B,iBAAiBC,GAG9CM,EAAgB36B,KAAKoyB,eACvB,CACEzJ,WAAY,4EACZiR,OAAQ,mCACRM,UAAW,8EACXzuB,MAAO,WAERzL,KAAKmyB,WACJ,CACExJ,WAAY,6EACZiR,OAAQ,oCACRM,UAAW,6EACXzuB,MAAO,WAET,CACEkd,WAAY,6EACZiR,OAAQ,oCACRM,UAAW,8EACXzuB,MAAOzL,KAAKoyB,eAAiB,UAAY,WAGjDljB,EAAOlB,MAAMvC,MAAQkvB,EAAclvB,MACnCyD,EAAOlB,MAAM2a,WAAagS,EAAchS,WACxCzZ,EAAOlB,MAAM4rB,OAASe,EAAcf,OACpC1qB,EAAOlB,MAAMksB,UAAYS,EAAcT,UACvChrB,EAAOlB,MAAMof,UAAY,eAGpBqN,GAAYC,IAEfJ,EAAUtsB,MAAMiZ,QAAU,eAC1BtV,WAAW,KACT2oB,EAAUtsB,MAAMpC,QAAU,IAC1B0uB,EAAUtsB,MAAMof,UAAY,YAC3B,KAGHzb,WAAW,KACT2oB,EAAUtsB,MAAMpC,QAAU,IAC1B0uB,EAAUtsB,MAAMof,UAAY,aAC5Bzb,WAAW,KACT2oB,EAAUtsB,MAAMiZ,QAAU,QACzB,MACF,MAIAwT,GAAqB,WAATJ,EAGG,WAATA,GACTr6B,KAAK66B,iBAAiBR,IAHtBr6B,KAAK46B,eAAe1rB,GACpBlP,KAAK66B,iBAAiBR,IAMxBr6B,KAAKkK,MAAM2pB,YAAc7zB,KAAK86B,sBAAsBT,GAGhDI,GACFz6B,KAAK+6B,uBAAuBV,GAIjB,WAATA,GAAqBr6B,KAAKg7B,aAC5Bh7B,KAAKi7B,sBAELj7B,KAAKk7B,sBAIM,WAATb,GAAqBI,GACvBz6B,KAAKm7B,4BAIM,WAATd,GAAqBI,GACvBz6B,KAAKo7B,2BAIT,CAKA,cAAAR,CAAeS,GAEbA,EAAQrtB,MAAMiL,UAAY,OAG1BtH,WAAW,KACT0pB,EAAQrtB,MAAMiL,UAAY,gCACzB,IAGHtH,WAAW,KACT0pB,EAAQrtB,MAAMiL,UAAY,IACzB,KAGHjZ,KAAKs7B,sBACP,CAKA,oBAAAA,GACE,GAAIvtB,SAASilB,eAAe,8BAA+B,OAE3D,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,6BACX6F,EAAMka,YAAc,gTAOpBna,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAKA,gBAAA6sB,CAAiBR,GACf,MAAMrS,EAAYhoB,KAAKkzB,mBACvB,IAAKlL,EAAW,OAGhB,MAAMwjB,EAAaxrC,KAAKoyB,eAAiB,CACvCoJ,SAAU,0BACVC,OAAQ,0BACRzf,OAAQ,0BACR8S,OAAQ,2BACN,CACF0M,SAAU,yBACVC,OAAQ,0BACRzf,OAAQ,2BACR8S,OAAQ,4BAGJyM,EAAYiQ,EAAWnR,IAASmR,EAAWhQ,SAGjDxT,EAAUha,MAAMksB,UAAY,YAAYqB,eAAuBA,IAE/D,MAAMkQ,EAAclQ,EAAUroB,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OACnE8U,EAAUha,MAAM0a,YAAc+iB,IAAgBlQ,EAAYkQ,EAAclQ,EAGxE5pB,WAAW,KACTqW,EAAUha,MAAMksB,UAAY,GAC5BlS,EAAUha,MAAM0a,YAAc1oB,KAAKmyB,WAAa,2BAA6B,6BAC5E,IACL,CAEA,qBAAA+C,CAAsBwG,EAAU,aAC9B,MAAMC,EAAa,8QAYnB,MAAgB,cAAZD,EAEKC,EAAa,kQAUJ37B,KAAKoyB,eACf,2EACCpyB,KAAKmyB,WACJ,wEACA,+GACcnyB,KAAKoyB,eACrB,wBACCpyB,KAAKmyB,WAAa,2BAA6B,+CAC3CnyB,KAAKoyB,eACV,UACCpyB,KAAKmyB,WAAa,UAAY,gFAIhB,SAAZuJ,EAEFC,EAAa,6MAQJ37B,KAAKmyB,WACf,6EACA,6GACgBnyB,KAAKmyB,WAAa,0BAA4B,+CACzDnyB,KAAKmyB,WAAa,UAAY,0BAdpC,CAiBT,CAKA,0BAAAyJ,GACE,MAAO,0EAGe57B,KAAKmyB,WAAa,0BAA4B,4EAEpDnyB,KAAKmyB,WAAa,0BAA4B,4CACnDnyB,KAAKmyB,WAAa,UAAY,uRAW3C,CAEA,6BAAA0J,GACE,MAAO,4IAMI77B,KAAKmyB,WAAa,2BAA6B,6GAK5D,CAKA,kBAAAwC,GAEE30B,KAAKkK,MAAM8D,MAAMpM,OAAS,OAG1B,MAMMk6B,EAAYt0B,KAAKqJ,IAAI7Q,KAAKkK,MAAM6xB,aAHpB,IAMlB/7B,KAAKkK,MAAM8D,MAAMpM,OAASk6B,EAAY,KAGlC97B,KAAKkK,MAAM6xB,aATG,IAUhB/7B,KAAKkK,MAAM8D,MAAMguB,UAAY,OAEzBh8B,KAAK+zB,eACP/zB,KAAK+zB,aAAa/lB,MAAMiZ,QAAU,UAGpCjnB,KAAKkK,MAAM8D,MAAMguB,UAAY,SAEzBh8B,KAAK+zB,eACP/zB,KAAK+zB,aAAa/lB,MAAMiZ,QAAU,QAGxC,CAKA,iBAAA2N,GACE,MAAM1qB,EAAQlK,KAAKkK,MAAMC,MAAMiJ,OAC/B,IAAKlJ,EAEH,YADAlK,KAAKw6B,WAAW,YAAY,GAI9B,MAAMyB,EAAcj8B,KAAKk8B,mBAAmBhyB,GAGnB,WAArBlK,KAAK+J,aAAiD,WAArB/J,KAAK+J,aAI1C/J,KAAKw6B,WAAWyB,EAAYzzB,MAAM,EAAOyzB,EAAYvB,gBACvD,CAKA,kBAAAwB,CAAmBtmB,EAAM81B,GACvB,MAAMC,EAAc/1B,EAAKxC,OAMzB,GAJApT,KAAKmrB,SAAS,0BAA0BvV,MACxC5V,KAAKmrB,SAAS,wBAAuBugB,EAAoB,MAAQ,QAG5DC,EACH,MAAO,CAAEnjC,KAAM,QAASi0B,OAAQ,UAIlC,MAAMN,EAAYn8B,KAAKo8B,gBAAgBxmB,GAGjCymB,EAAiB,CACrB,CAAEjoB,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,OAAQnQ,QAAS,QAC5B,CAAEmQ,QAAS,UAAWnQ,QAAS,UAC/B,CAAEmQ,QAAS,UAAWnQ,QAAS,UAC/B,CAAEmQ,QAAS,SAAUnQ,QAAS,SAC9B,CAAEmQ,QAAS,SAAUnQ,QAAS,UAGhC,IAAK,MAAMmQ,QAAEA,EAAOnQ,QAAEA,KAAao4B,EACjC,GAAIjoB,EAAQF,KAAK0B,GAEf,OADA5V,KAAKmrB,SAAS,6BAA6BlnB,KACpC,CACLuE,KAAM,SACNg0B,WAAY,GACZC,OAAQ,aACRC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBjC,gBAAiBz2B,EACjB2nC,aAAa,GAMnB,MAAMrP,EAAmB,CACvB,CAAEnoB,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,OAAQnQ,QAAS,QAC5B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,KAAMnQ,QAAS,MAC1B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,MAAOnQ,QAAS,OAC3B,CAAEmQ,QAAS,UAAWnQ,QAAS,UAC/B,CAAEmQ,QAAS,YAAanQ,QAAS,YACjC,CAAEmQ,QAAS,QAASnQ,QAAS,QAC7B,CAAEmQ,QAAS,QAASnQ,QAAS,SAG/B,IAAK,MAAMmQ,QAAEA,EAAOnQ,QAAEA,KAAas4B,EACjC,GAAInoB,EAAQF,KAAK0B,GAEf,OADA5V,KAAKmrB,SAAS,+BAA+BlnB,KACtC,CACLuE,KAAM,WACNg0B,WAAYL,EAAUK,WACtBC,OAAQ,aACRC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBjC,gBAAiBz2B,EACjB2nC,aAAa,GAMnB,MAiBMC,EAjBiB,CACrB,aACA,UACA,QACA,QACA,QACA,cACA,QACA,QACA,UACA,SACA,oCACA,gCACA,2EACA,wEAG2Cn4B,KAAKU,GAAWA,EAAQF,KAAK0B,IAC1E,GAAIi2B,EAEF,OADA7rC,KAAKmrB,SAAS,sCACP,CACL3iB,KAAM,SACNg0B,WAAY,GACZC,OAAQ,YACRC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBiP,aAAa,EACbE,mBAAmB,GAKvB,GAAIJ,GAAqBC,IAElB,0BAA0Bz3B,KAAK0B,GAElC,OADA5V,KAAKmrB,SAAS,wCACP,CACL3iB,KAAM,SACNg0B,WAAY,GACZC,OAAQ,iBACRC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBiP,aAAa,GAMnB,MACMG,EAA2B,oEAEjC,MAH+B,oSAGJ73B,KAAK0B,IAC9B5V,KAAKmrB,SAAS,sCACP,CACL3iB,KAAM,SACNg0B,WAAY,GACZC,OAAQ,aACRC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBiP,aAAcF,EACdI,kBAAmBD,GAAyBE,EAAyB73B,KAAK0B,MAK9E5V,KAAKmrB,SAAS,kCACP,CACL3iB,KAAM,WACNg0B,WAAYL,EAAUK,WACtBC,OAAQ,gBACRC,UAAWP,EAAU3zB,KACrBm0B,sBAAsB,EACtBiP,aAAa,GAEjB,CAMA,qBAAAI,GAwCE,MAAO,CAtCL,CAAE53B,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,UACtC,CAAE4L,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,UACtC,CAAE4L,QAAS,MAAOnQ,QAAS,MAAOuE,KAAM,UACxC,CAAE4L,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,UACtC,CAAE4L,QAAS,MAAOnQ,QAAS,MAAOuE,KAAM,UACxC,CAAE4L,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,UACtC,CAAE4L,QAAS,OAAQnQ,QAAS,OAAQuE,KAAM,UAC1C,CAAE4L,QAAS,UAAWnQ,QAAS,SAAUuE,KAAM,UAC/C,CAAE4L,QAAS,UAAWnQ,QAAS,SAAUuE,KAAM,UAC/C,CAAE4L,QAAS,SAAUnQ,QAAS,QAASuE,KAAM,UAC7C,CAAE4L,QAAS,SAAUnQ,QAAS,QAASuE,KAAM,UAI7C,CAAE4L,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,UACtC,CAAE4L,QAAS,OAAQnQ,QAAS,OAAQuE,KAAM,UAC1C,CAAE4L,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,UACtC,CAAE4L,QAAS,MAAOnQ,QAAS,MAAOuE,KAAM,UACxC,CAAE4L,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,UACtC,CAAE4L,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,UACtC,CAAE4L,QAAS,QAASnQ,QAAS,OAAQuE,KAAM,UAC3C,CAAE4L,QAAS,UAAWnQ,QAAS,SAAUuE,KAAM,UAC/C,CAAE4L,QAAS,UAAWnQ,QAAS,SAAUuE,KAAM,UAC/C,CAAE4L,QAAS,QAASnQ,QAAS,OAAQuE,KAAM,UAI3C,CAAE4L,QAAS,MAAOnQ,QAAS,MAAOuE,KAAM,YACxC,CAAE4L,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,YACtC,CAAE4L,QAAS,KAAMnQ,QAAS,KAAMuE,KAAM,YACtC,CAAE4L,QAAS,MAAOnQ,QAAS,MAAOuE,KAAM,YACxC,CAAE4L,QAAS,MAAOnQ,QAAS,MAAOuE,KAAM,YACxC,CAAE4L,QAAS,UAAWnQ,QAAS,SAAUuE,KAAM,YAC/C,CAAE4L,QAAS,YAAanQ,QAAS,WAAYuE,KAAM,YACnD,CAAE4L,QAAS,QAASnQ,QAAS,OAAQuE,KAAM,YAC3C,CAAE4L,QAAS,QAASnQ,QAAS,OAAQuE,KAAM,YAI/C,CAKA,wBAAA+iC,GA0CA,CAKA,sBAAAU,CAAuBr2B,EAAMs2B,GAE3BlsC,KAAKmsC,2BAGLnsC,KAAKkrC,iBAAmBn9B,SAAS6V,cAAc,OAC/C5jB,KAAKkrC,iBAAiBze,UAAY,4BAGlC,MAAM2f,EAAgB7rC,OAAO8rC,iBAAiBrsC,KAAKkK,OAE9ClK,KAAKmrC,oBACRnrC,KAAKssC,4BAEPtsC,KAAKkrC,iBAAiBl9B,MAAM+Z,QAAU,6OAUrBqkB,EAAcxT,iCAChBwT,EAAclW,iCACZkW,EAAc3T,mCACd2T,EAAcnT,sCACXmT,EAAcG,kCACrBH,EAAcrS,2BACfqS,EAAcI,uIAQ1B,IAAIC,EAAkB,GAClBC,EAAY,EAEhB,IAAK,MAAMj2B,KAASy1B,EAAS,CAE3BO,GAAmBzsC,KAAK2sC,WAAW/2B,EAAK4uB,UAAUkI,EAAWj2B,EAAMm2B,QAGnE,MAAMnhC,EAAQzL,KAAK6sC,gBAAgBp2B,EAAMjO,MACzCikC,GAAmB,uBAAuBhhC,4DAAgEA,WAAeA,qDAAyDzL,KAAK2sC,WAAWl2B,EAAMxS,kBAExMyoC,EAAYj2B,EAAMq2B,GACpB,CAGAL,GAAmBzsC,KAAK2sC,WAAW/2B,EAAK4uB,UAAUkI,IAElD1sC,KAAKkrC,iBAAiB3iB,UAAYkkB,EAGlCzsC,KAAKkK,MAAM8D,MAAM2a,WAAa,cAC9B3oB,KAAKkK,MAAM8D,MAAMwhB,gBAAkB,cACnCxvB,KAAKkK,MAAM8D,MAAM++B,gBAAkB,OACnC/sC,KAAKkK,MAAM8D,MAAMvC,MAAQzL,KAAKgtC,oBAG9BhtC,KAAK2zB,aAAawJ,aAAan9B,KAAKkrC,iBAAkBlrC,KAAKkK,MAC7D,CAKA,eAAA2iC,CAAgBrkC,GACd,MA71D4B,SA81D9B,CAEA,iBAAAwkC,GACE,OAAIhtC,KAAKoyB,eACA,UAEFpyB,KAAKmyB,WAAa,UAAY,SACvC,CAEA,yBAAAma,GACE,IAAKtsC,KAAKkK,MACR,OAEF,MAAMkiC,EAAgB7rC,OAAO8rC,iBAAiBrsC,KAAKkK,OACnDlK,KAAKmrC,mBAAqB,CACxBxiB,WAAYyjB,EAAczjB,WAC1BokB,gBAAiBX,EAAcW,gBAC/Bvd,gBAAiB4c,EAAc5c,gBAC/B/jB,MAAO2gC,EAAc3gC,MAEzB,CAKA,wBAAA0gC,GACMnsC,KAAKkrC,mBACPlrC,KAAKkrC,iBAAiB3gC,SACtBvK,KAAKkrC,iBAAmB,MAItBlrC,KAAKkK,QACHlK,KAAKmrC,oBACPnrC,KAAKkK,MAAM8D,MAAM2a,WAAa3oB,KAAKmrC,mBAAmBxiB,WACtD3oB,KAAKkK,MAAM8D,MAAM++B,gBAAkB/sC,KAAKmrC,mBAAmB4B,gBAC3D/sC,KAAKkK,MAAM8D,MAAMwhB,gBAAkBxvB,KAAKmrC,mBAAmB3b,gBAC3DxvB,KAAKkK,MAAM8D,MAAMvC,MAAQzL,KAAKmrC,mBAAmB1/B,QAEjDzL,KAAKkK,MAAM8D,MAAM2a,WAAa,GAC9B3oB,KAAKkK,MAAM8D,MAAM++B,gBAAkB,GACnC/sC,KAAKkK,MAAM8D,MAAMwhB,gBAAkB,GACnCxvB,KAAKkK,MAAM8D,MAAMvC,MAAQ,IAG/B,CAKA,UAAAkhC,CAAW/2B,GACT,MAAMq3B,EAAMl/B,SAAS6V,cAAc,OAEnC,OADAqpB,EAAI/kB,YAActS,EACXq3B,EAAI1kB,SACb,CAKA,eAAA6T,CAAgBxmB,GAWd,MAVsB,CACpB,iBACA,qBAQgBlC,KAAKU,GAAWA,EAAQF,KAAK0B,IACtC,CACLpN,KAAM,QACNg0B,WAAY,GACZC,OAAQ,YATU,CACpB,oBACA,qCAWgB/oB,KAAKU,GAAWA,EAAQF,KAAK0B,IACtC,CACLpN,KAAM,QACNg0B,WAAY,GACZC,OAAQ,YAKL,CACLj0B,KAAM,QACNg0B,WAAY,GACZC,OAAQ,kBAEZ,CAKA,wBAAAG,CAAyBC,GACvB,MAAMr0B,KAAEA,EAAIg0B,WAAEA,EAAUC,OAAEA,GAAWI,EAejCL,EAAa,GACfx8B,KAAK88B,wBAAwBt0B,EAAMg0B,GAEnCx8B,KAAK+8B,0BASP/8B,KAAKg9B,sBACP,CAKA,uBAAAF,CAAwBG,EAAcT,GAC/Bx8B,KAAKk9B,sBACRl9B,KAAKk9B,oBAAsBnvB,SAAS6V,cAAc,OAClD5jB,KAAKk9B,oBAAoB/0B,GAAK,uBAC9BnI,KAAKk9B,oBAAoBlvB,MAAM+Z,QAAU,0UAczC/nB,KAAKgoB,UAAUmV,aAAan9B,KAAKk9B,oBAAqBl9B,KAAKkK,QAG7D,MACMkzB,EADmB,CAAC,WAAY,SAAU,UAAUroB,OAAOsoB,GAAKA,IAAMJ,GACxC,GAQpCj9B,KAAKk9B,oBAAoB3U,UAAY,oBANZ,CACvBiT,SAAU,QACVC,OAAQ,QACRzf,OAAQ,UAIoBohB,iIAM9Bp9B,KAAKk9B,oBAAoBlvB,MAAMiZ,QAAU,QAGzCjnB,KAAKk9B,oBAAoBrU,QAAU,KACjC7oB,KAAK+J,YAAcqzB,EACnBp9B,KAAK+8B,0BACL/8B,KAAKs9B,uBAAuBF,EAAY,IAE5C,CAKA,uBAAAL,GACM/8B,KAAKk9B,sBACPl9B,KAAKk9B,oBAAoBlvB,MAAMiZ,QAAU,OAE7C,CAKA,sBAAAqW,CAAuBjD,EAAMmC,GAe7B,CAKA,oBAAAQ,GAGEh9B,KAAKu9B,gBAAiB,CACxB,CAKA,mBAAAC,GACE,MAAMxV,EAAYja,SAAS6V,cAAc,OACzCoE,EAAUha,MAAM+Z,QAAU,wEAS1B,MAAMkN,EAAWlnB,SAAS6V,cAAc,UAQxC,OAPAqR,EAAS1M,UAAY,SACrB0M,EAASjnB,MAAM+Z,QAAU/nB,KAAKy9B,sBAAsB,UACpDxI,EAASjmB,iBAAiB,QAAS,IAAMhP,KAAK6mB,YAG9CmB,EAAUb,YAAY8N,GAEfjN,CACT,CAKA,kBAAAoL,GACE,MAAMsK,EAAY,CAChB,eAAgB,6BAChB,cAAe,4BACf,YAAa,0BACb,WAAY,yBACZ30B,OAAU,0DA0BN0nB,EAAQzwB,KAAKoyB,eAPW,CAC5BzJ,WAAY,wEACZgV,eAAgB,4BAChB/D,OAAQ,kCACRM,UAAW,8GAGgDl6B,KAAKmyB,WAtBxC,CACxBxJ,WAAY,yEACZgV,eAAgB,4BAChB/D,OAAQ,oCACRM,UAAW,+GAGc,CACzBvR,WAAY,gFACZgV,eAAgB,4BAChB/D,OAAQ,qCACRM,UAAW,6GAab,MAAO,mCAEHwD,EAAU19B,KAAKe,OAAOmG,WAAaw2B,EAAU,2DAEjC19B,KAAKe,OAAOyvB,mCACZC,EAAM9H,8BACV8H,EAAMmJ,qDAEP55B,KAAKmyB,WAAa,UAAY,gNAKzB1B,EAAMyJ,sCACDzJ,EAAMkN,mDACElN,EAAMkN,sIAKrC,CAEA,eAAAC,GAIE,MAAO,oXAYT,CAEA,eAAApK,GAIE,OAFAxzB,KAAK69B,qBAEE,sEAGS79B,KAAKmyB,WAAa,4BAA8B,wDAC1CnyB,KAAKmyB,WAAa,4BAA8B,uRAUjDnyB,KAAKmyB,WAAa,oDAAsD,gDAE/F,CAKA,kBAAA0L,GACE,GAAI9vB,SAASilB,eAAe,2BAA4B,OAExD,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,0BACX6F,EAAMka,YAAc,uJAMFloB,KAAKmyB,WAAa,2BAA6B,wIAK/CnyB,KAAKmyB,WAAa,2BAA6B,yLAM/CnyB,KAAKmyB,WAAa,2BAA6B,0jEAiFjEpkB,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAEA,cAAA8lB,GAEE,MAkBMrD,EAAQzwB,KAAKoyB,eANW,CAC5BzJ,WAAY,wEACZiR,OAAQ,kCACRM,UAAW,4EAGgDl6B,KAAKmyB,WAlBxC,CACxBxJ,WAAY,wEACZiR,OAAQ,qCACRM,UAAW,6EAGc,CACzBvR,WAAY,8EACZiR,OAAQ,qCACRM,UAAW,0EAWb,MAAO,sEAGSzJ,EAAM9H,8BACV8H,EAAMmJ,qDAEP55B,KAAKoyB,eAAiB,UAAapyB,KAAKmyB,WAAa,UAAY,qRAQ5D1B,EAAMyJ,wCACCl6B,KAAKmyB,WAAa,2BAA6B,4JAOxE,CAEA,qBAAAsL,CAAsBj1B,GAuDpB,MAAO,sNAtDQ,CACbs1B,QAAS99B,KAAKoyB,eAAiB,+QAO3B,8KAOJ2L,UAAW/9B,KAAKoyB,eAAiB,2QAS7B,oPASJ4L,OAAQh+B,KAAKoyB,eAAiB,wQAS1B,0QAoBK5pB,UAEb,CAEA,mBAAAy1B,CAAoBC,EAAU7D,GAQ5B,MAAO,6GAKI6D,EAAW,QAAU,kDAChBA,EAZG,CACjB1C,SAAU,4CACVC,OAAQ,4CACRzf,OAAQ,6CAS4Bqe,GAAQ,oLAQhD,CAKA,UAAA7H,GAEEzkB,SAASiB,iBAAiB,UAAYge,IAEpC,GAAIA,EAAE9a,MAAQlS,KAAKe,OAAOwvB,cAGxB,OAFAvD,EAAEzb,sBACFvR,KAAKw3B,SAQHx3B,KAAKmwB,WAAuB,WAAVnD,EAAE9a,KACtBlS,KAAKu0B,OAIHv0B,KAAKmwB,WAAanD,EAAEmR,UACR,MAAVnR,EAAE9a,KAAgB8a,EAAEoR,UAGH,MAAVpR,EAAE9a,KAA0B,MAAV8a,EAAE9a,KAAe8a,EAAEoR,YAC9CpR,EAAEzb,iBACFvR,KAAKq+B,SAJLrR,EAAEzb,iBACFvR,KAAKs+B,WASXt+B,KAAKkK,MAAM8E,iBAAiB,QAAS,KAC/BhP,KAAKoyB,gBACPpyB,KAAKkK,MAAM8D,MAAM0a,YAAc,UAC/B1oB,KAAKkK,MAAM8D,MAAMksB,UAAY,oCAE7Bl6B,KAAKkK,MAAM8D,MAAM0a,YAAc,UAC/B1oB,KAAKkK,MAAM8D,MAAMksB,UAAY,sCAIjCl6B,KAAKkK,MAAM8E,iBAAiB,OAAQ,KAC9BhP,KAAKoyB,gBACPpyB,KAAKkK,MAAM8D,MAAM0a,YAAc,UAC/B1oB,KAAKkK,MAAM8D,MAAMksB,UAAY,SAE7Bl6B,KAAKkK,MAAM8D,MAAM0a,YAAc,UAC/B1oB,KAAKkK,MAAM8D,MAAMksB,UAAY,SAGnC,CAKA,MAAA1C,GACMx3B,KAAKmwB,UACPnwB,KAAKu0B,OAELv0B,KAAKu+B,MAET,CAKA,IAAAA,GACEv+B,KAAKgoB,UAAUha,MAAMiZ,QAAU,OAC/BjnB,KAAKgoB,UAAUha,MAAMwwB,cAAgB,SACrCx+B,KAAKyzB,kBAAkBzlB,MAAMiZ,QAAU,OAGvCtV,WAAW,KACT,MAAM8sB,EAAgBz+B,KAAKgoB,UAAU5Y,wBACrCpP,KAAKyzB,kBAAkBzlB,MAAMsB,KAAOmvB,EAAcnvB,KAAO,KACzDtP,KAAKyzB,kBAAkBzlB,MAAMwB,IAAOivB,EAAcjvB,IAAM,GAAM,KAC9DxP,KAAKyzB,kBAAkBzlB,MAAMrM,MAAQ88B,EAAc98B,MAAQ,KAC3D3B,KAAKyzB,kBAAkBzlB,MAAMof,UAAY,QACxC,IAEHptB,KAAKmwB,WAAY,EACjBnwB,KAAKkK,MAAME,QAGPpK,KAAK0+B,wBACP1+B,KAAK0+B,sBAAsB1wB,MAAMpC,QAAU,IAC3C5L,KAAK0+B,sBAAsB1wB,MAAMuf,cAAgB,QAInDvtB,KAAKkwB,kBAAiB,EAExB,CAKA,IAAAqE,GACEv0B,KAAKgoB,UAAUha,MAAMiZ,QAAU,OAC/BjnB,KAAKyzB,kBAAkBzlB,MAAMiZ,QAAU,OACvCjnB,KAAKmwB,WAAY,EAGbnwB,KAAK0+B,wBACP1+B,KAAK0+B,sBAAsB1wB,MAAMpC,QAAU,MAC3C5L,KAAK0+B,sBAAsB1wB,MAAMuf,cAAgB,QAInDvtB,KAAKkwB,kBAAiB,GACtBlwB,KAAKmrB,SAAS,eAChB,CAKA,UAAAwT,CAAWtE,GACT,GAAIr6B,KAAK+J,cAAgBswB,EAAM,OAE/Br6B,KAAK+J,YAAcswB,EAGnBr6B,KAAKgoB,UAAU8R,iBAAiB,eAAe7xB,QAAQ22B,IACrD,MAAMV,EAAWU,EAAIvH,QAAQgD,OAASA,EACtCuE,EAAI5wB,MAAM+Z,QAAU/nB,KAAKi+B,oBAAoBC,EAAUU,EAAIvH,QAAQgD,QAIrEr6B,KAAKkK,MAAM2pB,YAAc7zB,KAAK86B,sBAAsBT,GAGpD,MAAMwE,EAAa7+B,KAAKgoB,UAAUwF,cAAc,gBAahDqR,EAAWtW,UAAY,SAZR,CACbiT,SAAU,qBACVC,OAAQ,mBACRzf,OAAQ,sBAS6Bqe,YACvCwE,EAAW7wB,MAAM2a,WAPI,CACnB6S,SAAU,4CACVC,OAAQ,4CACRzf,OAAQ,6BAIiCqe,EAG7C,CAKA,qBAAAS,CAAsBT,GACpB,MAAMyE,EAAe,CACnBtD,SAAU,uBACV1M,OAAQ,iBACR2M,OAAQ,uBACRzf,OAAQ,0BAEV,OAAO8iB,EAAazE,IAASyE,EAAatD,QAC5C,CAKA,oBAAMv4B,GACJ,MAAMC,EAAUlD,KAAKkK,MAAMC,MAAMiJ,OACjC,IAAKlQ,EAAS,OAGd,MAAMgqC,QAAsBltC,KAAKmtC,mBAAmBjqC,GAC/CgqC,EAAcE,kBAKbptC,KAAKqtC,qBAAqBnqC,EAASgqC,EAAcjR,YACzD,CAKA,4BAAM0E,CAAuBl/B,GAC3B,MAAMm0B,KACJA,EAAO,MAAK3N,MACZA,EAAQ,KAAIlV,QACZA,EAAU,eAAc6tB,YACxBA,EAAc,KAAIC,WAClBA,EAAa,QAAOC,aACpBA,EAAe,WACbr/B,EAEJ,OAAO,IAAIwjB,QAASC,IAClB,MAAM4C,EAAQ/Z,SAAS6V,cAAc,OACrCkE,EAAM9Z,MAAM+Z,QAAU,mYAetB,MAAMgZ,EAAShzB,SAAS6V,cAAc,OACtCmd,EAAO/yB,MAAM+Z,QAAU,yBACP/nB,KAAKoyB,eACf,8EACCpyB,KAAKmyB,WACJ,yEACA,6GACcnyB,KAAKoyB,eACrB,2BACCpyB,KAAKmyB,WAAa,0BAA4B,6JAK1CnyB,KAAKoyB,eACV,UACCpyB,KAAKmyB,WAAa,UAAY,oLAIrBnyB,KAAKoyB,eACf,uEACCpyB,KAAKmyB,WACJ,sEACA,gMAMR4O,EAAOxY,UAAY,gEACoCqN,0DACb51B,KAAKmyB,WAAa,UAAY,sFAClElK,kEAEmCjoB,KAAKmyB,WAAa,UAAY,8DACjEpf,iMAKc/S,KAAKmyB,WACf,wEACA,mHACgBnyB,KAAKmyB,WAAa,2BAA6B,qFAE1DnyB,KAAKmyB,WAAa,UAAY,6RAQrC0O,oHAGYC,KAAkB9gC,KAAKoyB,eAAiB,UAAY,WAC9D,4BAA8BpyB,KAAKoyB,eAAiB,mBAAqB,oBAAsB,IAC9E,YAAjB0O,EACA,4CACA,kVASqBA,KAAkB9gC,KAAKoyB,eAAiB,UAAY,WACzE,0BACiB,YAAjB0O,EACA,yBACA,qIAGFF,qCAIR9Y,EAAMX,YAAY4Z,GAClBhzB,SAAS/L,KAAKmlB,YAAYW,GAG1B9J,sBAAsB,KACpB8J,EAAM9Z,MAAMpC,QAAU,IACtBm1B,EAAO/yB,MAAMof,UAAY,WACzB2T,EAAO/yB,MAAMpC,QAAU,MAIzBm1B,EAAOvT,cAAc,eAAe3E,QAAU,KAC5C7oB,KAAKghC,wBAAwBlZ,GAC7B5C,GAAQ,IAGV6b,EAAOvT,cAAc,gBAAgB3E,QAAU,KAC7C7oB,KAAKghC,wBAAwBlZ,GAC7B5C,GAAQ,IAIV,MAAM+b,EAAcjU,IACJ,WAAVA,EAAE9a,MACJlS,KAAKghC,wBAAwBlZ,GAC7B/Z,SAASigB,oBAAoB,UAAWiT,GACxC/b,GAAQ,KAGZnX,SAASiB,iBAAiB,UAAWiyB,GAGrCnZ,EAAMe,QAAWmE,IACXA,EAAEvV,SAAWqQ,IACf9nB,KAAKghC,wBAAwBlZ,GAC7B5C,GAAQ,MAIhB,CAEA,4BAAMnV,CAAuB7M,GAC3B,OAAOlD,KAAK2gC,uBAAuB,CACjC/K,KAAM,MACN3N,MAAO,QACPlV,QAAS,IAAI7P,mCACb09B,YAAa,OACbC,WAAY,QACZC,aAAc,WAElB,CAQA,SAAAj3B,CAAUkJ,EAASvK,EAAO,UAAW/G,EAAU,CAAA,GAE7C,GAAa,SAAT+G,GAA4B,aAATA,EACrB,OAAOxI,KAAK4/B,YAAY7sB,EAAStR,GAItB,UAAT+G,GAA6B,WAATA,GACtBxI,KAAKkhC,iBAAiBnuB,EAASvK,EAEnC,CAKA,WAAAo3B,CAAYuB,EAAU1/B,EAAU,IACzBzB,KAAK0zB,YAAW1zB,KAAK0zB,UAAY,IAAIluB,KAE1C,MAAMm6B,EAASl+B,EAAQk+B,QAAU,QAAQjtB,KAAKC,SAASnL,KAAKwX,SAAS/E,SAAS,IAAImnB,OAAO,EAAG,KACtFj/B,EAASV,EAAQU,QAAU,UAC3BX,EAAS2/B,EAAS3/B,QAAU2/B,EAASj+B,SAAWi+B,EAGhDE,EAAOtzB,SAAS6V,cAAc,OACpCyd,EAAK5U,UAAY,qBACjB4U,EAAKC,aAAa,eAAgB3B,GAGnB,YAAXx9B,GAAmC,eAAXA,GAAsC,aAAXA,GACrDk/B,EAAK9J,UAAUlyB,IAAI,oBAAqB,mBAI1Cg8B,EAAKrzB,MAAM+Z,QAAU/nB,KAAKuhC,sBAAsBp/B,GAEhDk/B,EAAKrzB,MAAMwzB,YAAY,UAAW,IAAK,aACvCH,EAAKrzB,MAAMwzB,YAAY,YAAa,+BAAgC,aACpEH,EAAKrzB,MAAMwzB,YAAY,SAAU,YAAa,aAE9C,MAiBMC,EAAkBzhC,KAAK0hC,mBAAmBv/B,EAAQX,EAAQC,EAAQ6iC,cAkCxE,OAjCAjD,EAAK9Y,UAAY,0CAlBD,CACdoZ,QAAS,IACTC,WAAY,KACZC,SAAU,IACVC,UAAW,IACX5gC,MAAO,KAckCiB,qEACUs/B,iBAIrDzhC,KAAKyzB,kBAAkB0J,aAAakE,EAAMrhC,KAAKyzB,kBAAkBwP,YAGjEjjC,KAAK+hC,yBAEL/hC,KAAK0zB,UAAU3nB,IAAI4zB,EAAQ,CACzBtE,QAASgG,EACTl/B,OAAQA,EACRX,OAAQA,EACRyI,eAAgBzI,EAChB0a,UAAWxJ,KAAKC,MAChBqvB,QAAS,KACT9gC,MAAO,KACP+gC,YAAa,QACbr/B,MAAO,KACPs/B,SAAU,OAIZliC,KAAKmiC,oBAAoBd,EAAM1B,GAG/B3/B,KAAKoiC,oBAAoBf,GAGzBrhC,KAAKstC,sBAEE3N,CACT,CAKA,mBAAA2N,GACE,GAAIv/B,SAASyf,cAAc,6BAA8B,OAEzD,MAAM+f,EAAax/B,SAAS6V,cAAc,SAC1C2pB,EAAWplC,GAAK,2BAChBolC,EAAWrlB,YAAc,qZAiBjBloB,KAAKmyB,WAAa,2BAA6B,u3BAiCvDpkB,SAASgf,KAAK5F,YAAYomB,EAC5B,CAKA,cAAA/M,CAAeb,EAAQx9B,EAAQV,EAAU,CAAA,GACvC,IAAKzB,KAAK0zB,YAAc1zB,KAAK0zB,UAAU3X,IAAI4jB,GAAS,OAEpD,MAAM0C,EAAWriC,KAAK0zB,UAAUvJ,IAAIwV,GAC9B0B,EAAOgB,EAAShH,QAGtBgH,EAASlgC,OAASA,EAGH,UAAXA,GAAsBV,EAAQ6iC,eAChCjC,EAASnhC,MAAQO,EAAQ6iC,cAIZ,YAAXniC,GAAmC,eAAXA,GAAsC,aAAXA,EAErDk/B,EAAK9J,UAAUlyB,IAAI,oBAAqB,mBAGxCg8B,EAAK9J,UAAUhtB,OAAO,oBAAqB,mBAG7C,MASMk3B,EAAkBzhC,KAAK0hC,mBAAmBv/B,EAAQkgC,EAAS7gC,OAAQ6gC,EAASnhC,OAClFmgC,EAAK9Y,UAAY,0CAVD,CACdoZ,QAAS,IACTC,WAAY,KACZC,SAAU,IACVC,UAAW,IACX5gC,MAAO,KAMkCiB,qEACUs/B,iBAIrDJ,EAAKrzB,MAAM+Z,QAAU/nB,KAAKuhC,sBAAsBp/B,GAGjC,cAAXA,EACFnC,KAAKsiC,mBAAmBjB,EAAM1B,GACV,UAAXx9B,GACTnC,KAAKuiC,iBAAiBlB,EAAM1B,EAEhC,CAKA,gBAAAuB,CAAiBnuB,EAASvK,GACxB,MAAMgS,EAAQzM,SAAS6V,cAAc,OACrCpJ,EAAMiS,UAAY,kBAAkBjkB,IACpCgS,EAAMxM,MAAM+Z,QAAU,4LAOG,UAATvf,EAAmB,yBAA2B,wDAC/B,UAATA,EAAmB,yBAA2B,6CAChD,UAATA,EAAmB,UAAaxI,KAAKmyB,WAAa,UAAY,mBAEzE3X,EAAM0N,YAAcnV,EACpB/S,KAAKuzB,UAAUpM,YAAY3M,GAC3Bxa,KAAK0gC,gBACP,CAKA,iBAAAxmB,CAAkBnH,EAASvK,EAAO,QAAS/G,EAAU,CAAA,GACnD,GAAa,YAAT+G,EACF,OASF,GANa,UAATA,EACFxI,KAAK6J,UAAU,MAAMkJ,IAAW,SAEhC/S,KAAK6J,UAAU,MAAMkJ,IAAW,WAG7B/S,KAAKwtC,gBAAiB,CACzB,MAAMC,EAAU1/B,SAAS6V,cAAc,OACvC6pB,EAAQhhB,UAAY,yBACpBghB,EAAQz/B,MAAM+Z,QAAU,kfAkBxB/nB,KAAKgoB,UAAUb,YAAYsmB,GAC3BztC,KAAKwtC,gBAAkBC,CACzB,CAEA,MAAMA,EAAUztC,KAAKwtC,gBACrBC,EAAQllB,UAAY,GAEpB,MAAMmlB,EAAmB,UAATllC,EACVmgB,EAAa+kB,EACd1tC,KAAKmyB,WAAa,0BAA4B,0BAC9CnyB,KAAKmyB,WAAa,2BAA6B,2BAC9CyH,EAAS8T,EACX,oCACA,qCACEjiC,EAAQiiC,EACT1tC,KAAKmyB,WAAa,UAAY,UAC9BnyB,KAAKmyB,WAAa,UAAY,UAEnCsb,EAAQz/B,MAAM2a,WAAaA,EAC3B8kB,EAAQz/B,MAAM4rB,OAASA,EACvB6T,EAAQz/B,MAAMvC,MAAQA,EAEtB,MAAMkiC,EAAc5/B,SAAS6V,cAAc,QAK3C,GAJA+pB,EAAYzlB,YAAcnV,EAC1B46B,EAAY3/B,MAAM4/B,KAAO,IACzBH,EAAQtmB,YAAYwmB,GAEhBlsC,EAAQosC,SAAWv/B,MAAMC,QAAQ9M,EAAQosC,UAAYpsC,EAAQosC,QAAQ/lC,OAAS,EAAG,CACnF,MAAMgmC,EAAmB//B,SAAS6V,cAAc,OAChDkqB,EAAiB9/B,MAAM+Z,QAAU,sDAKjCtmB,EAAQosC,QAAQ5lC,QAAQ8lC,IACtB,MAAM7+B,EAASnB,SAAS6V,cAAc,UACtC1U,EAAO1G,KAAO,SACd0G,EAAOgZ,YAAc6lB,EAAOvV,MAC5BtpB,EAAOlB,MAAM+Z,QAAU,+IAKP2lB,EAAU,0BAA4B,4IAKtDx+B,EAAOF,iBAAiB,aAAc,KACpCE,EAAOlB,MAAM2a,WAAa+kB,EAAU,0BAA4B,6BAElEx+B,EAAOF,iBAAiB,aAAc,KACpCE,EAAOlB,MAAM2a,WAAa+kB,EAAU,0BAA4B,6BAElEx+B,EAAOF,iBAAiB,QAAS,KACD,mBAAnB++B,EAAOC,SAChBD,EAAOC,YAGXF,EAAiB3mB,YAAYjY,KAG/Bu+B,EAAQtmB,YAAY2mB,EACtB,CAEI9tC,KAAKorC,yBACP9H,aAAatjC,KAAKorC,wBAClBprC,KAAKorC,uBAAyB,MAGhCqC,EAAQz/B,MAAMuf,cAAgB,OAC9BkgB,EAAQz/B,MAAMpC,QAAU,IACxB6hC,EAAQz/B,MAAMof,UAAY,gBAE1BptB,KAAKqrC,gBAAkBoC,EAEV,SAATjlC,IACFxI,KAAKorC,uBAAyBz5B,WAAW,IAAM3R,KAAKsrC,qBAAsB7pC,EAAQiB,UAAY,KAElG,CAKA,kBAAA4oC,GAME,GALItrC,KAAKorC,yBACP9H,aAAatjC,KAAKorC,wBAClBprC,KAAKorC,uBAAyB,MAG5BprC,KAAKqrC,gBAAiB,CACxB,MAAMhQ,EAAUr7B,KAAKqrC,gBACrBhQ,EAAQrtB,MAAMuf,cAAgB,OAC9B8N,EAAQrtB,MAAMpC,QAAU,IACxByvB,EAAQrtB,MAAMof,UAAY,kBAC1BptB,KAAKqrC,gBAAkB,KACvB15B,WAAW,KACT0pB,EAAQ9S,UAAY,IACnB,IACL,CACF,CAKA,oBAAA0lB,GACE,GAAIlgC,SAASilB,eAAe,mBAAoB,OAEhD,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,kBACX6F,EAAMka,YAAc,4cAuBpBna,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAKA,wBAAMm/B,CAAmBjqC,GAEvB,MAAMwoC,EAAoB1rC,KAAK+G,cAAcrB,gBAAkB1F,KAAKg7B,aAC9DiB,EAAcj8B,KAAKk8B,mBAAmBh5B,EAASwoC,GAiBrD,GAfI1rC,KAAKg7B,eACPiB,EAAYzzB,KAAO,SACnByzB,EAAYS,UAAuC,UAA3B18B,KAAKg7B,aAAaxyB,KAAmB,QAAU,QACvEyzB,EAAY2P,aAAc,EAC1B3P,EAAYU,sBAAuB,EACnCV,EAAY6P,mBAAoB,EAChC7P,EAAYvB,gBAAkBuB,EAAYvB,iBAAmB,UAI3DuB,EAAYzzB,MAAQxI,KAAKw6B,YAAcyB,EAAYzzB,OAASxI,KAAK+J,aACnE/J,KAAKw6B,WAAWyB,EAAYzzB,MAAM,EAAOyzB,EAAYvB,iBAAmB,MAIjD,UAArBuB,EAAYzzB,KAEd,OADAxI,KAAKka,kBAAkB,4BAA6B,QAC7C,CAAEkzB,YAAY,EAAO3Q,OAAQ,iBAItC,GAAIR,EAAY2P,cAAgBF,EAAmB,CAIjD,OAH2B1rC,KAAK+G,eAAiBk1B,EAAY6P,mBAA0C,WAArB7P,EAAYzzB,OAwE5F,OAtBAxI,KAAKka,kBACH,oBACA,QACA,CACE2zB,QAAS,CACP,CACErV,MAAO,OACPwV,QAAS,KACPhuC,KAAKsrC,qBACLtrC,KAAKka,kBAAkB,iCAAkC,UAG7D,CACEse,MAAO,MACPwV,QAAS,KACPhuC,KAAKsrC,qBACLtrC,KAAKka,kBAAkB,2CAA4C,aAMtE,CAAEkzB,YAAY,EAAO3Q,OAAQ,sBApEpCz8B,KAAKmrB,SAAS,mDACd,IACE,MAAM+iB,QAAoBluC,KAAK+G,cAAcuP,oBAAoBpT,IACjE,OAAIgrC,GAEFluC,KAAK+G,aAAawC,aAAa2kC,GAC/BluC,KAAKka,kBAAkB,MAAMg0B,EAAY9oC,MAAQ8oC,EAAY3lC,UAAU0B,gBAAkB,oBAAqB,WAE9G0H,WAAW,IAAM3R,KAAKmuC,8BAA8BjrC,EAAS+4B,GAAc,KACpE,CAAEmR,YAAY,EAAO3Q,OAAQ,0BAGpCz8B,KAAKka,kBACH,yBACA,QACA,CACE2zB,QAAS,CACP,CACErV,MAAO,OACPwV,QAAS,KACPhuC,KAAKsrC,qBACLtrC,KAAKka,kBAAkB,iCAAkC,UAG7D,CACEse,MAAO,UACPwV,QAAS,KAEP,MAAMI,EAAapuC,KAAKquC,yBAAyBnrC,GACjDlD,KAAKkK,MAAMC,MAAQikC,EACnBpuC,KAAKsrC,qBACLtrC,KAAKka,kBAAkB,uBAAwB,gBAMlD,CAAEkzB,YAAY,EAAO3Q,OAAQ,oBAExC,CAAE,MAAOv7B,GAGP,OAFAlB,KAAKmrB,SAAS,gCAAiCjqB,GAC/ClB,KAAKka,kBAAkB,uBAAwB,SACxC,CAAEkzB,YAAY,EAAO3Q,OAAQ,eACtC,CA2BJ,CAGA,MAAO,CAAE2Q,YAAY,EAAMnR,cAC7B,CAKA,mCAAMkS,CAA8BjrC,EAAS+4B,GAG3Cj8B,KAAKsrC,2BAGCtrC,KAAKqtC,qBAAqBnqC,EAAS+4B,EAC3C,CAEA,0BAAMoR,CAAqBnqC,EAAS+4B,GAClC,MAAMyP,EAAoB1rC,KAAK+G,cAAcrB,gBAAkB1F,KAAKg7B,aAcpE,GAbKiB,IACHA,EAAcj8B,KAAKk8B,mBAAmBh5B,EAASwoC,IAG7C1rC,KAAKg7B,cACkB,WAArBh7B,KAAK+J,aACP/J,KAAKw6B,WAAW,UAAU,GAE5Bx6B,KAAK+J,YAAc,UAEnB/J,KAAK+J,YAAckyB,EAAYzzB,KAG7ByzB,EAAYU,qBAAsB,CAEpC,UADwB38B,KAAK+P,uBAAuB7M,GAGlD,YADAlD,KAAK6J,UAAU,iBAAkB,SAGrC,CAEA7J,KAAKkK,MAAMC,MAAQ,GACnBnK,KAAKsrC,qBACLtrC,KAAK+8B,0BAEL,MAAM4C,EAAS3/B,KAAK4/B,YAAY18B,EAAS,CAAEf,OAAQ,eASnD,IAAIC,EAPJpC,KAAK6/B,qBAAqB,CACxB38B,QAASA,EACTm3B,KAAMr6B,KAAK+J,YACX2yB,UAAWT,EAAYS,UACvBjqB,UAAWC,KAAKC,QAKlB,IACE,MACMmtB,EAAc,GADD9/B,KAAK+/B,cAAc//B,KAAK+J,eACP7G,IAGpC,GADAlD,KAAKmrB,SAAS,yBAA0BnrB,KAAK+J,aACpB,WAArB/J,KAAK+J,YAA0B,CAEjC,GADA/J,KAAKmrB,SAAS,qDACTnrB,KAAKg7B,aACR,MAAM,IAAI15B,MAAM,mCAElBc,QAAepC,KAAKggC,oBAAoB98B,EAC1C,MAAO,GAAIlD,KAAK+G,aACd3E,QAAepC,KAAK+G,aAAa9D,eAAe68B,OAC3C,KAAI9/B,KAAKgF,OAmCd,MAAM,IAAI1D,MAAM,sCAlChB,GAAyB,aAArBtB,KAAK+J,YAEL3H,EAD4B,UAA1B65B,EAAYS,gBACC18B,KAAKgF,OAAO3C,cAAca,EAAS,CAChDN,MAAO5C,KAAK4F,2BAAwB8V,UAGvB1b,KAAKgF,OAAOzD,cAAc2B,EAAS,CAChDrB,QAAS7B,KAAK2F,2BAAwB+V,SAGrC,GAAyB,WAArB1b,KAAK+J,YAA0B,CACxC,MAAMrE,EAAiB1F,KAAK+G,cAAcrB,eAC1C,IAAKA,EACH,MAAM,IAAIpE,MAAM,6CAElBc,QAAepC,KAAKgF,OAAOk7B,qBAAqBx6B,EAAgBxC,EAClE,MAAO,GAAyB,WAArBlD,KAAK+J,YAA0B,CACxC,MAAMrE,EAAiB1F,KAAK+G,cAAcrB,eAC1C,IAAKA,IAAmB1F,KAAK+G,cAAco5B,sBAAsBr4B,OAE/D,YADA9H,KAAK6J,UAAU,2EAA4E,UAG7F,MAAMu2B,EAAiB,OAAOl9B,8BAG9B,IAAKm9B,QAAQD,GAEX,YADApgC,KAAK6J,UAAU,kBAAmB,UAGpCzH,QAAepC,KAAKgF,OAAOs7B,cAAcp9B,EAC3C,MACEd,QAAepC,KAAKgF,OAAO/B,eAAe68B,EAI9C,CAEI19B,GAAUA,EAAOu9B,SACnB3/B,KAAKugC,kBAAkBn+B,EAAOu9B,OAAQA,GACtC3/B,KAAKswB,cAAgBluB,EAAOu9B,QAG1BA,GACF3/B,KAAKwgC,eAAeb,EAAQ,aAG1Bv9B,EAAO0H,UAIP1H,EAAOkhB,SAIPlhB,EAAO8E,SAIP+0B,EAAYS,SAGlB,CAAE,MAAOx7B,GACP,MAAMu/B,EAAgB,CACpBjF,SAAU,KAA+B,UAA1BS,EAAYS,UAAwB,KAAO,YAC1DjB,OAAQ,UACRzf,OAAQ,WAGN2jB,GACF3/B,KAAKwgC,eAAeb,EAAQ,QAAS,CAAE2E,aAAcpjC,EAAM6R,UAG7D/S,KAAK6J,UAAU,GAAG42B,EAAczgC,KAAK+J,iBAAiB7I,EAAM6R,UAAW,SACvE5S,QAAQe,MAAM,2BAA4BA,EAC5C,CAEIlB,KAAK+G,cAAgB/G,KAAK+G,aAAarB,iBAChB,WAArB1F,KAAK+J,aAAiD,WAArB/J,KAAK+J,aACxC4H,WAAW,KACT3R,KAAK+G,aAAa0C,kBACjB,MAIHzJ,KAAKe,OAAO4vB,YACd3wB,KAAK0gC,gBAET,CAKA,wBAAA2N,CAAyBnrC,GAEvB,MAAMorC,EAAW,CACf,CAAE55B,KAAM,WAAY65B,GAAI,gBACxB,CAAE75B,KAAM,WAAY65B,GAAI,gBACxB,CAAE75B,KAAM,aAAc65B,GAAI,gBAC1B,CAAE75B,KAAM,aAAc65B,GAAI,iBAG5B,IAAK,MAAM75B,KAAEA,EAAI65B,GAAEA,KAAQD,EACzB,GAAI55B,EAAKR,KAAKhR,GACZ,OAAOA,EAAQgQ,QAAQwB,EAAM65B,GAKjC,MAAO,GAAGrrC,UACZ,CAKA,iBAAAs/B,CAAkBrgC,GAChB,MAWMsgC,EAAgB,CACpBd,QAAS,2BACTC,WAAY,2BACZC,SAAU,0BACVC,UAAW,2BACX5gC,MAAO,0BAGT,MAnBmB,uBACHlB,KAAKmyB,WAAa,4BAA8B,yDAC1CnyB,KAAKmyB,WAAa,4BAA8B,oOAiBlD,0BAA0BsQ,EAActgC,IAAWsgC,EAAcd,UACvF,CAKA,qBAAAJ,CAAsBp/B,GAEpB,MAcMsuB,EAAQzwB,KAAKmyB,WAdO,CACxBxJ,WAAY,yEACZiR,OAAQ,qCACRM,UAAW,sEACXzuB,MAAO,WAGkB,CACzBkd,WAAY,gFACZiR,OAAQ,qCACRM,UAAW,qEACXzuB,MAAO,WAMH+iC,EAA4B,YAAXrsC,GAAmC,eAAXA,GAAsC,aAAXA,EAAyB,6SAa3FnC,KAAKmyB,WAAa,2BAA6B,yHAKnD,GAOJ,MAAO,8IAMS1B,EAAM9H,4IAGV8H,EAAMmJ,qDAEPnJ,EAAMhlB,0OAMDglB,EAAMyJ,sIAIlBsU,YAzBkC,YAAXrsC,GAAmC,eAAXA,GAAsC,aAAXA,EAAyB,qFAEnG,8DA4BN,CAKA,sBAAA4/B,GACE,MACMW,EAAWp0B,MAAMoG,KAAK1U,KAAKyzB,kBAAkB5rB,UAAUkN,OAAO5L,IACjEA,EAAMouB,UAAU9J,SAAS,qBAItBkV,EAAkB3iC,KAAKyzB,kBAAkBjG,cAAc,qBAK7D,GAJImV,GACFA,EAAgBp4B,SAGdm4B,EAAS56B,QAXW,EAatB46B,EAASz6B,QAAQo5B,IACfA,EAAKrzB,MAAMiZ,QAAU,aAElB,CAEgByb,EAAS/Y,MAAM,EAlBd,GAmBtB,MAAMiZ,EAAcF,EAAS56B,OAnBP,EAsBtB46B,EAASz6B,QAAQ,CAACo5B,EAAMl0B,KAEpBk0B,EAAKrzB,MAAMiZ,QADT9Z,EAvBgB,EAwBG,OAEA,SAKzB,MAAM01B,EAAU90B,SAAS6V,cAAc,OACvCif,EAAQpW,UAAY,mBAEpB,MAAMqW,EAAmB9iC,KAAKmyB,WAAa,4BAA8B,sBACnE4Q,EAAqB/iC,KAAKmyB,WAAa,2BAA6B,sBACpE6Q,EAAmBhjC,KAAKmyB,WAAa,2BAA6B,qBAExE0Q,EAAQ70B,MAAM+Z,QAAU,qKAMR+a,qGAGMC,gDAEXC,0JAMXH,EAAQta,UAAY,KAAKqa,IAGzB5iC,KAAKyzB,kBAAkBtM,YAAY0b,GAGnC,MAAMK,EAAoBljC,KAAKmyB,WAAa,4BAA8B,sBAE1E0Q,EAAQ7zB,iBAAiB,aAAc,KACrC6zB,EAAQ70B,MAAM2a,WAAaua,EAC3BL,EAAQ70B,MAAMof,UAAY,gBAG5ByV,EAAQ7zB,iBAAiB,aAAc,KACrC6zB,EAAQ70B,MAAM2a,WAAama,EAC3BD,EAAQ70B,MAAMof,UAAY,YAE9B,CACF,CAKA,mBAAA+U,CAAoBd,EAAM1B,GAIxB,GAFsB,iBAAkBp/B,QAAUs0B,UAAUsO,eAAiB,EAI3E9B,EAAKryB,iBAAiB,QAAUge,IAC9BA,EAAEzb,iBACFyb,EAAEM,kBACFttB,KAAKojC,oBAAoBzD,SAEtB,CAEL,IAAI0D,EAEJhC,EAAKryB,iBAAiB,aAAc,KAClCq0B,EAAe1xB,WAAW,KACxB3R,KAAKojC,oBAAoBzD,IACxB,OAGL0B,EAAKryB,iBAAiB,aAAc,KAC9Bq0B,GACFC,aAAaD,KAKjBhC,EAAKryB,iBAAiB,QAAUge,IAC9BA,EAAEzb,iBACFyb,EAAEM,kBACFttB,KAAKojC,oBAAoBzD,IAE7B,CACF,CAKA,mBAAAyD,CAAoBzD,GAClB,MAAM0C,EAAWriC,KAAK0zB,UAAUvJ,IAAIwV,GACpC,IAAK0C,EAAU,OAGf,MAAMkB,EAAgBx1B,SAASyf,cAAc,sBACzC+V,GACFA,EAAch5B,SAIhB,MAAMud,EAAQ9nB,KAAKwjC,sBAAsBnB,GACzCt0B,SAAS/L,KAAKmlB,YAAYW,GAG1B9J,sBAAsB,KACpB8J,EAAM9Z,MAAMpC,QAAU,IACtBkc,EAAM0F,cAAc,kBAAkBxf,MAAMof,UAAY,0BAE5D,CAKA,qBAAAoW,CAAsBnB,GACpB,MAAMva,EAAQ/Z,SAAS6V,cAAc,OACrCkE,EAAM2E,UAAY,oBAGlB,MAAMgX,EAAezjC,KAAKmyB,WAAa,qBAAuB,qBACxDuR,EAAU1jC,KAAKmyB,WAAa,yBAA2B,4BACvDwR,EAAc3jC,KAAKmyB,WAAa,2BAA6B,qBAC7DyR,EAAY5jC,KAAKmyB,WAAa,2BAA6B,qBAC3D0R,EAAa7jC,KAAKmyB,WAAa,2BAA6B,qBAElErK,EAAM9Z,MAAM+Z,QAAU,uHAMN0b,mQAYhB,MAAM/gC,EAAW2/B,EAASL,UACpBK,EAASL,QAAUK,EAASnmB,WAAa,KAAM9U,QAAQ,KACvDsL,KAAKC,MAAQ0vB,EAASnmB,WAAa,KAAM9U,QAAQ,GAGjD08B,EAAiC,YAApBzB,EAASlgC,OAAuB,MACb,gBAApBkgC,EAASlgC,OAA2B,MAChB,cAApBkgC,EAASlgC,OAAyB,KAClC,MAEZ4hC,EAAeh2B,SAAS6V,cAAc,OAC5CmgB,EAAatX,UAAY,gBACzBsX,EAAa/1B,MAAM+Z,QAAU,uBACb2b,mEAEMC,kWAatBI,EAAaxb,UAAY,4JAEUqb,oMAKpBC,oPAUYA,2GACAD,0CAAkDvB,EAASp4B,+FAI3D45B,yGACAD,wBAAgCE,kFAIhCD,wGACAD,wBAAgClhC,+CAGrD2/B,EAASnhC,MAAQ,iDAEI2iC,qJAC6CxB,EAASnhC,wCAEzE,6DAGmB2iC,4GACAD,wBAAgCvB,EAASJ,aAAe,iDAMnF8B,EAAa/0B,iBAAiB,QAAUge,IACtCA,EAAEM,oBAGJ,MAAM0W,EAAWD,EAAavW,cAAc,cAkB5C,OAjBAwW,EAASh1B,iBAAiB,QAAS,KACjChP,KAAKikC,qBAAqBnc,KAG5Bkc,EAASh1B,iBAAiB,aAAc,KACtCg1B,EAASh2B,MAAMvC,MAAQm4B,IAGzBI,EAASh1B,iBAAiB,aAAc,KACtCg1B,EAASh2B,MAAMvC,MAAQo4B,IAGzB/b,EAAM9Y,iBAAiB,QAAS,KAC9BhP,KAAKikC,qBAAqBnc,KAG5BA,EAAMX,YAAY4c,GACXjc,CACT,CAKA,oBAAAmc,CAAqBnc,GACnBA,EAAM9Z,MAAMpC,QAAU,IACtBkc,EAAM0F,cAAc,kBAAkBxf,MAAMof,UAAY,+BAExDzb,WAAW,KACLmW,EAAMmG,YACRnG,EAAMmG,WAAWvG,YAAYI,IAE9B,IACL,CAKA,mBAAAsa,CAAoBf,GAElBA,EAAKrzB,MAAMof,UAAY,+BACvBiU,EAAKrzB,MAAMpC,QAAU,IACrBy1B,EAAKrzB,MAAM+G,OAAS,YAEpBiJ,sBAAsB,KACpBqjB,EAAKrzB,MAAMk2B,WAAa,yCACxB7C,EAAKrzB,MAAMof,UAAY,yBACvBiU,EAAKrzB,MAAMpC,QAAU,IACrBy1B,EAAKrzB,MAAM+G,OAAS,YAGpBssB,EAAKrzB,MAAMksB,UAAY,2EAE3B,CAKA,kBAAAoI,CAAmBjB,EAAM1B,GAEvB0B,EAAKrzB,MAAMk2B,WAAa,yCACxB7C,EAAKrzB,MAAM0a,YAAc,yBACzB2Y,EAAKrzB,MAAMof,UAAY,cACvBiU,EAAKrzB,MAAMksB,UAAY,qEACvBmH,EAAKrzB,MAAM+G,OAAS,gCAGpBpD,WAAW,KACT0vB,EAAKrzB,MAAMof,UAAY,cACvBiU,EAAKrzB,MAAM+G,OAAS,kCACnB,KAGHpD,WAAW,KACT3R,KAAKmkC,gBAAgB9C,EAAM1B,IAC1B,IACL,CAKA,gBAAA4C,CAAiBlB,EAAM1B,GAErB0B,EAAKrzB,MAAMk2B,WAAa,yCACxB7C,EAAKrzB,MAAM0a,YAAc,yBACzB2Y,EAAKrzB,MAAMksB,UAAY,sEACvBmH,EAAKrzB,MAAM+G,OAAS,gCAGpBssB,EAAKrzB,MAAMiL,UAAY,kDAGvBjZ,KAAKokC,gBAAgB/C,EAAM1B,GAG3B0B,EAAKrzB,MAAMC,OAAS,UACpBozB,EAAKxY,QAAU,IAAM7oB,KAAKmkC,gBAAgB9C,EAAM1B,GAGhDhuB,WAAW,KACL3R,KAAK0zB,UAAU3X,IAAI4jB,IACrB3/B,KAAKmkC,gBAAgB9C,EAAM1B,IAE5B,IACL,CAKA,eAAAyE,CAAgB/C,EAAM1B,GACpB,MAAM0C,EAAWriC,KAAK0zB,UAAUvJ,IAAIwV,GACpC,IAAK0C,IAAaA,EAASnhC,MAAO,OAGlC,MAAMwrB,EAAU3e,SAAS6V,cAAc,OACvC8I,EAAQ1e,MAAM+Z,QAAU,kcAkBxB2E,EAAQxE,YAAcma,EAASnhC,MAE/BmgC,EAAKrzB,MAAM9G,SAAW,WACtBm6B,EAAKla,YAAYuF,GAGjB1O,sBAAsB,KACpB0O,EAAQ1e,MAAMpC,QAAU,MAI1B+F,WAAW,KACL+a,EAAQuB,aACVvB,EAAQ1e,MAAMpC,QAAU,IACxB+F,WAAW,KACL+a,EAAQuB,YACVvB,EAAQuB,WAAWvG,YAAYgF,IAEhC,OAEJ,IACL,CAKA,eAAAyX,CAAgB9C,EAAM1B,GAEpB0B,EAAKrzB,MAAMk2B,WAAa,yCACxB7C,EAAKrzB,MAAMof,UAAY,gCACvBiU,EAAKrzB,MAAMpC,QAAU,IACrBy1B,EAAKrzB,MAAM+G,OAAS,4BAGpBssB,EAAKrzB,MAAMksB,UAAY,uEAEvBvoB,WAAW,KACL0vB,EAAKpT,YACPoT,EAAKpT,WAAWvG,YAAY2Z,GAE9BrhC,KAAK0zB,UAAU1X,OAAO2jB,GAEtB3/B,KAAK+hC,0BACJ,IACL,CAKA,eAAAsC,CAAgB7iC,GAEd,MAAI,mBAAmB0S,KAAK1S,IAAWA,EAAOsG,OAAS,GAC9C,SAEL,qBAAqBoM,KAAK1S,GACrB,UAEF,UACT,CAKA,kBAAAkgC,CAAmBv/B,EAAQX,EAAQ8iC,EAAe,MAChD,MAAMC,EAAc/iC,EAAOsG,OAAS,GAAKtG,EAAOgjC,UAAU,EAAG,IAAM,MAAQhjC,EAGrEijC,EAAezkC,KAAKqkC,gBAAgB7iC,GAE1C,OAAQW,GACN,IAAK,UACH,MAAwB,WAAjBsiC,EAA4B,gBACX,YAAjBA,EAA6B,mBAC7B,iBACT,IAAK,aACL,IAAK,cACL,IAAK,WAEH,MAAyB,WAArBzkC,KAAK+J,YACiB,WAAjB06B,EAA4B,gBACX,YAAjBA,EAA6B,mBAC7B,gBAEe,WAAjBA,EAA4B,gBACX,YAAjBA,EAA6B,oBAC7B,oBACT,IAAK,YAEH,MAAyB,WAArBzkC,KAAK+J,YACiB,WAAjB06B,EAA4B,eACX,YAAjBA,EAA6B,eAC7B,qBAGgB,WAArBzkC,KAAK+J,YACiB,WAAjB06B,EAA4B,eACX,YAAjBA,EAA6B,aAC7B,qBAGe,WAAjBA,EAA4B,iBACX,YAAjBA,EAA6B,gBAC7B,mBACT,IAAK,QAEH,GAAIH,EAAc,CAEhB,MAAO,KADYA,EAAax8B,OAAS,GAAKw8B,EAAaE,UAAU,EAAG,IAAM,MAAQF,GAExF,CACA,MAAwB,WAAjBG,EAA4B,iBACX,YAAjBA,EAA6B,sBAC7B,yBACT,QACE,OAAOF,EAEb,CAKA,cAAAG,CAAeviC,GAEb,MAAMkX,EAAS,CACbsoB,QAAS3hC,KAAKmyB,WAAa,UAAY,UACvCyP,WAAY5hC,KAAKmyB,WAAa,UAAY,UAC1C0P,SAAU7hC,KAAKmyB,WAAa,UAAY,UACxC2P,UAAW9hC,KAAKmyB,WAAa,UAAY,UACzCjxB,MAAOlB,KAAKmyB,WAAa,UAAY,WAEvC,OAAO9Y,EAAOlX,IAAWkX,EAAOsoB,OAClC,CAKA,qBAAAgD,CAAsBxiC,GACpB,MAAe,eAAXA,GAAsC,aAAXA,EACtB,0EAEWnC,KAAKmyB,WAAa,4BAA8B,+RAQVnyB,KAAKoyB,eAAiB,mBAAqB,sXAQrCpyB,KAAKmyB,WAAa,UAAY,iIAMvF,EACT,CAKA,qBAAAyS,CAAsBvD,GAEpBA,EAAKrzB,MAAMiL,UAAY,6BAGvBjZ,KAAK6kC,wBAAwBxD,GAE7B1vB,WAAW,KACT0vB,EAAKrzB,MAAMiL,UAAY,IACtB,KAEHjZ,KAAK8kC,sBACP,CAKA,uBAAAD,CAAwBxD,GACtB,MACMlyB,EAAOkyB,EAAKjyB,wBAElB,IAAK,IAAIuS,EAAI,EAAGA,EAHE,EAGaA,IAAK,CAClC,MAAM3J,EAAWjK,SAAS6V,cAAc,OACxC5L,EAAShK,MAAM+Z,QAAU,2OAQf5Y,EAAKuc,MAAQ,uBACdvc,EAAKK,IAAM,gIAOpB,MAAMu1B,EAASpjB,EArBC,EAqBgBna,KAAKC,GAAK,EACpC4B,EAAW,GACjB2O,EAAShK,MAAMwzB,YAAY,WAAeh6B,KAAKqY,IAAIklB,GAAS17B,EAArB,MACvC2O,EAAShK,MAAMwzB,YAAY,WAAeh6B,KAAKoX,IAAImmB,GAAS17B,EAArB,MAEvC0E,SAAS/L,KAAKmlB,YAAYnP,GAG1BrG,WAAW,IAAMqG,EAASzN,SAAU,KACtC,CACF,CAKA,oBAAAu6B,GACE,GAAI/2B,SAASilB,eAAe,mBAAoB,OAEhD,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,kBACX6F,EAAMka,YAAc,0mEA+EpBna,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAKA,aAAAg3B,CAAcjyB,EAASkyB,EAAU,EAAGtF,EAAS,MAC3C,MAAMx3B,EAAKw3B,GAAU,QAAQjtB,KAAKC,QAClC,OAAO3S,KAAK4/B,YAAY7sB,EAAS,CAC/BkyB,QAASz9B,KAAKqJ,IAAIrJ,KAAKoJ,IAAIq0B,EAAS,GAAI,KACxCtF,OAAQx3B,EACRhG,OAAQ8iC,EAAU,EAAI,WAAa,WAEvC,CAKA,kBAAAC,CAAmBvF,EAAQsF,EAASE,EAAa,MAC1BnlC,KAAKowB,OAAO5C,cAAc,kBAAkBmS,QAC7CwF,GAElBnlC,KAAK6J,UAAUs7B,EAAY,WAAY,CACrCF,QAASz9B,KAAKqJ,IAAIrJ,KAAKoJ,IAAIq0B,EAAS,GAAI,KACxCtF,UAGN,CAKA,YAAAyF,CAAazF,GACX,MAAM0F,EAAerlC,KAAKowB,OAAO5C,cAAc,kBAAkBmS,OAC7D0F,IAEFA,EAAar3B,MAAMk2B,WAAa,yCAChCmB,EAAar3B,MAAMpC,QAAU,IAC7By5B,EAAar3B,MAAMof,UAAY,mBAE/Bzb,WAAW,KACL0zB,EAAapX,YACfoX,EAAa96B,UAEd,KAEP,CAKA,iBAAAg2B,CAAkB+E,EAAcC,EAAW,MACzC,GAAIvlC,KAAKqwB,kBAAkBtU,IAAIupB,GAC7B,OAGF,MAAME,EAAc,IAAIC,YAAY,iBAAiBH,KACrDtlC,KAAKqwB,kBAAkBtkB,IAAIu5B,EAAcE,GAEzCA,EAAYE,UAAaz2B,IACvB,IACE,MAAM0T,EAAO1gB,KAAK0jC,MAAM12B,EAAM0T,MAC9BA,EAAK4iB,SAAWA,EAChBvlC,KAAK4lC,qBAAqBjjB,EAC5B,CAAE,MAAOzhB,GACPf,QAAQe,MAAM,wBAAyBA,EACzC,GAGFskC,EAAYK,QAAW3kC,IACrBf,QAAQe,MAAM,wBAAyBA,GACvClB,KAAK8lC,mBAAmBR,GAE5B,CAKA,oBAAAM,CAAqBjjB,GACnB,OAAQA,EAAKna,MACX,IAAK,YACHxI,KAAKmrB,SAAS,oCAAoCxI,EAAKgd,UACvD,MAEF,IAAK,gBACkBjkB,IAAjBiH,EAAKsiB,SAAyBtiB,EAAK4iB,UACrCvlC,KAAKwgC,eAAe7d,EAAK4iB,SAAU,WAAY,CAAEN,QAAStiB,EAAKsiB,UAEjE,MAEF,IAAK,YACCtiB,EAAK4iB,UACPvlC,KAAKwgC,eAAe7d,EAAK4iB,SAAU,aAErCvlC,KAAK8lC,mBAAmBnjB,EAAKgd,QAC7B,MAEF,IAAK,QACChd,EAAK4iB,UACPvlC,KAAKwgC,eAAe7d,EAAK4iB,SAAU,QAAS,CAAEjB,aAAc3hB,EAAK5P,UAEnE/S,KAAK6J,UAAU,KAAK8Y,EAAK5P,UAAW,SACpC/S,KAAK8lC,mBAAmBnjB,EAAKgd,QAGnC,CAKA,kBAAAmG,CAAmBnG,GACjB,MAAMoG,EAAa/lC,KAAKqwB,kBAAkBlG,IAAIwV,GAC1CoG,IACFA,EAAWC,QACXhmC,KAAKqwB,kBAAkBrU,OAAO2jB,GAElC,CAKA,cAAAe,GACM1gC,KAAKuzB,YACPvzB,KAAKuzB,UAAU0S,UAAYjmC,KAAKuzB,UAAUwI,aAE9C,CAKA,aAAAgE,CAAc1F,GAOZ,MALiB,CACfmB,SAAU,GACVC,OAAQ,QACRzf,OAAQ,SAEMqe,IAAS,EAC3B,CAKA,oBAAAwF,CAAqBqG,GAEnBlmC,KAAKsF,eAAiBtF,KAAKsF,eAAeqkB,MAAM,EAAG3pB,KAAKqyB,oBAAsB,GAG9EryB,KAAKsF,eAAexB,KAAKoiC,GACzBlmC,KAAKqyB,oBAAsBryB,KAAKsF,eAAewC,OAAS,EAGpD9H,KAAKsF,eAAewC,OAAS9H,KAAKsyB,iBACpCtyB,KAAKsF,eAAe6gC,QACpBnmC,KAAKqyB,uBAIPryB,KAAKomC,uBACP,CAKA,IAAA9H,GACE,IAAKt+B,KAAKqmC,UAER,YADArmC,KAAK6J,UAAU,oBAAqB,QAItC,MAAM3G,EAAUlD,KAAKsF,eAAetF,KAAKqyB,qBACzCryB,KAAKqyB,sBAGgB,aAAjBnvB,EAAQm3B,MACVr6B,KAAK6J,UAAU,YAAY3G,EAAQA,uBAAwB,UAEvDlD,KAAK+G,cAAgB/G,KAAK+G,aAAau/B,kBACzCtmC,KAAK+G,aAAau/B,oBAEM,WAAjBpjC,EAAQm3B,MACjBr6B,KAAK6J,UAAU,YAAY3G,EAAQA,uBAAwB,UAEvDlD,KAAK+G,cAAgB/G,KAAK+G,aAAaw/B,gBACzCvmC,KAAK+G,aAAaw/B,kBAEM,WAAjBrjC,EAAQm3B,OACjBr6B,KAAK6J,UAAU,YAAY3G,EAAQA,uBAAwB,UAEvDlD,KAAK+G,cAAgB/G,KAAK+G,aAAay/B,gBACzCxmC,KAAK+G,aAAay/B,kBAItBxmC,KAAKomC,uBACP,CAKA,IAAA/H,GACE,IAAKr+B,KAAKymC,UAER,YADAzmC,KAAK6J,UAAU,oBAAqB,QAItC7J,KAAKqyB,sBACL,MAAMnvB,EAAUlD,KAAKsF,eAAetF,KAAKqyB,qBAGzCryB,KAAK6J,UAAU,YAAY3G,EAAQA,oBAAqB,UAGpDlD,KAAK+G,cAAgB/G,KAAK+G,aAAa2/B,aACzC1mC,KAAK+G,aAAa2/B,YAAYxjC,GAGhClD,KAAKomC,uBACP,CAKA,OAAAC,GACE,OAAOrmC,KAAKqyB,qBAAuB,CACrC,CAKA,OAAAoU,GACE,OAAOzmC,KAAKqyB,oBAAsBryB,KAAKsF,eAAewC,OAAS,CACjE,CAKA,qBAAAs+B,GACMpmC,KAAK2mC,UACP3mC,KAAK2mC,QAAQtR,UAAYr1B,KAAKqmC,UAC9BrmC,KAAK2mC,QAAQ34B,MAAMpC,QAAU5L,KAAKqmC,UAAY,IAAM,MACpDrmC,KAAK2mC,QAAQ34B,MAAMC,OAASjO,KAAKqmC,UAAY,UAAY,eAGvDrmC,KAAK4mC,UACP5mC,KAAK4mC,QAAQvR,UAAYr1B,KAAKymC,UAC9BzmC,KAAK4mC,QAAQ54B,MAAMpC,QAAU5L,KAAKymC,UAAY,IAAM,MACpDzmC,KAAK4mC,QAAQ54B,MAAMC,OAASjO,KAAKymC,UAAY,UAAY,cAE7D,CAKA,8BAAMtR,SACoBn1B,KAAK6mC,4BAE3B7mC,KAAK6mB,UAET,CAKA,8BAAMggB,GACJ,OAAO7mC,KAAK2gC,uBAAuB,CACjC/K,KAAM,KACN3N,MAAO,gBACPlV,QAAS,2CACT6tB,YAAa,eACbC,WAAY,QACZC,aAAc9gC,KAAKoyB,eAAiB,UAAY,WAEpD,CAKA,uBAAA4O,CAAwBlZ,GACtB,MAAMiZ,EAASjZ,EAAM0F,cAAc,kBACnCuT,EAAO/yB,MAAMof,UAAY,aACzB2T,EAAO/yB,MAAMpC,QAAU,IACvBkc,EAAM9Z,MAAMpC,QAAU,IAEtB+F,WAAW,KACLmW,EAAMsR,eACRrrB,SAAS/L,KAAK0lB,YAAYI,IAE3B,IACL,CAKA,QAAAjB,GACM7mB,KAAK+G,cACP/G,KAAK+G,aAAa8f,WAClB7mB,KAAK6J,UAAU,wBAAyB,WAC/B7J,KAAKgF,QAEdhF,KAAK6J,UAAU,iBAAkB,QAErC,CAOA,YAAA6mB,GASE1wB,KAAK6J,UAAU,YAAa,UARX,CACf,cACA,iBACA,cACA,WACA,aAIO5B,QAAQ6+B,IACf9mC,KAAK6J,UAAU,OAAOi9B,KAAY,SAEtC,CAKA,eAAAC,CAAgBhgC,GACd/G,KAAK+G,aAAeA,EACpB/G,KAAKiyB,qCACP,CAKA,SAAA+U,CAAUhiC,GACRhF,KAAKgF,OAASA,CAChB,CAKA,YAAAgnB,CAAaC,GACXjsB,KAAKe,OAAS,IAAKf,KAAKe,UAAWkrB,GAE/BA,EAAUsE,eAEZvwB,KAAKwyB,YAET,CAQA,aAAAG,GAEE,MAAMsU,EAAcjnC,KAAKgoB,WAAWwF,cAAc,0BAC9CyZ,IACFA,EAAYj5B,MAAM+Z,QAAU/nB,KAAKi+B,qBAAoB,EAAM,aAI7D,MAAMY,EAAa7+B,KAAKgoB,WAAWwF,cAAc,gBAC7CqR,IACFA,EAAW7wB,MAAM+Z,QAAU/nB,KAAKy9B,sBAAsB,YAIpDz9B,KAAKuxB,cACPvxB,KAAKyuC,2BAIPzuC,KAAKo2B,4BACP,CAEA,wBAAAqY,GACOzuC,KAAKuxB,eAGVvxB,KAAKuxB,aAAavjB,MAAM2a,WAAa3oB,KAAKoyB,eACtC,+EACCpyB,KAAKmyB,WACJ,yEACA,8EAENnyB,KAAKuxB,aAAavjB,MAAM4rB,OAAS55B,KAAKoyB,eAClC,oCACCpyB,KAAKmyB,WACJ,oCACA,qCAENnyB,KAAKuxB,aAAavjB,MAAMvC,MAAQzL,KAAKoyB,eACjC,UACCpyB,KAAKmyB,WAAa,UAAY,UAEnCnyB,KAAKuxB,aAAavjB,MAAMksB,UAAYl6B,KAAKoyB,eACrC,qCACA,qCACN,CAKA,WAAA2D,GAEE,OAAQ/1B,KAAKkyB,cACX,IAAK,QACHlyB,KAAKkyB,aAAe,OACpB,MACF,IAAK,OACHlyB,KAAKkyB,aAAe,WACpB,MAIF,QACElyB,KAAKkyB,aAAe,QASxB,GALAlyB,KAAKmyB,WAAmC,SAAtBnyB,KAAKkyB,aACvBlyB,KAAKoyB,eAAuC,aAAtBpyB,KAAKkyB,aAC3BJ,aAAagG,QAAQ,qBAAsB93B,KAAKkyB,cAG5ClyB,KAAKu1B,YAAa,CACpB,MAMMx0B,EANc,CAClB00B,MAAO,CAAEG,KAAM,KAAM3N,MAAO,eAC5ByN,KAAM,CAAEE,KAAM,KAAM3N,MAAO,gBAC3B0N,SAAU,CAAEC,KAAM,KAAM3N,MAAO,gBAGNjoB,KAAKkyB,cAEZ,OAAhBnxB,EAAO60B,KACT51B,KAAKu1B,YAAYhN,UAAY,wDAAwDxnB,EAAO60B,cACnE,OAAhB70B,EAAO60B,KAChB51B,KAAKu1B,YAAYhN,UAAY,0EAA0ExnB,EAAO60B,cAE9G51B,KAAKu1B,YAAYhN,UAAY,2EAA2ExnB,EAAO60B,cAEjH51B,KAAKu1B,YAAYtN,MAAQlnB,EAAOknB,KAClC,CAGAjoB,KAAKw0B,YAGP,CAKA,UAAAA,GAEEzmB,SAAS/L,KAAKyqB,UAAYzsB,KAAKoyB,eAAiB,gBAAmBpyB,KAAKmyB,WAAa,YAAc,aAGnG,MAAMkV,EAAiBrnC,KAAKgoB,UAAUha,MAAMiZ,QACtCqgB,EAAuBtnC,KAAKgoB,UAAUha,MAAMwwB,cAClDx+B,KAAKgoB,UAAUha,MAAM+Z,QAAU/nB,KAAKozB,qBACpCpzB,KAAKgoB,UAAUha,MAAMiZ,QAAUogB,GAAkB,OACjDrnC,KAAKgoB,UAAUha,MAAMwwB,cAAgB8I,GAAwB,SAG7D,MAAMC,EAAavnC,KAAKgoB,UAAUwF,cAAc,yBAC5C+Z,IACFA,EAAWv5B,MAAM2a,WAAa3oB,KAAKmyB,WAC/B,4EACA,4EACJoV,EAAWv5B,MAAM4rB,OAAS,cAAa55B,KAAKmyB,WAAa,2BAA6B,6BAIxF,MAAMuc,IAAiB1uC,KAAKkrC,iBAkD5B,GAjDAlrC,KAAKmrC,mBAAqB,KAC1BnrC,KAAKmsC,2BACLnsC,KAAKkK,MAAM8D,MAAM+Z,QAAU/nB,KAAK8zB,iBAChC9zB,KAAKssC,6BACDoC,GAAiB1uC,KAAKkK,OAASlK,KAAKkK,MAAMC,MAAMiJ,SAClDpT,KAAKurC,2BAIPvrC,KAAKowB,OAAOpiB,MAAM+Z,QAAU/nB,KAAKwzB,kBAG7BxzB,KAAKkzB,qBACPlzB,KAAKkzB,mBAAmBllB,MAAM2a,WAAa3oB,KAAKoyB,eAC5C,wEACCpyB,KAAKmyB,WACJ,wEACA,8EACNnyB,KAAKkzB,mBAAmBllB,MAAM0a,YAAc1oB,KAAKoyB,eAC7C,wBACCpyB,KAAKmyB,WACJ,2BACA,4BAGNxuB,OAAO+mB,KAAK1qB,KAAKo6B,kBAAkBnyB,QAAQiK,IACzC,MAAMhD,OAAEA,GAAWlP,KAAKo6B,iBAAiBloB,GACrClS,KAAK+J,cAAgBmI,IACvBhD,EAAOlB,MAAMvC,MAAQzL,KAAKoyB,eACtB,2BACCpyB,KAAKmyB,WAAa,2BAA6B,wBACpDjjB,EAAOlB,MAAM2a,WAAa,cAC1BzZ,EAAOlB,MAAM4rB,OAAS,wBACtB1qB,EAAOlB,MAAMksB,UAAY,UAK7Bl6B,KAAKw6B,WAAWx6B,KAAK+J,aAAa,IAIhC/J,KAAKi1B,WACPj1B,KAAKi1B,SAASjnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,cAEvDl1B,KAAKo1B,aACPp1B,KAAKo1B,WAAWpnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,aAC3Dl1B,KAAKo1B,WAAWpnB,MAAMpC,QAAU,OAE9B5L,KAAKu1B,YAAa,CACpB,MAAMoZ,EAAc,CAClBlZ,MAAO,CAAEG,KAAM,KAAM3N,MAAO,eAC5ByN,KAAM,CAAEE,KAAM,KAAM3N,MAAO,gBAC3B0N,SAAU,CAAEC,KAAM,KAAM3N,MAAO,gBAE3BlnB,EAAS4tC,EAAY3uC,KAAKkyB,eAAiByc,EAAYlZ,MAEzC,OAAhB10B,EAAO60B,KACT51B,KAAKu1B,YAAYhN,UAAY,wDAAwDxnB,EAAO60B,cACnE,OAAhB70B,EAAO60B,KAChB51B,KAAKu1B,YAAYhN,UAAY,0EAA0ExnB,EAAO60B,cAE9G51B,KAAKu1B,YAAYhN,UAAY,2EAA2ExnB,EAAO60B,cAEjH51B,KAAKu1B,YAAYtN,MAAQlnB,EAAOknB,MAChCjoB,KAAKu1B,YAAYvnB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,OAC9D,CACIl1B,KAAKg2B,iBACPh2B,KAAKg2B,eAAehoB,MAAM+Z,QAAU/nB,KAAKk1B,sBAAsB,SAGjEl1B,KAAKo2B,6BAGL,MAAM9B,EAAct0B,KAAKgoB,UAAUwF,cAAc,iBAC7C8G,IACFA,EAAYtmB,MAAMvC,MAAQzL,KAAKmyB,WAAa,UAAY,UACxDmC,EAAYtmB,MAAM2a,WAAa3oB,KAAKmyB,WAChC,2BACA,sBAINnyB,KAAKwnC,+BAGLxnC,KAAKynC,0BACP,CAKA,4BAAAD,GACE,IAAKxnC,KAAKyzB,kBAAmB,OAG7B,MAAM4T,EAAiBrnC,KAAKyzB,kBAAkBzlB,MAAMiZ,QAGhDjnB,KAAK0zB,WAAa1zB,KAAK0zB,UAAU1rB,KAAO,GAC1ChI,KAAK0zB,UAAUzrB,QAAQ,CAACo6B,EAAU1C,KAChC,MAAM0B,EAAOgB,EAAShH,QACtB,GAAIgG,EAAM,CAGR,MAAMqG,EAAoB,CACxB/e,WAAY,yEACZiR,OAAQ,qCACRnuB,MAAO,WAGHk8B,EAAqB,CACzBhf,WAAY,gFACZiR,OAAQ,qCACRnuB,MAAO,WAGHglB,EAAQzwB,KAAKmyB,WAAauV,EAAoBC,EAGpDtG,EAAKrzB,MAAMwzB,YAAY,aAAc/Q,EAAM9H,WAAY,aACvD0Y,EAAKrzB,MAAMwzB,YAAY,SAAU/Q,EAAMmJ,OAAQ,aAC/CyH,EAAKrzB,MAAMwzB,YAAY,QAAS/Q,EAAMhlB,MAAO,YAC/C,IAKJzL,KAAKyzB,kBAAkBzlB,MAAMiZ,QAAUogB,CACzC,CAKA,wBAAAI,GACE,MAAMpuB,EAASrZ,KAAKmyB,WAAa,CAC/ByV,OAAQ,UACR1kC,QAAS,UACT2e,QAAS,UACT3gB,MAAO,UACP0gC,WAAY,UACZzI,KAAM,UACN0O,KAAM,WACJ,CACFD,OAAQ,UACR1kC,QAAS,UACT2e,QAAS,UACT3gB,MAAO,UACP0gC,WAAY,UACZzI,KAAM,UACN0O,KAAM,WAGFC,EAAmB9nC,KAAKmyB,WAAa,UAAY,UAGvDnyB,KAAKowB,OAAO0J,iBAAiB,OAAO7xB,QAAQ4D,IAC1C,MAAM+J,EAAO/J,EAAKqc,YAClB,IAAI1f,EAAO,UAGPoN,EAAK/R,SAAS,OAAS+R,EAAK/R,SAAS,OAAS+R,EAAK/R,SAAS,OAAS+R,EAAK/R,SAAS,QACrF2E,EAAO,SACEoN,EAAK5C,WAAW,MACzBxK,EAAO,UACEoN,EAAK/R,SAAS,MAAQ+R,EAAK/R,SAAS,MAAQ+R,EAAK/R,SAAS,UACnE2E,EAAO,UACEoN,EAAK/R,SAAS,MAAQ+R,EAAK/R,SAAS,OAC7C2E,EAAO,QACEoN,EAAK/R,SAAS,QACvB2E,EAAO,aACEoN,EAAK/R,SAAS,OAAS+R,EAAK/R,SAAS,WAAa+R,EAAK/R,SAAS,OACzE2E,EAAO,OACEoN,EAAK/R,SAAS,SACvB2E,EAAO,QAGTqD,EAAKmC,MAAMvC,MAAQ4N,EAAO7Q,IAASs/B,GAEvC,CAKA,mBAAA7M,GAEOj7B,KAAK+nC,YACR/nC,KAAK+nC,UAAYh6B,SAAS6V,cAAc,SACxC5jB,KAAK+nC,UAAUv/B,KAAO,OACtBxI,KAAK+nC,UAAU7gB,OAAS,uCACxBlnB,KAAK+nC,UAAU/5B,MAAMiZ,QAAU,OAC/BjnB,KAAK+nC,UAAU3gB,SAAY4F,GAAMhtB,KAAKgoC,oBAAoBhb,GAC1Djf,SAAS/L,KAAKmlB,YAAYnnB,KAAK+nC,YAIjC/nC,KAAKioC,mBACP,CAKA,mBAAA/M,GACMl7B,KAAKkoC,kBAAoBloC,KAAKkoC,iBAAiBja,YACjDjuB,KAAKkoC,iBAAiBja,WAAWvG,YAAY1nB,KAAKkoC,kBAEpDloC,KAAKmoC,oBACP,CAKA,gBAAAC,GACMpoC,KAAK+nC,WACP/nC,KAAK+nC,UAAUngB,OAEnB,CAKA,oBAAA2S,GAEOv6B,KAAK+nC,WACR/nC,KAAKi7B,sBAIPj7B,KAAKooC,mBAGLpoC,KAAKw6B,WAAW,UAAU,EAC5B,CAKA,yBAAMwN,CAAoB/4B,GACxB,MAAMqY,EAAOrY,EAAMwI,OAAO8P,MAAM,GAChC,GAAKD,EAEL,IAEMtnB,KAAKg7B,cAAgBh7B,KAAKg7B,aAAasN,KACzC9gB,IAAI8C,gBAAgBtqB,KAAKg7B,aAAasN,KAIxC,MAAMz0B,EAAW7T,KAAKqoC,eAAe/gB,EAAKliB,MAGpCyf,EAAU2C,IAAIC,gBAAgBH,GAGpCtnB,KAAKg7B,aAAe,CAClB1T,KAAMA,EACNghB,IAAKzjB,EACLrc,KAAMqL,EACNzO,KAAMkiB,EAAKliB,MAGbpF,KAAKw6B,WAAW,UAAU,GAG1B,MAAM+N,EAAgB,UAAUjhB,EAAKliB,QACrCpF,KAAKkK,MAAMC,MAAQo+B,EAEnBvoC,KAAK6J,UAAU,cAAcyd,EAAKliB,SAASyO,KAAa,UACxD7T,KAAK6J,UAAU,kBAAkB0+B,IAAiB,UAGlD52B,WAAW,KACT3R,KAAKiD,kBACJ,IAEL,CAAE,MAAO/B,GACPf,QAAQe,MAAM,wBAAyBA,GACvClB,KAAK6J,UAAU,gBAAgB3I,EAAM6R,UAAW,QAClD,CAAC,QAEK9D,EAAMwI,SACRxI,EAAMwI,OAAOtN,MAAQ,GAEzB,CACF,CAKA,iBAAA89B,GACOjoC,KAAKkK,QAEVlK,KAAKkK,MAAM8E,iBAAiB,WAAYhP,KAAKwoC,eAAeC,KAAKzoC,OACjEA,KAAKkK,MAAM8E,iBAAiB,OAAQhP,KAAK0oC,WAAWD,KAAKzoC,OACzDA,KAAKkK,MAAM8E,iBAAiB,YAAahP,KAAK2oC,gBAAgBF,KAAKzoC,OACnEA,KAAKkK,MAAM8E,iBAAiB,YAAahP,KAAK4oC,gBAAgBH,KAAKzoC,OACrE,CAKA,kBAAAmoC,GACOnoC,KAAKkK,QAEVlK,KAAKkK,MAAM8jB,oBAAoB,WAAYhuB,KAAKwoC,eAAeC,KAAKzoC,OACpEA,KAAKkK,MAAM8jB,oBAAoB,OAAQhuB,KAAK0oC,WAAWD,KAAKzoC,OAC5DA,KAAKkK,MAAM8jB,oBAAoB,YAAahuB,KAAK2oC,gBAAgBF,KAAKzoC,OACtEA,KAAKkK,MAAM8jB,oBAAoB,YAAahuB,KAAK4oC,gBAAgBH,KAAKzoC,OACxE,CAKA,cAAAwoC,CAAexb,GACbA,EAAEzb,iBACFvR,KAAKkK,MAAM8D,MAAM2a,WAAa3oB,KAAKmyB,WAAa,0BAA4B,0BAC9E,CAKA,eAAAwW,CAAgB3b,GACdA,EAAEzb,iBACFvR,KAAKkK,MAAM8D,MAAM2a,WAAa3oB,KAAKmyB,WAAa,0BAA4B,0BAC9E,CAKA,eAAAyW,CAAgB5b,GACdA,EAAEzb,iBACFvR,KAAKkK,MAAM8D,MAAM2a,WAAa,EAChC,CAKA,gBAAM+f,CAAW1b,GACfA,EAAEzb,iBACFvR,KAAKkK,MAAM8D,MAAM2a,WAAa,GAE9B,MAAMpB,EAAQjZ,MAAMoG,KAAKsY,EAAE6b,aAAathB,OACxC,GAAqB,IAAjBA,EAAMzf,OAAc,OAExB,MAAMwf,EAAOC,EAAM,GAGFvnB,KAAKqoC,eAAe/gB,EAAKliB,MAO1CpF,KAAKgoC,oBAAoB,CAAEvwB,OAAQ,CAAE8P,MAAO,CAACD,MAL3CtnB,KAAK6J,UAAU,uBAAwB,QAM3C,CAKA,cAAAw+B,CAAepyB,GACb,MAAM6yB,EAAM7yB,EAAS7R,cAAcyR,MAAM,KAAKqM,MAE9C,MAAI,CAAC,MAAO,QAAQre,SAASilC,GAAa,KACtC,CAAC,MAAO,OAAQ,MAAO,QAAQjlC,SAASilC,GAAa,QACrD,CAAC,MAAO,MAAO,QAAQjlC,SAASilC,GAAa,QAE1C,IACT,CAKA,yBAAM9I,CAAoB98B,GACxB,IAAKlD,KAAKg7B,aACR,MAAM,IAAI15B,MAAM,kBAGlB,IAEE,MAAM4F,EAAWlH,KAAK+G,aAAe/G,KAAK+G,aAAa4M,cAAczQ,GAAW,CAAEiE,EAAG,EAAGE,EAAG,EAAGC,GAAI,IAElG,IAAIlF,EAEJ,OAAQpC,KAAKg7B,aAAaxyB,MACxB,IAAK,KAEH,IAAIxI,KAAK+G,aAMP,MAAM,IAAIzF,MAAM,yBALhBc,QAAepC,KAAK+G,aAAagiC,YAAY/oC,KAAKg7B,aAAasN,IAAK,CAClEphC,SAAUA,IAMd,MAEF,IAAK,QAEH,IAAIlH,KAAK+G,aAMP,MAAM,IAAIzF,MAAM,yBALhBc,QAAepC,KAAK+G,aAAa6d,cAAc5kB,KAAKg7B,aAAasN,IAAK,CACpEphC,SAAUA,EACV+O,SAAUjW,KAAKg7B,aAAa51B,OAKhC,MAEF,IAAK,QAEH,IAAIpF,KAAK+G,aAMP,MAAM,IAAIzF,MAAM,yBALhBc,QAAepC,KAAK+G,aAAa+d,cAAc9kB,KAAKg7B,aAAasN,IAAK,CACpEphC,SAAUA,EACV+O,SAAUjW,KAAKg7B,aAAa51B,OAKhC,MAEF,QACE,MAAM,IAAI9D,MAAM,sBAAsBtB,KAAKg7B,aAAaxyB,QAI5D,MAAMwgC,EAAoBhpC,KAAKg7B,cAAc51B,KACvC6jC,EAAejpC,KAAKg7B,cAAcxyB,KAClC0gC,EAAclpC,KAAKg7B,cAAcsN,IASvC,MAPqB,UAAjBW,GAA4BC,GAC9B1hB,IAAI8C,gBAAgB4e,GAGtBlpC,KAAKg7B,aAAe,KACpBh7B,KAAKw6B,WAAW,YAAY,GAErB,CACL3Y,SAAS,EACT9O,QAAS,GAAGi2B,GAAqB,YAAY9hC,EAASC,MAAMD,EAASG,MAAMH,EAASI,YACpFgc,SAAUlhB,EAAOkhB,SAGrB,CAAE,MAAOpiB,GAOP,MALIlB,KAAKg7B,cAAcsN,KACrB9gB,IAAI8C,gBAAgBtqB,KAAKg7B,aAAasN,KAExCtoC,KAAKg7B,aAAe,KACpBh7B,KAAKw6B,WAAW,YAAY,GACtBt5B,CACR,CACF,CAKA,yBAAAi6B,GAEE,MAAMz1B,EAAiB1F,KAAK+G,cAAcrB,eAE1C,GAAIA,EAAgB,CAElB,MAAMsE,EAAatE,EAAe6C,UAAU0B,gBAAkBvE,EAAeN,MAAQ,aACrFpF,KAAKkK,MAAMC,MAAQ,GAAGH,SACtBhK,KAAKkK,MAAME,QAGXpK,KAAKkK,MAAMG,kBAAkBrK,KAAKkK,MAAMC,MAAMrC,OAAQ9H,KAAKkK,MAAMC,MAAMrC,QAEvE9H,KAAK6J,UAAU,YAAYG,IAAc,SAC3C,MAEEhK,KAAKkK,MAAMC,MAAQ,GACnBnK,KAAK6J,UAAU,iCAAkC,UAGjD7J,KAAKmpC,0BAA0B,SAInC,CAKA,yBAAA/N,GAEE,MAAM11B,EAAiB1F,KAAK+G,cAAcrB,eAE1C,GAAIA,EAAgB,CAElB,MAAMsE,EAAatE,EAAe6C,UAAU0B,gBAAkBvE,EAAeN,MAAQ,aACrFpF,KAAKkK,MAAMC,MAAQ,GAAGH,KACtBhK,KAAKkK,MAAME,QAGXpK,KAAKkK,MAAMG,kBAAkBrK,KAAKkK,MAAMC,MAAMrC,OAAQ9H,KAAKkK,MAAMC,MAAMrC,QAEvE9H,KAAK6J,UAAU,YAAYG,IAAc,SAC3C,MAEEhK,KAAKkK,MAAMC,MAAQ,GACnBnK,KAAK6J,UAAU,iCAAkC,UAGjD7J,KAAKmpC,0BAA0B,SAInC,CAMA,yBAAAA,CAA0B9O,GACxB,MAAM+O,EAAappC,KAAKopC,WAClBC,EAAarpC,KAAKkK,MAGxBlK,KAAKspC,oBAAoBF,GAGzBppC,KAAKupC,eAAeF,EAAYhP,GAGhCr6B,KAAKwpC,kBAAkBJ,EAAY/O,GAGnCr6B,KAAKypC,iBAAiBL,EACxB,CAKA,mBAAAE,CAAoBjO,GAClBA,EAAQrtB,MAAMiL,UAAY,kCAG1BjZ,KAAK0pC,4BAGL/3B,WAAW,KACT0pB,EAAQrtB,MAAMiL,UAAY,IACzB,IACL,CAKA,cAAAswB,CAAelO,EAAShB,GACtB,MAAMkB,EAAqB,WAATlB,EAAoB,yBAA2B,0BAEjEgB,EAAQrtB,MAAMk2B,WAAa,gBAC3B7I,EAAQrtB,MAAMksB,UAAY,YAAYqB,eAAuBA,IAG7D5pB,WAAW,KACT0pB,EAAQrtB,MAAMksB,UAAY,IACzB,IACL,CAKA,iBAAAsP,CAAkBnO,EAAShB,GACzB,MAAMsP,EAAsB,WAATtP,EAAoB,UAAar6B,KAAKoyB,eAAiB,UAAY,UAEtFiJ,EAAQrtB,MAAM47B,WAAa,aAAaD,IACxCtO,EAAQrtB,MAAMiL,UAAY,6CAG1BjZ,KAAK6pC,gCAGLl4B,WAAW,KACT0pB,EAAQrtB,MAAMiL,UAAY,GAC1BoiB,EAAQrtB,MAAM47B,WAAa,IAC1B,IACL,CAKA,gBAAAH,CAAiBpO,GACfA,EAAQrtB,MAAMof,UAAY,gCAC1BiO,EAAQrtB,MAAMk2B,WAAa,sBAG3BvyB,WAAW,KACT0pB,EAAQrtB,MAAMof,UAAY,IACzB,IACL,CAKA,yBAAAsc,GACE,GAAI37B,SAASilB,eAAe,oBAAqB,OAEjD,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,mBACX6F,EAAMka,YAAc,wgBAYpBna,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAKA,6BAAA67B,GACE,GAAI97B,SAASilB,eAAe,wBAAyB,OAErD,MAAMhlB,EAAQD,SAAS6V,cAAc,SACrC5V,EAAM7F,GAAK,uBACX6F,EAAMka,YAAc,yWAgBpBna,SAASgf,KAAK5F,YAAYnZ,EAC5B,CAMA,sBAAA+sB,CAAuB+O,GAErB,GAAI9pC,KAAKkK,MAAMC,MAAMiJ,OAAQ,CAEGpT,KAAK+pC,sBAAsB/pC,KAAKkK,MAAMC,MAAO2/B,KAIzE9pC,KAAKkK,MAAMC,MAAQ,GACnBnK,KAAK6J,UAAU,MAAM7J,KAAKgqC,mBAAmBF,gBAAuB,UAExE,CACF,CAKA,qBAAAC,CAAsBE,EAAYlgC,GAEhC,MAAMsyB,EAAiB,CACrB,SACA,OAGIC,EAAiB,CACrB,OACA,QACA,SACA,SACA,SACA,QACA,KACA,KACA,MACA,KACA,QACA,SACA,YAGI4N,EAAiB,CACrB,OACA,KACA,SAIF,OAAQngC,GACN,IAAK,SACH,OAAOuyB,EAAe5oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5CC,EAAex2B,KAAKU,GAAWA,EAAQF,KAAK+1B,IAErD,IAAK,SACH,OAAO5N,EAAe3oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5CC,EAAex2B,KAAKU,GAAWA,EAAQF,KAAK+1B,IAErD,IAAK,SACH,OAAO5N,EAAe3oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5C3N,EAAe5oB,KAAKU,GAAWA,EAAQF,KAAK+1B,IAErD,IAAK,WACH,OAAO5N,EAAe3oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5C3N,EAAe5oB,KAAKU,GAAWA,EAAQF,KAAK+1B,KAC5CC,EAAex2B,KAAKU,GAAWA,EAAQF,KAAK+1B,IAErD,QACE,OAAO,EAEb,CAKA,kBAAAD,CAAmB3P,GAOjB,MANkB,CAChBmB,SAAY,KACZ1M,OAAU,QACV2M,OAAU,KACVzf,OAAU,MAEKqe,IAASA,CAC5B,CAKA,2BAAA3H,GAEM1yB,KAAK0+B,uBACP1+B,KAAK0+B,sBAAsBn0B,SAG7BvK,KAAK0+B,sBAAwB3wB,SAAS6V,cAAc,OACpD5jB,KAAK0+B,sBAAsBnW,UAAY,KACvCvoB,KAAK0+B,sBAAsBzW,MAAQ,4BACnCjoB,KAAK0+B,sBAAsB1wB,MAAM+Z,QAAU,2qBAyB3C/nB,KAAK0+B,sBAAsB1vB,iBAAiB,YAAa,KACvDhP,KAAK0+B,sBAAsB1wB,MAAMof,UAAY,8BAC7CptB,KAAK0+B,sBAAsB1wB,MAAMksB,UAAY,mEAC7Cl6B,KAAK0+B,sBAAsB1wB,MAAMpC,QAAU,IAC3C5L,KAAK0+B,sBAAsB1wB,MAAM+G,OAAS,SAG5C/U,KAAK0+B,sBAAsB1vB,iBAAiB,WAAY,KACtDhP,KAAK0+B,sBAAsB1wB,MAAMof,UAAY,yBAC7CptB,KAAK0+B,sBAAsB1wB,MAAMksB,UAAY,oEAC7Cl6B,KAAK0+B,sBAAsB1wB,MAAMpC,QAAU,MAC3C5L,KAAK0+B,sBAAsB1wB,MAAM+G,OAAS,SAI5C/U,KAAK0+B,sBAAsB1vB,iBAAiB,QAAS,KAC/ChP,KAAKmwB,UACPnwB,KAAKu0B,OAELv0B,KAAKu+B,SAKTv+B,KAAK0+B,sBAAsB1vB,iBAAiB,cAAgBge,IAC1DA,EAAEzb,iBACFvR,KAAKmqC,4BAA4Bnd,KAInCjf,SAAS/L,KAAKmlB,YAAYnnB,KAAK0+B,sBACjC,CAKA,2BAAAyL,CAA4Bl7B,GAE1B,MAAMm7B,EAAer8B,SAASyf,cAAc,+BACxC4c,GACFA,EAAa7/B,SAIf,MAAM8/B,EAAOt8B,SAAS6V,cAAc,OACpCymB,EAAK5d,UAAY,6BACjB4d,EAAKr8B,MAAM+Z,QAAU,wCAEZ9Y,EAAMM,2BACLN,EAAMI,iCACArP,KAAKoyB,eACf,2BACCpyB,KAAKmyB,WAAa,yBAA2B,yIAG9BnyB,KAAKoyB,eACrB,2BACCpyB,KAAKmyB,WAAa,2BAA6B,6EAEtCnyB,KAAKoyB,eACf,kEACA,2QAMKpyB,KAAKoyB,eACV,UACCpyB,KAAKmyB,WAAa,UAAY,mBAIrC,MAAMmY,EAAev8B,SAAS6V,cAAc,OAC5C0mB,EAAa/hB,UAAY,aACzB+hB,EAAat8B,MAAM+Z,QAAU,yKAOlB/nB,KAAKoyB,eAAiB,UAAY,kCAC5BpyB,KAAKoyB,eAChB,oCACA,6CAGNkY,EAAat7B,iBAAiB,YAAa,KACzCs7B,EAAat8B,MAAM2a,WAAa3oB,KAAKoyB,eACjC,4BACCpyB,KAAKmyB,WAAa,2BAA6B,0BACpDmY,EAAat8B,MAAMu8B,WAAavqC,KAAKoyB,eACjC,oCACA,sCAGNkY,EAAat7B,iBAAiB,WAAY,KACxCs7B,EAAat8B,MAAM2a,WAAa,cAChC2hB,EAAat8B,MAAMu8B,WAAavqC,KAAKoyB,eACjC,oCACA,sCAGNkY,EAAat7B,iBAAiB,QAAS,KACrCq7B,EAAK9/B,SACDvK,KAAKmwB,UACPnwB,KAAKu0B,OAELv0B,KAAKu+B,SAKT,MAAMiM,EAAez8B,SAAS6V,cAAc,OAC5C4mB,EAAajiB,UAAY,aACzBiiB,EAAax8B,MAAM+Z,QAAU,yKAOlB/nB,KAAKoyB,eAAiB,UAAY,kCAC5BpyB,KAAKoyB,eAChB,oCACA,6CAGNoY,EAAax7B,iBAAiB,YAAa,KACzCw7B,EAAax8B,MAAM2a,WAAa3oB,KAAKoyB,eACjC,4BACCpyB,KAAKmyB,WAAa,2BAA6B,0BACpDqY,EAAax8B,MAAMu8B,WAAavqC,KAAKoyB,eACjC,oCACA,sCAGNoY,EAAax7B,iBAAiB,WAAY,KACxCw7B,EAAax8B,MAAM2a,WAAa,cAChC6hB,EAAax8B,MAAMu8B,WAAavqC,KAAKoyB,eACjC,oCACA,sCAGNoY,EAAax7B,iBAAiB,QAAS,KACrCq7B,EAAK9/B,SACLvK,KAAKyqC,qBAIPJ,EAAKljB,YAAYmjB,GACjBD,EAAKljB,YAAYqjB,GAGjBz8B,SAAS/L,KAAKmlB,YAAYkjB,GAG1B,MAAMl7B,EAAOk7B,EAAKj7B,wBACdD,EAAKuc,MAAQnrB,OAAO0uB,aACtBob,EAAKr8B,MAAMsB,KAAUL,EAAMI,QAAUF,EAAKxN,MAAxB,MAEhBwN,EAAKu7B,OAASnqC,OAAO2uB,cACvBmb,EAAKr8B,MAAMwB,IAASP,EAAMM,QAAUJ,EAAKvN,OAAxB,MAInB,MAAM+oC,EAAa3d,IACZqd,EAAK5c,SAAST,EAAEvV,UACnB4yB,EAAK9/B,SACLwD,SAASigB,oBAAoB,QAAS2c,KAI1Ch5B,WAAW,KACT5D,SAASiB,iBAAiB,QAAS27B,IAClC,GACL,CAKA,gBAAAF,GACMzqC,KAAK0+B,wBACP1+B,KAAK0+B,sBAAsB1wB,MAAMiZ,QAAU,OAE/C,CAKA,gBAAA2jB,GACM5qC,KAAK0+B,wBACP1+B,KAAK0+B,sBAAsB1wB,MAAMiZ,QAAU,OAE/C,CAEA,OAAA5Y,GAEErO,KAAKmsC,2BAGDnsC,KAAK+nC,WAAa/nC,KAAK+nC,UAAU9Z,YACnCjuB,KAAK+nC,UAAU9Z,WAAWvG,YAAY1nB,KAAK+nC,WAEzC/nC,KAAKg7B,cAAgBh7B,KAAKg7B,aAAasN,KACzC9gB,IAAI8C,gBAAgBtqB,KAAKg7B,aAAasN,KAIpCtoC,KAAK0+B,uBAAyB1+B,KAAK0+B,sBAAsBzQ,YAC3DjuB,KAAK0+B,sBAAsBzQ,WAAWvG,YAAY1nB,KAAK0+B,uBAGrD1+B,KAAKgoB,WAAahoB,KAAKgoB,UAAUoR,eACnCp5B,KAAKgoB,UAAUoR,cAAc1R,YAAY1nB,KAAKgoB,UAElD,CAEA,mBAAAiM,GACE,GAAIj0B,KAAK0xB,gBAAiB,OAE1B1xB,KAAKyxB,YAAa,EAGlBzxB,KAAK0xB,gBAAkB3jB,SAAS6V,cAAc,YAC9C5jB,KAAK0xB,gBAAgBvnB,MAAQnK,KAAKkK,MAAMC,MACxCnK,KAAK0xB,gBAAgBmC,YAAc7zB,KAAKkK,MAAM2pB,YAG9C,MAAM4K,EAAgBz+B,KAAKgoB,UAAU5Y,wBAI/B2qB,EAAU,GAEhB,IAAIvqB,EAAMivB,EAAcjvB,IAAM,GAC1BF,EAAOmvB,EAAcnvB,KACrB3N,EAAQ88B,EAAc98B,MAGtB2N,EAAO3N,EAAQpB,OAAO0uB,WAAa8K,IACrCzqB,EAAO/O,OAAO0uB,WAAattB,EAAQo4B,GAIjCzqB,EAAOyqB,IACTzqB,EAAOyqB,EACPp4B,EAAQ6F,KAAKqJ,IAAIlP,EAAOpB,OAAO0uB,WAAa,KAI1Czf,EAnBkB,IAmBIjP,OAAO2uB,YAAc6K,IAC7CvqB,EAAMhI,KAAKoJ,IAAImpB,EAASx5B,OAAO2uB,YApBX,IAoByC6K,IAG/D,MAAM8Q,EAAoB7qC,KAAKoyB,eAC3B,wEACCpyB,KAAKmyB,WACJ,wEACA,8EAEA2Y,EAAgB9qC,KAAKoyB,eACvB,kCACCpyB,KAAKmyB,WACJ,qCACA,qCAEA4Y,EAAqB/qC,KAAKoyB,eAC5B,2EACCpyB,KAAKmyB,WACJ,4EACA,yEAEA6Y,EAAmBhrC,KAAKgtC,oBAG9BhtC,KAAK0xB,gBAAgB1jB,MAAM+Z,QAAU,wCAE5BvY,qBACCF,sBACC3N,gFAGKkpC,wEAEJC,yBACIC,gDAELC,oWAcXj9B,SAAS/L,KAAKmlB,YAAYnnB,KAAK0xB,iBAG/B1T,sBAAsB,KACpBhe,KAAK0xB,gBAAgB1jB,MAAMpC,QAAU,MAIvC5L,KAAK0xB,gBAAgBtnB,QAGrBpK,KAAK0xB,gBAAgB1iB,iBAAiB,QAAUge,IAC9ChtB,KAAKkK,MAAMC,MAAQ6iB,EAAEvV,OAAOtN,QAI9BnK,KAAK0xB,gBAAgB1iB,iBAAiB,UAAYge,IAClC,WAAVA,EAAE9a,KACJlS,KAAKg0B,wBAKTh0B,KAAK0xB,gBAAgB1iB,iBAAiB,OAAQ,KAC5C2C,WAAW,IAAM3R,KAAKg0B,sBAAuB,MAEjD,CAEA,mBAAAA,GACOh0B,KAAK0xB,kBAEV1xB,KAAKyxB,YAAa,EAGlBzxB,KAAK0xB,gBAAgB1jB,MAAMpC,QAAU,IAErC+F,WAAW,KACL3R,KAAK0xB,kBACP3jB,SAAS/L,KAAK0lB,YAAY1nB,KAAK0xB,iBAC/B1xB,KAAK0xB,gBAAkB,OAExB,KACL,CAEA,mBAAAsC,GACOh0B,KAAK0xB,kBAEV1xB,KAAKyxB,YAAa,EAGlBzxB,KAAK0xB,gBAAgB1jB,MAAMpC,QAAU,IAErC+F,WAAW,KACL3R,KAAK0xB,kBACP3jB,SAAS/L,KAAK0lB,YAAY1nB,KAAK0xB,iBAC/B1xB,KAAK0xB,gBAAkB,OAExB,KACL,ECnwLK,SAASkd,EAAgBhqC,EAAOnD,EAAU,IAC/C,IAAKmD,EACH,MAAM,IAAItD,MAAM,2BAGlB,MAAMuD,OACJA,EAAS,KAAIC,SACbA,EAAW,KAAI/E,UACfA,EAAY,KAAIiF,OAChBA,EAAS,KAAIkrB,iBACbA,EAAmB,OAAQ2e,aAC3BA,EAAe,CAAA,EAAEC,UACjBA,EAAY,CAAA,GACVrtC,EAEEstC,EAAoBhvC,GAAa8uC,EAAa9uC,WAAa,KAC3DivC,EAAkBhqC,GAAU,IAAInF,EAAgBkvC,GAEhDhoC,EAAe,IAAIpC,EAAaC,EAAO,CAC3CC,SACAC,WACA/E,UAAWgvC,EACX/pC,OAAQgqC,KACLH,IAGCllC,EAAY,IAAIshC,EAAU,CAC9BlkC,eACA/B,OAAQgqC,EACR9e,sBACG4e,IAGL,MAAO,CACL9pC,OAAQgqC,EACRjoC,eACAkoC,GAAItlC,EACJ,OAAA0E,GACE1E,EAAU0E,YACVtH,EAAasH,WACf,EAEJ,CAGY,MAAC6gC,EAAiBN,EACjBO,EAAoBP,ECxDjC,SAASQ,EAAoBxqC,EAAOnD,EAAU,IAC5C,IAAKmD,EACH,MAAM,IAAItD,MAAM,2BAGlB,MAAMuD,OACJA,EAAS,KAAIC,SACbA,EAAW,KAAI/E,UACfA,EAAY,KAAIiF,OAChBA,EAAS,KAAIkrB,iBACbA,EAAmB,OAAQ2e,aAC3BA,EAAe,CAAA,EAAEC,UACjBA,EAAY,CAAA,KACTO,GACD5tC,EAEEstC,EAAoBhvC,GAAa8uC,EAAa9uC,WAAa,KAC3DivC,EAAkBhqC,GAAU,IAAInF,EAAgBkvC,GAGhDO,EAAqB,IACtBT,KACAQ,GAGCtoC,EAAe,IAAIpC,EAAaC,EAAO,CAC3CC,SACAC,WACA/E,UAAWgvC,EACX/pC,OAAQgqC,KACLM,IAIC3lC,EAAY,IAAIsmB,EAAc,CAClClpB,eACA/B,OAAQgqC,EACR9e,sBACG4e,IAML,OAHA/nC,EAAakoC,GAAKtlC,EAClBA,EAAUo9B,gBAAgBhgC,GAEnB,CACLA,eACAkoC,GAAItlC,EACJ3E,OAAQgqC,EACR3gC,QAAS,KACH1E,GAAWA,EAAU0E,UACrBtH,GAAcA,EAAasH,WAGrC,CAgBA,IAAAlB,EAAe,CACbtN,kBACAwD,iBACAD,oBACAuB,eACAsmC,UAAWhb,EACXA,gBACA2e,gBAAiBQ,EACjBF,iBACAC"}