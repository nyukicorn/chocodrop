{"version":3,"names":["ChocoDropClient","constructor","serverUrl","this","initialized","initPromise","console","log","initializeWithConfig","baseUrl","window","location","protocol","hostname","port","response","fetch","ok","config","json","detectServerUrl","error","warn","currentPort","ensureInitialized","Error","generateImage","prompt","options","payload","width","height","service","method","headers","body","JSON","stringify","status","result","generateVideo","safeDefaults","resolution","enable_safety_checker","enable_prompt_expansion","duration","aspect_ratio","model","seed","negative_prompt","frames_per_second","guidance_scale","executeCommand","command","getAvailableServices","LiveCommandClient","ChocoDroClient","SceneManager","scene","camera","renderer","labelRenderer","client","experimentGroup","THREE","Group","name","add","commandHistory","spawnedObjects","Map","objectCounter","selectedObject","selectedImageService","selectedVideoService","clock","Clock","raycaster","Raycaster","mouse","Vector2","lastHoveredObject","showLocationIndicator","indicatorDuration","defaultObjectScale","enableObjectSelection","enableMouseInteraction","enableDebugLogging","setupClickEvents","globalThis","sceneManager","setupObjectDragging","debugSceneInfo","position","x","toFixed","y","z","rotation","Math","PI","fov","near","far","children","length","getObjectByName","size","forEach","obj","id","worldPos","Vector3","getWorldPosition","userData","type","visible","scale","box","Box3","setFromObject","getSize","center","getCenter","meshCount","traverse","child","isMesh","distance","distanceTo","selectObject","object","deselectObject","createModernSelectionIndicator","commandUI","objectInfo","addOutput","modelName","currentMode","objectName","originalPrompt","input","value","focus","setSelectionRange","existingIndicator","remove","indicatorGroup","margin","adjustedSize","geometry","parameters","shape","Shape","moveTo","lineTo","points","getPoints","geometryLine","BufferGeometry","setFromPoints","adaptiveColor","getAdaptiveSelectionColor","materialLine","LineBasicMaterial","color","linewidth","transparent","opacity","line","Line","set","edgesGeometry","EdgesGeometry","BoxGeometry","edgesMaterial","edges","LineSegments","copy","addResizeHandles","parentObject","handleSize","handleGeometry","handleMaterial","MeshBasicMaterial","depthTest","depthWrite","handleHoverMaterial","getAdaptiveHoverColor","positions","corner","pos","index","handle","Mesh","clone","isResizeHandle","handleIndex","defaultMaterial","material","hoverMaterial","renderOrder","onHover","setScalar","document","style","cursor","onHoverExit","updateSelectionIndicatorScale","indicator","dispose","Array","isArray","canvas","domElement","isDragging","dragObject","dragOffset","mouseStart","dragMode","originalScale","addEventListener","event","button","rect","getBoundingClientRect","clientX","left","clientY","top","setFromCamera","intersects","intersectObjects","resizeHandleInfo","isRotateHandle","source","showDeleteConfirmation","then","confirmed","removeObject","catch","point","sub","handleHoverEffects","deltaX","deltaY","scaleMultiplier","abs","newScale","max","min","cameraRight","cameraUp","getWorldDirection","setFromMatrixColumn","matrixWorld","normalize","moveScale","worldMove","multiplyScalar","preventDefault","scaleFactor","emissive","setHex","setTimeout","rotationStep","rotated","key","newRotationX","newRotationXDown","cameraDirection","targetPoint","lookAt","angles","timestamp","Date","now","parsed","parseCommand","dispatchCommand","push","message","startsWith","actualCommand","replace","parseObjectModificationCommand","toLowerCase","trim","parseDeleteCommand","cmd","naturalLanguagePattern","parseNaturalLanguageCommand","videoKeywords","isVideoRequest","some","keyword","includes","parsePosition","parseSize","selectKeywords","isSelectRequest","importKeywords","isImportRequest","isVideoImport","fileType","imageKeywords","findObjectByKeyword","objectKeywords","split","aliases","Object","entries","alias","generatedObjects","filter","lastObject","parseImageGenerationCommand","particles","particle","parts","colorMap","colorName","colorValue","match","parseFloat","movement","parsePositionFromPrompt","degreeMatch","requiresSelection","target","movePatterns","pattern","regex","RegExp","direction","targetObjectName","requiresObjectSearch","colorPatterns","colorKeywords","colorKey","distanceMatch","executeImageGeneration","executeVideoGeneration","executeObjectModification","executeNaturalObjectModification","executeDelete","executeFileImport","executeObjectSelection","fallbackSizes","imageResult","lastError","i","dimensions","undefined","success","loader","TextureLoader","texture","imageUrl","localPath","filename","pop","loadAsync","colorSpace","SRGBColorSpace","createFallbackTexture","sizeScale","baseSize","imageWidth","image","naturalWidth","data","imageHeight","naturalHeight","aspectRatio","planeWidth","planeHeight","PlaneGeometry","map","side","DoubleSide","toneMapped","plane","finalPosition","calculateCameraRelativePosition","alignPlaneToCamera","objectId","createdAt","createLocationIndicator","videoResult","videoTexture","video","videoUrl","createElement","src","crossOrigin","loop","muted","playsInline","VideoTexture","play","createFallbackVideoTexture","requestedWidth","metadata","requestedHeight","planeAspect","videoElement","createAudioControl","fallbackVideoTexture","loadImageFile","fileUrl","fileName","importOrder","loadVideoFile","autoplay","preload","Promise","resolve","reject","handleLoaded","videoWidth","videoHeight","handleError","once","load","playError","objectUrl","targetObjects","findObjectsByName","targetObject","selectObjectFromMultiple","modified","toString","currentPos","newPos","lastModified","modifications","searchName","results","searchLower","promptLower","objects","originalCommand","ordinalPatterns","parseInt","matchedText","currentScale","currentRotation","newRotation","degrees","currentOpacity","clearAll","targetByKeyword","deleteReason","isSimpleDeleteCommand","deletedObjectId","display","accept","appendChild","onchange","async","file","files","URL","createObjectURL","removeChild","oncancel","click","getSpawnedObjects","modal","cssText","container","title","textContent","objectList","item","time","toLocaleTimeString","innerHTML","round","onmouseover","borderColor","background","onmouseout","onclick","selectedObjectId","cancelBtn","ctx","getContext","hash","hashString","hue","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","font","textAlign","fillText","slice","CanvasTexture","animationFrame","animate","offset","icons","iconIndex","floor","requestAnimationFrame","str","char","charCodeAt","from","get","pause","removeAttribute","revokeObjectURL","delete","materials","mat","objectIds","keys","getCommandHistory","relativePosition","SphereGeometry","indicatorPos","parent","cameraPos","crossVectors","cameraUpActual","logDebug","forward","negate","up","applyQuaternion","quaternion","dot","right","orientation","Matrix4","makeBasis","setFromRotationMatrix","setCamera","updateConfig","newConfig","setImageService","serviceId","getImageService","setVideoService","getVideoService","videoObject","audioButton","className","createTooltip","tooltip","createVolumeSlider","sliderContainer","slider","head","e","volume","volumeSlider","isSliderVisible","transform","buttonRect","stopPropagation","pointerEvents","querySelector","contains","audioControlElement","updateAudioControlPosition","audioControlUpdateInterval","setInterval","cleanupCallbacks","parentNode","vector","project","offsetX","offsetY","toggleVideoAudio","initializeLabelRenderer","loadAndInitializeCSS2DRenderer","ensureCSS2DRenderer","css2dInitPromise","CSS2DRenderer","setupCSS2DRenderer","module","import","CSS2DObject","setSize","innerWidth","innerHeight","addLabelRendererResizeHandler","labelRendererResizeHandler","updateRenderer","render","args","backgroundColor","bgColor","r","g","b","isColor","getLuminance","rs","pow","gs","bs","bgLuminance","IMAGE_SERVICE_STORAGE_KEY","VIDEO_SERVICE_STORAGE_KEY","CommandUIDemo","onControlsToggle","isVisible","output","activeConnections","currentTaskId","activationKey","maxHeight","theme","showExamples","autoScroll","availableImageServices","availableVideoServices","imageServiceSelect","videoServiceSelect","serviceSelectorContainer","serviceSelectorStatus","serviceSelectorContent","serviceSelectorRetryButton","serviceSelectorSaveButton","serviceSelectorCancelButton","serviceModalOverlay","serviceModal","servicesLoading","isExpanded","overlayTextarea","pendingImageService","pendingVideoService","storedImage","localStorage","getItem","storedVideo","applyServiceSelectionToSceneManager","currentTheme","isDarkMode","isWabiSabiMode","currentHistoryIndex","maxHistorySize","initUI","bindEvents","createServiceModal","createFloatingChocolateIcon","refreshStyles","openServiceModal","showDemoMessage","showCompactToast","existingToast","getElementById","buttonContainer","radioModeContainer","toast","getContainerStyles","brandIndicator","brandText","outputDiv","getOutputStyles","floatingContainer","taskCards","inputWrapper","rows","placeholder","getInputStyles","expandButton","hideOverlayTextarea","showOverlayTextarea","modeSelector","createRadioModeSelector","actionContainer","createMinimalActions","closeButton","hide","applyTheme","isComposing","hasCompositionJustEnded","autoResizeTextarea","detectCommandType","isSafari","test","navigator","userAgent","leftSection","clearBtn","getActionButtonStyles","clearAllWithConfirmation","historyBtn","disabled","rightSection","themeToggle","getThemeIcon","themeConfig","light","dark","wabisabi","getThemeTitle","titleConfig","getThemeIconWithFilter","icon","toggleTheme","settingsButton","createServiceSelectorSection","fontSize","marginBottom","updateServiceSelectorTheme","closeServiceModal","subtitle","selector","actionRow","initializeServiceSelector","actionButtons","handleServiceSave","toggleServiceRetryButton","forceFetch","resetPendingSelections","force","setServiceSelectorStatus","setServiceButtonsEnabled","resolveServiceSelection","default","populateServiceSelector","dataset","statusType","classList","toggle","services","defaultId","storageKey","storedId","isStoredValid","resolvedId","setItem","removeItem","hasImage","hasVideo","imageRow","buildServiceRow","videoRow","labelText","selectedId","row","label","fontWeight","select","serviceType","fontFamily","option","description","onServiceSelectionChange","findServiceInfo","lineHeight","minHeight","info","parentElement","newImageId","newVideoId","imageInfo","videoInfo","enabled","childElementCount","list","find","border","statusColor","labels","querySelectorAll","selects","padding","borderRadius","outline","boxShadow","descriptions","desc","modes","radioModeButtons","mode","autoBadge","triggerFileSelection","selectMode","isManual","detectedKeyword","selectedGlass","addPulseEffect","addContainerGlow","getPlaceholderForMode","clearInputOnModeSwitch","selectedFile","showImportInterface","hideImportInterface","handleDeleteModeSelection","handleModifyModeSelection","element","animation","ensurePulseAnimation","glowColors","generate","modify","glowColor","variant","baseStyles","getDestructiveButtonStyles","getCommandTypeIndicatorStyles","maxLines","newHeight","scrollHeight","overflowY","commandType","analyzeCommandType","text","mediaInfo","detectMediaType","deletePatterns","modifyPatterns","generatePatterns","confidence","reason","mediaType","requiresConfirmation","videoPatterns","imagePatterns","showCommandTypeIndicator","commandInfo","showProactiveSuggestion","hideProactiveSuggestion","enableGestureControl","detectedType","proactiveSuggestion","insertBefore","alternativeTypes","t","suggestion","suggestionLabels","updateIndicatorForMode","gestureEnabled","createActionButtons","getModernButtonStyles","glassmorphismDark","backdropFilter","glassmorphismLight","glassmorphismWabiSabi","getHeaderStyles","gradientColors","addScrollbarStyles","styles","primary","secondary","danger","getModeButtonStyles","isActive","modeColors","ctrlKey","shiftKey","undo","redo","show","flexDirection","containerRect","floatingChocolateIcon","switchMode","btn","executeBtn","buttonColors","placeholders","handleDemoOrientationCommand","normalized","wantsVerticalFlip","wantsHorizontalFlip","wantsRotateRight","wantsRotateLeft","wantsRotateBack","hasOrientationKeyword","handled","operations","currentX","currentY","join","taskId","addTaskCard","saveCommandToHistory","modePrefix","getModePrefix","fullCommand","handleImportCommand","orientationResult","modifySelectedObject","getSelectedObjects","confirmMessage","confirm","deleteObjects","connectToProgress","successMessages","updateTaskCard","errorMessages","scrollToBottom","showConfirmationDialog","confirmText","cancelText","confirmColor","dialog","closeModalWithAnimation","escHandler","removeEventListener","addSystemMessage","taskInfo","random","substr","card","setAttribute","getFloatingCardStyles","setProperty","iconMap","pending","processing","progress","completed","friendlyMessage","getFriendlyMessage","updateCardDisplayLimit","startTime","endTime","contentType","settings","addCardDetailEvents","animateCardEntrance","has","taskData","animateCardSuccess","animateCardError","entry","getTaskCardStyles","statusBorders","maxVisibleCards","allCards","existingCounter","hiddenCount","counter","counterBaseColor","counterBorderColor","counterTextColor","firstChild","counterHoverColor","isTouchDevice","maxTouchPoints","showTaskDetailModal","hoverTimeout","clearTimeout","existingModal","createTaskDetailModal","overlayColor","modalBg","modalBorder","textColor","labelColor","statusText","modalContent","closeBtn","closeTaskDetailModal","transition","animateCardExit","addErrorTooltip","getResponseType","errorMessage","shortPrompt","substring","responseType","shortError","getStatusColor","colors","createStatusIndicator","animateTaskCompletion","addSubtleParticleEffect","ensureTaskAnimations","angle","cos","sin","addTaskStatus","percent","updateTaskProgress","newMessage","existingTask","completeTask","serverTaskId","uiTaskId","eventSource","EventSource","onmessage","parse","handleProgressUpdate","onerror","disconnectProgress","connection","close","scrollTop","prefixes","commandData","shift","updateUndoRedoButtons","canUndo","undoLastGenerate","undoLastModify","undoLastDelete","canRedo","redoCommand","undoBtn","redoBtn","showClearAllConfirmation","examples","example","setSceneManager","setClient","generateBtn","themeOrder","currentIndex","indexOf","nextIndex","currentDisplay","currentFlexDirection","brandBadge","updateFloatingContainerTheme","updateExistingTextColors","system","hint","defaultTextColor","fileInput","handleFileSelection","enableDragAndDrop","fileSelectButton","disableDragAndDrop","openFileSelector","detectFileType","url","defaultPrompt","handleDragOver","bind","handleDrop","handleDragEnter","handleDragLeave","dataTransfer","ext","load3DModel","processedFileName","importedType","importedUrl","triggerAttentionAnimation","chatOutput","inputField","addMicroShakeEffect","addContextGlow","addEmotionalPulse","add3DDepthEffect","ensureMicroShakeAnimation","pulseColor","borderLeft","ensureEmotionalPulseAnimation","newMode","isPreviousModeMessage","getModeDisplayName","inputValue","importPatterns","modeNames","showFloatingIconContextMenu","existingMenu","menu","openFormItem","textShadow","hideIconItem","hideFloatingIcon","bottom","closeMenu","showFloatingIcon","overlayHeight","overlayBackground","overlayBorder","overlayInnerShadow","overlayTextColor","KEYWORD_HIGHLIGHT_COLOR","CommandUI","highlightOverlay","inputDefaultStyles","applyKeywordHighlighting","getAllCommandKeywords","createHighlightOverlay","matches","clearKeywordHighlighting","computedStyle","getComputedStyle","captureInputDefaultStyles","letterSpacing","borderWidth","highlightedHTML","lastIndex","escapeHtml","start","getKeywordColor","end","backgroundImage","getInputTextColor","div","ensureShimmerStyles","styleSheet","shimmerEffect","floatingAnimation","updateServiceModalStyles","hadHighlight","createChocoDrop","sceneOptions","uiOptions","resolvedServerUrl","chocoDropClient","ui","createChocoDro","createLiveCommand","createChocoDropDemo","otherSceneOptions","mergedSceneOptions"],"sources":["../src/client/LiveCommandClient.js","../src/client/SceneManager.js","../src/client/demo/CommandUIDemo.js","../src/client/CommandUI.js","../src/client/bootstrap.js","../src/client/demo/index.js"],"sourcesContent":["/**\n * ChocoDrop Client - サーバーとの通信クライアント\n */\nexport class ChocoDropClient {\n  constructor(serverUrl = null) {\n    this.serverUrl = null;\n    this.initialized = false;\n    this.initPromise = null;\n\n    if (serverUrl) {\n      this.serverUrl = serverUrl;\n      this.initialized = true;\n      console.log('🍫 ChocoDropClient initialized:', serverUrl);\n    } else {\n      // 設定取得を遅延実行（Promiseを保存）\n      this.initPromise = this.initializeWithConfig();\n    }\n  }\n\n  /**\n   * サーバーから設定を取得して初期化\n   */\n  async initializeWithConfig() {\n    try {\n      // 現在のページのホストとポートを基準に設定API呼び出し\n      const baseUrl = `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\n\n      const response = await fetch(`${baseUrl}/api/config`);\n      if (response.ok) {\n        const config = await response.json();\n        this.serverUrl = config.serverUrl;\n        console.log('🍫 ChocoDropClient initialized from config:', this.serverUrl);\n      } else {\n        // フォールバック：ポート推測\n        this.serverUrl = this.detectServerUrl();\n        console.log('🍫 ChocoDropClient fallback to detected URL:', this.serverUrl);\n      }\n    } catch (error) {\n      console.warn('⚠️ ChocoDrop config fetch failed, using fallback:', error);\n      this.serverUrl = this.detectServerUrl();\n    }\n\n    this.initialized = true;\n  }\n\n  /**\n   * サーバーURL自動検出（フォールバック）\n   */\n  detectServerUrl() {\n    const currentPort = window.location.port;\n    const protocol = window.location.protocol;\n    const hostname = window.location.hostname;\n\n    // ポートが未指定の場合（ファイルプロトコル等）は既定の 3011 を使用\n    if (!currentPort) {\n      return `${protocol}//${hostname}:3011`;\n    }\n\n    return `${protocol}//${hostname}:${currentPort}`;\n  }\n\n  /**\n   * 初期化完了を待機\n   */\n  async ensureInitialized() {\n    if (this.initialized) return;\n\n    // initPromiseがあれば待機\n    if (this.initPromise) {\n      await this.initPromise;\n      return;\n    }\n\n    // フォールバック：初期化されていない場合はエラー\n    throw new Error('ChocoDropClient not initialized');\n  }\n\n  /**\n   * 画像生成リクエスト\n   */\n  async generateImage(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎨 Requesting image generation: \"${prompt}\"`);\n\n    try {\n      const payload = {\n        prompt,\n        width: options.width || 512,\n        height: options.height || 512\n      };\n\n      if (options.service) {\n        payload.service = options.service;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Image generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Image generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成リクエスト\n   */\n  async generateVideo(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎬 Requesting video generation: \"${prompt}\"`);\n\n    try {\n      const safeDefaults = {\n        // aspect_ratio: サーバー側で各モデル最適な比率を自動選択\n        resolution: '720p',\n        enable_safety_checker: true,\n        enable_prompt_expansion: true\n      };\n\n      const payload = {\n        prompt,\n        duration: typeof options.duration === 'number' && options.duration > 0 ? options.duration : 3,\n        resolution: options.resolution || safeDefaults.resolution,\n        enable_safety_checker: options.enable_safety_checker ?? safeDefaults.enable_safety_checker,\n        enable_prompt_expansion: options.enable_prompt_expansion ?? safeDefaults.enable_prompt_expansion\n      };\n\n      // ユーザーが明示的にアスペクト比を指定した場合のみ追加\n      if (options.aspect_ratio) {\n        payload.aspect_ratio = options.aspect_ratio;\n      }\n      // それ以外はサーバー側で各モデルに最適な比率を自動選択\n\n      if (options.model) {\n        payload.model = options.model;\n      }\n\n      if (typeof options.width === 'number' && options.width > 0) {\n        payload.width = options.width;\n      }\n\n      if (typeof options.height === 'number' && options.height > 0) {\n        payload.height = options.height;\n      }\n\n      if (typeof options.seed === 'number') {\n        payload.seed = options.seed;\n      }\n\n      if (options.negative_prompt) {\n        payload.negative_prompt = options.negative_prompt;\n      }\n\n      if (typeof options.frames_per_second === 'number' && options.frames_per_second > 0) {\n        payload.frames_per_second = options.frames_per_second;\n      }\n\n      if (typeof options.guidance_scale === 'number') {\n        payload.guidance_scale = options.guidance_scale;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate-video`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Video generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Video generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド実行\n   */\n  async executeCommand(command) {\n    await this.ensureInitialized();\n    console.log(`🎯 Executing command: \"${command}\"`);\n\n    try {\n      const response = await fetch(`${this.serverUrl}/api/command`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ command })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Command execution result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 利用可能なサービス一覧取得\n   */\n  async getAvailableServices() {\n    await this.ensureInitialized();\n    try {\n      const response = await fetch(`${this.serverUrl}/api/services`);\n      \n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      return await response.json();\n\n    } catch (error) {\n      console.error('❌ Failed to get services:', error);\n      return [];\n    }\n  }\n}\n\n// 後方互換のため旧名称もエクスポート\nexport const LiveCommandClient = ChocoDropClient;\nexport const ChocoDroClient = ChocoDropClient;\n","import * as THREE from 'three';\nimport { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\n\n/**\n * Scene Manager - 3D scene integration for ChocoDrop System\n * Handles natural language parsing and 3D object management\n */\nexport class SceneManager {\n  constructor(scene, options = {}) {\n    if (!scene) {\n      throw new Error('THREE.Scene is required');\n    }\n    \n    this.scene = scene;\n    this.camera = options.camera || null;\n    this.renderer = options.renderer || null;\n    this.labelRenderer = null; // CSS2DRenderer for UI overlays like audio controls\n    // ChocoDrop Client（共通クライアント注入を優先）\n    // 外部フォルダから共有する場合は options.client でクライアントを再利用\n    this.client = options.client || new ChocoDropClient(options.serverUrl);\n    \n    // 実験オブジェクト管理用グループ\n    this.experimentGroup = new THREE.Group();\n    this.experimentGroup.name = 'LiveExperiments';\n    // 一旦シーンに追加（後でカメラに移動する可能性あり）\n    this.scene.add(this.experimentGroup);\n    \n    // コマンド履歴\n    this.commandHistory = [];\n    \n    // オブジェクト管理\n    this.spawnedObjects = new Map();\n    this.objectCounter = 0;\n    this.selectedObject = null;\n    this.selectedImageService = options.selectedImageService || null;\n    this.selectedVideoService = options.selectedVideoService || null;\n\n    // Animation管理（UI要素用）\n    this.clock = new THREE.Clock();\n    \n    // レイキャスティング用\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    this.lastHoveredObject = null;\n    \n    // 設定\n    this.config = {\n      showLocationIndicator: options.showLocationIndicator !== false,\n      indicatorDuration: options.indicatorDuration || 3000,\n      defaultObjectScale: options.defaultObjectScale || 1.0,\n      enableObjectSelection: options.enableObjectSelection !== false,\n      enableMouseInteraction: options.enableMouseInteraction,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n    \n    // クリックイベントの設定\n    this.setupClickEvents();\n    \n    console.log('🧪 SceneManager initialized with click selection');\n\n    // デバッグやコンソール操作を容易にするためグローバル参照を保持\n    if (typeof globalThis !== 'undefined') {\n      globalThis.sceneManager = this;\n    }\n  }\n  /**\n   * クリックイベントの設定\n   */\n  setupClickEvents() {\n    // enableMouseInteractionが明示的にtrueの場合のみマウス操作を有効化\n    if (this.config.enableMouseInteraction === true && this.renderer) {\n      this.setupObjectDragging();\n      console.log('🖱️ Mouse interaction enabled - Click to select, Shift+drag to move objects');\n    } else if (this.config.enableMouseInteraction === true && !this.renderer) {\n      console.warn('⚠️ Mouse interaction requested but renderer not provided. Mouse interaction disabled.');\n    } else {\n      console.log('🖱️ Mouse interaction disabled (safe mode). Set enableMouseInteraction: true to enable.');\n    }\n  }\n\n  // デバッグ情報表示メソッド\n  debugSceneInfo() {\n    console.log('🔍 === SCENE DEBUG INFO ===');\n    \n    // カメラ情報\n    if (this.camera) {\n      console.log(`📷 Camera:\n        - Position: (${this.camera.position.x.toFixed(2)}, ${this.camera.position.y.toFixed(2)}, ${this.camera.position.z.toFixed(2)})\n        - Rotation: (${(this.camera.rotation.x * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.y * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.z * 180 / Math.PI).toFixed(1)}°)\n        - FOV: ${this.camera.fov || 'N/A'}\n        - Near/Far: ${this.camera.near || 'N/A'}/${this.camera.far || 'N/A'}`);\n    }\n    \n    // シーン階層\n    console.log(`🌳 Scene hierarchy:\n      - Total objects in scene: ${this.scene.children.length}\n      - experimentGroup exists: ${this.scene.getObjectByName('LiveExperiments') ? 'Yes' : 'No'}\n      - experimentGroup children: ${this.experimentGroup.children.length}`);\n    \n    // 生成されたオブジェクト\n    console.log(`📦 Spawned objects: ${this.spawnedObjects.size}`);\n    this.spawnedObjects.forEach((obj, id) => {\n      const worldPos = new THREE.Vector3();\n      obj.getWorldPosition(worldPos);\n      console.log(`  - ${id} (${obj.userData.type}): \n        Local: (${obj.position.x.toFixed(2)}, ${obj.position.y.toFixed(2)}, ${obj.position.z.toFixed(2)})\n        World: (${worldPos.x.toFixed(2)}, ${worldPos.y.toFixed(2)}, ${worldPos.z.toFixed(2)})\n        Visible: ${obj.visible}, Scale: ${obj.scale.x.toFixed(2)}`);\n      \n      // 3Dモデルの詳細情報\n      if (obj.userData.type === 'generated_3d_model') {\n        const box = new THREE.Box3().setFromObject(obj);\n        const size = box.getSize(new THREE.Vector3());\n        const center = box.getCenter(new THREE.Vector3());\n        console.log(`    📐 Bounding box - Center: (${center.x.toFixed(2)}, ${center.y.toFixed(2)}, ${center.z.toFixed(2)}), Size: (${size.x.toFixed(2)}, ${size.y.toFixed(2)}, ${size.z.toFixed(2)})`);\n        \n        // メッシュ数\n        let meshCount = 0;\n        obj.traverse((child) => {\n          if (child.isMesh) meshCount++;\n        });\n        console.log(`    🎭 Meshes: ${meshCount}`);\n      }\n    });\n    \n    // カメラからの距離計算\n    if (this.camera && this.spawnedObjects.size > 0) {\n      console.log(`📏 Distances from camera:`);\n      this.spawnedObjects.forEach((obj, id) => {\n        const distance = this.camera.position.distanceTo(obj.position);\n        console.log(`  - ${id}: ${distance.toFixed(2)} units`);\n      });\n    }\n    \n    console.log('=========================');\n  }\n  \n\n  \n  /**\n   * オブジェクト選択\n   */\n  selectObject(object) {\n    // 既に同じオブジェクトが選択されている場合は何もしない\n    if (this.selectedObject === object) {\n      return;\n    }\n\n    // 前の選択を解除\n    this.deselectObject();\n\n    this.selectedObject = object;\n\n    this.createModernSelectionIndicator(object);\n\n    console.log(`✅ Selected object: ${object.name}`);\n    \n    // CommandUIに選択情報を表示\n    if (this.commandUI) {\n      const objectInfo = object.userData || {};\n      this.commandUI.addOutput(`📍 選択: ${object.name}`, 'info');\n      if (objectInfo.prompt) {\n        this.commandUI.addOutput(`   プロンプト: ${objectInfo.prompt}`, 'hint');\n      }\n      if (objectInfo.modelName) {\n        this.commandUI.addOutput(`   モデル: ${objectInfo.modelName}`, 'hint');\n      }\n\n      // 削除モードが待機中の場合、削除コマンドを自動入力\n      if (this.commandUI.currentMode === 'delete') {\n        const objectName = objectInfo.originalPrompt || object.name || '選択したオブジェクト';\n        this.commandUI.input.value = `${objectName}を削除`;\n        this.commandUI.input.focus();\n        // カーソルを文末に移動（選択状態を解除）\n        this.commandUI.input.setSelectionRange(this.commandUI.input.value.length, this.commandUI.input.value.length);\n        this.commandUI.addOutput(`🎯 削除対象設定: ${objectName}`, 'system');\n      }\n    }\n  }\n\n  createModernSelectionIndicator(object) {\n    // シンプルで確実な選択インジケーター\n    // 既存のインジケーターを削除（重複防止）\n    const existingIndicator = object.getObjectByName('selectionIndicator');\n    if (existingIndicator) {\n      object.remove(existingIndicator);\n    }\n\n    const indicatorGroup = new THREE.Group();\n    indicatorGroup.name = 'selectionIndicator';\n\n    // オブジェクトのバウンディングボックスを正確に取得\n    const box = new THREE.Box3().setFromObject(object);\n    const size = box.getSize(new THREE.Vector3());\n    const center = box.getCenter(new THREE.Vector3());\n\n    // 小さなマージンを追加して枠が見えやすくする\n    const margin = 0.1;\n    const adjustedSize = new THREE.Vector3(\n      size.x + margin,\n      size.y + margin, \n      size.z + margin\n    );\n\n    // シンプルな黄色い枠線\n    // PlaneGeometryの場合は平面的な枠を作成\n    if (object.geometry && object.geometry.type === 'PlaneGeometry') {\n      // スケールは既にオブジェクトに適用されているので、ジオメトリのサイズのみ使用\n      const width = object.geometry.parameters.width;\n      const height = object.geometry.parameters.height;\n      \n      // 平面の周りに枠線を作成\n      const shape = new THREE.Shape();\n      shape.moveTo(-width/2, -height/2);\n      shape.lineTo(width/2, -height/2);\n      shape.lineTo(width/2, height/2);\n      shape.lineTo(-width/2, height/2);\n      shape.lineTo(-width/2, -height/2);\n      \n      const points = shape.getPoints();\n      const geometryLine = new THREE.BufferGeometry().setFromPoints(points);\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const materialLine = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const line = new THREE.Line(geometryLine, materialLine);\n      line.position.set(0, 0, 0.01); // 少し前に出して見えるようにする\n      indicatorGroup.add(line);\n    } else {\n      // その他のオブジェクトは通常の3Dボックス枠\n      const edgesGeometry = new THREE.EdgesGeometry(\n        new THREE.BoxGeometry(adjustedSize.x, adjustedSize.y, adjustedSize.z)\n      );\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const edgesMaterial = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const edges = new THREE.LineSegments(edgesGeometry, edgesMaterial);\n      edges.position.copy(center);\n      indicatorGroup.add(edges);\n    }\n\n    // インジケーターをオブジェクトの子として追加（オブジェクトと一緒に動く）\n    object.add(indicatorGroup);\n    indicatorGroup.position.set(0, 0, 0); // 親からの相対位置は0\n\n    // リサイズハンドルを追加（親オブジェクトを直接渡す）\n    this.addResizeHandles(indicatorGroup, adjustedSize, center, object);\n  }\n\n  /**\n   * リサイズハンドルを追加\n   */\n  addResizeHandles(indicatorGroup, size, center, parentObject) {\n    // PlaneGeometryオブジェクト用のリサイズハンドル\n    console.log('🔧 addResizeHandles called');\n\n    if (!parentObject) {\n      console.log('❌ No parent object provided');\n      return;\n    }\n\n    if (!parentObject.geometry) {\n      console.log('❌ Parent has no geometry');\n      return;\n    }\n\n    if (parentObject.geometry.type !== 'PlaneGeometry') {\n      console.log(`❌ Geometry type is ${parentObject.geometry.type}, not PlaneGeometry`);\n      return;\n    }\n\n    console.log('✅ PlaneGeometry detected, creating handles');\n\n    const handleSize = 0.15; // 2025年トレンド: より小さく洗練された\n    const handleGeometry = new THREE.BoxGeometry(handleSize, handleSize, handleSize);\n    // 角を丸くするため、後でroundedBoxを使用\n\n    // 常に前面に表示されるマテリアル\n    // 2025年トレンド: アダプティブリサイズハンドル\n    const adaptiveColor = this.getAdaptiveSelectionColor();\n    const handleMaterial = new THREE.MeshBasicMaterial({\n      color: adaptiveColor,\n      transparent: true,\n      opacity: 0.8,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    const handleHoverMaterial = new THREE.MeshBasicMaterial({\n      color: this.getAdaptiveHoverColor(),\n      transparent: true,\n      opacity: 1.0,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    // 四隅の位置を計算（親オブジェクトのジオメトリサイズに基づく）\n    const width = parentObject.geometry.parameters.width;\n    const height = parentObject.geometry.parameters.height;\n\n    const positions = [\n      { x: width/2, y: height/2, z: 0.1, corner: 'top-right' },\n      { x: -width/2, y: height/2, z: 0.1, corner: 'top-left' },\n      { x: width/2, y: -height/2, z: 0.1, corner: 'bottom-right' },\n      { x: -width/2, y: -height/2, z: 0.1, corner: 'bottom-left' }\n    ];\n\n    positions.forEach((pos, index) => {\n      const handle = new THREE.Mesh(handleGeometry, handleMaterial.clone());\n      handle.position.set(pos.x, pos.y, pos.z); // 親からの相対位置\n      handle.userData = { \n        isResizeHandle: true, \n        handleIndex: index,\n        corner: pos.corner,\n        defaultMaterial: handle.material,\n        hoverMaterial: handleHoverMaterial.clone()\n      };\n      \n      // ホバーエフェクトを追加\n      // レンダリング順序を高く設定（常に前面）\n      handle.renderOrder = 1001;\n\n      handle.onHover = () => {\n        handle.material = handle.userData.hoverMaterial;\n        handle.scale.setScalar(1.5);\n        document.body.style.cursor = 'nw-resize';\n      };\n\n      handle.onHoverExit = () => {\n        handle.material = handle.userData.defaultMaterial;\n        handle.scale.setScalar(1.0);\n        document.body.style.cursor = 'default';\n      };\n\n      indicatorGroup.add(handle);\n\n      // デバッグ用にハンドルが見えることを確認\n      console.log(`🔴 Added resize handle at ${pos.corner}`);\n    });\n  }\n\n  /**\n   * 選択インジケーターのスケールをリアルタイム更新（パフォーマンス最適化版）\n   */\n  updateSelectionIndicatorScale(object) {\n    // リサイズ中はインジケーターの更新をスキップ（パフォーマンス最適化）\n    // 枠線はオブジェクトと一緒にスケールされるので、特別な更新は不要\n\n    // ハンドル位置のみ更新が必要な場合は、ここで処理\n    // 現在は自動的にオブジェクトと一緒にスケールされるので処理不要\n  }\n\n  /**\n   * オブジェクト選択解除\n   */\n  deselectObject() {\n    // シンプルで確実な選択解除\n    if (this.selectedObject) {\n      // 選択インジケーターを削除（オブジェクトの子から探す）\n      const indicator = this.selectedObject.getObjectByName('selectionIndicator');\n      if (indicator) {\n        this.selectedObject.remove(indicator);\n        \n        // メモリリークを防ぐためにリソースを破棄\n        indicator.traverse((child) => {\n          if (child.geometry) child.geometry.dispose();\n          if (child.material) {\n            if (Array.isArray(child.material)) {\n              child.material.forEach(material => material.dispose());\n            } else {\n              child.material.dispose();\n            }\n          }\n        });\n      }\n\n      console.log(`✅ Deselected: ${this.selectedObject.name}`);\n      this.selectedObject = null;\n    }\n  }\n\n  /**\n   * マウスドラッグによるオブジェクト移動機能\n   */\n  setupObjectDragging() {\n    if (!this.renderer) return;\n    \n    const canvas = this.renderer.domElement;\n    let isDragging = false;\n    let dragObject = null;\n    let dragOffset = new THREE.Vector3();\n    let mouseStart = new THREE.Vector2();\n    let dragMode = 'move'; // 'move', 'resize', 'rotate'\n    let originalScale = new THREE.Vector3();\n    \n    canvas.addEventListener('mousedown', (event) => {\n      if (event.button !== 0) return; // 左クリックのみ\n      \n      // レイキャスティングでオブジェクト検出\n      const rect = canvas.getBoundingClientRect();\n      this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(this.mouse, this.camera);\n      // オブジェクトとその子（選択インジケーター含む）を検出対象に\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const object = intersects[0].object;\n\n        // リサイズハンドルがクリックされた場合 - Shiftキー不要\n        if (object.userData && object.userData.isResizeHandle) {\n          // リサイズモード開始\n          isDragging = true;\n          dragObject = this.selectedObject; // リサイズする実際のオブジェクト\n          dragMode = 'resize';\n          \n          // ハンドル情報を保存\n          this.resizeHandleInfo = {\n            corner: object.userData.corner,\n            handleIndex: object.userData.handleIndex\n          };\n          \n          originalScale.copy(dragObject.scale);\n          mouseStart.set(event.clientX, event.clientY);\n          canvas.style.cursor = 'nw-resize';\n          console.log(`🔄 Started resizing: ${dragObject.name} from ${object.userData.corner}`);\n          return;\n        }\n\n        // 回転ハンドルがクリックされた場合\n        if (object.userData && object.userData.isRotateHandle) {\n          // 回転モード開始（今後実装）\n          console.log(`🔄 Rotation handle clicked for: ${this.selectedObject.name}`);\n          return;\n        }\n\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video' || object.userData.type === 'generated_3d_model' || object.userData.source === 'imported_file')) {\n          \n          // 🗑️ Deleteモードでのクリック処理\n          if (this.commandUI && this.commandUI.currentMode === 'delete') {\n            // 削除確認ダイアログを表示して直接削除\n            const objectName = object.name;\n            console.log(`🗑️ Delete mode: clicked on ${objectName}`);\n            \n            this.commandUI.showDeleteConfirmation(`オブジェクト「${objectName}」を削除`)\n              .then(confirmed => {\n                if (confirmed) {\n                  this.removeObject(objectName);\n                  this.commandUI.addOutput(`🗑️ 削除完了: ${objectName}`, 'success');\n                } else {\n                  this.commandUI.addOutput(`❌ 削除キャンセル: ${objectName}`, 'info');\n                }\n              })\n              .catch(error => {\n                console.error('Delete confirmation error:', error);\n                this.commandUI.addOutput(`❌ 削除エラー: ${objectName}`, 'error');\n              });\n            return; // 削除モードの場合は移動処理をスキップ\n          }\n          \n          // 移動モード開始（Shiftキー不要）\n          isDragging = true;\n          dragObject = object;\n          dragMode = 'move';\n          dragOffset.copy(intersects[0].point).sub(object.position);\n          mouseStart.set(event.clientX, event.clientY);\n\n          // 高品質な視覚フィードバック\n          if (object.material) {\n            // 移動中の透明度変更（オプション）\n            // object.material.opacity = 0.8;\n            // object.material.transparent = true;\n          }\n          // スケール変更を削除（大きくなる原因）\n\n          canvas.style.cursor = 'move';\n          console.log(`🔄 Started moving: ${object.name} (Shift-free interaction)`);\n\n          // 選択状態も更新\n          this.selectObject(object);\n        } else {\n          // 通常クリック: 選択のみ\n          this.selectObject(object);\n        }\n      } else {\n        this.deselectObject();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (event) => {\n      // ドラッグ中でない場合はホバーエフェクトを処理\n      if (!isDragging) {\n        this.handleHoverEffects(event, canvas);\n        return;\n      }\n      \n      // ドラッグ中の処理\n      if (!dragObject) return;\n      \n      // マウスの移動量を計算\n      const deltaX = event.clientX - mouseStart.x;\n      const deltaY = event.clientY - mouseStart.y;\n\n      if (dragMode === 'resize') {\n        // リサイズモード: より直感的な方向計算\n        if (!this.resizeHandleInfo) {\n          console.error('❌ Resize handle info missing');\n          return;\n        }\n        \n        const corner = this.resizeHandleInfo.corner;\n        let scaleMultiplier = 1;\n        \n        // 各ハンドルの位置に応じた直感的な方向計算\n        switch(corner) {\n          case 'top-right': \n            // 右上ハンドル: 右上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'top-left':\n            // 左上ハンドル: 左上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-right':\n            // 右下ハンドル: 右下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-left':\n            // 左下ハンドル: 左下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          default:\n            scaleMultiplier = 1 + (deltaX + deltaY) * 0.001; // フォールバック\n        }\n        \n        const newScale = Math.max(0.1, Math.min(5.0, originalScale.x * scaleMultiplier));\n        dragObject.scale.setScalar(newScale);\n\n        // 選択インジケーターも更新（パフォーマンス最適化）\n        this.updateSelectionIndicatorScale(dragObject);\n\n      } else if (dragMode === 'move') {\n        // 移動モード（従来の処理）\n        const cameraRight = new THREE.Vector3();\n        const cameraUp = new THREE.Vector3();\n        this.camera.getWorldDirection(new THREE.Vector3()); // dummy call to update matrix\n        cameraRight.setFromMatrixColumn(this.camera.matrixWorld, 0).normalize();\n        cameraUp.setFromMatrixColumn(this.camera.matrixWorld, 1).normalize();\n\n        // マウス移動をワールド座標に変換\n        const moveScale = 0.01;\n        const worldMove = new THREE.Vector3()\n          .add(cameraRight.clone().multiplyScalar(deltaX * moveScale))\n          .add(cameraUp.clone().multiplyScalar(-deltaY * moveScale));\n\n        dragObject.position.add(worldMove);\n        mouseStart.set(event.clientX, event.clientY);\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (isDragging && dragObject) {\n        // ドラッグ終了の処理\n        if (dragObject.material) {\n          dragObject.material.opacity = 1.0;\n          dragObject.material.transparent = false;\n        }\n\n        // スケールを元に戻す（移動開始時に変更した場合）\n        // 現在は移動開始時のスケール変更を削除したので、この処理は不要\n\n        console.log(`✅ Finished dragging: ${dragObject.name} to (${dragObject.position.x.toFixed(1)}, ${dragObject.position.y.toFixed(1)}, ${dragObject.position.z.toFixed(1)})`);\n\n        isDragging = false;\n        dragObject = null;\n        dragMode = 'move'; // リセット\n        this.resizeHandleInfo = null; // リサイズハンドル情報をクリーンアップ\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Shift+ホイールでリサイズ機能を追加\n    canvas.addEventListener('wheel', (event) => {\n      event.preventDefault();\n      \n      const rect = canvas.getBoundingClientRect();\n      const mouse = new THREE.Vector2();\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(mouse, this.camera);\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (obj.userData && (obj.userData.type === 'generated_image' || obj.userData.type === 'generated_video' || obj.userData.type === 'generated_3d_model')) {\n          const scaleFactor = event.deltaY > 0 ? 0.9 : 1.1;\n          const newScale = obj.scale.x * scaleFactor;\n          \n          // 最小・最大サイズ制限\n          if (newScale >= 0.2 && newScale <= 5.0) {\n            obj.scale.setScalar(newScale);\n            \n            // 高品質な視覚フィードバック\n            if (obj.material) {\n              obj.material.emissive.setHex(0x333333);\n              setTimeout(() => {\n                if (obj.material) {\n                  obj.material.emissive.setHex(0x000000);\n                }\n              }, 150);\n            }\n            \n            console.log(`🔄 Resized ${obj.userData.type}: ${obj.name} to scale ${newScale.toFixed(2)} (Shift-free interaction)`);\n          }\n        }\n      }\n    });\n\n    // 選択したオブジェクトの角度調整キーボードコントロール\n    document.addEventListener('keydown', (event) => {\n      if (!this.selectedObject) return;\n      \n      const object = this.selectedObject;\n      // 生成された画像・動画のみ角度調整可能\n      if (!object.userData || (object.userData.type !== 'generated_image' && object.userData.type !== 'generated_video')) {\n        return;\n      }\n      \n      const rotationStep = Math.PI / 36; // 5度ずつ回転\n      let rotated = false;\n      \n      switch (event.key) {\n        case 'ArrowLeft':\n          object.rotation.y -= rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowRight':\n          object.rotation.y += rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowUp':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationX = object.rotation.x - rotationStep;\n          if (newRotationX >= -Math.PI/6 && newRotationX <= Math.PI/6) {\n            object.rotation.x = newRotationX;\n            rotated = true;\n          }\n          break;\n        case 'ArrowDown':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationXDown = object.rotation.x + rotationStep;\n          if (newRotationXDown >= -Math.PI/6 && newRotationXDown <= Math.PI/6) {\n            object.rotation.x = newRotationXDown;\n            rotated = true;\n          }\n          break;\n        case 'r':\n        case 'R':\n          // リセット：正面向きに戻す\n          object.rotation.x = 0;\n          // カメラの視線方向（ユーザーがモニターで見ている方向）に向ける\n          const cameraDirection = new THREE.Vector3();\n          this.camera.getWorldDirection(cameraDirection);\n          const targetPoint = object.position.clone().add(cameraDirection.multiplyScalar(-1));\n          object.lookAt(targetPoint);\n          object.rotation.x = 0; // お辞儀防止\n          rotated = true;\n          console.log(`🔄 Reset rotation for: ${object.name}`);\n          break;\n\n        case 'i':\n        case 'I':\n          // デバッグ情報表示\n          this.debugSceneInfo();\n          event.preventDefault();\n          break;\n      }\n      \n      if (rotated) {\n        event.preventDefault();\n        const angles = {\n          x: (object.rotation.x * 180 / Math.PI).toFixed(1),\n          y: (object.rotation.y * 180 / Math.PI).toFixed(1),\n          z: (object.rotation.z * 180 / Math.PI).toFixed(1)\n        };\n        console.log(`🔄 Rotated ${object.userData.type}: ${object.name} to (${angles.x}°, ${angles.y}°, ${angles.z}°)`);\n      }\n    });\n\n    console.log('🖱️ Object dragging system enabled (Drag to move objects - Shift-free interaction)');\n    console.log('🔄 Object resizing system enabled (Scroll to resize images/videos - Shift-free interaction)');\n    console.log('🎯 Angle adjustment enabled (Select object + Arrow keys to rotate, R to reset)');\n  }\n\n  handleHoverEffects(event, canvas) {\n    // レイキャスティングでオブジェクト検出\n    const rect = canvas.getBoundingClientRect();\n    this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    \n    this.raycaster.setFromCamera(this.mouse, this.camera);\n\n    // オブジェクトとその子（選択インジケーター含む）を検出対象に\n    const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n    \n    // 前回ホバーしていたオブジェクトのエフェクトをリセット\n    if (this.lastHoveredObject && this.lastHoveredObject.onHoverExit) {\n      this.lastHoveredObject.onHoverExit();\n      this.lastHoveredObject = null;\n    }\n    \n    // 新しいホバー対象を検出\n    if (intersects.length > 0) {\n      const object = intersects[0].object;\n      \n      // リサイズハンドルにホバーした場合\n      if (object.userData && object.userData.isResizeHandle && object.onHover) {\n        object.onHover();\n        this.lastHoveredObject = object;\n        return;\n      }\n      \n      // 通常のオブジェクトにホバーした場合\n      if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video')) {\n        // 移動可能なオブジェクトの場合はカーソルを変更\n        canvas.style.cursor = 'move';\n\n        this.lastHoveredObject = { onHoverExit: () => { canvas.style.cursor = 'default'; } };\n        return;\n      }\n    }\n    \n    // ホバー対象がない場合はデフォルトカーソル\n    canvas.style.cursor = 'default';\n  }\n\n  /**\n   * メインコマンド実行エントリーポイント\n   * @param {string} command - 自然言語コマンド\n   */\n  async executeCommand(command) {\n    const timestamp = Date.now();\n    console.log(`🎯 Executing: \"${command}\"`);\n    \n    try {\n      // コマンド解析\n      const parsed = this.parseCommand(command);\n      console.log('📝 Parsed:', parsed);\n      \n      // コマンド実行\n      const result = await this.dispatchCommand(parsed);\n      \n      // 履歴に記録\n      this.commandHistory.push({\n        timestamp,\n        command,\n        parsed,\n        result,\n        status: 'success'\n      });\n      \n      return result;\n      \n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      \n      this.commandHistory.push({\n        timestamp,\n        command,\n        error: error.message,\n        status: 'error'\n      });\n      \n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド解析\n   * @param {string} command \n   * @returns {object} 解析結果\n   */\n  parseCommand(command) {\n    // プレフィックスでモードを判定\n    if (command.startsWith('[変更] ')) {\n      const actualCommand = command.replace('[変更] ', '');\n      return this.parseObjectModificationCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    if (command.startsWith('[削除] ')) {\n      const actualCommand = command.replace('[削除] ', '');\n      return this.parseDeleteCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    // 動画生成の判定（プレフィックスなし = 生成モード）\n    const cmd = command.toLowerCase().trim();\n    \n    // 自然言語オブジェクト操作の判定（「オブジェクト名 + 動作」パターン）\n    const naturalLanguagePattern = this.parseNaturalLanguageCommand(cmd);\n    if (naturalLanguagePattern) {\n      return naturalLanguagePattern;\n    }\n    \n    // 動画関連キーワードをチェック\n    const videoKeywords = ['動画', 'ビデオ', 'ムービー', '映像', 'アニメーション', '動く', \n                          'video', 'movie', 'animation', 'animate', 'motion', 'moving', 'clip'];\n    const isVideoRequest = videoKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isVideoRequest) {\n      return {\n        type: 'video_generation',\n        prompt: command,\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // オブジェクト選択関連キーワードをチェック\n    const selectKeywords = ['選択', 'select', 'オブジェクト選択', '既存', 'existing'];\n    const isSelectRequest = selectKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isSelectRequest) {\n      return {\n        type: 'object_selection',\n        position: this.parsePosition(cmd)\n      };\n    }\n    \n    // ファイルインポート関連キーワードをチェック\n    const importKeywords = ['インポート', 'import', '読み込', '読込', 'ファイル', 'file', '画像を選択', '動画を選択', '選択して配置'];\n    const isImportRequest = importKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isImportRequest) {\n      const isVideoImport = cmd.includes('動画') || cmd.includes('video') || cmd.includes('mp4');\n      return {\n        type: 'file_import',\n        fileType: isVideoImport ? 'video' : 'image',\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // 画像生成キーワードをチェック\n    const imageKeywords = ['画像', '写真', 'イメージ', '絵', 'ピクチャー', \n                          'image', 'picture', 'photo', 'generate', 'create', 'make', 'draw'];\n    const isImageRequest = imageKeywords.some(keyword => cmd.includes(keyword));\n    \n    // デフォルト: 画像生成として処理\n    return {\n      type: 'image_generation',\n      prompt: command,\n      position: this.parsePosition(cmd),\n      size: this.parseSize(cmd)\n    };\n  }\n\n  /**\n   * コマンドから対象オブジェクトを特定\n   */\n  findObjectByKeyword(command) {\n    // オブジェクトを識別するキーワード\n    const objectKeywords = {\n      '猫': ['cat', 'ネコ', 'ねこ'],\n      '犬': ['dog', 'イヌ', 'いぬ'],\n      'ドラゴン': ['dragon', '龍', 'りゅう'],\n      'ユニコーン': ['unicorn'],\n      'ペガサス': ['pegasus'],\n      '鳥': ['bird', 'とり', 'トリ'],\n      '花': ['flower', 'はな', 'ハナ'],\n      '城': ['castle', 'しろ', 'シロ'],\n      '山': ['mountain', 'やま', 'ヤマ'],\n      '木': ['tree', 'き', 'キ']\n    };\n\n    // シーン内のオブジェクトを検索\n    for (const child of this.scene.children) {\n      if (!child.name || !child.name.startsWith('generated_')) continue;\n      \n      // オブジェクト名からタイプを推測（例: generated_image_1 → image）\n      const nameParts = child.name.split('_');\n      \n      // コマンド内のキーワードと照合\n      for (const [keyword, aliases] of Object.entries(objectKeywords)) {\n        // メインキーワードをチェック\n        if (command.includes(keyword)) {\n          console.log(`🎯 Found object by keyword \"${keyword}\": ${child.name}`);\n          return child;\n        }\n        \n        // エイリアスもチェック\n        for (const alias of aliases) {\n          if (command.toLowerCase().includes(alias.toLowerCase())) {\n            console.log(`🎯 Found object by alias \"${alias}\": ${child.name}`);\n            return child;\n          }\n        }\n      }\n      \n      // プロンプトメタデータがある場合は、それも確認\n      if (child.userData && child.userData.prompt) {\n        const prompt = child.userData.prompt.toLowerCase();\n        for (const [keyword, aliases] of Object.entries(objectKeywords)) {\n          if (prompt.includes(keyword.toLowerCase())) {\n            console.log(`🎯 Found object by prompt \"${keyword}\": ${child.name}`);\n            return child;\n          }\n        }\n      }\n    }\n    \n    // 最後に作成されたオブジェクトを返すオプション\n    if (command.includes('最後') || command.includes('最新') || command.includes('last')) {\n      const generatedObjects = this.scene.children.filter(\n        child => child.name && child.name.startsWith('generated_')\n      );\n      if (generatedObjects.length > 0) {\n        const lastObject = generatedObjects[generatedObjects.length - 1];\n        console.log(`🎯 Found last created object: ${lastObject.name}`);\n        return lastObject;\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * 画像生成コマンド解析\n   */\n  parseImageGenerationCommand(command) {\n    // プロンプト抽出 (「を」「に」「で」などで区切る)\n    let prompt = command;\n    const particles = ['を', 'に', 'で', 'の'];\n    \n    for (const particle of particles) {\n      if (command.includes(particle)) {\n        const parts = command.split(particle);\n        if (parts[0]) {\n          prompt = parts[0].trim();\n          break;\n        }\n      }\n    }\n    \n    // 不要な語句を除去\n    prompt = prompt\n      .replace(/(画像|作って|生成|して|ください)/g, '')\n      .trim();\n    \n    return {\n      type: 'image_generation',\n      prompt,\n      position: this.parsePosition(command),\n      size: this.parseSize(command)\n    };\n  }\n\n  /**\n   * オブジェクト変更コマンド解析\n   */\n  parseObjectModificationCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 色変更の解析\n    let color = null;\n    const colorMap = {\n      '赤': 0xff0000, '青': 0x0000ff, '緑': 0x00ff00, '黄': 0xffff00,\n      '紫': 0xff00ff, '橙': 0xff8800, 'オレンジ': 0xff8800,\n      '白': 0xffffff, '黒': 0x000000, '灰': 0x808080, 'グレー': 0x808080,\n      'ピンク': 0xffc0cb, '茶': 0x8b4513, '銀': 0xc0c0c0, '金': 0xffd700\n    };\n    \n    for (const [colorName, colorValue] of Object.entries(colorMap)) {\n      if (cmd.includes(colorName)) {\n        color = colorValue;\n        break;\n      }\n    }\n    \n    // サイズ変更の解析\n    let scale = null;\n    if (cmd.includes('大きく') || cmd.includes('拡大')) {\n      scale = 1.5;\n    } else if (cmd.includes('小さく') || cmd.includes('縮小')) {\n      scale = 0.7;\n    } else if (cmd.includes('倍')) {\n      const match = cmd.match(/(\\d+(?:\\.\\d+)?)\\s*倍/);\n      if (match) {\n        scale = parseFloat(match[1]);\n      }\n    }\n    \n    // 移動コマンドの解析\n    let movement = null;\n    if (cmd.includes('移動') || cmd.includes('動か') || cmd.includes('へ')) {\n      movement = this.parsePositionFromPrompt(cmd);\n    }\n\n    // 回転コマンドの解析\n    let rotation = null;\n    if (cmd.includes('回転') || cmd.includes('回す') || cmd.includes('回して') || cmd.includes('rotate')) {\n      // 角度指定があるかチェック\n      const degreeMatch = cmd.match(/(\\d+)\\s*度/);\n      if (degreeMatch) {\n        rotation = parseFloat(degreeMatch[1]) * Math.PI / 180; // 度をラジアンに変換\n      } else {\n        rotation = Math.PI / 4; // デフォルトは45度\n      }\n    }\n\n    // 透明度コマンドの解析\n    let opacity = null;\n    if (cmd.includes('透明') || cmd.includes('transparent')) {\n      if (cmd.includes('半透明')) {\n        opacity = 0.5;\n      } else {\n        opacity = 0.3; // デフォルトの透明度\n      }\n    } else if (cmd.includes('不透明') || cmd.includes('opaque')) {\n      opacity = 1.0;\n    }\n\n    return {\n      type: 'object_modification',\n      command: command,\n      color: color,\n      scale: scale,\n      movement: movement,\n      rotation: rotation,\n      opacity: opacity,\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * 削除コマンド解析\n   */\n  parseDeleteCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 選択されたオブジェクトのみを削除するか、全削除かを判定\n    if (cmd.includes('選択') || cmd.includes('これ') || cmd.includes('この')) {\n      return {\n        type: 'delete',\n        target: 'selected',\n        requiresSelection: true\n      };\n    }\n    \n    if (cmd.includes('全部') || cmd.includes('すべて') || cmd.includes('全て')) {\n      return {\n        type: 'delete',\n        target: 'all'\n      };\n    }\n    \n    // デフォルト: 選択されたオブジェクトを削除\n    return {\n      type: 'delete',\n      target: 'selected',\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * 自然言語オブジェクト操作コマンド解析\n   * 例: \"ユニコーンを右に移動\", \"猫の画像をピンクに\", \"1つ目の猫を左に\"\n   */\n  parseNaturalLanguageCommand(command) {\n    // 移動パターンをチェック\n    const movePatterns = [\n      '(\\S+?)を(.+?)に移動', \n      '(\\S+?)を(.+?)へ移動',\n      '(\\S+?)を(.+?)に動か',\n      '(\\S+?)を(.+?)へ動か'\n    ];\n    \n    for (const pattern of movePatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n        const direction = match[2];\n        \n        console.log(`🎯 Natural language move detected: \"${objectName}\" to \"${direction}\"`);\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          movement: this.parsePositionFromPrompt(direction),\n          requiresObjectSearch: true\n        };\n      }\n    }\n    \n    // 色変更パターンをチェック\n    const colorPatterns = [\n      '(\\S+?)を(\\S+?)色に',\n      '(\\S+?)を(\\S+?)に'\n    ];\n    \n    // 色変更は基本的な色のみ対応\n    const colorKeywords = ['赤', '青', '緑', '黄', '紫', '橙', 'オレンジ', '白', '黒', '灰', 'グレー', 'ピンク', '茶', '銀', '金'];\n    \n    for (const pattern of colorPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match && colorKeywords.some(color => match[2].includes(color))) {\n        const objectName = match[1];\n        const colorName = match[2];\n        \n        console.log(`🎨 Natural language color change detected: \"${objectName}\" to \"${colorName}\"`);\n        \n        // 色変更の解析（既存のロジックを流用）\n        const colorMap = {\n          '赤': 0xff0000, '青': 0x0000ff, '緑': 0x00ff00, '黄': 0xffff00,\n          '紫': 0xff00ff, '橙': 0xff8800, 'オレンジ': 0xff8800,\n          '白': 0xffffff, '黒': 0x000000, '灰': 0x808080, 'グレー': 0x808080,\n          'ピンク': 0xffc0cb, '茶': 0x8b4513, '銀': 0xc0c0c0, '金': 0xffd700\n        };\n        \n        let colorValue = null;\n        for (const [colorKey, value] of Object.entries(colorMap)) {\n          if (colorName.includes(colorKey)) {\n            colorValue = value;\n            break;\n          }\n        }\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          color: colorValue,\n          requiresObjectSearch: true\n        };\n      }\n    }\n    \n    return null; // 自然言語パターンに一致しない場合\n  }\n\n  /**\n   * 移動コマンドから相対位置を解析（オブジェクト移動用）\n   */\n  parsePositionFromPrompt(command) {\n    let x = 0, y = 0, z = 0;\n    \n    // 左右移動（修正：左右を正しい方向に）\n    if (command.includes('右へ') || command.includes('右に') || command.includes('右側へ') || command.includes('右側に')) {\n      x = 5; // 5メートル右へ（正の値で右に移動）\n    } else if (command.includes('左へ') || command.includes('左に') || command.includes('左側へ') || command.includes('左側に')) {\n      x = -5; // 5メートル左へ（負の値で左に移動）\n    }\n    \n    // 上下移動\n    if (command.includes('上へ') || command.includes('上に') || command.includes('上側へ')) {\n      y = 3; // 3メートル上へ\n    } else if (command.includes('下へ') || command.includes('下に') || command.includes('下側へ')) {\n      y = -3; // 3メートル下へ\n    }\n    \n    // 前後移動\n    if (command.includes('前へ') || command.includes('手前へ') || command.includes('近くへ')) {\n      z = 3; // カメラに近づける\n    } else if (command.includes('後ろへ') || command.includes('奥へ') || command.includes('遠くへ')) {\n      z = -3; // カメラから遠ざける\n    }\n    \n    // 距離指定の解析\n    const distanceMatch = command.match(/(\\d+(?:\\.\\d+)?)\\s*(?:メートル|m)/);\n    if (distanceMatch) {\n      const distance = parseFloat(distanceMatch[1]);\n      // 方向に応じて距離を適用\n      if (Math.abs(x) > 0) x = x > 0 ? distance : -distance;\n      if (Math.abs(y) > 0) y = y > 0 ? distance : -distance;\n      if (Math.abs(z) > 0) z = z > 0 ? distance : -distance;\n    }\n    \n    // 「少し」「大きく」などの修飾語\n    if (command.includes('少し') || command.includes('ちょっと')) {\n      x *= 0.5; y *= 0.5; z *= 0.5;\n    } else if (command.includes('大きく') || command.includes('たくさん')) {\n      x *= 2; y *= 2; z *= 2;\n    }\n    \n    console.log(`📍 Position movement parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * 位置情報解析（カメラ相対位置）\n   */\n  parsePosition(command) {\n    const defaultPos = { x: 0, y: 5, z: 10 }; // カメラ前方10m、少し上\n    \n    // 基本方向の解析（カメラ相対座標系）\n    let x = 0, y = 5, z = 10; // デフォルト値（カメラ相対、正のzが前方）\n    \n    // 組み合わせ位置を最初にチェック（優先度最高）\n    if (command.includes('左下')) {\n      x = -8; y = 0; z = 10;  // 左下: 左側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 左下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右上')) {\n      x = 5; y = 4; z = 12;  // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 右上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('左上')) {\n      x = -8; y = 4; z = 15; // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 左上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右下')) {\n      x = 8; y = 0; z = 10; // 右下: 右側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 右下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 特殊位置\n    if (command.includes('中央') || command.includes('真ん中') || command.includes('正面')) {\n      x = 0; y = 3; z = 12;  // y=3 で目線レベルに\n      console.log(`📍 Position parsed from \"${command}\": 中央 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('空') || command.includes('天空')) {\n      x = 0; y = 20; z = 10;\n      console.log(`📍 Position parsed from \"${command}\": 空中 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('地面') || command.includes('足元')) {\n      x = 0; y = 1; z = 8;\n      console.log(`📍 Position parsed from \"${command}\": 地面 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 個別方向の解析\n    // 前後方向\n    if (command.includes('前に') || command.includes('手前に')) {\n      z = 5; // カメラに近づける\n    } else if (command.includes('後ろに') || command.includes('奥に') || command.includes('遠くに')) {\n      z = 20; // カメラから遠ざける\n    }\n    \n    // 左右方向\n    if (command.includes('右に') || command.includes('右側') || command.includes('画面の右')) {\n      x = 8;\n    } else if (command.includes('左に') || command.includes('左側') || command.includes('画面の左')) {\n      x = -8;\n    }\n    \n    // 上下方向（カメラ相対）\n    if (command.includes('上に') || command.includes('上側') || command.includes('画面の上') || command.includes('高い位置に') || command.includes('空中に')) {\n      y = 8; // カメラから8メートル上\n    } else if (command.includes('下に') || command.includes('下側') || command.includes('画面の下') || command.includes('低い位置に') || command.includes('地面に')) {\n      y = -2; // カメラから2メートル下\n    }\n    \n    // 距離指定\n    if (command.includes('近くに') || command.includes('すぐ前に')) {\n      z = Math.min(z * 0.5, 3); // 半分の距離、ただし最低3m（正の値なので min を使用）\n    } else if (command.includes('遠くに') || command.includes('向こうに')) {\n      z = z * 1.5; // 1.5倍の距離\n    }\n    \n    console.log(`📍 Position parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * サイズ解析\n   */\n  parseSize(command) {\n    if (command.includes('大きな') || command.includes('大きい')) return { scale: 2.0 };\n    if (command.includes('小さな') || command.includes('小さい')) return { scale: 0.5 };\n    return { scale: this.config.defaultObjectScale };\n  }\n\n  /**\n   * コマンド種別別実行\n   */\n  async dispatchCommand(parsed) {\n    switch (parsed.type) {\n      case 'image_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('画像生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeImageGeneration(parsed);\n        \n      case 'video_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('動画生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeVideoGeneration(parsed);\n        \n      case 'object_modification':\n        return await this.executeObjectModification(parsed);\n        \n      case 'natural_object_modification':\n        return await this.executeNaturalObjectModification(parsed);\n        \n      case 'delete':\n        return await this.executeDelete(parsed);\n        \n      case 'file_import':\n        return await this.executeFileImport(parsed);\n        \n      case 'object_selection':\n        return await this.executeObjectSelection(parsed);\n        \n      default:\n        throw new Error(`Unknown command type: ${parsed.type}`);\n    }\n  }\n\n  /**\n   * 画像生成実行\n   */\n  async executeImageGeneration(parsed) {\n    try {\n      console.log(`🎨 Generating image: \"${parsed.prompt}\"`);\n      \n      // 段階的にサイズを試行（シーンに配置しやすいサイズを優先）\n      const fallbackSizes = [\n        { width: 512, height: 512 },    // 1:1 基本サイズ（互換性最高）\n        { width: 768, height: 432 },    // 16:9 現代的サイズ\n        { width: 1024, height: 1024 },  // 大きめ1:1\n        { width: 640, height: 480 },    // 4:3 クラシック\n      ];\n      \n      let imageResult;\n      let lastError;\n      \n      for (let i = 0; i < fallbackSizes.length; i++) {\n        const dimensions = fallbackSizes[i];\n        try {\n          console.log(`🔄 Trying ${dimensions.width}x${dimensions.height}...`);\n          \n          imageResult = await this.client.generateImage(parsed.prompt, {\n            width: dimensions.width,\n            height: dimensions.height,\n            service: this.selectedImageService || undefined\n          });\n          \n          if (imageResult.success) {\n            console.log(`✅ Success with ${dimensions.width}x${dimensions.height}`);\n            break;\n          }\n        } catch (error) {\n          lastError = error;\n          console.log(`⚠️ Failed with ${dimensions.width}x${dimensions.height}: ${error.message}`);\n          \n          // 最後の試行でない場合は続行\n          if (i < fallbackSizes.length - 1) {\n            console.log(`🔄 Retrying with next size...`);\n            continue;\n          }\n        }\n      }\n      \n      // 結果にモデル情報を含める\n      if (imageResult && imageResult.modelName) {\n        console.log(`📡 Used model: ${imageResult.modelName}`);\n      }\n      \n      const loader = new THREE.TextureLoader();\n      let texture;\n      if (imageResult && imageResult.success && (imageResult.imageUrl || imageResult.localPath)) {\n        // 成功: 生成された画像をテクスチャとして使用\n        let imageUrl = imageResult.imageUrl;\n        \n        // localPathの場合はWebアクセス可能なURLに変換\n        if (!imageUrl && imageResult.localPath) {\n          const filename = imageResult.localPath.split('/').pop();\n          imageUrl = `${this.client.serverUrl}/generated/${filename}`;\n        }\n        \n        console.log(`✅ Image generated successfully: ${imageUrl}`);\n        texture = await loader.loadAsync(imageUrl);\n\n        // テクスチャの色彩を正確に表示するための設定\n        texture.colorSpace = THREE.SRGBColorSpace; // 正しいカラースペース\n      } else {\n        // 失敗: プレースホルダー画像を使用\n        console.log(`⚠️ Using fallback image (last error: ${lastError?.message || 'unknown'})`);\n        texture = this.createFallbackTexture(parsed.prompt);\n      }\n\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n      if (aspectRatio >= 1) {\n        planeWidth = baseSize;\n        planeHeight = baseSize / aspectRatio;\n      } else {\n        planeWidth = baseSize * aspectRatio;\n        planeHeight = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: false,  // 不透明で鮮明表示\n        side: THREE.DoubleSide, // 両面表示\n        toneMapped: false    // トーンマッピングを無効化（より鮮やかな色彩）\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（画像も前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      \n      // カメラ相対位置で配置（カメラの向きも考慮）\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        // フォールバック: 絶対座標\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n      \n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n      \n      // 識別用の名前とメタデータ\n      const objectId = `generated_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_image',\n        modelName: imageResult?.modelName || this.selectedImageService || null\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加（視覚的フィードバック）\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: imageResult?.modelName,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎨 Image generation failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成実行\n   */\n  async executeVideoGeneration(parsed) {\n    try {\n      console.log(`🎬 Generating video: \"${parsed.prompt}\"`);\n      console.log('🔍 Video generation - selectedVideoService:', this.selectedVideoService);\n      \n      // ChocoDro Client経由で動画生成\n      // アスペクト比は各モデルのサポート状況に応じてサーバー側で最適化\n      const videoResult = await this.client.generateVideo(parsed.prompt, {\n        duration: 3,\n        model: this.selectedVideoService || undefined\n        // width, height指定を削除してサーバー側デフォルト(16:9)を使用\n      });\n      \n      // 結果にモデル情報を含める\n      if (videoResult.modelName) {\n        console.log(`📡 Used model: ${videoResult.modelName}`);\n      }\n      \n      let videoTexture;\n      let video = null; // video変数をスコープ外で定義\n      \n      if (videoResult.success && videoResult.videoUrl) {\n        // 成功: 生成された動画をテクスチャとして使用\n        console.log(`✅ Video generated successfully: ${videoResult.videoUrl}`);\n        \n        // HTML5 video要素を作成\n        video = document.createElement('video');\n        video.src = videoResult.videoUrl;\n        video.crossOrigin = 'anonymous';\n        video.loop = true;\n        video.muted = true; // 初期はミュート（ユーザーが手動で音声制御）\n        video.playsInline = true;\n        \n        // 動画テクスチャを作成\n        videoTexture = new THREE.VideoTexture(video);\n        videoTexture.colorSpace = THREE.SRGBColorSpace;\n        \n        // 動画の自動再生を開始\n        video.addEventListener('loadeddata', () => {\n          video.play().catch(console.error);\n        });\n        \n      } else {\n        // 失敗: プレースホルダー動画テクスチャを使用\n        console.log(`⚠️ Using fallback video texture`);\n        videoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      }\n      \n      // 動画を表示する平面ジオメトリを作成（アスペクト比を考慮）\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const requestedWidth = videoResult.metadata?.width || 512;\n      const requestedHeight = videoResult.metadata?.height || 512;\n      const planeAspect = requestedWidth && requestedHeight ? requestedWidth / requestedHeight : 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n\n      if (planeAspect >= 1) {\n        planeHeight = baseSize / planeAspect;\n      } else {\n        planeWidth = baseSize * planeAspect;\n      }\n\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（動画を前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        videoUrl: videoResult.videoUrl,\n        modelName: videoResult.modelName || this.selectedVideoService || null,\n        width: requestedWidth,\n        height: requestedHeight,\n        videoElement: video // video要素の参照を保存\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created video object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: videoResult.modelName,\n        videoUrl: videoResult.videoUrl,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video generation failed:', error);\n      \n      // エラー時もプレースホルダー動画を表示\n      console.log('🔄 Creating fallback video plane due to generation error');\n      const fallbackVideoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      \n      // 動画を表示する平面ジオメトリを作成\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n      const geometry = new THREE.PlaneGeometry(baseSize, baseSize);\n      const material = new THREE.MeshBasicMaterial({\n        map: fallbackVideoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        videoUrl: null, // エラー時はnull\n        modelName: 'Error Fallback',\n        width: 512,\n        height: 512,\n        videoElement: null,\n        error: error.message\n      };\n\n      // シーンに追加\n      this.scene.add(plane);\n      console.log('📍 Fallback video plane added to scene');\n\n      return {\n        success: false,\n        error: error.message,\n        object: plane,\n        prompt: parsed.prompt\n      };\n    }\n  }\n\n  async loadImageFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 }, fileName = null } = options;\n      \n      console.log(`📁 Loading image file: ${fileUrl}`);\n      \n      // ファイルからテクスチャを読み込み\n      const loader = new THREE.TextureLoader();\n      const texture = await loader.loadAsync(fileUrl);\n\n      // テクスチャの色彩を正確に表示するための設定\n      texture.colorSpace = THREE.SRGBColorSpace;\n\n      // アスペクト比を算出（fallback: 1）\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n      \n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      if (aspectRatio >= 1) {\n        width = baseSize;\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n        height = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成（縦横比を維持）\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n\n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // ファイル名からpromptを作成（拡張子を除去）\n      const prompt = fileName ? fileName.replace(/\\.[^/.]+$/, '') : 'imported_image';\n\n      // 識別用の名前とメタデータ\n      const objectId = `imported_image_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_image',\n        prompt: prompt, // ファイル名をpromptとして設定\n        fileName: fileName, // 元のファイル名も保存\n        importOrder: this.objectCounter // インポート順序を記録\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created imported image: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('📁 Image file loading failed:', error);\n      throw error;\n    }\n  }\n\n  async loadVideoFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 }, fileName = null } = options;\n      \n      console.log(`🎬 Loading video file: ${fileUrl}`);\n      \n      // HTMLVideoElementを作成\n      const video = document.createElement('video');\n      video.src = fileUrl;\n      video.loop = true;\n      video.muted = true;\n      video.playsInline = true;\n      video.autoplay = true;\n      video.preload = 'auto';\n\n      // VideoTextureを作成\n      const videoTexture = new THREE.VideoTexture(video);\n      videoTexture.colorSpace = THREE.SRGBColorSpace;\n\n      // ビデオの読み込みとサイズ取得\n      await new Promise((resolve, reject) => {\n        const handleLoaded = () => {\n          console.log(`🎬 Video loaded: ${video.videoWidth}x${video.videoHeight}`);\n          resolve();\n        };\n        const handleError = (event) => {\n          reject(event?.error || new Error('Video failed to load'));\n        };\n\n        video.addEventListener('loadedmetadata', handleLoaded, { once: true });\n        video.addEventListener('error', handleError, { once: true });\n        video.load();\n      });\n\n      try {\n        await video.play();\n      } catch (playError) {\n        console.warn('🎬 Video autoplay could not start automatically. Playback will require user interaction.', playError);\n      }\n      \n      // アスペクト比を計算してサイズ調整\n      const aspectRatio = video.videoWidth / video.videoHeight;\n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      \n      if (aspectRatio > 1) {\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n      }\n      \n      // 動画を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // ファイル名からpromptを作成（拡張子を除去）\n      const prompt = fileName ? fileName.replace(/\\.[^/.]+$/, '') : 'imported_video';\n\n      // 識別用の名前とメタデータ\n      const objectId = `imported_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_video',\n        videoElement: video,\n        objectUrl: fileUrl,\n        prompt: prompt, // ファイル名をpromptとして設定\n        fileName: fileName, // 元のファイル名も保存\n        importOrder: this.objectCounter // インポート順序を記録\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n\n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created imported video: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video file loading failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語オブジェクト操作実行\n   */\n  async executeNaturalObjectModification(parsed) {\n    // オブジェクトを名前で検索\n    const targetObjects = this.findObjectsByName(parsed.targetObjectName);\n    \n    if (targetObjects.length === 0) {\n      return {\n        success: false,\n        message: `オブジェクト「${parsed.targetObjectName}」が見つかりませんでした`\n      };\n    }\n    \n    console.log(`🔍 Found ${targetObjects.length} object(s) matching \"${parsed.targetObjectName}\"`);\n    \n    // 複数の場合は序数詞で選択、なければ最初のオブジェクト\n    const targetObject = this.selectObjectFromMultiple(targetObjects, parsed.targetObjectName);\n    console.log(`🎯 Operating on object: ${targetObject.name}`);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        targetObject.material.color.setHex(parsed.color);\n        console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`);\n      } else {\n        targetObject.material.color.setHex(parsed.color);\n        console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y,\n        z: currentPos.z + parsed.movement.z\n      };\n      \n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        movement: parsed.movement,\n        command: `Natural language: ${parsed.targetObjectName}`\n      });\n      \n      return {\n        success: true,\n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          movement: parsed.movement\n        }\n      };\n    } else {\n      return {\n        success: false,\n        message: '変更可能な属性が見つかりませんでした'\n      };\n    }\n  }\n  \n  /**\n   * 名前でオブジェクトを検索\n   */\n  findObjectsByName(searchName) {\n    const results = [];\n    const searchLower = searchName.toLowerCase();\n    \n    // 生成されたオブジェクトから検索\n    for (const [objectId, object] of this.spawnedObjects) {\n      // プロンプト情報から検索\n      if (object.userData.prompt) {\n        const promptLower = object.userData.prompt.toLowerCase();\n        \n        // 部分一致で検索（「ユニコーン」が「ユニコーンの画像」にマッチ）\n        if (promptLower.includes(searchLower)) {\n          results.push(object);\n          console.log(`✅ Object match found: ${objectId} (prompt: \"${object.userData.prompt}\")`);\n        }\n      }\n      \n      // オブジェクト名からも検索\n      if (object.name && object.name.toLowerCase().includes(searchLower)) {\n        results.push(object);\n        console.log(`✅ Object match found: ${objectId} (name: \"${object.name}\")`);\n      }\n    }\n    \n    return results;\n  }\n  \n  /**\n   * 複数オブジェクトから序数詞で選択\n   */\n  selectObjectFromMultiple(objects, originalCommand) {\n    // 序数詞パターンをチェック\n    const ordinalPatterns = [\n      /(\\d+)つ目の/, /(\\d+)番目の/, /(\\d+)個目の/,\n      /最初の|1つ目の|1番目の|1個目の/,\n      /最後の|最終の/,\n      /2つ目の|2番目の|2個目の/,\n      /3つ目の|3番目の|3個目の/\n    ];\n    \n    for (const pattern of ordinalPatterns) {\n      const match = originalCommand.match(pattern);\n      if (match) {\n        let index;\n        \n        if (match[1]) {\n          // 数字が見つかった場合\n          index = parseInt(match[1]) - 1; // 1ベースから0ベースに変換\n        } else {\n          // 特別な表現の場合\n          const matchedText = match[0];\n          if (matchedText.includes('最初') || matchedText.includes('1つ目') || \n              matchedText.includes('1番目') || matchedText.includes('1個目')) {\n            index = 0;\n          } else if (matchedText.includes('最後') || matchedText.includes('最終')) {\n            index = objects.length - 1;\n          } else if (matchedText.includes('2つ目') || matchedText.includes('2番目') || matchedText.includes('2個目')) {\n            index = 1;\n          } else if (matchedText.includes('3つ目') || matchedText.includes('3番目') || matchedText.includes('3個目')) {\n            index = 2;\n          }\n        }\n        \n        if (index >= 0 && index < objects.length) {\n          console.log(`🔢 Selected object by ordinal: index ${index + 1} of ${objects.length}`);\n          return objects[index];\n        } else {\n          console.warn(`⚠️ Invalid ordinal index: ${index + 1} (available: 1-${objects.length})`);\n        }\n      }\n    }\n    \n    // 序数詞が見つからない場合はデフォルトで最初のオブジェクト\n    console.log(`🔢 No ordinal specified, using first object`);\n    return objects[0];\n  }\n\n  /**\n   * オブジェクト変更実行\n   */\n  async executeObjectModification(parsed) {\n    // コマンドから対象オブジェクトを特定\n    let targetObject = this.findObjectByKeyword(parsed.command);\n    \n    // キーワードで見つからない場合、選択されたオブジェクトを使用\n    if (!targetObject) {\n      if (!this.selectedObject) {\n        return { \n          success: false, \n          message: 'オブジェクトを選択するか、対象を指定してください（例：「猫を赤くして」）' \n        };\n      }\n      targetObject = this.selectedObject;\n    } else {\n      // キーワードで見つけたオブジェクトを選択状態にする\n      this.selectObject(targetObject);\n    }\n    console.log(`🔧 Modifying object: ${targetObject.name}`);\n    console.log(`🔍 Debug - parsed.movement:`, parsed.movement);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        // テクスチャがある場合は色調変更\n        targetObject.material.color.setHex(parsed.color);\n        console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`);\n      } else {\n        // テクスチャがない場合は直接色変更\n        targetObject.material.color.setHex(parsed.color);\n        console.log(`🎨 Color changed to: ${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n    \n    // サイズ変更\n    if (parsed.scale !== null) {\n      const currentScale = targetObject.scale.x; // 現在のスケール取得\n      const newScale = currentScale * parsed.scale;\n      targetObject.scale.setScalar(newScale);\n      console.log(`📏 Scale changed from ${currentScale} to ${newScale}`);\n      modified = true;\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      // 現在位置から相対移動\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y,\n        z: currentPos.z + parsed.movement.z\n      };\n\n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n\n    // 回転\n    if (parsed.rotation !== null) {\n      const currentRotation = targetObject.rotation.y;\n      const newRotation = currentRotation + parsed.rotation;\n      targetObject.rotation.y = newRotation;\n      const degrees = (parsed.rotation * 180 / Math.PI).toFixed(1);\n      console.log(`🔄 Rotation changed by ${degrees}° (new Y rotation: ${(newRotation * 180 / Math.PI).toFixed(1)}°)`);\n      modified = true;\n    }\n\n    // 透明度\n    if (parsed.opacity !== null && targetObject.material) {\n      const currentOpacity = targetObject.material.opacity || 1.0;\n      targetObject.material.opacity = parsed.opacity;\n      targetObject.material.transparent = parsed.opacity < 1.0;\n      console.log(`🔍 Opacity changed from ${currentOpacity.toFixed(2)} to ${parsed.opacity.toFixed(2)}`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        scale: parsed.scale,\n        movement: parsed.movement,\n        rotation: parsed.rotation,\n        opacity: parsed.opacity,\n        command: parsed.command\n      });\n      \n      return { \n        success: true, \n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          scale: parsed.scale,\n          movement: parsed.movement,\n          rotation: parsed.rotation,\n          opacity: parsed.opacity\n        }\n      };\n    } else {\n      return { \n        success: false, \n        message: '変更可能な属性が見つかりませんでした' \n      };\n    }\n  }\n\n  /**\n   * 削除実行\n   */\n  async executeDelete(parsed) {\n    // コマンドの安全性チェック\n    const command = parsed.command || '';\n    \n    // 「すべて」削除の場合\n    if (parsed.target === 'all' || command.includes('すべて') || command.includes('全部')) {\n      this.clearAll();\n      return { success: true, message: 'すべてのオブジェクトを削除しました' };\n    }\n    \n    // まずコマンドから対象オブジェクトを特定\n    const targetByKeyword = this.findObjectByKeyword(command);\n    \n    // 削除対象の優先順位：\n    // 1. コマンドで指定されたオブジェクト\n    // 2. 選択されているオブジェクト\n    // 3. コマンドが単に「削除」だけの場合は選択オブジェクトを優先\n    \n    let targetObject = null;\n    let deleteReason = '';\n    \n    // コマンドが単純な削除コマンドか判定\n    const isSimpleDeleteCommand = command.match(/^(削除|消して|消す|delete|remove)$/i);\n    \n    if (isSimpleDeleteCommand && this.selectedObject) {\n      // 単純な「削除」コマンドで選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    } else if (targetByKeyword) {\n      // キーワードで特定できた場合\n      targetObject = targetByKeyword;\n      deleteReason = 'コマンドで指定されたオブジェクト';\n    } else if (this.selectedObject) {\n      // その他の場合で選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    }\n    \n    if (targetObject) {\n      const objectId = targetObject.name;\n      console.log(`🗑️ Deleting ${deleteReason}: ${objectId}`);\n      \n      // 選択状態を解除\n      if (targetObject === this.selectedObject) {\n        this.deselectObject();\n      }\n      \n      // オブジェクトを削除\n      const success = this.removeObject(objectId);\n      \n      if (success) {\n        return { \n          success: true, \n          message: `${deleteReason}「${objectId}」を削除しました`,\n          deletedObjectId: objectId\n        };\n      } else {\n        return { \n          success: false, \n          message: 'オブジェクトの削除に失敗しました' \n        };\n      }\n    }\n    \n    return { \n      success: false, \n      message: '削除対象が見つかりませんでした。オブジェクトを選択するか、対象を指定してください' \n    };\n  }\n\n  async executeFileImport(parsed) {\n    try {\n      console.log('🍫 Starting file import process...');\n      \n      // ファイル選択ダイアログを表示\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.style.display = 'none';\n      \n      if (parsed.fileType === 'video') {\n        input.accept = 'video/*';\n      } else {\n        input.accept = 'image/*';\n      }\n      \n      document.body.appendChild(input);\n      \n      return new Promise((resolve, reject) => {\n        input.onchange = async (event) => {\n          try {\n            const file = event.target.files[0];\n            if (!file) {\n              reject(new Error('ファイルが選択されませんでした'));\n              return;\n            }\n            \n            console.log(`📁 Selected file: ${file.name}`);\n            \n            // ファイルのObjectURLを作成\n            const fileUrl = URL.createObjectURL(file);\n            \n            let result;\n            if (parsed.fileType === 'video' || file.type.startsWith('video/')) {\n              result = await this.loadVideoFile(fileUrl, { position: parsed.position });\n            } else {\n              result = await this.loadImageFile(fileUrl, { position: parsed.position });\n            }\n            \n            console.log('✅ File import completed:', result);\n            resolve(result);\n            \n          } catch (error) {\n            console.error('❌ File import failed:', error);\n            reject(error);\n          } finally {\n            document.body.removeChild(input);\n          }\n        };\n        \n        input.oncancel = () => {\n          document.body.removeChild(input);\n          reject(new Error('ファイル選択がキャンセルされました'));\n        };\n        \n        input.click();\n      });\n      \n    } catch (error) {\n      console.error('❌ File import execution failed:', error);\n      throw error;\n    }\n  }\n\n  async executeObjectSelection(parsed) {\n    try {\n      console.log('🎯 Starting object selection...');\n      \n      const objects = this.getSpawnedObjects();\n      if (objects.length === 0) {\n        throw new Error('選択可能なオブジェクトがありません。まずファイルをインポートしてください。');\n      }\n      \n      console.log(`📋 Available objects: ${objects.length}`);\n      \n      // オブジェクト選択UIを作成\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.8);\n        z-index: 10000;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;\n      \n      const container = document.createElement('div');\n      container.style.cssText = `\n        background: #1a1a2e;\n        border-radius: 12px;\n        padding: 24px;\n        max-width: 500px;\n        max-height: 70vh;\n        overflow-y: auto;\n        color: white;\n        font-family: Arial, sans-serif;\n      `;\n      \n      const title = document.createElement('h3');\n      title.textContent = '🎯 オブジェクトを選択してください';\n      title.style.cssText = 'margin: 0 0 16px 0; color: #ec4899;';\n      container.appendChild(title);\n      \n      const objectList = document.createElement('div');\n      objectList.style.cssText = 'margin-bottom: 16px;';\n      \n      objects.forEach((obj, index) => {\n        const item = document.createElement('div');\n        item.style.cssText = `\n          padding: 12px;\n          margin: 8px 0;\n          background: #2a2a3e;\n          border-radius: 8px;\n          cursor: pointer;\n          border: 2px solid transparent;\n          transition: all 0.3s ease;\n        `;\n        \n        const name = obj.userData?.type === 'generated_image' ? '🖼️ 画像' : \n                     obj.userData?.type === 'generated_video' ? '🎬 動画' : '📄 ファイル';\n        const time = new Date(obj.userData?.createdAt).toLocaleTimeString();\n        \n        item.innerHTML = `\n          <div style=\"font-weight: bold;\">${name} #${index + 1}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">作成: ${time}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">位置: (${Math.round(obj.position.x)}, ${Math.round(obj.position.y)}, ${Math.round(obj.position.z)})</div>\n        `;\n        \n        item.onmouseover = () => {\n          item.style.borderColor = '#ec4899';\n          item.style.background = '#3a3a4e';\n        };\n        \n        item.onmouseout = () => {\n          item.style.borderColor = 'transparent';\n          item.style.background = '#2a2a3e';\n        };\n        \n        item.onclick = () => {\n          resolve({ selectedObjectId: obj.id, selectedObject: obj });\n          document.body.removeChild(modal);\n        };\n        \n        objectList.appendChild(item);\n      });\n      \n      container.appendChild(objectList);\n      \n      const cancelBtn = document.createElement('button');\n      cancelBtn.textContent = 'キャンセル';\n      cancelBtn.style.cssText = `\n        background: #666;\n        color: white;\n        border: none;\n        padding: 8px 16px;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 14px;\n      `;\n      \n      cancelBtn.onclick = () => {\n        document.body.removeChild(modal);\n        reject(new Error('オブジェクト選択がキャンセルされました'));\n      };\n      \n      container.appendChild(cancelBtn);\n      modal.appendChild(container);\n      document.body.appendChild(modal);\n      \n      return new Promise((resolve, reject) => {\n        // Promise handlers are set up in the click events above\n      });\n      \n    } catch (error) {\n      console.error('❌ Object selection failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * フォールバック用のテクスチャ作成\n   */\n  createFallbackTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // グラデーション背景\n    const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n    gradient.addColorStop(0, `hsl(${hue}, 70%, 60%)`);\n    gradient.addColorStop(1, `hsl(${(hue + 60) % 360}, 70%, 40%)`);\n    \n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 512, 512);\n    \n    // テキスト描画\n    ctx.fillStyle = 'white';\n    ctx.font = '24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🎨', 256, 230);\n    \n    ctx.font = '16px Arial';\n    ctx.fillText(prompt.slice(0, 20), 256, 270);\n    \n    ctx.font = '14px Arial';\n    ctx.fillStyle = 'rgba(255,255,255,0.7)';\n    ctx.fillText('Placeholder Image', 256, 300);\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * フォールバック用の動画テクスチャ作成\n   */\n  createFallbackVideoTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // アニメーション用の変数\n    let animationFrame = 0;\n    \n    const animate = () => {\n      // グラデーション背景（時間で変化）\n      const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n      const offset = (animationFrame * 2) % 360;\n      gradient.addColorStop(0, `hsl(${(hue + offset) % 360}, 70%, 60%)`);\n      gradient.addColorStop(1, `hsl(${(hue + offset + 60) % 360}, 70%, 40%)`);\n      \n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, 512, 512);\n      \n      // 動的テキスト描画\n      ctx.fillStyle = 'white';\n      ctx.font = '24px Arial';\n      ctx.textAlign = 'center';\n      \n      // 動画アイコンをアニメーション\n      const icons = ['🎬', '🎥', '📹', '🎞️'];\n      const iconIndex = Math.floor(animationFrame / 10) % icons.length;\n      ctx.fillText(icons[iconIndex], 256, 230);\n      \n      ctx.font = '16px Arial';\n      ctx.fillText(prompt.slice(0, 20), 256, 270);\n      \n      ctx.font = '14px Arial';\n      ctx.fillStyle = 'rgba(255,255,255,0.7)';\n      ctx.fillText('Placeholder Video', 256, 300);\n      \n      animationFrame++;\n      \n      // 60FPSでアニメーション\n      setTimeout(() => requestAnimationFrame(animate), 1000/60);\n    };\n    \n    // アニメーション開始\n    animate();\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * 文字列のハッシュ値を計算\n   */\n  hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // 32bit整数に変換\n    }\n    return Math.abs(hash);\n  }\n\n  /**\n   * 生成されたオブジェクト一覧取得\n   */\n  getSpawnedObjects() {\n    return Array.from(this.spawnedObjects.entries()).map(([id, object]) => ({\n      id,\n      name: object.name,\n      userData: object.userData,\n      position: object.position.clone()\n    }));\n  }\n\n  /**\n   * オブジェクト削除\n   */\n  removeObject(objectId) {\n    const object = this.spawnedObjects.get(objectId);\n    if (object) {\n      if (object.userData?.videoElement) {\n        const videoElement = object.userData.videoElement;\n        try {\n          videoElement.pause();\n          if (typeof videoElement.removeAttribute === 'function') {\n            videoElement.removeAttribute('src');\n          } else {\n            videoElement.src = '';\n          }\n          if (typeof videoElement.load === 'function') {\n            videoElement.load();\n          }\n        } catch (error) {\n          console.warn('🎬 Failed to release video element resources:', error);\n        }\n      }\n\n      if (object.userData?.objectUrl) {\n        try {\n          URL.revokeObjectURL(object.userData.objectUrl);\n        } catch (error) {\n          console.warn('🎬 Failed to revoke object URL:', error);\n        }\n      }\n\n      this.experimentGroup.remove(object);\n      this.spawnedObjects.delete(objectId);\n      \n      // ジオメトリとマテリアルのメモリ解放\n      if (object.geometry) object.geometry.dispose();\n      if (object.material) {\n        const materials = Array.isArray(object.material) ? object.material : [object.material];\n        materials.forEach(mat => {\n          if (mat.map && typeof mat.map.dispose === 'function') {\n            mat.map.dispose();\n          }\n          mat.dispose();\n        });\n      }\n      \n      console.log(`🗑️ Removed object: ${objectId}`);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    const objectIds = Array.from(this.spawnedObjects.keys());\n    objectIds.forEach(id => this.removeObject(id));\n    console.log('🧹 Cleared all experimental objects');\n  }\n\n  /**\n   * コマンド履歴取得\n   */\n  getCommandHistory() {\n    return [...this.commandHistory];\n  }\n\n  /**\n   * 生成位置に一時的な視覚インジケーターを表示\n   */\n  createLocationIndicator(relativePosition) {\n    // 目立つ光る球体を作成\n    const geometry = new THREE.SphereGeometry(1, 16, 16);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00,\n      transparent: true,\n      opacity: 0.9\n    });\n    \n    const indicator = new THREE.Mesh(geometry, material);\n    \n    // カメラ相対位置でインジケーターも配置\n    if (this.camera) {\n      const indicatorPos = this.calculateCameraRelativePosition({\n        x: relativePosition.x,\n        y: relativePosition.y + 2, // オブジェクトの少し上に表示\n        z: relativePosition.z\n      });\n      indicator.position.copy(indicatorPos);\n    } else {\n      indicator.position.set(relativePosition.x, relativePosition.y + 2, relativePosition.z);\n    }\n    \n    console.log(`🟢 インジケーター表示: (${indicator.position.x.toFixed(1)}, ${indicator.position.y.toFixed(1)}, ${indicator.position.z.toFixed(1)})`);\n    \n    this.scene.add(indicator);\n    \n    // 設定された時間後に自動削除\n    setTimeout(() => {\n      this.scene.remove(indicator);\n      geometry.dispose();\n      material.dispose();\n    }, this.config.indicatorDuration);\n    \n    // アニメーション（点滅効果）\n    let opacity = 0.8;\n    let direction = -1;\n    const animate = () => {\n      opacity += direction * 0.05;\n      if (opacity <= 0.3) direction = 1;\n      if (opacity >= 0.8) direction = -1;\n      \n      material.opacity = opacity;\n      \n      if (indicator.parent) {\n        requestAnimationFrame(animate);\n      }\n    };\n    animate();\n  }\n\n  /**\n   * カメラ相対位置計算（画面座標対応）\n   */\n  calculateCameraRelativePosition(relativePosition) {\n    if (!this.camera) {\n      if (this.config.enableDebugLogging) {\n        console.warn('📷 Camera not available, using fallback positioning');\n      }\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n\n    try {\n      // カメラの位置と方向を取得\n      const cameraPos = this.camera.position.clone();\n      const cameraDirection = new THREE.Vector3();\n      this.camera.getWorldDirection(cameraDirection);\n      \n      // カメラの右方向と上方向を計算\n      const cameraRight = new THREE.Vector3();\n      const cameraUp = new THREE.Vector3(0, 1, 0); // ワールドの上方向\n      cameraRight.crossVectors(cameraDirection, cameraUp).normalize();\n      const cameraUpActual = new THREE.Vector3();\n      cameraUpActual.crossVectors(cameraRight, cameraDirection).normalize();\n\n      // 相対位置をカメラ座標系で計算\n      const finalPosition = cameraPos.clone();\n      \n      // 前後方向（Z軸）: カメラの向きに沿って（正の値で前方、負の値で後方）\n      finalPosition.add(cameraDirection.clone().multiplyScalar(relativePosition.z));\n      \n      // 左右方向（X軸）: カメラの右方向に沿って\n      finalPosition.add(cameraRight.clone().multiplyScalar(relativePosition.x));\n      \n      // 上下方向（Y軸）: カメラの上方向に沿って\n      finalPosition.add(cameraUpActual.clone().multiplyScalar(relativePosition.y));\n\n      this.logDebug(\n        `📍 Camera relative position calculated: (${finalPosition.x.toFixed(1)}, ${finalPosition.y.toFixed(1)}, ${finalPosition.z.toFixed(1)})`\n      );\n      return finalPosition;\n      \n    } catch (error) {\n      console.error('❌ Camera relative position calculation failed:', error);\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n  }\n\n  /**\n   * カメラを設定\n   */\n  alignPlaneToCamera(plane) {\n    if (!this.camera) {\n      return;\n    }\n\n    const forward = new THREE.Vector3();\n    this.camera.getWorldDirection(forward); // カメラの前方向（前方が負Z）\n    forward.negate(); // 平面の法線をカメラ側へ向ける\n\n    let up = new THREE.Vector3().copy(this.camera.up).applyQuaternion(this.camera.quaternion).normalize();\n    if (Math.abs(forward.dot(up)) > 0.999) {\n      up = new THREE.Vector3(0, 1, 0);\n      if (Math.abs(forward.dot(up)) > 0.999) {\n        up = new THREE.Vector3(0, 0, 1);\n      }\n    }\n\n    const right = new THREE.Vector3().crossVectors(up, forward).normalize();\n    up = new THREE.Vector3().crossVectors(forward, right).normalize();\n\n    const orientation = new THREE.Matrix4();\n    orientation.makeBasis(right, up, forward);\n    plane.quaternion.setFromRotationMatrix(orientation);\n  }\n\n  /**\n   * カメラを設定\n   */\n  setCamera(camera) {\n    this.camera = camera;\n  }\n\n  /**\n   * 設定を更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  setImageService(serviceId) {\n    this.selectedImageService = serviceId || null;\n    this.logDebug('🎯 Updated image service:', this.selectedImageService);\n  }\n\n  getImageService() {\n    return this.selectedImageService;\n  }\n\n  setVideoService(serviceId) {\n    this.selectedVideoService = serviceId || null;\n    this.logDebug('🎬 Updated video service:', this.selectedVideoService);\n  }\n\n  getVideoService() {\n    return this.selectedVideoService;\n  }\n\n\n\n\n\n  /**\n   * 音声制御UIを作成\n   */\n  createAudioControl(videoObject) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    // 音声制御ボタンを作成\n    const audioButton = document.createElement('div');\n    audioButton.className = 'chocodrop-audio-control';\n    audioButton.innerHTML = '♪'; // 初期状態：音楽記号\n    // カスタムツールチップを作成（プロジェクトのデザインシステムに合わせて）\n    const createTooltip = () => {\n      const tooltip = document.createElement('div');\n      tooltip.className = 'chocodrop-audio-tooltip';\n      tooltip.textContent = '音声のオン/オフ切り替え';\n      tooltip.style.cssText = `\n        position: absolute !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 8px !important;\n        padding: 8px 12px !important;\n        color: white !important;\n        font-size: 11px !important;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n        font-weight: 500 !important;\n        white-space: nowrap !important;\n        pointer-events: none !important;\n        z-index: 1000000 !important;\n        opacity: 0 !important;\n        transform: translateY(-100%) translateX(-50%) !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        margin-bottom: 8px !important;\n      `;\n      return tooltip;\n    };\n\n    const tooltip = createTooltip();\n    document.body.appendChild(tooltip);\n\n    // 縦型音量スライダーを作成\n    const createVolumeSlider = () => {\n      const sliderContainer = document.createElement('div');\n      sliderContainer.className = 'chocodrop-volume-slider';\n      sliderContainer.style.cssText = `\n        position: absolute !important;\n        width: 30px !important;\n        height: 100px !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 15px !important;\n        padding: 10px 8px !important;\n        z-index: 1000001 !important;\n        opacity: 0 !important;\n        pointer-events: none !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        display: flex !important;\n        flex-direction: column !important;\n        align-items: center !important;\n        justify-content: center !important;\n      `;\n\n      const slider = document.createElement('input');\n      slider.type = 'range';\n      slider.min = '0';\n      slider.max = '100';\n      slider.value = '100';\n      slider.style.cssText = `\n        width: 80px !important;\n        height: 12px !important;\n        background: rgba(255, 255, 255, 0.2) !important;\n        border-radius: 6px !important;\n        outline: none !important;\n        cursor: pointer !important;\n        -webkit-appearance: none !important;\n        appearance: none !important;\n        transform: rotate(-90deg) !important;\n        transform-origin: center !important;\n      `;\n\n      // WebKit用のスライダースタイル\n      const style = document.createElement('style');\n      style.textContent = `\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n          border: none;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-thumb {\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          border: none;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n      `;\n      document.head.appendChild(style);\n\n      // スライダーのスタイルをカスタマイズ\n      slider.addEventListener('input', (e) => {\n        const value = e.target.value;\n        videoElement.volume = value / 100;\n\n        // アイコンを音量に応じて変更\n        if (value == 0) {\n          audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n          audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n          audioButton.title = 'ミュート中';\n        } else {\n          audioButton.innerHTML = '♪';\n          audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n          audioButton.style.color = 'white !important';\n          audioButton.title = '音声ON';\n        }\n      });\n\n      sliderContainer.appendChild(slider);\n      return sliderContainer;\n    };\n\n    const volumeSlider = createVolumeSlider();\n    document.body.appendChild(volumeSlider);\n\n    audioButton.style.cssText = `\n      position: absolute !important;\n      width: 18px !important;\n      height: 18px !important;\n      background: rgba(0, 0, 0, 0.4) !important;\n      border: 1px solid rgba(255, 255, 255, 0.3) !important;\n      border-radius: 50% !important;\n      color: white !important;\n      font-size: 9px !important;\n      cursor: pointer !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      z-index: 999999 !important;\n      transition: all 0.2s ease !important;\n      user-select: none !important;\n      box-shadow: 0 1px 4px rgba(0,0,0,0.2) !important;\n      backdrop-filter: blur(8px) !important;\n      pointer-events: auto !important;\n      opacity: 1 !important;\n    `;\n\n    let isSliderVisible = false;\n\n    // ホバー効果とスライダー表示\n    audioButton.addEventListener('mouseenter', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.7)';\n      audioButton.style.transform = 'scale(1.05)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.5)';\n\n      if (!isSliderVisible) {\n        // ツールチップを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        tooltip.style.left = `${buttonRect.left + buttonRect.width / 2}px`;\n        tooltip.style.top = `${buttonRect.top - 8}px`;\n        tooltip.style.opacity = '1';\n      }\n    });\n\n    audioButton.addEventListener('mouseleave', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.5)';\n      audioButton.style.transform = 'scale(1.0)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n\n      // ツールチップを非表示\n      tooltip.style.opacity = '0';\n    });\n\n    // 左クリック：ミュートのオン/オフ切り替え\n    audioButton.addEventListener('click', (e) => {\n      e.stopPropagation();\n\n      // スライダーが表示されている場合は閉じる\n      if (isSliderVisible) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n        return;\n      }\n\n      // ミュート切り替え\n      if (videoElement.muted || videoElement.volume === 0) {\n        videoElement.muted = false;\n        videoElement.volume = volumeSlider.querySelector('input').value / 100;\n        audioButton.innerHTML = '♪';\n        audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n        audioButton.style.color = 'white !important';\n        audioButton.title = '音声ON';\n      } else {\n        videoElement.muted = true;\n        audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n        audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n        audioButton.title = 'ミュート中';\n      }\n    });\n\n    // 右クリック：音量スライダーの表示/非表示切り替え\n    audioButton.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      isSliderVisible = !isSliderVisible;\n\n      if (isSliderVisible) {\n        // スライダーを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        volumeSlider.style.left = `${buttonRect.left + buttonRect.width / 2 - 15}px`;\n        volumeSlider.style.top = `${buttonRect.top - 110}px`;\n        volumeSlider.style.opacity = '1';\n        volumeSlider.style.pointerEvents = 'auto';\n\n        // ツールチップを非表示\n        tooltip.style.opacity = '0';\n      } else {\n        // スライダーを非表示\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // 外側クリックでスライダーを閉じる\n    document.addEventListener('click', (e) => {\n      if (isSliderVisible && !audioButton.contains(e.target) && !volumeSlider.contains(e.target)) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // ページに追加\n    document.body.appendChild(audioButton);\n\n    // 音量ボタンは常時表示（非表示機能を削除）\n\n    // 動画オブジェクトに音声制御ボタンを関連付け\n    videoObject.userData.audioControlElement = audioButton;\n\n    // 位置更新関数を保存\n    videoObject.userData.updateAudioControlPosition = () => {\n      this.updateAudioControlPosition(videoObject, audioButton);\n    };\n\n    // 初期位置設定\n    this.updateAudioControlPosition(videoObject, audioButton);\n\n    // アニメーションループで位置を更新\n    if (!this.audioControlUpdateInterval) {\n      this.audioControlUpdateInterval = setInterval(() => {\n        this.spawnedObjects.forEach(obj => {\n          if (obj.userData.updateAudioControlPosition) {\n            obj.userData.updateAudioControlPosition();\n          }\n        });\n      }, 100); // 100msごとに更新\n    }\n\n    // 動画が削除されたときにボタンも削除\n    videoObject.userData.cleanupCallbacks = videoObject.userData.cleanupCallbacks || [];\n    videoObject.userData.cleanupCallbacks.push(() => {\n      if (audioButton.parentNode) {\n        audioButton.parentNode.removeChild(audioButton);\n      }\n    });\n\n    console.log('🔊 Audio control created for video:', videoObject.userData.id);\n  }\n\n  /**\n   * 音声制御ボタンの位置を動画オブジェクトに合わせて更新\n   */\n  updateAudioControlPosition(videoObject, audioButton) {\n    if (!this.camera || !this.renderer || !audioButton.parentNode) return;\n\n    // 動画オブジェクトの3D座標を画面座標に変換\n    const vector = new THREE.Vector3();\n    videoObject.getWorldPosition(vector);\n    vector.project(this.camera);\n\n    // 画面座標に変換\n    const canvas = this.renderer.domElement;\n    const rect = canvas.getBoundingClientRect();\n\n    const x = (vector.x * 0.5 + 0.5) * rect.width + rect.left;\n    const y = -(vector.y * 0.5 - 0.5) * rect.height + rect.top;\n\n    // 動画オブジェクトの右上にボタンを配置\n    const geometry = videoObject.geometry;\n    if (geometry && geometry.parameters) {\n      const width = geometry.parameters.width * videoObject.scale.x;\n      const offsetX = 150; // 動画の右側に固定距離\n      const offsetY = -50; // 動画の上側に固定距離\n\n      audioButton.style.left = `${x + offsetX}px`;\n      audioButton.style.top = `${y + offsetY}px`;\n    } else {\n      // フォールバック: 動画中心の右上\n      audioButton.style.left = `${x + 50}px`;\n      audioButton.style.top = `${y - 20}px`;\n    }\n  }\n\n  /**\n   * 動画音声の再生/停止を切り替え\n   */\n  toggleVideoAudio(videoObject, audioButton) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    if (videoElement.muted) {\n      // ミュート解除：音声再生\n      videoElement.muted = false;\n      audioButton.innerHTML = '🔈'; // 音声再生中マーク\n      console.log('🔊 Audio enabled for video:', videoObject.userData.id);\n    } else {\n      // ミュート：音声停止\n      videoElement.muted = true;\n      audioButton.innerHTML = '🔊'; // 音声ありマーク\n      console.log('🔇 Audio muted for video:', videoObject.userData.id);\n    }\n  }\n\n  /**\n   * CSS2DRenderer初期化（音声制御UIなどの表示に必要）\n   */\n  initializeLabelRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に初期化済み\n    }\n\n    // CSS2DRendererを動的に読み込んで初期化\n    this.loadAndInitializeCSS2DRenderer();\n  }\n\n  /**\n   * CSS2DRendererの準備完了を保証\n   */\n  async ensureCSS2DRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に準備完了\n    }\n\n    // 初期化処理がまだの場合は開始\n    if (!this.css2dInitPromise) {\n      this.css2dInitPromise = this.loadAndInitializeCSS2DRenderer();\n    }\n\n    // 初期化完了まで待機\n    await this.css2dInitPromise;\n  }\n\n  /**\n   * CSS2DRendererの動的読み込みと初期化\n   */\n  async loadAndInitializeCSS2DRenderer() {\n    try {\n      // CSS2DRendererが既に利用可能な場合\n      if (window.THREE && window.THREE.CSS2DRenderer) {\n        this.setupCSS2DRenderer();\n        return;\n      }\n\n      // Three.jsのCSS2DRendererを動的に読み込み\n      console.log('🏷️ Loading CSS2DRenderer dynamically...');\n\n      // CDNからCSS2DRendererを読み込み\n      const module = await import('https://cdn.skypack.dev/three@0.158.0/examples/jsm/renderers/CSS2DRenderer.js');\n\n      // グローバルに設定\n      if (!window.THREE) window.THREE = {};\n      window.THREE.CSS2DRenderer = module.CSS2DRenderer;\n      window.THREE.CSS2DObject = module.CSS2DObject;\n\n      console.log('✅ CSS2DRenderer loaded successfully');\n      this.setupCSS2DRenderer();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to load CSS2DRenderer:', error);\n      console.warn('🔧 Audio controls will not be visible. Please include CSS2DRenderer in your project.');\n    }\n  }\n\n  /**\n   * CSS2DRendererのセットアップ\n   */\n  setupCSS2DRenderer() {\n    try {\n      this.labelRenderer = new window.THREE.CSS2DRenderer();\n      this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n      this.labelRenderer.domElement.style.position = 'absolute';\n      this.labelRenderer.domElement.style.top = '0px';\n      this.labelRenderer.domElement.style.pointerEvents = 'none';\n\n      // メインレンダラーのコンテナに追加\n      if (this.renderer && this.renderer.domElement.parentNode) {\n        this.renderer.domElement.parentNode.appendChild(this.labelRenderer.domElement);\n      } else {\n        document.body.appendChild(this.labelRenderer.domElement);\n      }\n\n      console.log('🏷️ CSS2DRenderer initialized for UI overlays');\n\n      // リサイズハンドラーを追加\n      this.addLabelRendererResizeHandler();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to setup CSS2DRenderer:', error);\n    }\n  }\n\n  /**\n   * CSS2DRendererのリサイズハンドラー追加\n   */\n  addLabelRendererResizeHandler() {\n    if (!this.labelRendererResizeHandler) {\n      this.labelRendererResizeHandler = () => {\n        if (this.labelRenderer) {\n          this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n        }\n      };\n      window.addEventListener('resize', this.labelRendererResizeHandler);\n    }\n  }\n\n  /**\n   * レンダリング更新（アニメーションループで呼び出し）\n   */\n  updateRenderer() {\n    if (this.labelRenderer && this.scene && this.camera) {\n      this.labelRenderer.render(this.scene, this.camera);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * 2025年トレンド: アダプティブ選択インジケーター色計算\n   * 背景色を自動検出してWCAG 2025基準のコントラスト比を保証\n   */\n  getAdaptiveSelectionColor() {\n    // シーンの背景色を取得\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 }; // デフォルト中間色\n    \n    if (backgroundColor) {\n      if (backgroundColor.isColor) {\n        bgColor = {\n          r: backgroundColor.r,\n          g: backgroundColor.g,\n          b: backgroundColor.b\n        };\n      }\n    }\n    \n    // 明度計算（相対輝度）\n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    // WCAG 2025準拠: 4.5:1以上のコントラスト比を確保\n    // 背景が暗い場合は明るい色、明るい場合は暗い色を選択\n    if (bgLuminance < 0.5) {\n      // 暗い背景: 明るいアクセント色\n      return 0x00ff88; // 明るいティール\n    } else {\n      // 明るい背景: 暗いアクセント色  \n      return 0x1a1a2e; // ダークネイビー\n    }\n  }\n  \n  /**\n   * アダプティブホバー色計算\n   */\n  getAdaptiveHoverColor() {\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 };\n    \n    if (backgroundColor && backgroundColor.isColor) {\n      bgColor = {\n        r: backgroundColor.r,\n        g: backgroundColor.g,\n        b: backgroundColor.b\n      };\n    }\n    \n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    if (bgLuminance < 0.5) {\n      // 暗い背景: より明るいホバー色\n      return 0x00ffff; // シアン\n    } else {\n      // 明るい背景: より暗いホバー色\n      return 0xff3366; // ダークピンク\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  dispose() {\n    this.clearAll();\n    if (this.experimentGroup.parent) {\n      this.experimentGroup.parent.remove(this.experimentGroup);\n    }\n  }\n}\n","const IMAGE_SERVICE_STORAGE_KEY = 'chocodrop-service-image';\nconst VIDEO_SERVICE_STORAGE_KEY = 'chocodrop-service-video';\n\n/**\n * Command UI Demo - Demo version with restricted functionality\n * For GitHub Pages demo - import functionality only\n */\nexport class CommandUIDemo {\n  constructor(options = {}) {\n    this.sceneManager = options.sceneManager || null;\n    this.client = options.client || null;\n    this.onControlsToggle = options.onControlsToggle || (() => {});\n    \n    this.isVisible = false;\n    this.container = null;\n    this.input = null;\n    this.output = null;\n    this.currentMode = 'generate';\n\n    // リアルタイム進捗管理\n    this.activeConnections = new Map();\n    this.currentTaskId = null;\n    \n    // 設定\n    this.config = {\n      activationKey: options.activationKey || '@',\n      position: options.position || 'bottom-right',\n      width: options.width || 450,\n      maxHeight: options.maxHeight || 600,\n      theme: options.theme || 'dark',\n      showExamples: options.showExamples !== false,\n      autoScroll: options.autoScroll !== false,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n\n    this.availableImageServices = [];\n    this.availableVideoServices = [];\n    this.selectedImageService = null;\n    this.selectedVideoService = null;\n    this.imageServiceSelect = null;\n    this.videoServiceSelect = null;\n    this.serviceSelectorContainer = null;\n    this.serviceSelectorStatus = null;\n    this.serviceSelectorContent = null;\n    this.serviceSelectorRetryButton = null;\n    this.serviceSelectorSaveButton = null;\n    this.serviceSelectorCancelButton = null;\n    this.serviceModalOverlay = null;\n    this.serviceModal = null;\n    this.servicesLoading = false;\n    this.isExpanded = false;\n    this.overlayTextarea = null;\n    this.pendingImageService = null;\n    this.pendingVideoService = null;\n\n    try {\n      const storedImage = localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY);\n      const storedVideo = localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY);\n      if (storedImage) {\n        this.selectedImageService = storedImage;\n      }\n      if (storedVideo) {\n        this.selectedVideoService = storedVideo;\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to load stored service selections:', error);\n    }\n\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    this.applyServiceSelectionToSceneManager();\n\n    // テーマモード状態管理 (light, dark, wabisabi)\n    this.currentTheme = localStorage.getItem('live-command-theme') || 'light';\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    \n    // Undo/Redo システム\n    this.commandHistory = [];\n    this.currentHistoryIndex = -1;\n    this.maxHistorySize = 50; // 最大コマンド保存数\n    \n    this.initUI();\n    this.bindEvents();\n\n    if (!this.client && this.sceneManager && this.sceneManager.client) {\n      this.client = this.sceneManager.client;\n    }\n\n    this.createServiceModal();\n    this.createFloatingChocolateIcon();\n\n    // DOM読み込み完了後にスタイルを確実に適用\n    document.addEventListener('DOMContentLoaded', () => {\n      this.refreshStyles();\n    });\n\n    this.logDebug('🎮 CommandUI initialized');\n\n    if (!this.selectedImageService || !this.selectedVideoService) {\n      this.openServiceModal(true);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * デモページ用のコンパクトトースト表示\n   */\n  showDemoMessage() {\n    this.showCompactToast('デモページでは利用できません');\n  }\n\n  /**\n   * コンパクトトースト通知を表示\n   */\n  showCompactToast(message) {\n    // 既存のトーストがあれば削除\n    const existingToast = document.getElementById('demo-toast');\n    if (existingToast) {\n      existingToast.remove();\n    }\n\n    // ボタンコンテナの位置を取得\n    const buttonContainer = this.radioModeContainer;\n    if (!buttonContainer) return;\n\n    const toast = document.createElement('div');\n    toast.id = 'demo-toast';\n    toast.textContent = message;\n    toast.style.cssText = `\n      position: absolute;\n      top: -35px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: ${this.isDarkMode ? 'rgba(139, 92, 246, 0.9)' : 'rgba(139, 92, 246, 0.85)'};\n      color: white;\n      padding: 6px 12px;\n      border-radius: 6px;\n      font-size: 12px;\n      font-weight: 500;\n      white-space: nowrap;\n      z-index: 1000;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      box-shadow: 0 2px 8px rgba(139, 92, 246, 0.3);\n    `;\n\n    // ボタンコンテナに相対配置\n    buttonContainer.style.position = 'relative';\n    buttonContainer.appendChild(toast);\n\n    // フェードイン\n    setTimeout(() => {\n      toast.style.opacity = '1';\n    }, 10);\n\n    // 3秒後に自動削除\n    setTimeout(() => {\n      if (toast.parentNode) {\n        toast.style.opacity = '0';\n        setTimeout(() => {\n          if (toast.parentNode) {\n            toast.remove();\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * UI要素の作成と配置\n   */\n  initUI() {\n    // メインコンテナ\n    this.container = document.createElement('div');\n    this.container.id = 'live-command-ui';\n    this.container.style.cssText = this.getContainerStyles();\n\n    // 2025年トレンド：Progressive Disclosure（ホバー時のみブランド表示）\n    const brandIndicator = document.createElement('div');\n    brandIndicator.className = 'progressive-brand-indicator';\n    brandIndicator.style.cssText = `\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, #6366f1, #8b5cf6);\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;\n    \n    // Progressive Disclosure: ホバー/クリックでブランド名表示\n    const brandText = document.createElement('div');\n    brandText.className = 'progressive-brand-text';\n    brandText.style.cssText = `\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.25)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;\n    brandText.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">🍫</span> <span style=\"color: #6366f1;\">ChocoDrop</span>';\n    \n    // Progressive Disclosure イベント\n    brandIndicator.addEventListener('mouseenter', () => {\n      brandText.style.opacity = '1';\n      brandText.style.transform = 'translateY(0) scale(1)';\n      brandIndicator.style.transform = 'scale(1.2)';\n      brandIndicator.style.opacity = '1';\n    });\n    \n    brandIndicator.addEventListener('mouseleave', () => {\n      brandText.style.opacity = '0';\n      brandText.style.transform = 'translateY(5px) scale(0.9)';\n      brandIndicator.style.transform = 'scale(1)';\n      brandIndicator.style.opacity = '0.7';\n    });\n    \n    brandIndicator.appendChild(brandText);\n    this.container.appendChild(brandIndicator);\n\n    // 出力エリア（タスクカードコンテナ）- 非表示に変更\n    this.output = document.createElement('div');\n    this.outputDiv = this.output; // 両方の参照を保持（互換性のため）\n    this.output.id = 'command-output';\n    this.output.className = 'command-output';\n    this.output.style.cssText = this.getOutputStyles();\n    // フローティングカード用コンテナ\n    this.floatingContainer = document.createElement('div');\n    this.floatingContainer.id = 'floating-cards-container';\n    this.floatingContainer.style.cssText = `\n      position: fixed;\n      top: var(--floating-top, 20px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column-reverse;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-end;\n    `;\n\n    // タスクカード管理用\n    this.taskCards = new Map();\n\n    // 入力フィールドラッパー（展開ボタン用）\n    this.inputWrapper = document.createElement('div');\n    this.inputWrapper.style.cssText = `\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;\n\n    // Ultra-Simple 単一入力フィールド（自動リサイズ対応）\n    this.input = document.createElement('textarea');\n    this.input.rows = 1;\n    this.input.id = 'command-input';\n    this.input.placeholder = '「右上にドラゴンを」「美しい桜の森を中央に」など... ✨';\n    this.input.style.cssText = this.getInputStyles();\n\n    // 展開ボタン（初期状態は非表示）\n    this.expandButton = document.createElement('div');\n    this.expandButton.innerHTML = '⤢';\n    this.expandButton.title = 'テキスト全体を表示';\n    this.expandButton.style.cssText = `\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n      border-radius: 6px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;\n\n    // 展開ボタンのホバー効果\n    this.expandButton.addEventListener('mouseenter', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      this.expandButton.style.transform = 'scale(1.1)';\n    });\n\n    this.expandButton.addEventListener('mouseleave', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      this.expandButton.style.transform = 'scale(1)';\n    });\n\n    // 展開ボタンのクリック処理\n    this.expandButton.addEventListener('click', () => {\n      if (this.isExpanded) {\n        this.hideOverlayTextarea();\n      } else {\n        this.showOverlayTextarea();\n      }\n    });\n\n    // ラッパーに要素を追加\n    this.inputWrapper.appendChild(this.input);\n    this.inputWrapper.appendChild(this.expandButton);\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合）\n\n    // ラジオボタン風モードセレクター\n    const modeSelector = this.createRadioModeSelector();\n\n    // ミニマルアクションボタン\n    const actionContainer = this.createMinimalActions();\n\n    // ×クローズボタンをフォーム右上に追加\n    const closeButton = document.createElement('div');\n    closeButton.innerHTML = '×';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;\n\n    closeButton.addEventListener('mouseover', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      closeButton.style.transform = 'scale(1.1)';\n    });\n\n    closeButton.addEventListener('mouseout', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.transform = 'scale(1)';\n    });\n\n    closeButton.addEventListener('click', () => {\n      this.hide();\n    });\n\n    // 組み立て（ヘッダー削除、ブランドバッジは既に追加済み）\n    // this.container.appendChild(this.output); // 大きなタスク表示エリアをDOMに追加しない\n    this.container.appendChild(closeButton);\n    this.container.appendChild(modeSelector);\n    this.container.appendChild(this.inputWrapper);\n    this.container.appendChild(actionContainer);\n\n    // フローティングカードコンテナをbodyに直接追加\n    document.body.appendChild(this.floatingContainer);\n\n    // DOM に追加\n    document.body.appendChild(this.container);\n\n    // 初回テーマ適用\n    this.applyTheme();\n\n    // 日本語IME対応のcomposition state管理\n    this.isComposing = false;\n    this.hasCompositionJustEnded = false;\n\n    // リアルタイム入力監視とコマンド検出（IME対応）\n    this.input.addEventListener('input', () => {\n      // IME入力中はコマンド検出を停止\n      if (this.isComposing) {\n        return;\n      }\n      \n      // 自動リサイズ処理\n      this.autoResizeTextarea();\n      \n      this.detectCommandType();\n    });\n    \n    // 日本語IME composition events\n    this.input.addEventListener('compositionstart', () => {\n      this.isComposing = true;\n    });\n    \n    this.input.addEventListener('compositionend', () => {\n      this.isComposing = false;\n      \n      // Safariのみフラグ設定（他のブラウザは不要）\n      const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n      if (isSafari) {\n        this.hasCompositionJustEnded = true;\n      }\n      \n      // 確定後のコマンド検出を実行\n      setTimeout(() => {\n        this.autoResizeTextarea();\n        this.detectCommandType();\n      }, 10);\n    });\n    \n    // Safari判定\n    const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n    \n    // 日本語IME対応Enterキー処理（Safari対応版）\n    this.input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        // Safari: compositionend直後のEnterをスキップ\n        if (isSafari && this.hasCompositionJustEnded) {\n          this.hasCompositionJustEnded = false;\n          return;\n        }\n\n        // その他のブラウザ: isComposingチェック\n        if (!isSafari && (e.isComposing || this.isComposing)) {\n          return;\n        }\n\n        // Generate モードのみデモ制限を適用\n        if (this.currentMode === 'generate') {\n          e.preventDefault();\n          this.showDemoMessage();\n          return;\n        }\n\n        e.preventDefault();\n        this.executeCommand();\n      }\n    });\n    \n    // 初期メッセージ\n    if (this.config.showExamples) {\n      // 起動メッセージ削除\n      // 起動時は静かに待機\n    }\n  }\n\n  /**\n   * モードセレクター作成\n   */\n  createMinimalActions() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;\n\n    // 左側: Clear All ボタン（承認済みのLayout Bデザイン）\n    const leftSection = document.createElement('div');\n    leftSection.style.cssText = 'display: flex; gap: 8px; align-items: center;';\n\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">🧹</span> Clear All';\n    clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    clearBtn.addEventListener('click', () => this.clearAllWithConfirmation());\n\n    // 履歴ボタン（将来実装用スペース確保）- 海外UI標準対応：同一幅\n    const historyBtn = document.createElement('button');\n    historyBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">📚</span> History';\n    historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n    historyBtn.style.opacity = '0.5';\n    historyBtn.disabled = true;\n    historyBtn.title = '履歴機能（開発中）';\n\n    leftSection.appendChild(clearBtn);\n    leftSection.appendChild(historyBtn);\n\n    // 右側: テーマトグルと設定（ヘッダーから移動）\n    const rightSection = document.createElement('div');\n    rightSection.style.cssText = 'display: flex; gap: 6px; align-items: center;';\n\n    const themeToggle = document.createElement('button');\n    const getThemeIcon = () => {\n      const themeConfig = {\n        light: '🌙',\n        dark: '🍵',\n        wabisabi: '☀️'\n      };\n      return themeConfig[this.currentTheme] || '🌙';\n    };\n\n    const getThemeTitle = () => {\n      const titleConfig = {\n        light: 'ダークモードに切り替え',\n        dark: '侘び寂びモードに切り替え',\n        wabisabi: 'ライトモードに切り替え'\n      };\n      return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n    };\n\n    const getThemeIconWithFilter = () => {\n      const icon = getThemeIcon();\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (icon === '☀️') {\n        return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n      } else if (icon === '🍵') {\n        return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n      } else {\n        return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n      }\n    };\n\n    themeToggle.innerHTML = getThemeIconWithFilter();\n    themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    themeToggle.title = getThemeTitle();\n    themeToggle.addEventListener('click', () => this.toggleTheme());\n\n    const settingsButton = document.createElement('button');\n    settingsButton.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">⚙️</span>';\n    settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    settingsButton.title = 'サービス設定を開く';\n    settingsButton.addEventListener('click', () => this.openServiceModal());\n\n    rightSection.appendChild(themeToggle);\n    rightSection.appendChild(settingsButton);\n\n    container.appendChild(leftSection);\n    container.appendChild(rightSection);\n\n    // 参照を保持\n    this.clearBtn = clearBtn;\n    this.historyBtn = historyBtn;\n    this.themeToggle = themeToggle;\n    this.settingsButton = settingsButton;\n\n    return container;\n  }\n\n  createServiceSelectorSection() {\n    this.serviceSelectorContainer = document.createElement('div');\n    this.serviceSelectorContainer.id = 'service-selector';\n    this.serviceSelectorContainer.style.cssText = `\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;\n\n    this.serviceSelectorStatus = document.createElement('div');\n    this.serviceSelectorStatus.textContent = 'サービス情報を読み込んでいます...';\n    this.serviceSelectorStatus.style.fontSize = '12px';\n    this.serviceSelectorStatus.style.opacity = '0.8';\n    this.serviceSelectorStatus.style.marginBottom = '8px';\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);\n\n    this.serviceSelectorContent = document.createElement('div');\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);\n\n    this.updateServiceSelectorTheme();\n    return this.serviceSelectorContainer;\n  }\n\n  createServiceModal() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.remove();\n      this.serviceModalOverlay = null;\n      this.serviceModal = null;\n    }\n\n    this.serviceModalOverlay = document.createElement('div');\n    this.serviceModalOverlay.id = 'chocodrop-service-modal-overlay';\n    this.serviceModalOverlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;\n\n    this.serviceModalOverlay.addEventListener('click', (event) => {\n      if (event.target === this.serviceModalOverlay) {\n        this.closeServiceModal();\n      }\n    });\n\n    this.serviceModal = document.createElement('div');\n    this.serviceModal.className = 'chocodrop-service-modal';\n    this.serviceModal.style.cssText = `\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;\n\n    const title = document.createElement('h2');\n    title.textContent = 'サービス設定';\n    title.style.cssText = `\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;\n\n    const subtitle = document.createElement('p');\n    subtitle.textContent = '利用するサービスを選択してください。';\n    subtitle.style.cssText = `\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;\n\n    const selector = this.createServiceSelectorSection();\n\n    const actionRow = document.createElement('div');\n    actionRow.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;\n\n    this.serviceSelectorRetryButton = document.createElement('button');\n    this.serviceSelectorRetryButton.textContent = '再読み込み';\n    this.serviceSelectorRetryButton.style.cssText = `\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorRetryButton.addEventListener('click', () => this.initializeServiceSelector(true));\n\n    const actionButtons = document.createElement('div');\n    actionButtons.style.cssText = 'display: flex; gap: 8px;';\n\n    this.serviceSelectorCancelButton = document.createElement('button');\n    this.serviceSelectorCancelButton.textContent = 'Cancel';\n    this.serviceSelectorCancelButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorCancelButton.addEventListener('click', () => this.closeServiceModal());\n\n    this.serviceSelectorSaveButton = document.createElement('button');\n    this.serviceSelectorSaveButton.textContent = 'Save';\n    this.serviceSelectorSaveButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, #6366f1, #8b5cf6);\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;\n    this.serviceSelectorSaveButton.addEventListener('click', () => this.handleServiceSave());\n\n    actionButtons.appendChild(this.serviceSelectorCancelButton);\n    actionButtons.appendChild(this.serviceSelectorSaveButton);\n\n    actionRow.appendChild(this.serviceSelectorRetryButton);\n    actionRow.appendChild(actionButtons);\n\n    this.serviceModal.appendChild(title);\n    this.serviceModal.appendChild(subtitle);\n    this.serviceModal.appendChild(selector);\n    this.serviceModal.appendChild(actionRow);\n\n    this.serviceModalOverlay.appendChild(this.serviceModal);\n    document.body.appendChild(this.serviceModalOverlay);\n\n    this.updateServiceSelectorTheme();\n    this.toggleServiceRetryButton(false);\n  }\n\n  openServiceModal(forceFetch = false) {\n    if (!this.serviceModalOverlay) {\n      this.createServiceModal();\n    }\n\n    this.serviceModalOverlay.style.display = 'flex';\n    requestAnimationFrame(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.opacity = '1';\n      }\n    });\n\n    this.resetPendingSelections();\n    this.initializeServiceSelector(forceFetch);\n  }\n\n  closeServiceModal() {\n    if (!this.serviceModalOverlay) {\n      return;\n    }\n\n    this.serviceModalOverlay.style.opacity = '0';\n    setTimeout(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.display = 'none';\n      }\n      this.resetPendingSelections();\n    }, 150);\n  }\n\n  async initializeServiceSelector(force = false) {\n    if (this.servicesLoading && !force) {\n      return;\n    }\n\n    if (!this.client || typeof this.client.getAvailableServices !== 'function') {\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n      return;\n    }\n\n    this.servicesLoading = true;\n    this.setServiceSelectorStatus('サービス情報を読み込んでいます...', 'info');\n    this.toggleServiceRetryButton(false);\n    this.setServiceButtonsEnabled(false);\n\n    try {\n      if (typeof this.client.ensureInitialized === 'function') {\n        await this.client.ensureInitialized();\n      }\n\n      const response = await this.client.getAvailableServices();\n      if (!response || response.success === false || !response.metadata) {\n        throw new Error(response?.error || 'サービス情報が取得できませんでした');\n      }\n\n      this.availableImageServices = Array.isArray(response.metadata?.image) ? response.metadata.image : [];\n      this.availableVideoServices = Array.isArray(response.metadata?.video) ? response.metadata.video : [];\n\n      this.selectedImageService = this.resolveServiceSelection(\n        'image',\n        this.availableImageServices,\n        response.default?.image\n      );\n\n      this.selectedVideoService = this.resolveServiceSelection(\n        'video',\n        this.availableVideoServices,\n        response.default?.video\n      );\n\n      this.pendingImageService = this.selectedImageService;\n      this.pendingVideoService = this.selectedVideoService;\n\n      this.populateServiceSelector();\n      this.applyServiceSelectionToSceneManager();\n      this.setServiceButtonsEnabled(true);\n    } catch (error) {\n      console.error('❌ Failed to initialize service selector:', error);\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした。サーバーが起動しているか確認のうえ、再読み込みしてください。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n    } finally {\n      this.servicesLoading = false;\n    }\n  }\n\n  setServiceSelectorStatus(message, type = 'info') {\n    if (!this.serviceSelectorStatus) {\n      return;\n    }\n    this.serviceSelectorStatus.textContent = message;\n    this.serviceSelectorStatus.dataset.statusType = type;\n    this.serviceSelectorStatus.classList.toggle('service-selector-helper', type !== 'error');\n    this.updateServiceSelectorTheme();\n  }\n\n  toggleServiceRetryButton(visible) {\n    if (!this.serviceSelectorRetryButton) {\n      return;\n    }\n    this.serviceSelectorRetryButton.style.display = visible ? 'inline-flex' : 'none';\n    this.updateServiceSelectorTheme();\n  }\n\n  resolveServiceSelection(type, services, defaultId) {\n    if (!services || services.length === 0) {\n      return null;\n    }\n\n    const storageKey = type === 'image' ? IMAGE_SERVICE_STORAGE_KEY : VIDEO_SERVICE_STORAGE_KEY;\n    let storedId = null;\n    try {\n      storedId = localStorage.getItem(storageKey);\n    } catch (error) {\n      console.warn('⚠️ Failed to access localStorage:', error);\n    }\n\n    const isStoredValid = storedId && services.some(service => service.id === storedId);\n    let resolvedId = isStoredValid ? storedId : null;\n\n    if (!resolvedId && defaultId && services.some(service => service.id === defaultId)) {\n      resolvedId = defaultId;\n    }\n\n    if (!resolvedId) {\n      resolvedId = services[0]?.id || null;\n    }\n\n    try {\n      if (resolvedId) {\n        localStorage.setItem(storageKey, resolvedId);\n      } else {\n        localStorage.removeItem(storageKey);\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to persist service selection:', error);\n    }\n\n    return resolvedId;\n  }\n\n  populateServiceSelector() {\n    if (!this.serviceSelectorContent) {\n      return;\n    }\n\n    this.serviceSelectorContent.innerHTML = '';\n\n    const hasImage = this.availableImageServices.length > 0;\n    const hasVideo = this.availableVideoServices.length > 0;\n\n    if (!hasImage && !hasVideo) {\n      this.setServiceSelectorStatus('利用可能なサービスが見つかりませんでした。', 'error');\n      return;\n    }\n\n    this.setServiceSelectorStatus('利用するサービスを選択してください。', 'info');\n\n    if (hasImage) {\n      const imageRow = this.buildServiceRow('image', '画像 (T2I)', this.availableImageServices, this.pendingImageService || this.selectedImageService);\n      this.serviceSelectorContent.appendChild(imageRow);\n    }\n\n    if (hasVideo) {\n      const videoRow = this.buildServiceRow('video', '動画 (T2V)', this.availableVideoServices, this.pendingVideoService || this.selectedVideoService);\n      this.serviceSelectorContent.appendChild(videoRow);\n    }\n\n    this.updateServiceSelectorTheme();\n  }\n\n  buildServiceRow(type, labelText, services, selectedId) {\n    const row = document.createElement('div');\n    row.className = `service-row service-row-${type}`;\n    row.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;\n\n    const label = document.createElement('label');\n    label.textContent = labelText;\n    label.style.fontSize = '13px';\n    label.style.fontWeight = '600';\n    row.appendChild(label);\n\n    const select = document.createElement('select');\n    select.dataset.serviceType = type;\n    select.style.fontFamily = 'inherit';\n    select.style.width = '100%';\n\n    services.forEach(service => {\n      const option = document.createElement('option');\n      option.value = service.id;\n      option.textContent = service.name || service.id;\n      if (service.description) {\n        option.title = service.description;\n      }\n      select.appendChild(option);\n    });\n\n    if (selectedId && services.some(service => service.id === selectedId)) {\n      select.value = selectedId;\n    }\n\n    select.addEventListener('change', (event) => {\n      this.onServiceSelectionChange(type, event.target.value);\n    });\n\n    row.appendChild(select);\n\n    const description = document.createElement('div');\n    description.className = 'service-description';\n    description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    description.style.fontSize = '11px';\n    description.style.opacity = '0.75';\n    description.style.lineHeight = '1.4';\n    description.style.minHeight = '14px';\n    row.appendChild(description);\n\n    select.addEventListener('change', () => {\n      description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    });\n\n    if (type === 'image') {\n      this.imageServiceSelect = select;\n    } else {\n      this.videoServiceSelect = select;\n    }\n\n    return row;\n  }\n\n  onServiceSelectionChange(type, serviceId) {\n    if (type === 'image') {\n      this.pendingImageService = serviceId;\n    } else {\n      this.pendingVideoService = serviceId;\n    }\n\n    const info = this.findServiceInfo(type, serviceId);\n    const description = type === 'image'\n      ? this.imageServiceSelect?.parentElement?.querySelector('.service-description')\n      : this.videoServiceSelect?.parentElement?.querySelector('.service-description');\n\n    if (description) {\n      description.textContent = info?.description || '';\n    }\n  }\n\n  handleServiceSave() {\n    const newImageId = this.pendingImageService || this.selectedImageService;\n    const newVideoId = this.pendingVideoService || this.selectedVideoService;\n\n    if (newImageId) {\n      try {\n        localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY, newImageId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist image service selection:', error);\n      }\n      this.selectedImageService = newImageId;\n      this.sceneManager?.setImageService(newImageId);\n    }\n\n    if (newVideoId) {\n      try {\n        localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY, newVideoId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist video service selection:', error);\n      }\n      this.selectedVideoService = newVideoId;\n      this.sceneManager?.setVideoService(newVideoId);\n    }\n\n    const imageInfo = this.findServiceInfo('image', newImageId);\n    const videoInfo = this.findServiceInfo('video', newVideoId);\n\n    if (imageInfo) {\n      this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`, 'system');\n    }\n    if (videoInfo) {\n      this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`, 'system');\n    }\n\n    this.closeServiceModal();\n  }\n\n  setServiceButtonsEnabled(enabled) {\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.disabled = !enabled;\n      this.serviceSelectorSaveButton.style.opacity = enabled ? '1' : '0.6';\n      this.serviceSelectorSaveButton.style.cursor = enabled ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  resetPendingSelections() {\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    if (this.imageServiceSelect && this.selectedImageService) {\n      this.imageServiceSelect.value = this.selectedImageService;\n    }\n    if (this.videoServiceSelect && this.selectedVideoService) {\n      this.videoServiceSelect.value = this.selectedVideoService;\n    }\n\n    if (this.serviceSelectorContent && this.serviceSelectorContent.childElementCount > 0) {\n      this.populateServiceSelector();\n    }\n  }\n\n  findServiceInfo(type, serviceId) {\n    const list = type === 'image' ? this.availableImageServices : this.availableVideoServices;\n    return list.find(service => service.id === serviceId) || null;\n  }\n\n  applyServiceSelectionToSceneManager() {\n    if (!this.sceneManager) {\n      return;\n    }\n    this.sceneManager.setImageService(this.selectedImageService);\n    this.sceneManager.setVideoService(this.selectedVideoService);\n  }\n\n  updateServiceSelectorTheme() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.style.background = this.isDarkMode\n        ? 'rgba(8, 11, 26, 0.55)'\n        : 'rgba(229, 231, 255, 0.45)';\n    }\n\n    if (this.serviceModal) {\n      this.serviceModal.style.background = this.isDarkMode\n        ? 'rgba(17, 24, 39, 0.15)'\n        : 'rgba(255, 255, 255, 0.15)';\n      this.serviceModal.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.4)'\n        : '1px solid rgba(99, 102, 241, 0.25)';\n      this.serviceModal.style.color = this.isDarkMode ? '#e5e7ff' : '#1f2937';\n    }\n\n    if (this.serviceSelectorStatus) {\n      const type = this.serviceSelectorStatus.dataset?.statusType;\n      const statusColor = type === 'error'\n        ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n        : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.75)');\n      this.serviceSelectorStatus.style.color = statusColor;\n    }\n\n    if (this.serviceSelectorContainer) {\n      const labels = this.serviceSelectorContainer.querySelectorAll('label');\n      labels.forEach(label => {\n        label.style.color = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(31, 41, 55, 0.9)';\n      });\n\n      const selects = this.serviceSelectorContainer.querySelectorAll('select');\n      selects.forEach(select => {\n        select.style.background = this.isDarkMode ? 'rgba(99, 102, 241, 0.18)' : 'rgba(99, 102, 241, 0.12)';\n        select.style.border = this.isDarkMode ? '1px solid rgba(129, 140, 248, 0.45)' : '1px solid rgba(99, 102, 241, 0.45)';\n        select.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n        select.style.padding = '10px 12px';\n        select.style.borderRadius = '10px';\n        select.style.fontSize = '13px';\n        select.style.outline = 'none';\n        select.style.boxShadow = this.isDarkMode\n          ? '0 12px 28px rgba(15, 23, 42, 0.5)'\n          : '0 12px 24px rgba(99, 102, 241, 0.2)';\n      });\n\n      const descriptions = this.serviceSelectorContainer.querySelectorAll('.service-description');\n      descriptions.forEach(desc => {\n        desc.style.color = this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.7)';\n      });\n    }\n\n    if (this.serviceSelectorRetryButton) {\n      this.serviceSelectorRetryButton.style.background = this.isDarkMode\n        ? 'rgba(129, 140, 248, 0.35)'\n        : 'rgba(99, 102, 241, 0.15)';\n      this.serviceSelectorRetryButton.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.5)'\n        : '1px solid rgba(99, 102, 241, 0.45)';\n      this.serviceSelectorRetryButton.style.color = this.isDarkMode ? '#f9fafb' : '#1e1b4b';\n      this.serviceSelectorRetryButton.style.boxShadow = this.isDarkMode\n        ? '0 0 8px rgba(129, 140, 248, 0.45)'\n        : '0 0 8px rgba(99, 102, 241, 0.35)';\n    }\n\n    if (this.serviceSelectorCancelButton) {\n      this.serviceSelectorCancelButton.style.border = this.isDarkMode\n        ? '1px solid rgba(209, 213, 219, 0.3)'\n        : '1px solid rgba(148, 163, 184, 0.5)';\n      this.serviceSelectorCancelButton.style.color = this.isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(30, 41, 59, 0.85)';\n    }\n\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.style.background = this.isDarkMode\n        ? 'linear-gradient(135deg, #6366f1, #8b5cf6)'\n        : 'linear-gradient(135deg, #818cf8, #a855f7)';\n      this.serviceSelectorSaveButton.style.boxShadow = this.isDarkMode\n        ? '0 16px 28px rgba(99, 102, 241, 0.4)'\n        : '0 16px 28px rgba(129, 140, 248, 0.35)';\n    }\n  }\n\n  /**\n   * ラジオボタン風モードセレクター作成\n   */\n  createRadioModeSelector() {\n    const container = document.createElement('div');\n    container.className = 'radio-mode-selector';\n    container.style.cssText = `\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))')};\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(141, 110, 99, 0.4)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(255, 255, 255, 0.25)')};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;\n\n    const modes = [\n      { value: 'generate', label: 'Generate', icon: '🚫', disabled: true },\n      { value: 'import', label: 'Import', icon: '📥' },\n      { value: 'modify', label: 'Modify', icon: '🔧' },\n      { value: 'delete', label: 'Delete', icon: '🗑️' }\n    ];\n\n    this.radioModeButtons = {};\n\n    modes.forEach(mode => {\n      const button = document.createElement('div');\n      button.className = `mode-option ${mode.value}`;\n      button.style.cssText = `\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: ${mode.disabled ? 'not-allowed' : 'pointer'};\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${mode.disabled ? 'rgba(139, 92, 246, 0.6)' : this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)')};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n        opacity: ${mode.disabled ? '0.6' : '1'};\n      `;\n\n      const icon = document.createElement('div');\n      icon.textContent = mode.icon;\n      icon.style.cssText = `\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${mode.disabled ? 'hue-rotate(240deg) saturate(0.8) brightness(1.1)' : this.isDarkMode \n          ? 'hue-rotate(220deg) saturate(0.8) brightness(1.2)' \n          : 'hue-rotate(240deg) saturate(0.7) brightness(0.9)'};\n        transition: filter 0.2s ease;\n      `;\n\n      const label = document.createElement('span');\n      label.textContent = mode.label;\n\n      // AUTOバッジを作成\n      const autoBadge = document.createElement('div');\n      autoBadge.className = 'auto-badge';\n      autoBadge.textContent = 'AUTO';\n      autoBadge.style.cssText = `\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;\n\n      button.appendChild(icon);\n      button.appendChild(label);\n      button.appendChild(autoBadge);\n\n      // イベント処理\n      if (mode.disabled) {\n        // クリック時のみコンパクトトースト表示\n        button.addEventListener('click', (e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          this.showDemoMessage();\n        });\n      } else {\n        // 通常のクリックイベント\n        button.addEventListener('click', () => {\n          if (mode.value === 'import') {\n            this.triggerFileSelection();\n          } else {\n            this.selectMode(mode.value, true); // trueは手動選択を示す\n          }\n        });\n      }\n\n      this.radioModeButtons[mode.value] = { button, autoBadge };\n      container.appendChild(button);\n    });\n\n\n    this.radioModeContainer = container;\n    // デモページではImportを初期選択\n    this.selectMode('import', false);\n\n    return container;\n  }\n\n  /**\n   * モード選択（ラジオボタンUI更新）\n   */\n  selectMode(mode, isManual = false, detectedKeyword = null) {\n    this.currentMode = mode;\n\n    // 全ボタンをリセット\n    Object.keys(this.radioModeButtons).forEach(key => {\n      const { button, autoBadge } = this.radioModeButtons[key];\n      button.style.color = this.isWabiSabiMode\n        ? '#F5F5F5'\n        : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n      button.style.background = 'transparent';\n      button.style.border = '1px solid transparent';\n      button.style.transform = 'scale(1)';\n      button.style.boxShadow = 'none';\n      // AUTOバッジを非表示\n      autoBadge.style.display = 'none';\n      autoBadge.style.opacity = '0';\n    });\n\n    // 選択されたボタンをハイライト（2025年仕様）\n    const { button, autoBadge } = this.radioModeButtons[mode];\n    \n    // 2025 Glassmorphism選択状態\n    const selectedGlass = this.isWabiSabiMode\n      ? {\n          background: 'linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))',\n          border: '1px solid rgba(109, 76, 65, 0.4)',\n          boxShadow: '0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)',\n          color: '#F5F5F5'\n        }\n      : (this.isDarkMode\n        ? {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))',\n            border: '1px solid rgba(99, 102, 241, 0.4)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)',\n            color: '#a5b4fc'\n          }\n        : {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))',\n            border: '1px solid rgba(99, 102, 241, 0.3)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)',\n            color: '#6366f1'\n          });\n\n    button.style.color = selectedGlass.color;\n    button.style.background = selectedGlass.background;\n    button.style.border = selectedGlass.border;\n    button.style.boxShadow = selectedGlass.boxShadow;\n    button.style.transform = 'scale(1.02)';\n\n    // AUTOバッジの表示制御\n    if (!isManual && detectedKeyword) {\n      // 自動切り替えの場合はAUTOバッジを表示\n      autoBadge.style.display = 'inline-block';\n      setTimeout(() => {\n        autoBadge.style.opacity = '1';\n        autoBadge.style.transform = 'scale(1)';\n      }, 100);\n      \n      // 3秒後にフェードアウト\n      setTimeout(() => {\n        autoBadge.style.opacity = '0';\n        autoBadge.style.transform = 'scale(0.8)';\n        setTimeout(() => {\n          autoBadge.style.display = 'none';\n        }, 200);\n      }, 3000);\n    }\n\n    // パルス効果を追加\n    if (!isManual) {\n      this.addPulseEffect(button);\n      this.addContainerGlow(mode);\n    }\n\n    // プレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n\n    // モード切り替え時の入力欄メッセージ上書き機能\n    if (isManual) {\n      this.clearInputOnModeSwitch(mode);\n    }\n\n    // Importモード専用処理\n    if (mode === 'import' || this.selectedFile) {\n      this.showImportInterface();\n    } else {\n      this.hideImportInterface();\n    }\n\n    // Deleteモード専用処理\n    if (mode === 'delete' && isManual) {\n      this.handleDeleteModeSelection();\n    }\n\n    // Modifyモード専用処理\n    if (mode === 'modify' && isManual) {\n      this.handleModifyModeSelection();\n    }\n\n    // モード切り替えメッセージは表示しない（UIで分かるため）\n  }\n\n  /**\n   * パルス効果を追加\n   */\n  addPulseEffect(element) {\n    // 既存のアニメーションをリセット\n    element.style.animation = 'none';\n    \n    // 少し遅らせてからアニメーションを適用（リフロー強制）\n    setTimeout(() => {\n      element.style.animation = 'smartModePulse 0.6s ease-out';\n    }, 10);\n    \n    // アニメーション終了後にクリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 610);\n    \n    // CSSアニメーションを動的に追加（まだ存在しない場合）\n    this.ensurePulseAnimation();\n  }\n\n  /**\n   * パルスアニメーション用CSSを確保\n   */\n  ensurePulseAnimation() {\n    if (document.getElementById('smart-mode-pulse-animation')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'smart-mode-pulse-animation';\n    style.textContent = `\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コンテナグロー効果\n   */\n  addContainerGlow(mode) {\n    const container = this.radioModeContainer;\n    if (!container) return;\n\n    // モードに応じてグロー色を設定\n    const glowColors = this.isWabiSabiMode ? {\n      generate: 'rgba(139, 195, 74, 0.4)',  // 侘び寂びモード：チャット欄と同じ緑\n      import: 'rgba(139, 195, 74, 0.4)',    // 侘び寂びモード：チャット欄と同じ緑\n      modify: 'rgba(139, 195, 74, 0.4)',    // 侘び寂びモード：チャット欄と同じ緑\n      delete: 'rgba(139, 195, 74, 0.4)'     // 侘び寂びモード：チャット欄と同じ緑\n    } : {\n      generate: 'rgba(79, 70, 229, 0.4)',   // ライト/ダークモード：元の紫\n      import: 'rgba(34, 197, 94, 0.4)',     // ライト/ダークモード：元の緑\n      modify: 'rgba(236, 72, 153, 0.4)',    // ライト/ダークモード：元のピンク\n      delete: 'rgba(107, 114, 128, 0.3)'    // ライト/ダークモード：元のグレー\n    };\n\n    // 一時的にグロー効果を適用\n    const glowColor = glowColors[mode];\n    if (glowColor) {\n      container.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n      container.style.borderColor = glowColor.replace('0.4', '0.6').replace('0.3', '0.5');\n    }\n    \n    // 1秒後にグロー効果を除去\n    setTimeout(() => {\n      container.style.boxShadow = '';\n      container.style.borderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.15)';\n    }, 1000);\n  }\n\n  getActionButtonStyles(variant = 'secondary') {\n    const baseStyles = `\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;\n\n    if (variant === 'secondary') {\n      // Clear All, History ボタン用 - 美しい配置と統一感\n      return baseStyles + `\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.6)'\n          : (this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)')};\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? '#d1d5db' : '#374151')};\n        text-align: center;\n        white-space: nowrap;\n      `;\n    } else if (variant === 'icon') {\n      // テーマトグル、設定ボタン用\n      return baseStyles + `\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(255, 255, 255, 0.4)'};\n        color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'};\n      `;\n    }\n  }\n\n  /**\n   * 破壊的アクション用ボタンスタイル（赤系ガラス効果）\n   */\n  getDestructiveButtonStyles() {\n    return `\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode ? 'rgba(220, 38, 127, 0.4)' : 'rgba(190, 24, 93, 0.35)'};\n      border-radius: 6px;\n      background: ${this.isDarkMode ? 'rgba(220, 38, 127, 0.3)' : 'rgba(190, 24, 93, 0.25)'};\n      color: ${this.isDarkMode ? '#fca5a5' : '#dc2626'};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `;\n  }\n\n  getCommandTypeIndicatorStyles() {\n    return `\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)'};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `;\n  }\n\n  /**\n   * テキストエリアの自動リサイズ処理（最大2行）\n   */\n  autoResizeTextarea() {\n    // 高さをリセットして正確な scrollHeight を取得\n    this.input.style.height = 'auto';\n    \n    // 現在のコンテンツに基づいて高さを計算\n    const lineHeight = 22; // CSS で設定した line-height\n    const padding = 28; // 上下のパディング合計 (14px * 2)\n    const maxLines = 2;\n    const maxHeight = (lineHeight * maxLines) + padding;\n    \n    // スクロール高さに基づいて新しい高さを決定\n    const newHeight = Math.min(this.input.scrollHeight, maxHeight);\n    \n    // 高さを適用\n    this.input.style.height = newHeight + 'px';\n    \n    // 2行を超える場合はスクロールを有効化と展開ボタン表示\n    if (this.input.scrollHeight > maxHeight) {\n      this.input.style.overflowY = 'auto';\n      // 展開ボタンを表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'flex';\n      }\n    } else {\n      this.input.style.overflowY = 'hidden';\n      // 展開ボタンを非表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * リアルタイムコマンドタイプ検出\n   */\n  detectCommandType() {\n    const input = this.input.value.trim();\n    if (!input) {\n      this.selectMode('generate', false);\n      return;\n    }\n\n    const commandType = this.analyzeCommandType(input);\n\n    // Delete/Modifyは手動選択を優先、自動切り替えしない\n    if (this.currentMode === 'delete' || this.currentMode === 'modify') {\n      return; // 現在のモードを維持\n    }\n    // Generate/Importのみ自動切り替え\n    this.selectMode(commandType.type, false, commandType.detectedKeyword);\n  }\n\n  /**\n   * ルールベースコマンド分析\n   */\n  analyzeCommandType(text) {\n    this.logDebug(`🔍 Analyzing command: \"${text}\"`);\n\n    // メディアタイプの検出\n    const mediaInfo = this.detectMediaType(text);\n    \n    // 削除コマンドの検出\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除' },\n      { pattern: /消去/, keyword: '消去' },\n      { pattern: /消して/, keyword: '消して' },\n      { pattern: /消す/, keyword: '消す' },\n      { pattern: /取り除/, keyword: '取り除' },\n      { pattern: /除去/, keyword: '除去' },\n      { pattern: /削除して/, keyword: '削除して' },\n      { pattern: /delete/i, keyword: 'delete' },\n      { pattern: /remove/i, keyword: 'remove' },\n      { pattern: /clear/i, keyword: 'clear' },\n      { pattern: /erase/i, keyword: 'erase' }\n    ];\n    \n    // 変更・移動コマンドの検出\n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動' },\n      { pattern: /動かして/, keyword: '動かして' },\n      { pattern: /変更/, keyword: '変更' },\n      { pattern: /変えて/, keyword: '変えて' },\n      { pattern: /修正/, keyword: '修正' },\n      { pattern: /調整/, keyword: '調整' },\n      { pattern: /回転/, keyword: '回転' },\n      { pattern: /反転/, keyword: '反転' },\n      { pattern: /ミラー/, keyword: 'ミラー' },\n      { pattern: /傾け/, keyword: '傾け' },\n      { pattern: /向きを変え/, keyword: '向きを変え' },\n      { pattern: /向きを変更/, keyword: '向きを変更' },\n      { pattern: /左右(逆|反転)/, keyword: '左右反転' },\n      { pattern: /上下(逆|反転)/, keyword: '上下反転' },\n      { pattern: /逆さ/, keyword: '逆さ' },\n      { pattern: /ひっくり返/, keyword: 'ひっくり返す' },\n      { pattern: /.*を.*色/, keyword: '色変更' },\n      { pattern: /.*を.*サイズ/, keyword: 'サイズ変更' },\n      { pattern: /を.*に.*して/, keyword: '変更' },\n      { pattern: /move/i, keyword: 'move' },\n      { pattern: /change/i, keyword: 'change' },\n      { pattern: /modify/i, keyword: 'modify' },\n      { pattern: /edit/i, keyword: 'edit' }\n    ];\n    \n    // 生成コマンドの検出（デフォルト）\n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って' },\n      { pattern: /生成/, keyword: '生成' },\n      { pattern: /作成/, keyword: '作成' },\n      { pattern: /描いて/, keyword: '描いて' },\n      { pattern: /書いて/, keyword: '書いて' },\n      { pattern: /create/i, keyword: 'create' },\n      { pattern: /generate/i, keyword: 'generate' },\n      { pattern: /make/i, keyword: 'make' },\n      { pattern: /draw/i, keyword: 'draw' }\n    ];\n\n    // 削除パターンチェック\n    for (const { pattern, keyword } of deletePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Delete pattern matched: ${keyword}`);\n        return {\n          type: 'delete',\n          confidence: 0.9,\n          reason: '削除キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: true,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 変更パターンチェック\n    for (const { pattern, keyword } of modifyPatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Modify pattern matched: ${keyword}`);\n        return {\n          type: 'modify',\n          confidence: 0.8,\n          reason: '変更キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 生成パターンチェック\n    for (const { pattern, keyword } of generatePatterns) {\n      if (pattern.test(text)) {\n        return {\n          type: 'generate',\n          confidence: mediaInfo.confidence,\n          reason: mediaInfo.reason,\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // デフォルト（生成モード）\n    this.logDebug(`ℹ️ No specific pattern matched, defaulting to generate mode`);\n    return {\n      type: 'generate',\n      confidence: mediaInfo.confidence,\n      reason: mediaInfo.reason,\n      mediaType: mediaInfo.type,\n      requiresConfirmation: false,\n      detectedKeyword: null\n    };\n  }\n\n  /**\n   * メディアタイプ検出（画像/動画）\n   */\n  detectMediaType(text) {\n    const videoPatterns = [\n      /動画|ビデオ|映像|ムービー/,\n      /video|movie|clip/i\n    ];\n    \n    const imagePatterns = [\n      /画像|写真|絵|イラスト|イメージ/,\n      /image|picture|photo|illustration/i\n    ];\n    \n    if (videoPatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'video',\n        confidence: 0.8,\n        reason: '動画生成コマンド'\n      };\n    }\n    \n    if (imagePatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'image',\n        confidence: 0.8,\n        reason: '画像生成コマンド'\n      };\n    }\n    \n    // デフォルトは画像\n    return {\n      type: 'image',\n      confidence: 0.6,\n      reason: '生成コマンド（画像デフォルト）'\n    };\n  }\n\n  /**\n   * コマンドタイプインジケーター表示\n   */\n  showCommandTypeIndicator(commandInfo) {\n    const { type, confidence, reason } = commandInfo;\n    \n    const typeLabels = {\n      generate: '🎨 生成モード',\n      import: '📥 インポートモード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      import: 'linear-gradient(135deg, #22c55e, #16a34a)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    // Proactive UX: 低信頼度時に提案表示\n    if (confidence < 0.7) {\n      this.showProactiveSuggestion(type, confidence);\n    } else {\n      this.hideProactiveSuggestion();\n    }\n    \n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[type].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n    // this.commandTypeIndicator.style.display = 'block';\n    // this.commandTypeIndicator.style.cursor = 'default';\n    \n    // スワイプジェスチャー対応\n    this.enableGestureControl();\n  }\n\n  /**\n   * Proactive UX: 低信頼度時の提案表示\n   */\n  showProactiveSuggestion(detectedType, confidence) {\n    if (!this.proactiveSuggestion) {\n      this.proactiveSuggestion = document.createElement('div');\n      this.proactiveSuggestion.id = 'proactive-suggestion';\n      this.proactiveSuggestion.style.cssText = `\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;\n      // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n      // 代わりに入力フィールドの前に挿入\n      this.container.insertBefore(this.proactiveSuggestion, this.input);\n    }\n\n    const alternativeTypes = ['generate', 'modify', 'delete'].filter(t => t !== detectedType);\n    const suggestion = alternativeTypes[0]; // 最初の代替案\n\n    const suggestionLabels = {\n      generate: '🎨 生成',\n      modify: '✏️ 変更', \n      delete: '🗑️ 削除'\n    };\n\n    this.proactiveSuggestion.innerHTML = `\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style=\"margin-top: 4px; font-size: 10px; opacity: 0.8;\">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;\n    \n    this.proactiveSuggestion.style.display = 'block';\n    \n    // クリックで提案モードに変更\n    this.proactiveSuggestion.onclick = () => {\n      this.currentMode = suggestion;\n      this.hideProactiveSuggestion();\n      this.updateIndicatorForMode(suggestion, 0.9);\n    };\n  }\n\n  /**\n   * Proactive UX提案を非表示\n   */\n  hideProactiveSuggestion() {\n    if (this.proactiveSuggestion) {\n      this.proactiveSuggestion.style.display = 'none';\n    }\n  }\n\n  /**\n   * 指定モードでインジケーター更新\n   */\n  updateIndicatorForMode(mode, confidence) {\n    const typeLabels = {\n      generate: '🎨 生成モード',\n      import: '📥 インポートモード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      import: 'linear-gradient(135deg, #22c55e, #16a34a)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[mode].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n  }\n\n  /**\n   * ジェスチャーコントロール有効化\n   */\n  enableGestureControl() {\n    // 旧スワイプジェスチャー機能は削除（ラジオボタンUIに統合済み）\n    // ラジオボタンで直接モード選択可能になったため、スワイプ操作は不要\n    this.gestureEnabled = true;\n  }\n\n  /**\n   * アクションボタン作成\n   */\n  createActionButtons() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;\n\n    // 履歴ボタン削除 - タスク進行状況に置き換え済み\n\n    // クリアオールボタン\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '🧹 全削除';\n    clearBtn.style.cssText = this.getModernButtonStyles('danger');\n    clearBtn.addEventListener('click', () => this.clearAll());\n\n    // historyBtn削除済み\n    container.appendChild(clearBtn);\n\n    return container;\n  }\n\n  /**\n   * スタイル定義\n   */\n  getContainerStyles() {\n    const positions = {\n      'bottom-right': 'bottom: 20px; right: 20px;',\n      'bottom-left': 'bottom: 20px; left: 20px;',\n      'top-right': 'top: 20px; right: 20px;',\n      'top-left': 'top: 20px; left: 20px;',\n      'center': 'top: 50%; left: 50%; transform: translate(-50%, -50%);'\n    };\n\n    // 2025 Glassmorphism仕様：ダーク・ライト両対応\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(99, 102, 241, 0.2)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)'\n    };\n\n    // 侘び寂びモード - 枯山水の静寂：独自のアイデンティティ\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))',\n      backdropFilter: 'blur(20px) saturate(120%)',\n      border: '1px solid rgba(93, 64, 55, 0.5)',\n      boxShadow: '0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      position: fixed;\n      ${positions[this.config.position] || positions['bottom-right']}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  getHeaderStyles() {\n    // ダークモードと同じ紫グラデーションで統一\n    const gradientColors = 'linear-gradient(135deg, #4f46e5, #7c3aed)';\n\n    return `\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `;\n  }\n\n  getOutputStyles() {\n    // カスタムスクロールバーのCSSを注入\n    this.addScrollbarStyles();\n\n    return `\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.2)'};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)'};\n    `;\n  }\n\n  /**\n   * スクロールバーのカスタムスタイルをページに注入\n   */\n  addScrollbarStyles() {\n    if (document.getElementById('custom-scrollbar-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'custom-scrollbar-styles';\n    style.textContent = `\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.5)'};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      /* wabi-sabiモード用の入力フィールドフォーカススタイル */\n      .wabisabi-mode textarea:focus,\n      .wabisabi-mode input:focus {\n        background: linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3)) !important;\n        border: 1px solid rgba(141, 110, 99, 0.6) !important;\n        box-shadow: 0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2), 0 0 0 2px rgba(141, 110, 99, 0.2) !important;\n        color: #F5F5F5 !important;\n        outline: none !important;\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  getInputStyles() {\n    // 2025 Glassmorphism仕様：入力フィールド\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))',\n      border: '1px solid rgba(255, 255, 255, 0.5)',\n      boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)'\n    };\n\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))',\n      border: '1px solid rgba(97, 97, 97, 0.5)',\n      boxShadow: '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(55, 65, 81, 0.6)'};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `;\n  }\n\n  getModernButtonStyles(type) {\n    const styles = {\n      primary: this.isWabiSabiMode ? `\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      ` : `\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,\n      secondary: this.isWabiSabiMode ? `\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,\n      danger: this.isWabiSabiMode ? `\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `\n    };\n\n    return `\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `;\n  }\n\n  getModeButtonStyles(isActive, mode) {\n    // モードカラー設定\n    const modeColors = {\n      generate: 'linear-gradient(135deg, #22c55e, #16a34a)', // Green - チャット欄と同じ緑色\n      import: 'linear-gradient(135deg, #22c55e, #16a34a)',   // Green - チャット欄と同じ緑色\n      modify: 'linear-gradient(135deg, #22c55e, #16a34a)',    // Green - チャット欄と同じ緑色\n      delete: 'linear-gradient(135deg, #22c55e, #16a34a)'     // Green - チャット欄と同じ緑色\n    };\n    \n    return `\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive ? 'white' : (this.isWabiSabiMode ? '#F5F5F5' : 'rgba(255, 255, 255, 0.7)')};\n      background: ${isActive ? modeColors[mode] : 'transparent'};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `;\n  }\n\n  /**\n   * イベントバインディング\n   */\n  bindEvents() {\n    // キーボードショートカット\n    document.addEventListener('keydown', (e) => {\n      // 設定されたキーでUI表示切替\n      if (e.key === this.config.activationKey) {\n        e.preventDefault();\n        this.toggle();\n        return;\n      }\n      \n      // Enterキー処理はinitUI()内で行うため、ここでは処理しない\n      // （IME対応のため）\n      \n      // Escapeで非表示\n      if (this.isVisible && e.key === 'Escape') {\n        this.hide();\n      }\n      \n      // Ctrl+Z/Ctrl+Y でUndo/Redo\n      if (this.isVisible && e.ctrlKey) {\n        if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault();\n          this.undo();\n        } else if (e.key === 'y' || (e.key === 'z' && e.shiftKey)) {\n          e.preventDefault();\n          this.redo();\n        }\n      }\n    });\n\n    // 入力フィールドのスタイル調整\n    this.input.addEventListener('focus', () => {\n      this.input.style.borderColor = '#74b9ff';\n      this.input.style.boxShadow = '0 0 5px rgba(116, 185, 255, 0.5)';\n    });\n\n    this.input.addEventListener('blur', () => {\n      this.input.style.borderColor = '#4a90e2';\n      this.input.style.boxShadow = 'none';\n    });\n  }\n\n  /**\n   * UI表示/非表示切替\n   */\n  toggle() {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * UI表示\n   */\n  show() {\n    this.container.style.display = 'flex';\n    this.container.style.flexDirection = 'column';\n    this.floatingContainer.style.display = 'flex';\n\n    // UIフォームの位置に合わせて配置（少し遅延して正確な位置を取得）\n    setTimeout(() => {\n      const containerRect = this.container.getBoundingClientRect();\n      this.floatingContainer.style.left = containerRect.left + 'px';\n      this.floatingContainer.style.top = (containerRect.top - 80) + 'px';\n      this.floatingContainer.style.width = containerRect.width + 'px';\n      this.floatingContainer.style.transform = 'none';\n    }, 50);\n\n    this.isVisible = true;\n    this.input.focus();\n\n    // フォーム表示中はチョコアイコンを隠す\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0';\n      this.floatingChocolateIcon.style.pointerEvents = 'none';\n    }\n\n    // コントロールを無効化\n    this.onControlsToggle(true);\n    // コントロール停止時も静かに\n  }\n\n  /**\n   * UI非表示\n   */\n  hide() {\n    this.container.style.display = 'none';\n    this.floatingContainer.style.display = 'none';\n    this.isVisible = false;\n\n    // フォーム非表示時はチョコアイコンを再表示\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.pointerEvents = 'auto';\n    }\n\n    // コントロールを再有効化\n    this.onControlsToggle(false);\n    this.logDebug('🎮 コントロールを再開');\n  }\n\n  /**\n   * モード切り替え\n   */\n  switchMode(mode) {\n    if (this.currentMode === mode) return;\n    \n    this.currentMode = mode;\n    \n    // モードボタンのスタイル更新\n    this.container.querySelectorAll('[data-mode]').forEach(btn => {\n      const isActive = btn.dataset.mode === mode;\n      btn.style.cssText = this.getModeButtonStyles(isActive, btn.dataset.mode);\n    });\n    \n    // 入力フィールドのプレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n    \n    // 実行ボタンのラベルと色更新\n    const executeBtn = this.container.querySelector('#execute-btn');\n    const labels = {\n      generate: '🎨 Generate Object',\n      modify: '✏️ Apply Changes', \n      delete: '🗑️ Delete Objects'\n    };\n    \n    const buttonColors = {\n      generate: 'linear-gradient(135deg, #5b21b6, #4c1d95)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)', \n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    executeBtn.innerHTML = `<span>${labels[mode]}</span>`;\n    executeBtn.style.background = buttonColors[mode];\n    \n    // モード切り替え通知は不要（ボタンで分かるため）\n  }\n  \n  /**\n   * モード別プレースホルダー\n   */\n  getPlaceholderForMode(mode) {\n    const placeholders = {\n      generate: '「猫の画像を作って」と話しかけて ⏎ ✨',\n      import: 'ファイルを選択して ⏎ 📁',\n      modify: '選択後「ピンクに変更」と伝えて ⏎ ✏️',\n      delete: '選択後、コマンドをそのまま送って ⏎ 🗑️'\n    };\n    return placeholders[mode] || placeholders.generate;\n  }\n\n  /**\n   * デモ版専用: 向き・反転コマンドをローカルで処理\n   */\n  handleDemoOrientationCommand(command) {\n    if (!this.sceneManager) {\n      return null;\n    }\n\n    const normalized = command.toLowerCase();\n    const wantsVerticalFlip = /上下|逆さ|さかさ|ひっくり返/.test(normalized);\n    const wantsHorizontalFlip = /左右|向きを変え|向きを変更|横向き|ミラー|反転/.test(normalized);\n    const wantsRotateRight = /右向き|右を向|右に向け/.test(normalized);\n    const wantsRotateLeft = /左向き|左を向|左に向け/.test(normalized);\n    const wantsRotateBack = /後ろ向き|反対向き|背中|180度|半回転/.test(normalized);\n\n    const hasOrientationKeyword = wantsVerticalFlip || wantsHorizontalFlip || wantsRotateRight || wantsRotateLeft || wantsRotateBack;\n    if (!hasOrientationKeyword) {\n      return null;\n    }\n\n    let targetObject = this.sceneManager.selectedObject;\n    if (!targetObject && typeof this.sceneManager.findObjectByKeyword === 'function') {\n      targetObject = this.sceneManager.findObjectByKeyword(normalized);\n      if (targetObject) {\n        this.sceneManager.selectObject(targetObject);\n      }\n    }\n\n    if (!targetObject) {\n      this.addOutput('⚠️ 変更したいオブジェクトを先に選択してください。', 'warning');\n      return { handled: true, result: { success: false, message: '対象オブジェクトが見つかりませんでした' } };\n    }\n\n    const operations = [];\n\n    if (wantsHorizontalFlip) {\n      const currentX = targetObject.scale.x === 0 ? 1 : targetObject.scale.x;\n      targetObject.scale.x = -currentX;\n      operations.push('左右反転');\n    }\n\n    if (wantsVerticalFlip) {\n      const currentY = targetObject.scale.y === 0 ? 1 : targetObject.scale.y;\n      targetObject.scale.y = -currentY;\n      operations.push('上下反転');\n    }\n\n    if (wantsRotateRight) {\n      targetObject.rotation.y = Math.PI / 2;\n      operations.push('右向き');\n    }\n\n    if (wantsRotateLeft) {\n      targetObject.rotation.y = -Math.PI / 2;\n      operations.push('左向き');\n    }\n\n    if (wantsRotateBack) {\n      targetObject.rotation.y = Math.PI;\n      operations.push('背面向き');\n    }\n\n    if (operations.length === 0) {\n      // ここまで来て操作が無ければ SceneManager に委譲\n      return { handled: false };\n    }\n\n    // 変更履歴を追加\n    targetObject.userData = targetObject.userData || {};\n    targetObject.userData.modifications = targetObject.userData.modifications || [];\n    targetObject.userData.modifications.push({\n      timestamp: Date.now(),\n      type: 'orientation',\n      operations,\n      command\n    });\n\n    // 選択表示を更新\n    if (typeof this.sceneManager.createModernSelectionIndicator === 'function') {\n      this.sceneManager.createModernSelectionIndicator(targetObject);\n    }\n\n    const message = `✏️ ${operations.join('・')} を適用しました`;\n    this.addOutput(message, 'success');\n\n    return {\n      handled: true,\n      result: {\n        success: true,\n        message,\n        objectId: targetObject.name,\n        operations\n      }\n    };\n  }\n\n  /**\n   * コマンド実行\n   */\n  async executeCommand() {\n    const command = this.input.value.trim();\n    if (!command) return;\n\n    // 最終的なコマンドタイプ判定\n    const commandType = this.analyzeCommandType(command);\n\n    if (this.selectedFile) {\n      if (this.currentMode !== 'import') {\n        this.selectMode('import', false);\n      }\n      this.currentMode = 'import';\n    } else {\n      this.currentMode = commandType.type;\n    }\n\n    // 削除の場合は確認ダイアログ\n    if (commandType.requiresConfirmation) {\n      const confirmed = await this.showDeleteConfirmation(command);\n      if (!confirmed) {\n        this.addOutput('❌ 削除をキャンセルしました', 'system');\n        return;\n      }\n    }\n\n    // 入力をクリア\n    this.input.value = '';\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.style.display = 'none';\n    this.hideProactiveSuggestion();\n\n    // コマンド表示（メディアタイプ付き）\n    const mediaIcon = commandType.mediaType === 'video' ? '🎬' : '🖼️';\n    // タスクカード作成\n    const taskId = this.addTaskCard(command, { status: 'processing' });\n\n    // コマンド実行前の状態を履歴に保存\n    this.saveCommandToHistory({\n      command: command,\n      mode: this.currentMode,\n      mediaType: commandType.mediaType,\n      timestamp: Date.now()\n    });\n\n    try {\n      // 処理メッセージ表示\n      // タスクカードは既に1183行目で作成済み（taskId変数）\n      // 重複を避けるため、ここでは作成しない\n\n      let result;\n      \n      // モードに応じたコマンド処理\n      const modePrefix = this.getModePrefix(this.currentMode);\n      const fullCommand = `${modePrefix}${command}`;\n\n      // モード別の実行処理\n      this.logDebug('🔍 Current mode check:', this.currentMode);\n      if (this.currentMode === 'import') {\n        this.logDebug('📁 Import mode detected - bypassing SceneManager');\n        // Importモード: 直接処理（SceneManagerを迂回）\n        if (!this.selectedFile) {\n          throw new Error('ファイルが選択されていません。まずファイルを選択してください。');\n        }\n        result = await this.handleImportCommand(command);\n      } else if (this.sceneManager) {\n        if (this.currentMode === 'modify') {\n          const orientationResult = this.handleDemoOrientationCommand(command);\n          if (orientationResult && orientationResult.handled) {\n            result = orientationResult.result;\n          } else {\n            result = await this.sceneManager.executeCommand(fullCommand);\n          }\n        } else {\n          result = await this.sceneManager.executeCommand(fullCommand);\n        }\n      } else if (this.client) {\n        // モードに応じてAPIエンドポイントを選択\n        if (this.currentMode === 'generate') {\n          // 生成モード: 新しいオブジェクトを作成\n          if (commandType.mediaType === 'video') {\n            result = await this.client.generateVideo(command, {\n              model: this.selectedVideoService || undefined\n            });\n          } else {\n            result = await this.client.generateImage(command, {\n              service: this.selectedImageService || undefined\n            });\n          }\n        } else if (this.currentMode === 'modify') {\n          // 変更モード: 既存オブジェクトを変更（選択が必要）\n          if (!this.selectedObject) {\n            throw new Error('変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。');\n          }\n          result = await this.client.modifySelectedObject(this.selectedObject, command);\n        } else if (this.currentMode === 'delete') {\n          // 削除モード: オブジェクト選択チェック\n          if (!this.selectedObject && !this.sceneManager?.getSelectedObjects()?.length) {\n            this.addOutput('⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。', 'system');\n            return;\n          }\n          // 削除モード: 確認ダイアログを表示してから削除\n          const confirmMessage = `本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;\n          if (!confirm(confirmMessage)) {\n            this.addOutput('❌ 削除がキャンセルされました', 'system');\n            return;\n          }\n          result = await this.client.deleteObjects(command);\n        } else {\n          // その他のモード\n          result = await this.client.executeCommand(fullCommand);\n        }\n      } else {\n        throw new Error('SceneManager または Client が設定されていません');\n      }\n\n      // taskId取得とSSE接続開始\n      if (result && result.taskId) {\n        this.connectToProgress(result.taskId, taskId);\n        this.currentTaskId = result.taskId;\n      }\n\n      // 成功メッセージ\n      const successMessages = {\n        generate: ``, // 成功メッセージ削除 - 結果で十分\n        modify: '✅ 変更を適用しました',\n        delete: '🗑️ 削除しました'\n      };\n      \n      // タスクカード完了\n      if (taskId) {\n        this.updateTaskCard(taskId, 'completed');\n      }\n      \n      // 詳細情報表示\n      if (result.modelName) {\n        // デバッグ情報削除 - モーダル表示用に保存\n      }\n      \n      if (result.objectId) {\n        // オブジェクトID削除\n      }\n      \n      if (result.position) {\n        // 位置情報削除\n      }\n\n      if (commandType.mediaType) {\n        // メディアタイプ削除\n      }\n\n    } catch (error) {\n      const errorMessages = {\n        generate: `❌ ${commandType.mediaType === 'video' ? '動画' : '画像'}生成エラー`,\n        modify: '❌ 変更エラー', \n        delete: '❌ 削除エラー'\n      };\n      // タスクカードエラー\n      if (taskId) {\n        this.updateTaskCard(taskId, 'error');\n      }\n\n      this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`, 'error');\n      console.error('Command execution error:', error);\n    }\n\n    // 2025年UXトレンド: コマンド実行後の自動選択解除\n    if (this.sceneManager && this.sceneManager.selectedObject) {\n      // Modify/Deleteコマンド後は選択を自動解除してストレス軽減\n      if (this.currentMode === 'modify' || this.currentMode === 'delete') {\n        setTimeout(() => {\n          this.sceneManager.deselectObject();\n        }, 500); // 少し遅延させて操作完了を視覚的に確認\n      }\n    }\n\n    // 出力エリアを最下部にスクロール\n    if (this.config.autoScroll) {\n      this.scrollToBottom();\n    }\n  }\n\n  /**\n   * 削除確認ダイアログ\n   */\n  async showConfirmationDialog(options) {\n    const {\n      icon = '🗑️',\n      title = '確認',\n      message = 'この操作を実行しますか？',\n      confirmText = '実行',\n      cancelText = 'キャンセル',\n      confirmColor = '#ef4444'\n    } = options;\n\n    return new Promise((resolve) => {\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;\n\n      const dialog = document.createElement('div');\n      dialog.style.cssText = `\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.3)' : 'rgba(255, 255, 255, 0.5)'};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isDarkMode \n          ? '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)'\n          : '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)'};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;\n\n      dialog.innerHTML = `\n        <div style=\"font-size: 56px; margin-bottom: 20px;\">${icon}</div>\n        <h3 style=\"margin: 0 0 16px 0; color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;\">\n          ${title}\n        </h3>\n        <p style=\"margin: 0 0 28px 0; color: ${this.isDarkMode ? '#d1d5db' : '#6b7280'}; line-height: 1.6; font-size: 16px;\">\n          ${message}\n        </p>\n        <div style=\"display: flex; gap: 8px; justify-content: center;\">\n          <button id=\"cancel-btn\" style=\"\n            padding: 14px 24px;\n            background: ${this.isDarkMode \n              ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n              : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))'};\n            border: 1px solid ${this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)'};\n            border-radius: 12px;\n            color: ${this.isDarkMode ? '#d1d5db' : '#374151'};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          \">${cancelText}</button>\n          <button id=\"confirm-btn\" style=\"\n            padding: 14px 24px;\n            background: ${confirmColor === '#6366f1' \n              ? 'linear-gradient(135deg, #6366f1, #8b5cf6)' \n              : confirmColor === '#ef4444'\n              ? 'linear-gradient(135deg, #ef4444, #dc2626)'\n              : 'linear-gradient(135deg, #ff7b47, #f97316)'};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor === '#6366f1' \n              ? 'rgba(99, 102, 241, 0.3)' \n              : confirmColor === '#ef4444' \n              ? 'rgba(239, 68, 68, 0.3)' \n              : 'rgba(255, 123, 71, 0.3)'};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          \">${confirmText}</button>\n        </div>\n      `;\n\n      modal.appendChild(dialog);\n      document.body.appendChild(modal);\n\n      // アニメーション開始\n      requestAnimationFrame(() => {\n        modal.style.opacity = '1';\n        dialog.style.transform = 'scale(1)';\n        dialog.style.opacity = '1';\n      });\n\n      // イベントリスナー\n      dialog.querySelector('#cancel-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(false);\n      };\n\n      dialog.querySelector('#confirm-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(true);\n      };\n\n      // ESCキーでキャンセル\n      const escHandler = (e) => {\n        if (e.key === 'Escape') {\n          this.closeModalWithAnimation(modal);\n          document.removeEventListener('keydown', escHandler);\n          resolve(false);\n        }\n      };\n      document.addEventListener('keydown', escHandler);\n\n      // モーダル背景クリックでキャンセル\n      modal.onclick = (e) => {\n        if (e.target === modal) {\n          this.closeModalWithAnimation(modal);\n          resolve(false);\n        }\n      };\n    });\n  }\n\n  async showDeleteConfirmation(command) {\n    return this.showConfirmationDialog({\n      icon: '🗑️',\n      title: '削除の確認',\n      message: `「${command}」を実行しますか？<br>この操作は取り消すことができません。`,\n      confirmText: '削除実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#ff7b47'\n    });\n  }\n\n  /**\n   * 出力エリアにメッセージ追加\n   */\n  /**\n   * タスクカード追加（従来のaddOutputを置き換え）\n   */\n  addOutput(message, type = 'default', options = {}) {\n    // タスクカード形式で処理\n    if (type === 'task' || type === 'progress') {\n      return this.addTaskCard(message, options);\n    }\n\n    // エラーとシステムメッセージのみ表示\n    if (type === 'error' || type === 'system') {\n      this.addSystemMessage(message, type);\n    }\n  }\n\n  /**\n   * フローティングタスクカード追加\n   */\n  addTaskCard(taskInfo, options = {}) {\n    if (!this.taskCards) this.taskCards = new Map();\n\n    const taskId = options.taskId || `task_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`;\n    const status = options.status || 'pending';\n    const prompt = taskInfo.prompt || taskInfo.command || taskInfo;\n\n    // フローティングカード作成\n    const card = document.createElement('div');\n    card.className = 'floating-task-card';\n    card.setAttribute('data-task-id', taskId);\n\n    // iOS 26 Liquid Glass + 2026年トレンドスタイル\n    card.style.cssText = this.getFloatingCardStyles(status);\n    // アニメーション用初期状態（非表示）- 強制設定\n    card.style.setProperty('opacity', '0', 'important');\n    card.style.setProperty('transform', 'translateY(20px) scale(0.95)', 'important');\n    card.style.setProperty('filter', 'blur(4px)', 'important');\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    const statusText = {\n      pending: '待機中',\n      processing: '生成中',\n      progress: '進行中',\n      completed: '完了',\n      error: 'エラー'\n    };\n\n    // 温かみのあるメッセージ表示\n    const friendlyMessage = this.getFriendlyMessage(status, prompt);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // フローティングコンテナに追加（最新が下に来るように）\n    this.floatingContainer.appendChild(card);\n    \n    // カード表示制限を適用（最大3個まで表示）\n    this.updateCardDisplayLimit();\n\n    this.taskCards.set(taskId, {\n      element: card,\n      status: status,\n      prompt: prompt,\n      originalPrompt: prompt, // 元のプロンプト\n      startTime: Date.now(),\n      endTime: null,\n      error: null,\n      contentType: 'image', // 'image', 'video', etc.\n      model: null,\n      settings: null\n    });\n\n    // カード詳細モーダル用のイベントリスナー\n    this.addCardDetailEvents(card, taskId);\n    \n    // 入場アニメーション\n    this.animateCardEntrance(card);\n    return taskId;\n  }\n\n  /**\n   * フローティングタスクカード更新\n   */\n  updateTaskCard(taskId, status, options = {}) {\n    if (!this.taskCards || !this.taskCards.has(taskId)) return;\n\n    const taskData = this.taskCards.get(taskId);\n    const card = taskData.element;\n\n    // ステータス更新\n    taskData.status = status;\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    // 温かみのあるメッセージ更新\n    const friendlyMessage = this.getFriendlyMessage(status, taskData.prompt);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // 完了時の自動消去アニメーション\n    if (status === 'completed') {\n      this.animateCardSuccess(card, taskId);\n    } else if (status === 'error') {\n      this.animateCardError(card, taskId);\n    }\n  }\n\n  /**\n   * システムメッセージ表示\n   */\n  addSystemMessage(message, type) {\n    const entry = document.createElement('div');\n    entry.className = `system-message ${type}`;\n    entry.style.cssText = `\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type === 'error' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(107, 114, 128, 0.1)'};\n      border: 1px solid ${type === 'error' ? 'rgba(239, 68, 68, 0.3)' : 'rgba(107, 114, 128, 0.3)'};\n      color: ${type === 'error' ? '#fca5a5' : (this.isDarkMode ? '#d1d5db' : '#6b7280')};\n    `;\n    entry.textContent = message;\n    this.outputDiv.appendChild(entry);\n    this.scrollToBottom();\n  }\n\n  /**\n   * タスクカードスタイル取得\n   */\n  getTaskCardStyles(status) {\n    const baseStyles = `\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(255, 255, 255, 0.15)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.25)'};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;\n\n    const statusBorders = {\n      pending: 'rgba(167, 139, 250, 0.3)',     // 薄紫\n      processing: 'rgba(192, 132, 252, 0.5)',  // 紫（強調）\n      progress: 'rgba(236, 72, 153, 0.4)',     // ピンク\n      completed: 'rgba(167, 139, 250, 0.4)',   // 紫\n      error: 'rgba(239, 68, 68, 0.4)'          // 赤\n    };\n\n    return baseStyles + `border-left: 3px solid ${statusBorders[status] || statusBorders.pending};`;\n  }\n\n  /**\n   * フローティングカードスタイル（iOS 26 Liquid Glass + 2026年トレンド）\n   */\n  getFloatingCardStyles(status) {\n    // 2025年Glassmorphism仕様：フローティングタスクカード\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)',\n      color: '#ffffff'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)',\n      color: '#1f2937'\n    };\n\n    const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n    return `\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  /**\n   * カード表示制限を適用（最大3個まで表示、それ以上は「+ N」で表示）\n   */\n  updateCardDisplayLimit() {\n    const maxVisibleCards = 3;\n    const allCards = Array.from(this.floatingContainer.children).filter(child => \n      !child.classList.contains('overflow-counter')\n    );\n    \n    // 既存のカウンターを削除\n    const existingCounter = this.floatingContainer.querySelector('.overflow-counter');\n    if (existingCounter) {\n      existingCounter.remove();\n    }\n    \n    if (allCards.length <= maxVisibleCards) {\n      // カードが3個以下の場合、すべて表示\n      allCards.forEach(card => {\n        card.style.display = 'flex';\n      });\n    } else {\n      // カードが4個以上の場合、最新3個のみ表示し、残りはカウンター表示\n      const visibleCards = allCards.slice(-maxVisibleCards); // 最新3個\n      const hiddenCount = allCards.length - maxVisibleCards;\n      \n      // 古いカードを非表示\n      allCards.forEach((card, index) => {\n        if (index < allCards.length - maxVisibleCards) {\n          card.style.display = 'none';\n        } else {\n          card.style.display = 'flex';\n        }\n      });\n      \n      // 「+ N」カウンターを作成\n      const counter = document.createElement('div');\n      counter.className = 'overflow-counter';\n      // テーマに応じたカウンタースタイル\n      const counterBaseColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.12)';\n      const counterBorderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.15)';\n      const counterTextColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.6)';\n      \n      counter.style.cssText = `\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;\n      counter.innerHTML = `+ ${hiddenCount}`;\n      \n      // カウンターを最初に挿入（最上部に配置）\n      this.floatingContainer.insertBefore(counter, this.floatingContainer.firstChild);\n      \n      // カウンターのホバー効果（テーマ対応）\n      const counterHoverColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.18)';\n      \n      counter.addEventListener('mouseenter', () => {\n        counter.style.background = counterHoverColor;\n        counter.style.transform = 'scale(1.05)';\n      });\n      \n      counter.addEventListener('mouseleave', () => {\n        counter.style.background = counterBaseColor;\n        counter.style.transform = 'scale(1)';\n      });\n    }\n  }\n\n  /**\n   * カードに詳細モーダル用のイベントリスナーを追加\n   */\n  addCardDetailEvents(card, taskId) {\n    // タッチデバイス検出\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    \n    if (isTouchDevice) {\n      // モバイル/タブレット: タップで詳細表示\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    } else {\n      // デスクトップ: ホバーで詳細表示\n      let hoverTimeout;\n      \n      card.addEventListener('mouseenter', () => {\n        hoverTimeout = setTimeout(() => {\n          this.showTaskDetailModal(taskId);\n        }, 800); // 0.8秒ホバーで表示\n      });\n      \n      card.addEventListener('mouseleave', () => {\n        if (hoverTimeout) {\n          clearTimeout(hoverTimeout);\n        }\n      });\n      \n      // クリックでも表示（デスクトップでも使いやすく）\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    }\n  }\n\n  /**\n   * タスク詳細モーダルを表示\n   */\n  showTaskDetailModal(taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData) return;\n    \n    // 既存のモーダルを削除\n    const existingModal = document.querySelector('.task-detail-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n    \n    // モーダル作成\n    const modal = this.createTaskDetailModal(taskData);\n    document.body.appendChild(modal);\n    \n    // 入場アニメーション\n    requestAnimationFrame(() => {\n      modal.style.opacity = '1';\n      modal.querySelector('.modal-content').style.transform = 'translateY(0) scale(1)';\n    });\n  }\n\n  /**\n   * タスク詳細モーダルのHTML要素を作成\n   */\n  createTaskDetailModal(taskData) {\n    const modal = document.createElement('div');\n    modal.className = 'task-detail-modal';\n    \n    // テーマに応じたスタイル\n    const overlayColor = this.isDarkMode ? 'rgba(0, 0, 0, 0.6)' : 'rgba(0, 0, 0, 0.4)';\n    const modalBg = this.isDarkMode ? 'rgba(20, 20, 20, 0.95)' : 'rgba(255, 255, 255, 0.95)';\n    const modalBorder = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n    const textColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(0, 0, 0, 0.9)';\n    const labelColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)';\n    \n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;\n    \n    // 実行時間計算\n    const duration = taskData.endTime \n      ? ((taskData.endTime - taskData.startTime) / 1000).toFixed(1)\n      : ((Date.now() - taskData.startTime) / 1000).toFixed(1);\n    \n    // ステータス表示\n    const statusText = taskData.status === 'pending' ? '待機中' \n                    : taskData.status === 'in-progress' ? '実行中' \n                    : taskData.status === 'completed' ? '完了' \n                    : 'エラー';\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;\">\n        <h3 style=\"margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;\">タスク詳細</h3>\n        <button class=\"close-btn\" style=\"\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        \">×</button>\n      </div>\n      \n      <div style=\"space-y: 16px;\">\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📝 元のプロンプト</div>\n          <div style=\"color: ${textColor}; font-size: 14px; line-height: 1.4;\">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📊 ステータス</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">⏱️ 実行時間</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${duration}秒</div>\n        </div>\n        \n        ${taskData.error ? `\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">❌ エラー詳細</div>\n          <div style=\"color: #ef4444; font-size: 14px; line-height: 1.4;\">${taskData.error}</div>\n        </div>\n        ` : ''}\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">🎨 コンテンツタイプ</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${taskData.contentType || '画像'}</div>\n        </div>\n      </div>\n    `;\n    \n    // イベントリスナー\n    modalContent.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    const closeBtn = modalContent.querySelector('.close-btn');\n    closeBtn.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    closeBtn.addEventListener('mouseenter', () => {\n      closeBtn.style.color = textColor;\n    });\n    \n    closeBtn.addEventListener('mouseleave', () => {\n      closeBtn.style.color = labelColor;\n    });\n    \n    modal.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    modal.appendChild(modalContent);\n    return modal;\n  }\n\n  /**\n   * タスク詳細モーダルを閉じる\n   */\n  closeTaskDetailModal(modal) {\n    modal.style.opacity = '0';\n    modal.querySelector('.modal-content').style.transform = 'translateY(20px) scale(0.95)';\n    \n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    }, 300);\n  }\n\n  /**\n   * カード入場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardEntrance(card) {\n    // iOS 26 Liquid Glass 入場エフェクト\n    card.style.transform = 'translateY(20px) scale(0.95)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(4px)';\n\n    requestAnimationFrame(() => {\n      card.style.transition = 'all 0.6s cubic-bezier(0.16, 1, 0.3, 1)';\n      card.style.transform = 'translateY(0) scale(1)';\n      card.style.opacity = '1';\n      card.style.filter = 'blur(0px)';\n\n      // 2026年トレンド: 微細な光る効果\n      card.style.boxShadow = '0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)';\n    });\n  }\n\n  /**\n   * 成功時アニメーション + 自動消去（iOS 26 Liquid Glass）\n   */\n  animateCardSuccess(card, taskId) {\n    // iOS 26 Liquid Glass 成功エフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(76, 175, 80, 0.6)';\n    card.style.transform = 'scale(1.08)';\n    card.style.boxShadow = '0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)';\n    card.style.filter = 'brightness(1.1) saturate(1.2)';\n\n    // 2026年トレンド: 流体的な戻りアニメーション\n    setTimeout(() => {\n      card.style.transform = 'scale(1.02)';\n      card.style.filter = 'brightness(1.05) saturate(1.1)';\n    }, 150);\n\n    // Liquid Glass風のスムーズなフェードアウト（2秒後に自動削除）\n    setTimeout(() => {\n      this.animateCardExit(card, taskId);\n    }, 2000);\n  }\n\n  /**\n   * エラー時アニメーション（2026年トレンド UX）\n   */\n  animateCardError(card, taskId) {\n    // iOS 26 Liquid Glass エラーエフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(244, 67, 54, 0.7)';\n    card.style.boxShadow = '0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)';\n    card.style.filter = 'saturate(1.3) brightness(1.1)';\n\n    // 2026年トレンド: より自然なpulseアニメーション（shakeより洗練）\n    card.style.animation = 'errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2';\n\n    // UX改善: エラー内容を表示するツールチップ風UI\n    this.addErrorTooltip(card, taskId);\n\n    // エラーは手動で消すまで表示継続（クリックで消去）\n    card.style.cursor = 'pointer';\n    card.onclick = () => this.animateCardExit(card, taskId);\n\n    // 5秒後に自動フェードアウト（UX改善）\n    setTimeout(() => {\n      if (this.taskCards.has(taskId)) {\n        this.animateCardExit(card, taskId);\n      }\n    }, 5000);\n  }\n\n  /**\n   * エラー時のツールチップ表示（UX改善）\n   */\n  addErrorTooltip(card, taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData || !taskData.error) return;\n\n    // ツールチップ要素作成\n    const tooltip = document.createElement('div');\n    tooltip.style.cssText = `\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;\n    tooltip.textContent = taskData.error;\n\n    card.style.position = 'relative';\n    card.appendChild(tooltip);\n\n    // フェードイン\n    requestAnimationFrame(() => {\n      tooltip.style.opacity = '1';\n    });\n\n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      if (tooltip.parentNode) {\n        tooltip.style.opacity = '0';\n        setTimeout(() => {\n          if (tooltip.parentNode) {\n            tooltip.parentNode.removeChild(tooltip);\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * カード退場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardExit(card, taskId) {\n    // iOS 26 Liquid Glass 退場エフェクト - 2026年トレンドの「スッと消える」\n    card.style.transition = 'all 0.28s cubic-bezier(0.4, 0, 0.2, 1)';\n    card.style.transform = 'translateY(-12px) scale(0.92)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(6px) brightness(1.2)';\n\n    // 2026年トレンド: 消去時の微細な光の拡散効果\n    card.style.boxShadow = '0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)';\n\n    setTimeout(() => {\n      if (card.parentNode) {\n        card.parentNode.removeChild(card);\n      }\n      this.taskCards.delete(taskId);\n      // カード削除後に表示制限を再適用\n      this.updateCardDisplayLimit();\n    }, 280);\n  }\n\n  /**\n   * ユーザーの表現スタイルを自然に感知\n   */\n  getResponseType(prompt) {\n    // ユーザーの表現スタイルを自然に感知\n    if (/ちょこっと|ちょこん|少し|軽く/.test(prompt) || prompt.length < 15) {\n      return 'casual';\n    }\n    if (/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)) {\n      return 'magical';\n    }\n    return 'balanced'; // 80%がここに該当\n  }\n\n  /**\n   * 温かみのあるメッセージを生成（マーケ提案ベース）\n   */\n  getFriendlyMessage(status, prompt, errorMessage = null) {\n    const shortPrompt = prompt.length > 15 ? prompt.substring(0, 15) + '...' : prompt;\n\n    // 自然な応答システム適用\n    const responseType = this.getResponseType(prompt);\n\n    switch (status) {\n      case 'pending':\n        return responseType === 'casual' ? 'ちょこっと準備中です...' :\n               responseType === 'magical' ? '魔法をかけようとしています...' :\n               'ちょこっと魔法の準備中...';\n      case 'processing':\n      case 'in-progress':\n      case 'progress':\n        // Modify mode specific messages for processing\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整中です...' :\n                 responseType === 'magical' ? 'イメージを変化させています...' :\n                 'ちょこんと編集中です...';\n        }\n        return responseType === 'casual' ? 'ちょこんと配置中です...' :\n               responseType === 'magical' ? 'あなたの想いを形にしています...' :\n               'ちょこっと魔法をかけています...';\n      case 'completed':\n        // Delete mode specific messages\n        if (this.currentMode === 'delete') {\n          return responseType === 'casual' ? 'ちょこっと削除しました！' :\n                 responseType === 'magical' ? 'すっきりと片付きました！' :\n                 'ちょこんと削除完了！すっきりですね！';\n        }\n        // Modify mode specific messages\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整しました！' :\n                 responseType === 'magical' ? '素敵に変身しました！' :\n                 'ちょこんと編集完了！いい感じですね！';\n        }\n        // Default completion messages for other modes\n        return responseType === 'casual' ? 'ちょこっとドロップしました！' :\n               responseType === 'magical' ? '素敵な世界が完成しました！' :\n               'ちょこんと配置完了！素敵ですね！';\n      case 'error':\n        // エラー理由があれば含める\n        if (errorMessage) {\n          const shortError = errorMessage.length > 30 ? errorMessage.substring(0, 30) + '...' : errorMessage;\n          return `❌ ${shortError}`;\n        }\n        return responseType === 'casual' ? 'おっと、エラーが発生しました' :\n               responseType === 'magical' ? '申し訳ございません、処理に失敗しました' :\n               'エラーが発生しました。もう一度お試しください';\n      default:\n        return shortPrompt;\n    }\n  }\n\n  /**\n   * ステータス色取得\n   */\n  getStatusColor(status) {\n    // ネオンパープル/ピンク系で統一（2025トレンド）\n    const colors = {\n      pending: this.isDarkMode ? '#a78bfa' : '#7c3aed',        // 薄紫\n      processing: this.isDarkMode ? '#c084fc' : '#9333ea',     // 紫（生成中）\n      progress: this.isDarkMode ? '#ec4899' : '#be185d',       // ピンク\n      completed: this.isDarkMode ? '#a78bfa' : '#7c3aed',      // 紫（完了も統一）\n      error: this.isDarkMode ? '#f87171' : '#dc2626'           // 赤（エラーのみ）\n    };\n    return colors[status] || colors.pending;\n  }\n\n  /**\n   * ステータスインジケーター作成（パーセント表示なし）\n   */\n  createStatusIndicator(status) {\n    if (status === 'processing' || status === 'progress') {\n      return `\n        <div class=\"status-indicator\" style=\"\n          background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        \">\n          <div class=\"status-pulse\" style=\"\n            background: linear-gradient(90deg, transparent, #6366f1, #8b5cf6, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          \"></div>\n        </div>\n        <div style=\"display: flex; align-items: center; gap: 4px; margin-top: 8px;\">\n          <div class=\"status-dots\" style=\"font-size: 10px; color: ${this.isDarkMode ? '#c084fc' : '#9333ea'};\">\n            処理中<span style=\"animation: dots 1.5s infinite;\">...</span>\n          </div>\n        </div>\n      `;\n    }\n    return '';\n  }\n\n  /**\n   * タスク完了アニメーション\n   */\n  animateTaskCompletion(card) {\n    // 控えめなサクセスアニメーション\n    card.style.animation = 'taskComplete 0.8s ease-out';\n\n    // 微妙なパーティクル効果を追加（控えめ）\n    this.addSubtleParticleEffect(card);\n\n    setTimeout(() => {\n      card.style.animation = '';\n    }, 800);\n\n    this.ensureTaskAnimations();\n  }\n\n  /**\n   * 控えめなパーティクル効果\n   */\n  addSubtleParticleEffect(card) {\n    const particles = 3; // 少ない数のパーティクル\n    const rect = card.getBoundingClientRect();\n\n    for (let i = 0; i < particles; i++) {\n      const particle = document.createElement('div');\n      particle.style.cssText = `\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right - 20}px;\n        top: ${rect.top + 10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;\n\n      // ランダムな方向に少し移動\n      const angle = (i / particles) * Math.PI * 2;\n      const distance = 15; // 控えめな距離\n      particle.style.setProperty('--move-x', `${Math.cos(angle) * distance}px`);\n      particle.style.setProperty('--move-y', `${Math.sin(angle) * distance}px`);\n\n      document.body.appendChild(particle);\n\n      // 自動削除\n      setTimeout(() => particle.remove(), 1200);\n    }\n  }\n\n  /**\n   * タスクアニメーション用CSS確保\n   */\n  ensureTaskAnimations() {\n    if (document.getElementById('task-animations')) return;\n\n    const style = document.createElement('style');\n    style.id = 'task-animations';\n    style.textContent = `\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * プログレス付きタスクステータス表示（互換性のため）\n   */\n  addTaskStatus(message, percent = 0, taskId = null) {\n    const id = taskId || `task_${Date.now()}`;\n    return this.addTaskCard(message, {\n      percent: Math.min(Math.max(percent, 0), 100),\n      taskId: id,\n      status: percent > 0 ? 'progress' : 'pending'\n    });\n  }\n\n  /**\n   * プログレス更新\n   */\n  updateTaskProgress(taskId, percent, newMessage = null) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask && newMessage) {\n      // 既存タスクを更新\n      this.addOutput(newMessage, 'progress', { \n        percent: Math.min(Math.max(percent, 0), 100),\n        taskId\n      });\n    }\n  }\n\n  /**\n   * タスク完了（プログレスバー削除）\n   */\n  completeTask(taskId) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask) {\n      // 完了アニメーション\n      existingTask.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n      existingTask.style.opacity = '0';\n      existingTask.style.transform = 'translateX(20px)';\n      \n      setTimeout(() => {\n        if (existingTask.parentNode) {\n          existingTask.remove();\n        }\n      }, 500);\n    }\n  }\n\n  /**\n   * SSE接続開始（リアルタイム進捗受信）\n   */\n  connectToProgress(serverTaskId, uiTaskId = null) {\n    if (this.activeConnections.has(serverTaskId)) {\n      return;\n    }\n\n    const eventSource = new EventSource(`/api/progress/${serverTaskId}`);\n    this.activeConnections.set(serverTaskId, eventSource);\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        data.uiTaskId = uiTaskId; // UI用タスクIDを追加\n        this.handleProgressUpdate(data);\n      } catch (error) {\n        console.error('SSE data parse error:', error);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error);\n      this.disconnectProgress(serverTaskId);\n    };\n  }\n\n  /**\n   * 進捗更新処理\n   */\n  handleProgressUpdate(data) {\n    switch (data.type) {\n      case 'connected':\n        this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);\n        break;\n\n      case 'progress':\n        if (data.percent !== undefined && data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'progress', { percent: data.percent });\n        }\n        break;\n\n      case 'completed':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'completed');\n        }\n        this.disconnectProgress(data.taskId);\n        break;\n\n      case 'error':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'error');\n        }\n        this.addOutput(`❌ ${data.message}`, 'error');\n        this.disconnectProgress(data.taskId);\n        break;\n    }\n  }\n\n  /**\n   * SSE接続終了\n   */\n  disconnectProgress(taskId) {\n    const connection = this.activeConnections.get(taskId);\n    if (connection) {\n      connection.close();\n      this.activeConnections.delete(taskId);\n    }\n  }\n\n  /**\n   * 出力エリアを最下部にスクロール\n   */\n  scrollToBottom() {\n    if (this.outputDiv) {\n      this.outputDiv.scrollTop = this.outputDiv.scrollHeight;\n    }\n  }\n\n  /**\n   * モード別コマンドプレフィックス\n   */\n  getModePrefix(mode) {\n    // サーバー側でモードを区別するためのプレフィックス\n    const prefixes = {\n      generate: '', // デフォルトは生成モード\n      modify: '[変更] ',\n      delete: '[削除] '\n    };\n    return prefixes[mode] || '';\n  }\n\n  /**\n   * コマンド保存 (Undo/Redoシステム)\n   */\n  saveCommandToHistory(commandData) {\n    // 現在のインデックス以降の履歴を削除（新しいコマンドが実行されたため）\n    this.commandHistory = this.commandHistory.slice(0, this.currentHistoryIndex + 1);\n    \n    // 新しいコマンドを履歴に追加\n    this.commandHistory.push(commandData);\n    this.currentHistoryIndex = this.commandHistory.length - 1;\n    \n    // 最大コマンド保存数を超えた場合、古いコマンドを削除\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentHistoryIndex--;\n    }\n    \n    // ボタン状態を更新\n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undo実行\n   */\n  undo() {\n    if (!this.canUndo()) {\n      this.addOutput('↶ Undoできる操作がありません', 'hint');\n      return;\n    }\n    \n    const command = this.commandHistory[this.currentHistoryIndex];\n    this.currentHistoryIndex--;\n    \n    // Undoの逆操作を実行（簡易実装）\n    if (command.mode === 'generate') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の生成を取り消しました`, 'system');\n      // 実際のシーン管理では最後に作成されたオブジェクトを削除\n      if (this.sceneManager && this.sceneManager.undoLastGenerate) {\n        this.sceneManager.undoLastGenerate();\n      }\n    } else if (command.mode === 'modify') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の変更を取り消しました`, 'system');\n      // 実際のシーン管理では前の状態に戻す\n      if (this.sceneManager && this.sceneManager.undoLastModify) {\n        this.sceneManager.undoLastModify();\n      }\n    } else if (command.mode === 'delete') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の削除を取り消しました`, 'system');\n      // 実際のシーン管理では削除されたオブジェクトを復元\n      if (this.sceneManager && this.sceneManager.undoLastDelete) {\n        this.sceneManager.undoLastDelete();\n      }\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Redo実行\n   */\n  redo() {\n    if (!this.canRedo()) {\n      this.addOutput('↷ Redoできる操作がありません', 'hint');\n      return;\n    }\n    \n    this.currentHistoryIndex++;\n    const command = this.commandHistory[this.currentHistoryIndex];\n    \n    // Redoでコマンドを再実行\n    this.addOutput(`↷ Redo: \"${command.command}\" を再実行しました`, 'system');\n    \n    // 実際のシーン管理でのRedo処理\n    if (this.sceneManager && this.sceneManager.redoCommand) {\n      this.sceneManager.redoCommand(command);\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undoが可能かチェック\n   */\n  canUndo() {\n    return this.currentHistoryIndex >= 0;\n  }\n\n  /**\n   * Redoが可能かチェック\n   */\n  canRedo() {\n    return this.currentHistoryIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Undo/Redoボタンの状態更新\n   */\n  updateUndoRedoButtons() {\n    if (this.undoBtn) {\n      this.undoBtn.disabled = !this.canUndo();\n      this.undoBtn.style.opacity = this.canUndo() ? '1' : '0.4';\n      this.undoBtn.style.cursor = this.canUndo() ? 'pointer' : 'not-allowed';\n    }\n    \n    if (this.redoBtn) {\n      this.redoBtn.disabled = !this.canRedo();\n      this.redoBtn.style.opacity = this.canRedo() ? '1' : '0.4';\n      this.redoBtn.style.cursor = this.canRedo() ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  /**\n   * 確認付き全オブジェクト削除\n   */\n  async clearAllWithConfirmation() {\n    const confirmed = await this.showClearAllConfirmation();\n    if (confirmed) {\n      this.clearAll();\n    }\n  }\n\n  /**\n   * Clear All確認ダイアログ\n   */\n  async showClearAllConfirmation() {\n    return this.showConfirmationDialog({\n      icon: '🧹',\n      title: 'Clear All の確認',\n      message: 'すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。',\n      confirmText: 'Clear All 実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#6366f1'\n    });\n  }\n\n  /**\n   * モーダルクローズアニメーション\n   */\n  closeModalWithAnimation(modal) {\n    const dialog = modal.querySelector('div:last-child');\n    dialog.style.transform = 'scale(0.9)';\n    dialog.style.opacity = '0';\n    modal.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (modal.parentElement) {\n        document.body.removeChild(modal);\n      }\n    }, 200);\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    if (this.sceneManager) {\n      this.sceneManager.clearAll();\n      this.addOutput('🧹 全ての実験オブジェクトを削除しました', 'system');\n    } else if (this.client) {\n      // サーバー側での削除は未実装\n      this.addOutput('⚠️ サーバー側削除は未実装', 'error');\n    }\n  }\n\n  // showHistory() メソッド完全削除済み\n\n  /**\n   * 利用可能なコマンド例を表示\n   */\n  showExamples() {\n    const examples = [\n      '右上にドラゴンを作って',\n      '中央に大きなユニコーンを生成',\n      '左下に小さな桜を作って',\n      '空に鳳凰を作って',\n      '地面に神社を作って'\n    ];\n\n    this.addOutput('💡 コマンド例:', 'system');\n    examples.forEach(example => {\n      this.addOutput(`   \"${example}\"`, 'hint');\n    });\n  }\n\n  /**\n   * SceneManager設定\n   */\n  setSceneManager(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.applyServiceSelectionToSceneManager();\n  }\n\n  /**\n   * Client設定\n   */\n  setClient(client) {\n    this.client = client;\n  }\n\n  /**\n   * 設定更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n    // 必要に応じてUIを更新\n    if (newConfig.activationKey) {\n      // 新しいキーバインドを反映するため、イベントリスナーを再設定\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  /**\n   * スタイル再適用\n   */\n  refreshStyles() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isWabiSabiMode ? 'wabisabi-mode' : (this.isDarkMode ? 'dark-mode' : 'light-mode');\n\n    // Generateモードボタンのスタイルを再適用\n    const generateBtn = this.container?.querySelector('[data-mode=\"generate\"]');\n    if (generateBtn) {\n      generateBtn.style.cssText = this.getModeButtonStyles(true, 'generate');\n    }\n    \n    // Executeボタンのスタイルを再適用\n    const executeBtn = this.container?.querySelector('#execute-btn');\n    if (executeBtn) {\n      executeBtn.style.cssText = this.getModernButtonStyles('primary');\n    }\n  }\n\n  /**\n   * テーマ切り替え (light -> dark -> wabisabi -> light)\n   */\n  toggleTheme() {\n    const themeOrder = ['light', 'dark', 'wabisabi'];\n    const currentIndex = themeOrder.indexOf(this.currentTheme);\n    const nextIndex = (currentIndex + 1) % themeOrder.length;\n\n    this.currentTheme = themeOrder[nextIndex];\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n\n    localStorage.setItem('live-command-theme', this.currentTheme);\n\n    // アイコンボタン更新\n    if (this.themeToggle) {\n      const getThemeIcon = () => {\n        const themeConfig = {\n          light: '🌙',\n          dark: '🍵',\n          wabisabi: '☀️'\n        };\n        return themeConfig[this.currentTheme] || '🌙';\n      };\n\n      const getThemeTitle = () => {\n        const titleConfig = {\n          light: 'ダークモードに切り替え',\n          dark: '侘び寂びモードに切り替え',\n          wabisabi: 'ライトモードに切り替え'\n        };\n        return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n      };\n\n      const getThemeIconWithFilter = () => {\n        const icon = getThemeIcon();\n        if (icon === '☀️') {\n          return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n        } else if (icon === '🍵') {\n          return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n        } else {\n          return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n        }\n      };\n\n      this.themeToggle.innerHTML = getThemeIconWithFilter();\n      this.themeToggle.title = getThemeTitle();\n    }\n\n    // 全スタイル再適用\n    this.applyTheme();\n\n    // テーマ切り替え完了（履歴には出力しない）\n  }\n\n  /**\n   * テーマ適用\n   */\n  applyTheme() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isDarkMode ? 'dark-mode' : 'light-mode';\n\n    // メインコンテナ（display状態を保持）\n    const currentDisplay = this.container.style.display;\n    const currentFlexDirection = this.container.style.flexDirection;\n    this.container.style.cssText = this.getContainerStyles();\n    this.container.style.display = currentDisplay || 'flex';\n    this.container.style.flexDirection = currentFlexDirection || 'column';\n\n    // フローティングブランドバッジのテーマ再適用\n    const brandBadge = this.container.querySelector('.floating-brand-badge');\n    if (brandBadge) {\n      brandBadge.style.background = this.isDarkMode \n        ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))'\n        : 'linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))';\n      brandBadge.style.border = `1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'}`;\n    }\n\n    // 入力フィールド\n    this.input.style.cssText = this.getInputStyles();\n\n    // スタイル適用\n    this.output.style.cssText = this.getOutputStyles();\n\n    // ラジオボタンモードセレクターの2025年仕様テーマ再適用\n    if (this.radioModeContainer) {\n      this.radioModeContainer.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))');\n      this.radioModeContainer.style.borderColor = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.4)'\n        : (this.isDarkMode\n          ? 'rgba(99, 102, 241, 0.15)'\n          : 'rgba(255, 255, 255, 0.25)');\n\n      // 各ラジオボタンのスタイル更新\n      Object.keys(this.radioModeButtons).forEach(key => {\n        const { button } = this.radioModeButtons[key];\n        if (this.currentMode !== key) {\n          button.style.color = this.isWabiSabiMode\n            ? 'rgba(245, 245, 245, 0.8)'\n            : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n          button.style.background = 'transparent';\n          button.style.border = '1px solid transparent';\n          button.style.boxShadow = 'none';\n        }\n      });\n\n      // 現在選択されているモードのスタイルも更新\n      this.selectMode(this.currentMode, false);\n    }\n\n    // アクションボタンのテーマ再適用\n    if (this.clearBtn) {\n      this.clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    }\n    if (this.historyBtn) {\n      this.historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n      this.historyBtn.style.opacity = '0.5';\n    }\n    if (this.themeToggle) {\n      const getThemeIcon = () => {\n        const themeConfig = {\n          light: '🌙', // ライトモード時は月を表示（次がダーク）\n          dark: '🍵',  // ダークモード時は茶を表示（次がwabi-sabi）\n          wabisabi: '☀️' // wabi-sabiモード時は太陽を表示（次がライト）\n        };\n        return themeConfig[this.currentTheme] || '🌙';\n      };\n      const getThemeTitle = () => {\n        const titleConfig = {\n          light: 'ダークモードに切り替え',\n          dark: '侘び寂びモードに切り替え',\n          wabisabi: 'ライトモードに切り替え'\n        };\n        return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n      };\n      const getThemeIconWithFilter = () => {\n        const icon = getThemeIcon();\n        // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n        if (icon === '☀️') {\n          return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n        } else if (icon === '🍵') {\n          return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n        } else {\n          return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n        }\n      };\n      this.themeToggle.innerHTML = getThemeIconWithFilter();\n      this.themeToggle.title = getThemeTitle();\n      this.themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    }\n    if (this.settingsButton) {\n      this.settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    }\n\n    this.updateServiceSelectorTheme();\n\n    // 閉じるボタンのテーマ更新\n    const closeButton = this.container.querySelector('.close-button');\n    if (closeButton) {\n      closeButton.style.color = this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937');\n      closeButton.style.background = this.isWabiSabiMode\n        ? 'rgba(245, 245, 245, 0.1)'\n        : (this.isDarkMode\n          ? 'rgba(255, 255, 255, 0.1)'\n          : 'rgba(0, 0, 0, 0.1)');\n    }\n\n    // フローティングコンテナとタスクカードのテーマ更新\n    this.updateFloatingContainerTheme();\n\n    // 既存の出力テキストの色を更新\n    this.updateExistingTextColors();\n  }\n\n  /**\n   * フローティングコンテナとタスクカードのテーマ更新\n   */\n  updateFloatingContainerTheme() {\n    if (!this.floatingContainer) return;\n\n    // フローティングコンテナの表示状態を保持\n    const currentDisplay = this.floatingContainer.style.display;\n\n    // 既存のタスクカードの色だけをテーマに合わせて更新（レイアウトは保持）\n    if (this.taskCards && this.taskCards.size > 0) {\n      this.taskCards.forEach((taskData, taskId) => {\n        const card = taskData.element;\n        if (card) {\n          // テーマ関連の色のみ更新（位置やアニメーション状態は保持）\n          // 2025年Glassmorphism仕様適用\n          const glassmorphismDark = {\n            background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n            border: '1px solid rgba(99, 102, 241, 0.25)',\n            color: '#ffffff'\n          };\n\n          const glassmorphismLight = {\n            background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n            border: '1px solid rgba(255, 255, 255, 0.4)',\n            color: '#1f2937'\n          };\n\n          const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n\n          card.style.setProperty('background', theme.background, 'important');\n          card.style.setProperty('border', theme.border, 'important');\n          card.style.setProperty('color', theme.color, 'important');\n        }\n      });\n    }\n\n    // テーマ切り替え時は位置は変更せず、表示状態のみ復元\n    this.floatingContainer.style.display = currentDisplay;\n  }\n\n  /**\n   * 既存のテキスト色を現在のテーマに合わせて更新\n   */\n  updateExistingTextColors() {\n    const colors = this.isDarkMode ? {\n      system: '#60a5fa',\n      command: '#93c5fd',\n      success: '#f472b6',\n      error: '#f87171',\n      processing: '#fbbf24',\n      info: '#d1d5db',\n      hint: '#d1d5db'\n    } : {\n      system: '#1e40af',\n      command: '#1d4ed8',\n      success: '#be185d',\n      error: '#dc2626',\n      processing: '#d97706',\n      info: '#7c3aed',\n      hint: '#374151'\n    };\n\n    const defaultTextColor = this.isDarkMode ? '#d1d5db' : '#374151';\n\n    // output内の全てのdivの色を更新\n    this.output.querySelectorAll('div').forEach(line => {\n      const text = line.textContent;\n      let type = 'default';\n      \n      // テキストの内容からタイプを判定\n      if (text.includes('📋') || text.includes('🎨') || text.includes('🎮') || text.includes('UI起動')) {\n        type = 'system';\n      } else if (text.startsWith('> ')) {\n        type = 'command';\n      } else if (text.includes('✅') || text.includes('⭐') || text.includes('生成しました')) {\n        type = 'success';\n      } else if (text.includes('❌') || text.includes('エラー')) {\n        type = 'error';\n      } else if (text.includes('中...')) {\n        type = 'processing';\n      } else if (text.includes('📍') || text.includes('使用モデル:') || text.includes('位置:')) {\n        type = 'info';\n      } else if (text.includes('   ')) {\n        type = 'hint';\n      }\n\n      line.style.color = colors[type] || defaultTextColor;\n    });\n  }\n\n  /**\n   * Importインターフェース表示\n   */\n  showImportInterface() {\n    // 隠しファイル入力を作成（Importボタンから直接選択できるので、ボタンは不要）\n    if (!this.fileInput) {\n      this.fileInput = document.createElement('input');\n      this.fileInput.type = 'file';\n      this.fileInput.accept = '.glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov';\n      this.fileInput.style.display = 'none';\n      this.fileInput.onchange = (e) => this.handleFileSelection(e);\n      document.body.appendChild(this.fileInput);\n    }\n\n    // ドラッグ&ドロップ機能を有効化\n    this.enableDragAndDrop();\n  }\n\n  /**\n   * Importインターフェース非表示\n   */\n  hideImportInterface() {\n    if (this.fileSelectButton && this.fileSelectButton.parentNode) {\n      this.fileSelectButton.parentNode.removeChild(this.fileSelectButton);\n    }\n    this.disableDragAndDrop();\n  }\n\n  /**\n   * ファイル選択ダイアログを開く\n   */\n  openFileSelector() {\n    if (this.fileInput) {\n      this.fileInput.click();\n    }\n  }\n\n  /**\n   * Importボタンから直接ファイル選択を実行\n   */\n  triggerFileSelection() {\n    // ファイル入力要素が存在しない場合は作成\n    if (!this.fileInput) {\n      this.showImportInterface(); // 既存のファイル入力作成処理を呼び出し\n    }\n\n    // 直接ファイル選択ダイアログを開く\n    this.openFileSelector();\n\n    // Import モードに切り替え（UI反映）\n    this.selectMode('import', true);\n  }\n\n  /**\n   * ファイル選択処理\n   */\n  async handleFileSelection(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      // ファイルタイプを判定\n      const fileType = this.detectFileType(file.name);\n\n      // ファイルをローカルURLとして処理\n      const fileUrl = URL.createObjectURL(file);\n\n      // ファイル情報を保存\n      this.selectedFile = {\n        file: file,\n        url: fileUrl,\n        type: fileType,\n        name: file.name\n      };\n\n      this.selectMode('import', true);\n\n      // 自動的にデフォルトプロンプトで実行\n      const defaultPrompt = `中央に設置 (${file.name})`;\n      this.input.value = defaultPrompt;\n\n      this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`, 'system');\n      this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`, 'system');\n\n      // 自動実行（少し遅延を入れてUX向上）\n      setTimeout(() => {\n        this.executeCommand();\n      }, 500);\n\n    } catch (error) {\n      console.error('File selection error:', error);\n      this.addOutput(`❌ ファイル選択エラー: ${error.message}`, 'error');\n    }\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を有効化\n   */\n  enableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.addEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.addEventListener('drop', this.handleDrop.bind(this));\n    this.input.addEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.addEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を無効化\n   */\n  disableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.removeEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.removeEventListener('drop', this.handleDrop.bind(this));\n    this.input.removeEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.removeEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグオーバー処理\n   */\n  handleDragOver(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグエンター処理\n   */\n  handleDragEnter(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグリーブ処理\n   */\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n  }\n\n  /**\n   * ドロップ処理\n   */\n  async handleDrop(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length === 0) return;\n\n    const file = files[0]; // 最初のファイルのみ処理\n\n    // ファイルタイプをチェック\n    const fileType = this.detectFileType(file.name);\n    if (!fileType) {\n      this.addOutput('❌ サポートされていないファイル形式です', 'error');\n      return;\n    }\n\n    // ファイル選択処理と同じ流れ\n    this.handleFileSelection({ target: { files: [file] } });\n  }\n\n  /**\n   * ファイルタイプ判定\n   */\n  detectFileType(fileName) {\n    const ext = fileName.toLowerCase().split('.').pop();\n\n    if (['glb', 'gltf'].includes(ext)) return '3d';\n    if (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) return 'image';\n    if (['mp4', 'mov', 'webm'].includes(ext)) return 'video';\n\n    return null;\n  }\n\n  /**\n   * Importコマンド処理\n   */\n  async handleImportCommand(command) {\n    if (!this.selectedFile) {\n      throw new Error('ファイルが選択されていません');\n    }\n\n    try {\n      // プロンプトから位置情報を解析\n      const position = this.sceneManager ? this.sceneManager.parsePosition(command) : { x: 0, y: 5, z: -10 };\n\n      let result;\n\n      switch (this.selectedFile.type) {\n        case '3d':\n          // 3Dモデルを読み込み\n          if (this.sceneManager) {\n            result = await this.sceneManager.load3DModel(this.selectedFile.url, {\n              position: position,\n              // scale: 自動調整に任せる\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'image':\n          // 画像をテクスチャプレーンとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadImageFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'video':\n          // 動画をビデオテクスチャとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadVideoFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        default:\n          throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`);\n      }\n\n      // ファイル情報をクリーンアップ\n      const processedFileName = this.selectedFile?.name;\n      const importedType = this.selectedFile?.type;\n      const importedUrl = this.selectedFile?.url;\n\n      if (importedType !== 'video' && importedUrl) {\n        URL.revokeObjectURL(importedUrl);\n      }\n\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n\n      return {\n        success: true,\n        message: `${processedFileName || 'ファイル'} を ${position.x}, ${position.y}, ${position.z} に配置しました`,\n        objectId: result.objectId\n      };\n\n    } catch (error) {\n      // エラー時もファイル情報をクリーンアップ\n      if (this.selectedFile?.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n      throw error;\n    }\n  }\n\n  /**\n   * 削除モードが選択された時の処理\n   */\n  handleDeleteModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：削除コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を削除 ⏎`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 削除対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 削除するオブジェクトを選択後、削除ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('delete');\n      \n      // DELETEモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 修正モードが選択された時の処理\n   */\n  handleModifyModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：修正コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 修正対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 修正するオブジェクトを選択後、修正ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('modify');\n      \n      // Modifyモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Attention Animation\n   * オブジェクト未選択時の注意喚起アニメーション\n   */\n  triggerAttentionAnimation(mode) {\n    const chatOutput = this.chatOutput;\n    const inputField = this.input;\n    \n    // 2025年トレンド1: Micro-Shake Effect（微細な震え）\n    this.addMicroShakeEffect(chatOutput);\n    \n    // 2025年トレンド2: Context-Aware Glow（状況認識グロー）\n    this.addContextGlow(inputField, mode);\n    \n    // 2025年トレンド3: Emotional Pulse（感情的パルス）\n    this.addEmotionalPulse(chatOutput, mode);\n    \n    // 2025年トレンド4: 3D Depth Shadow（立体的影効果）\n    this.add3DDepthEffect(chatOutput);\n  }\n\n  /**\n   * 2025年トレンド：Micro-Shake Effect\n   */\n  addMicroShakeEffect(element) {\n    element.style.animation = 'microShake2025 0.5s ease-in-out';\n    \n    // CSSアニメーションを動的追加\n    this.ensureMicroShakeAnimation();\n    \n    // アニメーション後クリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 500);\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Glow\n   */\n  addContextGlow(element, mode) {\n    const glowColor = mode === 'delete' ? 'rgba(239, 68, 68, 0.4)' : 'rgba(99, 102, 241, 0.4)';\n    \n    element.style.transition = 'all 0.3s ease';\n    element.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n    \n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      element.style.boxShadow = '';\n    }, 3000);\n  }\n\n  /**\n   * 2025年トレンド：Emotional Pulse\n   */\n  addEmotionalPulse(element, mode) {\n    const pulseColor = mode === 'delete' ? '#ef4444' : '#6366f1';\n    \n    element.style.borderLeft = `4px solid ${pulseColor}`;\n    element.style.animation = 'emotionalPulse2025 2s ease-in-out infinite';\n    \n    // CSSアニメーションを動的追加\n    this.ensureEmotionalPulseAnimation();\n    \n    // 6秒後にアニメーション停止\n    setTimeout(() => {\n      element.style.animation = '';\n      element.style.borderLeft = '';\n    }, 6000);\n  }\n\n  /**\n   * 2025年トレンド：3D Depth Effect\n   */\n  add3DDepthEffect(element) {\n    element.style.transform = 'translateZ(8px) rotateX(1deg)';\n    element.style.transition = 'transform 0.3s ease';\n    \n    // 2秒後に元に戻す\n    setTimeout(() => {\n      element.style.transform = '';\n    }, 2000);\n  }\n\n  /**\n   * Micro-Shake CSSアニメーション確保\n   */\n  ensureMicroShakeAnimation() {\n    if (document.getElementById('micro-shake-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'micro-shake-2025';\n    style.textContent = `\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Emotional Pulse CSSアニメーション確保\n   */\n  ensureEmotionalPulseAnimation() {\n    if (document.getElementById('emotional-pulse-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'emotional-pulse-2025';\n    style.textContent = `\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * モード切り替え時の入力欄メッセージ上書き機能\n   * ユーザビリティ向上：他モードのメッセージを新モードの初期状態にクリア\n   */\n  clearInputOnModeSwitch(newMode) {\n    // 現在の入力欄に内容がある場合のみ処理\n    if (this.input.value.trim()) {\n      // 以前のモードのメッセージかどうかを判定\n      const isPreviousModeMessage = this.isPreviousModeMessage(this.input.value, newMode);\n      \n      if (isPreviousModeMessage) {\n        // 以前のモードのメッセージの場合、新モードの初期メッセージに置き換え\n        this.input.value = '';\n        this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`, 'system');\n      }\n    }\n  }\n\n  /**\n   * 入力内容が以前のモードのメッセージかどうかを判定\n   */\n  isPreviousModeMessage(inputValue, currentMode) {\n    // Delete/Modifyモードの特徴的なメッセージパターンを検出\n    const deletePatterns = [\n      /.*を削除$/,\n      /削除$/\n    ];\n    \n    const modifyPatterns = [\n      /.*を$/,\n      /.*を変更/,\n      /.*をピンク/,\n      /.*を大きく/,\n      /.*を小さく/,\n      /.*を移動/,\n      /回転/,\n      /反転/,\n      /ミラー/,\n      /傾け/,\n      /向きを変え/,\n      /.*を.*色/,\n      /.*を.*サイズ/\n    ];\n    \n    const importPatterns = [\n      /ファイル/,\n      /画像/,\n      /インポート/\n    ];\n\n    // 現在のモードと異なるパターンにマッチする場合は上書き対象\n    switch (currentMode) {\n      case 'delete':\n        return modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'modify':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'import':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'generate':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      default:\n        return false;\n    }\n  }\n\n  /**\n   * モード表示名を取得\n   */\n  getModeDisplayName(mode) {\n    const modeNames = {\n      'generate': '生成',\n      'import': 'インポート',\n      'modify': '修正',\n      'delete': '削除'\n    };\n    return modeNames[mode] || mode;\n  }\n\n  /**\n   * 常時表示フローティングチョコアイコンを作成\n   */\n  createFloatingChocolateIcon() {\n    // 既存のアイコンがあれば削除\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.remove();\n    }\n\n    this.floatingChocolateIcon = document.createElement('div');\n    this.floatingChocolateIcon.innerHTML = '🍫';\n    this.floatingChocolateIcon.title = 'ChocoDrop を開く (@キーでも開けます)';\n    this.floatingChocolateIcon.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;\n\n    // ホバー効果\n    this.floatingChocolateIcon.addEventListener('mouseover', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1.1) translateY(-2px)';\n      this.floatingChocolateIcon.style.boxShadow = '0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)';\n      this.floatingChocolateIcon.style.opacity = '1';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    this.floatingChocolateIcon.addEventListener('mouseout', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1) translateY(0)';\n      this.floatingChocolateIcon.style.boxShadow = '0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)';\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    // クリックで ChocoDrop を開く\n    this.floatingChocolateIcon.addEventListener('click', () => {\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // 右クリックメニュー\n    this.floatingChocolateIcon.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.showFloatingIconContextMenu(e);\n    });\n\n    // DOM に追加\n    document.body.appendChild(this.floatingChocolateIcon);\n  }\n\n  /**\n   * フローティングアイコンの右クリックメニューを表示\n   */\n  showFloatingIconContextMenu(event) {\n    // 既存のメニューがあれば削除\n    const existingMenu = document.querySelector('.floating-icon-context-menu');\n    if (existingMenu) {\n      existingMenu.remove();\n    }\n\n    // コンテキストメニュー作成\n    const menu = document.createElement('div');\n    menu.className = 'floating-icon-context-menu';\n    menu.style.cssText = `\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isDarkMode ? 'rgba(17, 24, 39, 0.85)' : 'rgba(255, 255, 255, 0.85)'};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.2)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n    `;\n\n    // メニューアイテム1: フォームを開く\n    const openFormItem = document.createElement('div');\n    openFormItem.innerHTML = '📄 フォームを開く';\n    openFormItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: #6366f1;\n      text-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);\n    `;\n\n    openFormItem.addEventListener('mouseover', () => {\n      openFormItem.style.background = this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)';\n      openFormItem.style.textShadow = '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    openFormItem.addEventListener('mouseout', () => {\n      openFormItem.style.background = 'transparent';\n      openFormItem.style.textShadow = '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    openFormItem.addEventListener('click', () => {\n      menu.remove();\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // メニューアイテム2: アイコンを非表示\n    const hideIconItem = document.createElement('div');\n    hideIconItem.innerHTML = '✕ アイコンを非表示';\n    hideIconItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: #6366f1;\n      text-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);\n    `;\n\n    hideIconItem.addEventListener('mouseover', () => {\n      hideIconItem.style.background = this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)';\n      hideIconItem.style.textShadow = '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    hideIconItem.addEventListener('mouseout', () => {\n      hideIconItem.style.background = 'transparent';\n      hideIconItem.style.textShadow = '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    hideIconItem.addEventListener('click', () => {\n      menu.remove();\n      this.hideFloatingIcon();\n    });\n\n    // メニューに追加\n    menu.appendChild(openFormItem);\n    menu.appendChild(hideIconItem);\n\n    // DOM に追加\n    document.body.appendChild(menu);\n\n    // 画面外に出ないように調整\n    const rect = menu.getBoundingClientRect();\n    if (rect.right > window.innerWidth) {\n      menu.style.left = `${event.clientX - rect.width}px`;\n    }\n    if (rect.bottom > window.innerHeight) {\n      menu.style.top = `${event.clientY - rect.height}px`;\n    }\n\n    // 外部クリックで閉じる\n    const closeMenu = (e) => {\n      if (!menu.contains(e.target)) {\n        menu.remove();\n        document.removeEventListener('click', closeMenu);\n      }\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', closeMenu);\n    }, 10);\n  }\n\n  /**\n   * フローティングアイコンを非表示にする\n   */\n  hideFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * フローティングアイコンを表示する\n   */\n  showFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'flex';\n    }\n  }\n\n  dispose() {\n    // ファイル選択関連のクリーンアップ\n    if (this.fileInput && this.fileInput.parentNode) {\n      this.fileInput.parentNode.removeChild(this.fileInput);\n    }\n    if (this.selectedFile && this.selectedFile.url) {\n      URL.revokeObjectURL(this.selectedFile.url);\n    }\n\n    // フローティングチョコアイコンのクリーンアップ\n    if (this.floatingChocolateIcon && this.floatingChocolateIcon.parentNode) {\n      this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon);\n    }\n\n    if (this.container && this.container.parentElement) {\n      this.container.parentElement.removeChild(this.container);\n    }\n  }\n\n  showOverlayTextarea() {\n    if (this.overlayTextarea) return;\n\n    this.isExpanded = true;\n    \n    // オーバーレイテキストエリアを作成\n    this.overlayTextarea = document.createElement('textarea');\n    this.overlayTextarea.value = this.input.value;\n    this.overlayTextarea.placeholder = this.input.placeholder;\n    \n    // フォームの位置とサイズを取得\n    const containerRect = this.container.getBoundingClientRect();\n    \n    // 画面境界を考慮した位置調整\n    const overlayHeight = 300;\n    const padding = 20;\n    \n    let top = containerRect.top + 60;\n    let left = containerRect.left;\n    let width = containerRect.width;\n    \n    // 右端がはみ出る場合\n    if (left + width > window.innerWidth - padding) {\n      left = window.innerWidth - width - padding;\n    }\n    \n    // 左端がはみ出る場合\n    if (left < padding) {\n      left = padding;\n      width = Math.min(width, window.innerWidth - 2 * padding);\n    }\n    \n    // 下端がはみ出る場合\n    if (top + overlayHeight > window.innerHeight - padding) {\n      top = Math.max(padding, window.innerHeight - overlayHeight - padding);\n    }\n\n    const overlayBackground = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))');\n\n    const overlayBorder = this.isWabiSabiMode\n      ? '1px solid rgba(93, 64, 55, 0.5)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.25)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    const overlayInnerShadow = this.isWabiSabiMode\n      ? '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n      : (this.isDarkMode\n        ? '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n        : '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)');\n\n    const overlayTextColor = this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937');\n\n    // オーバーレイのスタイル設定\n    this.overlayTextarea.style.cssText = `\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${overlayBackground};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${overlayBorder};\n      box-shadow: ${overlayInnerShadow};\n      border-radius: 16px;\n      color: ${overlayTextColor};\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;\n    \n    // ドキュメントに追加\n    document.body.appendChild(this.overlayTextarea);\n    \n    // アニメーション開始\n    requestAnimationFrame(() => {\n      this.overlayTextarea.style.opacity = '1';\n    });\n    \n    // フォーカス設定\n    this.overlayTextarea.focus();\n    \n    // 入力同期\n    this.overlayTextarea.addEventListener('input', (e) => {\n      this.input.value = e.target.value;\n    });\n    \n    // Escapeキーで閉じる\n    this.overlayTextarea.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.hideOverlayTextarea();\n      }\n    });\n    \n    // 外側クリックで閉じる\n    this.overlayTextarea.addEventListener('blur', () => {\n      setTimeout(() => this.hideOverlayTextarea(), 100);\n    });\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n}\n","const IMAGE_SERVICE_STORAGE_KEY = 'chocodrop-service-image';\nconst VIDEO_SERVICE_STORAGE_KEY = 'chocodrop-service-video';\nconst KEYWORD_HIGHLIGHT_COLOR = '#ff6ad5';\n\n/**\n * Command UI - Web interface for ChocoDrop System\n * Real-time natural language command interface for 3D scenes\n */\nexport class CommandUI {\n  constructor(options = {}) {\n    this.sceneManager = options.sceneManager || null;\n    this.client = options.client || null;\n    this.onControlsToggle = options.onControlsToggle || (() => {});\n    \n    this.isVisible = false;\n    this.container = null;\n    this.input = null;\n    this.output = null;\n    this.currentMode = 'generate';\n\n    // リアルタイム進捗管理\n    this.activeConnections = new Map();\n    this.currentTaskId = null;\n    \n    // 設定\n    this.config = {\n      activationKey: options.activationKey || '@',\n      position: options.position || 'bottom-right',\n      width: options.width || 450,\n      maxHeight: options.maxHeight || 600,\n      theme: options.theme || 'dark',\n      showExamples: options.showExamples !== false,\n      autoScroll: options.autoScroll !== false,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n\n    this.availableImageServices = [];\n    this.availableVideoServices = [];\n    this.selectedImageService = null;\n    this.selectedVideoService = null;\n    this.highlightOverlay = null;\n    this.inputDefaultStyles = null;\n    this.imageServiceSelect = null;\n    this.videoServiceSelect = null;\n    this.serviceSelectorContainer = null;\n    this.serviceSelectorStatus = null;\n    this.serviceSelectorContent = null;\n    this.serviceSelectorRetryButton = null;\n    this.serviceSelectorSaveButton = null;\n    this.serviceSelectorCancelButton = null;\n    this.serviceModalOverlay = null;\n    this.serviceModal = null;\n    this.servicesLoading = false;\n    this.isExpanded = false;\n    this.overlayTextarea = null;\n    this.pendingImageService = null;\n    this.pendingVideoService = null;\n\n    try {\n      const storedImage = localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY);\n      const storedVideo = localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY);\n      console.log('🔍 Debug localStorage read:', { storedImage, storedVideo, IMAGE_SERVICE_STORAGE_KEY, VIDEO_SERVICE_STORAGE_KEY });\n      if (storedImage) {\n        this.selectedImageService = storedImage;\n        console.log('✅ Set selectedImageService:', this.selectedImageService);\n      }\n      if (storedVideo) {\n        this.selectedVideoService = storedVideo;\n        console.log('✅ Set selectedVideoService:', this.selectedVideoService);\n      }\n      console.log('🔍 Final values:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    } catch (error) {\n      console.warn('⚠️ Failed to load stored service selections:', error);\n    }\n\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    this.applyServiceSelectionToSceneManager();\n    console.log('🔍 After applyServiceSelectionToSceneManager - UI:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    console.log('🔍 After applyServiceSelectionToSceneManager - SceneManager:', { selectedImageService: this.sceneManager?.selectedImageService, selectedVideoService: this.sceneManager?.selectedVideoService });\n\n    // テーマモード状態管理 (light, dark, wabisabi)\n    this.currentTheme = localStorage.getItem('live-command-theme') || 'light';\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    \n    // Undo/Redo システム\n    this.commandHistory = [];\n    this.currentHistoryIndex = -1;\n    this.maxHistorySize = 50; // 最大コマンド保存数\n    \n    this.initUI();\n    this.bindEvents();\n\n    if (!this.client && this.sceneManager && this.sceneManager.client) {\n      this.client = this.sceneManager.client;\n    }\n\n    this.createServiceModal();\n    this.createFloatingChocolateIcon();\n\n    // DOM読み込み完了後にスタイルを確実に適用\n    document.addEventListener('DOMContentLoaded', () => {\n      this.refreshStyles();\n    });\n\n    this.logDebug('🎮 CommandUI initialized');\n\n    if (!this.selectedImageService || !this.selectedVideoService) {\n      this.openServiceModal(true);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * UI要素の作成と配置\n   */\n  initUI() {\n    // メインコンテナ\n    this.container = document.createElement('div');\n    this.container.id = 'live-command-ui';\n    this.container.style.cssText = this.getContainerStyles();\n\n    // 2025年トレンド：Progressive Disclosure（ホバー時のみブランド表示）\n    const brandIndicator = document.createElement('div');\n    brandIndicator.className = 'progressive-brand-indicator';\n    brandIndicator.style.cssText = `\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;\n    \n    // Progressive Disclosure: ホバー/クリックでブランド名表示\n    const brandText = document.createElement('div');\n    brandText.className = 'progressive-brand-text';\n    brandText.style.cssText = `\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.25)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;\n    brandText.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">🍫</span> <span style=\"color: #6366f1;\">ChocoDrop</span>';\n    \n    // Progressive Disclosure イベント\n    brandIndicator.addEventListener('mouseenter', () => {\n      brandText.style.opacity = '1';\n      brandText.style.transform = 'translateY(0) scale(1)';\n      brandIndicator.style.transform = 'scale(1.2)';\n      brandIndicator.style.opacity = '1';\n    });\n    \n    brandIndicator.addEventListener('mouseleave', () => {\n      brandText.style.opacity = '0';\n      brandText.style.transform = 'translateY(5px) scale(0.9)';\n      brandIndicator.style.transform = 'scale(1)';\n      brandIndicator.style.opacity = '0.7';\n    });\n    \n    brandIndicator.appendChild(brandText);\n    this.container.appendChild(brandIndicator);\n\n    // 出力エリア（タスクカードコンテナ）- 非表示に変更\n    this.output = document.createElement('div');\n    this.outputDiv = this.output; // 両方の参照を保持（互換性のため）\n    this.output.id = 'command-output';\n    this.output.className = 'command-output';\n    this.output.style.cssText = this.getOutputStyles();\n    // フローティングカード用コンテナ\n    this.floatingContainer = document.createElement('div');\n    this.floatingContainer.id = 'floating-cards-container';\n    this.floatingContainer.style.cssText = `\n      position: fixed;\n      bottom: var(--floating-bottom, 120px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-start;\n    `;\n\n    // タスクカード管理用\n    this.taskCards = new Map();\n\n    // 入力フィールドラッパー（展開ボタン用）\n    this.inputWrapper = document.createElement('div');\n    this.inputWrapper.style.cssText = `\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;\n\n    // Ultra-Simple 単一入力フィールド（自動リサイズ対応）\n    this.input = document.createElement('textarea');\n    this.input.rows = 1;\n    this.input.id = 'command-input';\n    this.input.placeholder = '「右上にドラゴンを」「美しい桜の森を中央に」など... ✨';\n    this.input.style.cssText = this.getInputStyles();\n\n    // 展開ボタン（初期状態は非表示）\n    this.expandButton = document.createElement('div');\n    this.expandButton.innerHTML = '⤢';\n    this.expandButton.title = 'テキスト全体を表示';\n    this.expandButton.style.cssText = `\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n      border-radius: 6px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;\n\n    // 展開ボタンのホバー効果\n    this.expandButton.addEventListener('mouseenter', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      this.expandButton.style.transform = 'scale(1.1)';\n    });\n\n    this.expandButton.addEventListener('mouseleave', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      this.expandButton.style.transform = 'scale(1)';\n    });\n\n    // 展開ボタンのクリック処理\n    this.expandButton.addEventListener('click', () => {\n      if (this.isExpanded) {\n        this.hideOverlayTextarea();\n      } else {\n        this.showOverlayTextarea();\n      }\n    });\n\n    // ラッパーに要素を追加\n    this.inputWrapper.appendChild(this.input);\n    this.inputWrapper.appendChild(this.expandButton);\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合）\n\n    // ラジオボタン風モードセレクター\n    const modeSelector = this.createRadioModeSelector();\n\n    // ミニマルアクションボタン\n    const actionContainer = this.createMinimalActions();\n\n    // ×クローズボタンをフォーム右上に追加\n    const closeButton = document.createElement('div');\n    closeButton.innerHTML = '×';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;\n\n    closeButton.addEventListener('mouseover', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      closeButton.style.transform = 'scale(1.1)';\n    });\n\n    closeButton.addEventListener('mouseout', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.transform = 'scale(1)';\n    });\n\n    closeButton.addEventListener('click', () => {\n      this.hide();\n    });\n\n    // 組み立て（ヘッダー削除、ブランドバッジは既に追加済み）\n    // this.container.appendChild(this.output); // 大きなタスク表示エリアをDOMに追加しない\n    this.container.appendChild(closeButton);\n    this.container.appendChild(modeSelector);\n    this.container.appendChild(this.inputWrapper);\n    this.container.appendChild(actionContainer);\n\n    // フローティングカードコンテナをbodyに直接追加\n    document.body.appendChild(this.floatingContainer);\n\n    // DOM に追加\n    document.body.appendChild(this.container);\n\n    // 初回テーマ適用\n    this.applyTheme();\n\n    // 日本語IME対応のcomposition state管理\n    this.isComposing = false;\n    this.hasCompositionJustEnded = false;\n\n    // リアルタイム入力監視とコマンド検出（IME対応）\n    this.input.addEventListener('input', () => {\n      // IME入力中はコマンド検出を停止\n      if (this.isComposing) {\n        return;\n      }\n      \n      // 自動リサイズ処理\n      this.autoResizeTextarea();\n      \n      // キーワードハイライト適用\n      this.applyKeywordHighlighting();\n      \n      this.detectCommandType();\n    });\n    \n    // 日本語IME composition events\n    this.input.addEventListener('compositionstart', () => {\n      this.isComposing = true;\n    });\n    \n    this.input.addEventListener('compositionend', () => {\n      this.isComposing = false;\n      \n      // Safariのみフラグ設定（他のブラウザは不要）\n      const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n      if (isSafari) {\n        this.hasCompositionJustEnded = true;\n      }\n      \n      // 確定後のコマンド検出を実行\n      setTimeout(() => {\n        this.autoResizeTextarea();\n        this.detectCommandType();\n      }, 10);\n    });\n    \n    // Safari判定\n    const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n    \n    // 日本語IME対応Enterキー処理（Safari対応版）\n    this.input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        // Safari: compositionend直後のEnterをスキップ\n        if (isSafari && this.hasCompositionJustEnded) {\n          this.hasCompositionJustEnded = false;\n          return;\n        }\n        \n        // その他のブラウザ: isComposingチェック\n        if (!isSafari && (e.isComposing || this.isComposing)) {\n          return;\n        }\n        \n\n\n        e.preventDefault();\n        this.executeCommand();\n      }\n    });\n    \n    // 初期メッセージ\n    if (this.config.showExamples) {\n      // 起動メッセージ削除\n      // 起動時は静かに待機\n    }\n  }\n\n  /**\n   * モードセレクター作成\n   */\n  createMinimalActions() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;\n\n    // 左側: Clear All ボタン（承認済みのLayout Bデザイン）\n    const leftSection = document.createElement('div');\n    leftSection.style.cssText = 'display: flex; gap: 8px; align-items: center;';\n\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">🧹</span> Clear All';\n    clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    clearBtn.addEventListener('click', () => this.clearAllWithConfirmation());\n\n    // 履歴ボタン（将来実装用スペース確保）- 海外UI標準対応：同一幅\n    const historyBtn = document.createElement('button');\n    historyBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">📚</span> History';\n    historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n    historyBtn.style.opacity = '0.5';\n    historyBtn.disabled = true;\n    historyBtn.title = '履歴機能（開発中）';\n\n    leftSection.appendChild(clearBtn);\n    leftSection.appendChild(historyBtn);\n\n    // 右側: テーマトグルと設定（ヘッダーから移動）\n    const rightSection = document.createElement('div');\n    rightSection.style.cssText = 'display: flex; gap: 6px; align-items: center;';\n\n    const themeToggle = document.createElement('button');\n    const getThemeIcon = () => {\n      const themeConfig = {\n        light: '🌙',\n        dark: '🍵',\n        wabisabi: '☀️'\n      };\n      return themeConfig[this.currentTheme] || '🌙';\n    };\n\n    const getThemeTitle = () => {\n      const titleConfig = {\n        light: 'ダークモードに切り替え',\n        dark: '侘び寂びモードに切り替え',\n        wabisabi: 'ライトモードに切り替え'\n      };\n      return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n    };\n\n    const getThemeIconWithFilter = () => {\n      const icon = getThemeIcon();\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (icon === '☀️') {\n        return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n      } else if (icon === '🍵') {\n        return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n      } else {\n        return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n      }\n    };\n\n    themeToggle.innerHTML = getThemeIconWithFilter();\n    themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    themeToggle.title = getThemeTitle();\n    themeToggle.addEventListener('click', () => this.toggleTheme());\n\n    const settingsButton = document.createElement('button');\n    settingsButton.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">⚙️</span>';\n    settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    settingsButton.title = 'サービス設定を開く';\n    settingsButton.addEventListener('click', () => this.openServiceModal());\n\n    rightSection.appendChild(themeToggle);\n    rightSection.appendChild(settingsButton);\n\n    container.appendChild(leftSection);\n    container.appendChild(rightSection);\n\n    // 参照を保持\n    this.clearBtn = clearBtn;\n    this.historyBtn = historyBtn;\n    this.themeToggle = themeToggle;\n    this.settingsButton = settingsButton;\n\n    return container;\n  }\n\n  createServiceSelectorSection() {\n    this.serviceSelectorContainer = document.createElement('div');\n    this.serviceSelectorContainer.id = 'service-selector';\n    this.serviceSelectorContainer.style.cssText = `\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;\n\n    this.serviceSelectorStatus = document.createElement('div');\n    this.serviceSelectorStatus.textContent = 'サービス情報を読み込んでいます...';\n    this.serviceSelectorStatus.style.fontSize = '12px';\n    this.serviceSelectorStatus.style.opacity = '0.8';\n    this.serviceSelectorStatus.style.marginBottom = '8px';\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);\n\n    this.serviceSelectorContent = document.createElement('div');\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);\n\n    this.updateServiceSelectorTheme();\n    return this.serviceSelectorContainer;\n  }\n\n  createServiceModal() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.remove();\n      this.serviceModalOverlay = null;\n      this.serviceModal = null;\n    }\n\n    this.serviceModalOverlay = document.createElement('div');\n    this.serviceModalOverlay.id = 'chocodrop-service-modal-overlay';\n    this.serviceModalOverlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;\n\n    this.serviceModalOverlay.addEventListener('click', (event) => {\n      if (event.target === this.serviceModalOverlay) {\n        this.closeServiceModal();\n      }\n    });\n\n    this.serviceModal = document.createElement('div');\n    this.serviceModal.className = 'chocodrop-service-modal';\n    this.serviceModal.style.cssText = `\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;\n\n    const title = document.createElement('h2');\n    title.textContent = 'サービス設定';\n    title.style.cssText = `\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;\n\n    const subtitle = document.createElement('p');\n    subtitle.textContent = '利用するサービスを選択してください。';\n    subtitle.style.cssText = `\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;\n\n    const selector = this.createServiceSelectorSection();\n\n    const actionRow = document.createElement('div');\n    actionRow.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;\n\n    this.serviceSelectorRetryButton = document.createElement('button');\n    this.serviceSelectorRetryButton.textContent = '再読み込み';\n    this.serviceSelectorRetryButton.style.cssText = `\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorRetryButton.addEventListener('click', () => this.initializeServiceSelector(true));\n\n    const actionButtons = document.createElement('div');\n    actionButtons.style.cssText = 'display: flex; gap: 8px;';\n\n    this.serviceSelectorCancelButton = document.createElement('button');\n    this.serviceSelectorCancelButton.textContent = 'Cancel';\n    this.serviceSelectorCancelButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorCancelButton.addEventListener('click', () => this.closeServiceModal());\n\n    this.serviceSelectorSaveButton = document.createElement('button');\n    this.serviceSelectorSaveButton.textContent = 'Save';\n    this.serviceSelectorSaveButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;\n    this.serviceSelectorSaveButton.addEventListener('click', () => this.handleServiceSave());\n\n    actionButtons.appendChild(this.serviceSelectorCancelButton);\n    actionButtons.appendChild(this.serviceSelectorSaveButton);\n\n    actionRow.appendChild(this.serviceSelectorRetryButton);\n    actionRow.appendChild(actionButtons);\n\n    this.serviceModal.appendChild(title);\n    this.serviceModal.appendChild(subtitle);\n    this.serviceModal.appendChild(selector);\n    this.serviceModal.appendChild(actionRow);\n\n    this.serviceModalOverlay.appendChild(this.serviceModal);\n    document.body.appendChild(this.serviceModalOverlay);\n\n    this.updateServiceSelectorTheme();\n    this.toggleServiceRetryButton(false);\n  }\n\n  openServiceModal(forceFetch = false) {\n    if (!this.serviceModalOverlay) {\n      this.createServiceModal();\n    }\n\n    this.serviceModalOverlay.style.display = 'flex';\n    requestAnimationFrame(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.opacity = '1';\n      }\n    });\n\n    this.resetPendingSelections();\n    this.initializeServiceSelector(forceFetch);\n  }\n\n  closeServiceModal() {\n    if (!this.serviceModalOverlay) {\n      return;\n    }\n\n    this.serviceModalOverlay.style.opacity = '0';\n    setTimeout(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.display = 'none';\n      }\n      this.resetPendingSelections();\n    }, 150);\n  }\n\n  async initializeServiceSelector(force = false) {\n    if (this.servicesLoading && !force) {\n      return;\n    }\n\n    if (!this.client || typeof this.client.getAvailableServices !== 'function') {\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n      return;\n    }\n\n    this.servicesLoading = true;\n    this.setServiceSelectorStatus('サービス情報を読み込んでいます...', 'info');\n    this.toggleServiceRetryButton(false);\n    this.setServiceButtonsEnabled(false);\n\n    try {\n      if (typeof this.client.ensureInitialized === 'function') {\n        await this.client.ensureInitialized();\n      }\n\n      const response = await this.client.getAvailableServices();\n      if (!response || response.success === false || !response.metadata) {\n        throw new Error(response?.error || 'サービス情報が取得できませんでした');\n      }\n\n      this.availableImageServices = Array.isArray(response.metadata?.image) ? response.metadata.image : [];\n      this.availableVideoServices = Array.isArray(response.metadata?.video) ? response.metadata.video : [];\n\n      this.selectedImageService = this.resolveServiceSelection(\n        'image',\n        this.availableImageServices,\n        response.default?.image\n      );\n\n      this.selectedVideoService = this.resolveServiceSelection(\n        'video',\n        this.availableVideoServices,\n        response.default?.video\n      );\n\n      this.pendingImageService = this.selectedImageService;\n      this.pendingVideoService = this.selectedVideoService;\n\n      this.populateServiceSelector();\n      this.applyServiceSelectionToSceneManager();\n      this.setServiceButtonsEnabled(true);\n    } catch (error) {\n      console.error('❌ Failed to initialize service selector:', error);\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした。サーバーが起動しているか確認のうえ、再読み込みしてください。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n    } finally {\n      this.servicesLoading = false;\n    }\n  }\n\n  setServiceSelectorStatus(message, type = 'info') {\n    if (!this.serviceSelectorStatus) {\n      return;\n    }\n    this.serviceSelectorStatus.textContent = message;\n    this.serviceSelectorStatus.dataset.statusType = type;\n    this.serviceSelectorStatus.classList.toggle('service-selector-helper', type !== 'error');\n    this.updateServiceSelectorTheme();\n  }\n\n  toggleServiceRetryButton(visible) {\n    if (!this.serviceSelectorRetryButton) {\n      return;\n    }\n    this.serviceSelectorRetryButton.style.display = visible ? 'inline-flex' : 'none';\n    this.updateServiceSelectorTheme();\n  }\n\n  resolveServiceSelection(type, services, defaultId) {\n    if (!services || services.length === 0) {\n      return null;\n    }\n\n    const storageKey = type === 'image' ? IMAGE_SERVICE_STORAGE_KEY : VIDEO_SERVICE_STORAGE_KEY;\n    let storedId = null;\n    try {\n      storedId = localStorage.getItem(storageKey);\n    } catch (error) {\n      console.warn('⚠️ Failed to access localStorage:', error);\n    }\n\n    const isStoredValid = storedId && services.some(service => service.id === storedId);\n    let resolvedId = isStoredValid ? storedId : null;\n\n    if (!resolvedId && defaultId && services.some(service => service.id === defaultId)) {\n      resolvedId = defaultId;\n    }\n\n    if (!resolvedId) {\n      resolvedId = services[0]?.id || null;\n    }\n\n    try {\n      if (resolvedId) {\n        localStorage.setItem(storageKey, resolvedId);\n      } else {\n        localStorage.removeItem(storageKey);\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to persist service selection:', error);\n    }\n\n    return resolvedId;\n  }\n\n  populateServiceSelector() {\n    if (!this.serviceSelectorContent) {\n      return;\n    }\n\n    this.serviceSelectorContent.innerHTML = '';\n\n    const hasImage = this.availableImageServices.length > 0;\n    const hasVideo = this.availableVideoServices.length > 0;\n\n    if (!hasImage && !hasVideo) {\n      this.setServiceSelectorStatus('利用可能なサービスが見つかりませんでした。', 'error');\n      return;\n    }\n\n    this.setServiceSelectorStatus('利用するサービスを選択してください。', 'info');\n\n    if (hasImage) {\n      const imageRow = this.buildServiceRow('image', '画像 (T2I)', this.availableImageServices, this.pendingImageService || this.selectedImageService);\n      this.serviceSelectorContent.appendChild(imageRow);\n    }\n\n    if (hasVideo) {\n      const videoRow = this.buildServiceRow('video', '動画 (T2V)', this.availableVideoServices, this.pendingVideoService || this.selectedVideoService);\n      this.serviceSelectorContent.appendChild(videoRow);\n    }\n\n    this.updateServiceSelectorTheme();\n  }\n\n  buildServiceRow(type, labelText, services, selectedId) {\n    const row = document.createElement('div');\n    row.className = `service-row service-row-${type}`;\n    row.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;\n\n    const label = document.createElement('label');\n    label.textContent = labelText;\n    label.style.fontSize = '13px';\n    label.style.fontWeight = '600';\n    row.appendChild(label);\n\n    const select = document.createElement('select');\n    select.dataset.serviceType = type;\n    select.style.fontFamily = 'inherit';\n    select.style.width = '100%';\n\n    services.forEach(service => {\n      const option = document.createElement('option');\n      option.value = service.id;\n      option.textContent = service.name || service.id;\n      if (service.description) {\n        option.title = service.description;\n      }\n      select.appendChild(option);\n    });\n\n    if (selectedId && services.some(service => service.id === selectedId)) {\n      select.value = selectedId;\n    }\n\n    select.addEventListener('change', (event) => {\n      this.onServiceSelectionChange(type, event.target.value);\n    });\n\n    row.appendChild(select);\n\n    const description = document.createElement('div');\n    description.className = 'service-description';\n    description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    description.style.fontSize = '11px';\n    description.style.opacity = '0.75';\n    description.style.lineHeight = '1.4';\n    description.style.minHeight = '14px';\n    row.appendChild(description);\n\n    select.addEventListener('change', () => {\n      description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    });\n\n    if (type === 'image') {\n      this.imageServiceSelect = select;\n    } else {\n      this.videoServiceSelect = select;\n    }\n\n    return row;\n  }\n\n  onServiceSelectionChange(type, serviceId) {\n    if (type === 'image') {\n      this.pendingImageService = serviceId;\n    } else {\n      this.pendingVideoService = serviceId;\n    }\n\n    const info = this.findServiceInfo(type, serviceId);\n    const description = type === 'image'\n      ? this.imageServiceSelect?.parentElement?.querySelector('.service-description')\n      : this.videoServiceSelect?.parentElement?.querySelector('.service-description');\n\n    if (description) {\n      description.textContent = info?.description || '';\n    }\n  }\n\n  handleServiceSave() {\n    const newImageId = this.pendingImageService || this.selectedImageService;\n    const newVideoId = this.pendingVideoService || this.selectedVideoService;\n\n    if (newImageId) {\n      try {\n        localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY, newImageId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist image service selection:', error);\n      }\n      this.selectedImageService = newImageId;\n      this.sceneManager?.setImageService(newImageId);\n    }\n\n    if (newVideoId) {\n      try {\n        localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY, newVideoId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist video service selection:', error);\n      }\n      this.selectedVideoService = newVideoId;\n      this.sceneManager?.setVideoService(newVideoId);\n    }\n\n    const imageInfo = this.findServiceInfo('image', newImageId);\n    const videoInfo = this.findServiceInfo('video', newVideoId);\n\n    if (imageInfo) {\n      this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`, 'system');\n    }\n    if (videoInfo) {\n      this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`, 'system');\n    }\n\n    this.closeServiceModal();\n  }\n\n  setServiceButtonsEnabled(enabled) {\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.disabled = !enabled;\n      this.serviceSelectorSaveButton.style.opacity = enabled ? '1' : '0.6';\n      this.serviceSelectorSaveButton.style.cursor = enabled ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  resetPendingSelections() {\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    if (this.imageServiceSelect && this.selectedImageService) {\n      this.imageServiceSelect.value = this.selectedImageService;\n    }\n    if (this.videoServiceSelect && this.selectedVideoService) {\n      this.videoServiceSelect.value = this.selectedVideoService;\n    }\n\n    if (this.serviceSelectorContent && this.serviceSelectorContent.childElementCount > 0) {\n      this.populateServiceSelector();\n    }\n  }\n\n  findServiceInfo(type, serviceId) {\n    const list = type === 'image' ? this.availableImageServices : this.availableVideoServices;\n    return list.find(service => service.id === serviceId) || null;\n  }\n\n  applyServiceSelectionToSceneManager() {\n    if (!this.sceneManager) {\n      return;\n    }\n    this.sceneManager.setImageService(this.selectedImageService);\n    this.sceneManager.setVideoService(this.selectedVideoService);\n  }\n\n  updateServiceSelectorTheme() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.style.background = this.isDarkMode\n        ? 'rgba(8, 11, 26, 0.55)'\n        : 'rgba(229, 231, 255, 0.45)';\n    }\n\n    if (this.serviceModal) {\n      this.serviceModal.style.background = this.isDarkMode\n        ? 'rgba(17, 24, 39, 0.15)'\n        : 'rgba(255, 255, 255, 0.15)';\n      this.serviceModal.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.4)'\n        : '1px solid rgba(99, 102, 241, 0.25)';\n      this.serviceModal.style.color = this.isDarkMode ? '#e5e7ff' : '#1f2937';\n    }\n\n    if (this.serviceSelectorStatus) {\n      const type = this.serviceSelectorStatus.dataset?.statusType;\n      const statusColor = type === 'error'\n        ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n        : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.75)');\n      this.serviceSelectorStatus.style.color = statusColor;\n    }\n\n    if (this.serviceSelectorContainer) {\n      const labels = this.serviceSelectorContainer.querySelectorAll('label');\n      labels.forEach(label => {\n        label.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(31, 41, 55, 0.9)');\n      });\n\n      const selects = this.serviceSelectorContainer.querySelectorAll('select');\n      selects.forEach(select => {\n        select.style.background = this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.15)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.18)' : 'rgba(99, 102, 241, 0.12)');\n        select.style.border = this.isWabiSabiMode\n          ? '1px solid rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? '1px solid rgba(129, 140, 248, 0.45)' : '1px solid rgba(99, 102, 241, 0.45)');\n        select.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937');\n        select.style.padding = '10px 12px';\n        select.style.borderRadius = '10px';\n        select.style.fontSize = '13px';\n        select.style.outline = 'none';\n        select.style.boxShadow = this.isWabiSabiMode\n          ? '0 12px 24px rgba(93, 64, 55, 0.25)'\n          : (this.isDarkMode\n            ? '0 12px 28px rgba(15, 23, 42, 0.5)'\n            : '0 12px 24px rgba(99, 102, 241, 0.2)');\n      });\n\n      const descriptions = this.serviceSelectorContainer.querySelectorAll('.service-description');\n      descriptions.forEach(desc => {\n        desc.style.color = this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.7)'\n          : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.7)');\n      });\n    }\n\n    if (this.serviceSelectorRetryButton) {\n      this.serviceSelectorRetryButton.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.25)'\n        : (this.isDarkMode\n          ? 'rgba(129, 140, 248, 0.35)'\n          : 'rgba(99, 102, 241, 0.15)');\n      this.serviceSelectorRetryButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.5)'\n        : (this.isDarkMode\n          ? '1px solid rgba(129, 140, 248, 0.5)'\n          : '1px solid rgba(99, 102, 241, 0.45)');\n      this.serviceSelectorRetryButton.style.color = this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#f9fafb' : '#1e1b4b');\n      this.serviceSelectorRetryButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 0 8px rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '0 0 8px rgba(129, 140, 248, 0.45)'\n          : '0 0 8px rgba(99, 102, 241, 0.35)');\n    }\n\n    if (this.serviceSelectorCancelButton) {\n      this.serviceSelectorCancelButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '1px solid rgba(209, 213, 219, 0.3)'\n          : '1px solid rgba(148, 163, 184, 0.5)');\n      this.serviceSelectorCancelButton.style.color = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.85)'\n        : (this.isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(30, 41, 59, 0.85)');\n    }\n\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, #6D4C41, #5D4037)'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')'\n          : 'linear-gradient(135deg, #818cf8, #a855f7)');\n      this.serviceSelectorSaveButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 16px 28px rgba(93, 64, 55, 0.35)'\n        : (this.isDarkMode\n          ? '0 16px 28px rgba(99, 102, 241, 0.4)'\n          : '0 16px 28px rgba(129, 140, 248, 0.35)');\n    }\n  }\n\n  /**\n   * ラジオボタン風モードセレクター作成\n   */\n  createRadioModeSelector() {\n    const container = document.createElement('div');\n    container.className = 'radio-mode-selector';\n    container.style.cssText = `\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))')};\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(141, 110, 99, 0.4)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(255, 255, 255, 0.25)')};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;\n\n    const modes = [\n      { value: 'generate', label: 'Generate', icon: '✨' },\n      { value: 'import', label: 'Import', icon: '📥' },\n      { value: 'modify', label: 'Modify', icon: '🔧' },\n      { value: 'delete', label: 'Delete', icon: '🗑️' }\n    ];\n\n    this.radioModeButtons = {};\n\n    modes.forEach(mode => {\n      const button = document.createElement('div');\n      button.className = `mode-option ${mode.value}`;\n      button.style.cssText = `\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)')};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n      `;\n\n      const icon = document.createElement('div');\n      icon.textContent = mode.icon;\n      icon.style.cssText = `\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${this.isDarkMode \n          ? 'hue-rotate(220deg) saturate(0.8) brightness(1.2)' \n          : 'hue-rotate(240deg) saturate(0.7) brightness(0.9)'};\n        transition: filter 0.2s ease;\n      `;\n\n      const label = document.createElement('span');\n      label.textContent = mode.label;\n\n      // AUTOバッジを作成\n      const autoBadge = document.createElement('div');\n      autoBadge.className = 'auto-badge';\n      autoBadge.textContent = 'AUTO';\n      autoBadge.style.cssText = `\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;\n\n      button.appendChild(icon);\n      button.appendChild(label);\n      button.appendChild(autoBadge);\n\n      // クリックイベント\n      button.addEventListener('click', () => {\n        if (mode.value === 'import') {\n          this.triggerFileSelection();\n        } else {\n          this.selectMode(mode.value, true); // trueは手動選択を示す\n        }\n      });\n\n      this.radioModeButtons[mode.value] = { button, autoBadge };\n      container.appendChild(button);\n    });\n\n\n    this.radioModeContainer = container;\n    // デフォルトでGenerateを選択\n    this.selectMode('generate', false);\n\n    return container;\n  }\n\n  /**\n   * モード選択（ラジオボタンUI更新）\n   */\n  selectMode(mode, isManual = false, detectedKeyword = null) {\n    this.currentMode = mode;\n\n    // 全ボタンをリセット\n    Object.keys(this.radioModeButtons).forEach(key => {\n      const { button, autoBadge } = this.radioModeButtons[key];\n      button.style.color = this.isWabiSabiMode\n        ? '#F5F5F5'\n        : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n      button.style.background = 'transparent';\n      button.style.border = '1px solid transparent';\n      button.style.transform = 'scale(1)';\n      button.style.boxShadow = 'none';\n      // AUTOバッジを非表示\n      autoBadge.style.display = 'none';\n      autoBadge.style.opacity = '0';\n    });\n\n    // 選択されたボタンをハイライト（2025年仕様）\n    const { button, autoBadge } = this.radioModeButtons[mode];\n    \n    // 2025 Glassmorphism選択状態\n    const selectedGlass = this.isWabiSabiMode\n      ? {\n          background: 'linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))',\n          border: '1px solid rgba(109, 76, 65, 0.4)',\n          boxShadow: '0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)',\n          color: '#F5F5F5'\n        }\n      : (this.isDarkMode\n        ? {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))',\n            border: '1px solid rgba(99, 102, 241, 0.4)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)',\n            color: '#a5b4fc'\n          }\n        : {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))',\n            border: '1px solid rgba(99, 102, 241, 0.3)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)',\n            color: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n          });\n\n    button.style.color = selectedGlass.color;\n    button.style.background = selectedGlass.background;\n    button.style.border = selectedGlass.border;\n    button.style.boxShadow = selectedGlass.boxShadow;\n    button.style.transform = 'scale(1.02)';\n\n    // AUTOバッジの表示制御\n    if (!isManual && detectedKeyword) {\n      // 自動切り替えの場合はAUTOバッジを表示\n      autoBadge.style.display = 'inline-block';\n      setTimeout(() => {\n        autoBadge.style.opacity = '1';\n        autoBadge.style.transform = 'scale(1)';\n      }, 100);\n      \n      // 3秒後にフェードアウト\n      setTimeout(() => {\n        autoBadge.style.opacity = '0';\n        autoBadge.style.transform = 'scale(0.8)';\n        setTimeout(() => {\n          autoBadge.style.display = 'none';\n        }, 200);\n      }, 3000);\n    }\n\n    // パルス効果を追加\n    if (!isManual) {\n      this.addPulseEffect(button);\n      this.addContainerGlow(mode);\n    }\n\n    // プレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n\n    // モード切り替え時の入力欄メッセージ上書き機能\n    if (isManual) {\n      this.clearInputOnModeSwitch(mode);\n    }\n\n    // Importモード専用処理\n    if (mode === 'import' || this.selectedFile) {\n      this.showImportInterface();\n    } else {\n      this.hideImportInterface();\n    }\n\n    // Deleteモード専用処理\n    if (mode === 'delete' && isManual) {\n      this.handleDeleteModeSelection();\n    }\n\n    // Modifyモード専用処理\n    if (mode === 'modify' && isManual) {\n      this.handleModifyModeSelection();\n    }\n\n    // モード切り替えメッセージは表示しない（UIで分かるため）\n  }\n\n  /**\n   * パルス効果を追加\n   */\n  addPulseEffect(element) {\n    // 既存のアニメーションをリセット\n    element.style.animation = 'none';\n    \n    // 少し遅らせてからアニメーションを適用（リフロー強制）\n    setTimeout(() => {\n      element.style.animation = 'smartModePulse 0.6s ease-out';\n    }, 10);\n    \n    // アニメーション終了後にクリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 610);\n    \n    // CSSアニメーションを動的に追加（まだ存在しない場合）\n    this.ensurePulseAnimation();\n  }\n\n  /**\n   * パルスアニメーション用CSSを確保\n   */\n  ensurePulseAnimation() {\n    if (document.getElementById('smart-mode-pulse-animation')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'smart-mode-pulse-animation';\n    style.textContent = `\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コンテナグロー効果\n   */\n  addContainerGlow(mode) {\n    const container = this.radioModeContainer;\n    if (!container) return;\n\n    // モードに応じてグロー色を設定\n    const glowColors = this.isWabiSabiMode ? {\n      generate: 'rgba(139, 195, 74, 0.4)',  // 侘び寂びモード：チャット欄と同じ緑\n      modify: 'rgba(139, 195, 74, 0.4)',    // 侘び寂びモード：チャット欄と同じ緑\n      delete: 'rgba(139, 195, 74, 0.4)'     // 侘び寂びモード：チャット欄と同じ緑\n    } : {\n      generate: 'rgba(79, 70, 229, 0.4)',   // ライト/ダークモード：元の紫\n      modify: 'rgba(236, 72, 153, 0.4)',    // ライト/ダークモード：元のピンク\n      delete: 'rgba(107, 114, 128, 0.3)'    // ライト/ダークモード：元のグレー\n    };\n\n    // 一時的にグロー効果を適用\n    container.style.boxShadow = `0 0 20px ${glowColors[mode]}, 0 0 40px ${glowColors[mode]}`;\n    container.style.borderColor = glowColors[mode].replace('0.4', '0.6').replace('0.3', '0.5');\n    \n    // 1秒後にグロー効果を除去\n    setTimeout(() => {\n      container.style.boxShadow = '';\n      container.style.borderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.15)';\n    }, 1000);\n  }\n\n  getActionButtonStyles(variant = 'secondary') {\n    const baseStyles = `\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;\n\n    if (variant === 'secondary') {\n      // Clear All, History ボタン用 - 美しい配置と統一感\n      return baseStyles + `\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.6)'\n          : (this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)')};\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? '#d1d5db' : '#374151')};\n        text-align: center;\n        white-space: nowrap;\n      `;\n    } else if (variant === 'icon') {\n      // テーマトグル、設定ボタン用\n      return baseStyles + `\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(255, 255, 255, 0.4)'};\n        color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'};\n      `;\n    }\n  }\n\n  /**\n   * 破壊的アクション用ボタンスタイル（赤系ガラス効果）\n   */\n  getDestructiveButtonStyles() {\n    return `\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode ? 'rgba(220, 38, 127, 0.4)' : 'rgba(190, 24, 93, 0.35)'};\n      border-radius: 6px;\n      background: ${this.isDarkMode ? 'rgba(220, 38, 127, 0.3)' : 'rgba(190, 24, 93, 0.25)'};\n      color: ${this.isDarkMode ? '#fca5a5' : '#dc2626'};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `;\n  }\n\n  getCommandTypeIndicatorStyles() {\n    return `\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)'};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `;\n  }\n\n  /**\n   * テキストエリアの自動リサイズ処理（最大2行）\n   */\n  autoResizeTextarea() {\n    // 高さをリセットして正確な scrollHeight を取得\n    this.input.style.height = 'auto';\n    \n    // 現在のコンテンツに基づいて高さを計算\n    const lineHeight = 22; // CSS で設定した line-height\n    const padding = 28; // 上下のパディング合計 (14px * 2)\n    const maxLines = 2;\n    const maxHeight = (lineHeight * maxLines) + padding;\n    \n    // スクロール高さに基づいて新しい高さを決定\n    const newHeight = Math.min(this.input.scrollHeight, maxHeight);\n    \n    // 高さを適用\n    this.input.style.height = newHeight + 'px';\n    \n    // 2行を超える場合はスクロールを有効化と展開ボタン表示\n    if (this.input.scrollHeight > maxHeight) {\n      this.input.style.overflowY = 'auto';\n      // 展開ボタンを表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'flex';\n      }\n    } else {\n      this.input.style.overflowY = 'hidden';\n      // 展開ボタンを非表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * リアルタイムコマンドタイプ検出\n   */\n  detectCommandType() {\n    const input = this.input.value.trim();\n    if (!input) {\n      this.selectMode('generate', false);\n      return;\n    }\n\n    const commandType = this.analyzeCommandType(input);\n\n    // Delete/Modifyは手動選択を優先、自動切り替えしない\n    if (this.currentMode === 'delete' || this.currentMode === 'modify') {\n      return; // 現在のモードを維持\n    }\n    // Generate/Importのみ自動切り替え\n    this.selectMode(commandType.type, false, commandType.detectedKeyword);\n  }\n\n  /**\n   * ルールベースコマンド分析\n   */\n  analyzeCommandType(text) {\n    this.logDebug(`🔍 Analyzing command: \"${text}\"`);\n\n    // メディアタイプの検出\n    const mediaInfo = this.detectMediaType(text);\n    \n    // 削除コマンドの検出\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除' },\n      { pattern: /消去/, keyword: '消去' },\n      { pattern: /消して/, keyword: '消して' },\n      { pattern: /消す/, keyword: '消す' },\n      { pattern: /取り除/, keyword: '取り除' },\n      { pattern: /除去/, keyword: '除去' },\n      { pattern: /削除して/, keyword: '削除して' },\n      { pattern: /delete/i, keyword: 'delete' },\n      { pattern: /remove/i, keyword: 'remove' },\n      { pattern: /clear/i, keyword: 'clear' },\n      { pattern: /erase/i, keyword: 'erase' }\n    ];\n    \n    // 変更・移動コマンドの検出\n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動' },\n      { pattern: /動かして/, keyword: '動かして' },\n      { pattern: /変更/, keyword: '変更' },\n      { pattern: /変えて/, keyword: '変えて' },\n      { pattern: /修正/, keyword: '修正' },\n      { pattern: /調整/, keyword: '調整' },\n      { pattern: /回転/, keyword: '回転' },\n      { pattern: /反転/, keyword: '反転' },\n      { pattern: /ミラー/, keyword: 'ミラー' },\n      { pattern: /傾け/, keyword: '傾け' },\n      { pattern: /向きを変え/, keyword: '向きを変え' },\n      { pattern: /.*を.*色/, keyword: '色変更' },\n      { pattern: /.*を.*サイズ/, keyword: 'サイズ変更' },\n      { pattern: /を.*に.*して/, keyword: '変更' },\n      { pattern: /move/i, keyword: 'move' },\n      { pattern: /change/i, keyword: 'change' },\n      { pattern: /modify/i, keyword: 'modify' },\n      { pattern: /edit/i, keyword: 'edit' }\n    ];\n    \n    // 生成コマンドの検出（デフォルト）\n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って' },\n      { pattern: /生成/, keyword: '生成' },\n      { pattern: /作成/, keyword: '作成' },\n      { pattern: /描いて/, keyword: '描いて' },\n      { pattern: /書いて/, keyword: '書いて' },\n      { pattern: /create/i, keyword: 'create' },\n      { pattern: /generate/i, keyword: 'generate' },\n      { pattern: /make/i, keyword: 'make' },\n      { pattern: /draw/i, keyword: 'draw' }\n    ];\n\n    // 削除パターンチェック\n    for (const { pattern, keyword } of deletePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Delete pattern matched: ${keyword}`);\n        return {\n          type: 'delete',\n          confidence: 0.9,\n          reason: '削除キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: true,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 変更パターンチェック\n    for (const { pattern, keyword } of modifyPatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Modify pattern matched: ${keyword}`);\n        return {\n          type: 'modify',\n          confidence: 0.8,\n          reason: '変更キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 生成パターンチェック\n    for (const { pattern, keyword } of generatePatterns) {\n      if (pattern.test(text)) {\n        return {\n          type: 'generate',\n          confidence: mediaInfo.confidence,\n          reason: mediaInfo.reason,\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // デフォルト（生成モード）\n    this.logDebug(`ℹ️ No specific pattern matched, defaulting to generate mode`);\n    return {\n      type: 'generate',\n      confidence: mediaInfo.confidence,\n      reason: mediaInfo.reason,\n      mediaType: mediaInfo.type,\n      requiresConfirmation: false,\n      detectedKeyword: null\n    };\n  }\n\n  /**\n   * Extract all command keywords from the analyzeCommandType patterns\n   * Returns an array of {pattern, keyword, type} objects\n   */\n  getAllCommandKeywords() {\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除', type: 'delete' },\n      { pattern: /消去/, keyword: '消去', type: 'delete' },\n      { pattern: /消して/, keyword: '消して', type: 'delete' },\n      { pattern: /消す/, keyword: '消す', type: 'delete' },\n      { pattern: /取り除/, keyword: '取り除', type: 'delete' },\n      { pattern: /除去/, keyword: '除去', type: 'delete' },\n      { pattern: /削除して/, keyword: '削除して', type: 'delete' },\n      { pattern: /delete/i, keyword: 'delete', type: 'delete' },\n      { pattern: /remove/i, keyword: 'remove', type: 'delete' },\n      { pattern: /clear/i, keyword: 'clear', type: 'delete' },\n      { pattern: /erase/i, keyword: 'erase', type: 'delete' }\n    ];\n    \n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動', type: 'modify' },\n      { pattern: /動かして/, keyword: '動かして', type: 'modify' },\n      { pattern: /変更/, keyword: '変更', type: 'modify' },\n      { pattern: /変えて/, keyword: '変えて', type: 'modify' },\n      { pattern: /修正/, keyword: '修正', type: 'modify' },\n      { pattern: /調整/, keyword: '調整', type: 'modify' },\n      { pattern: /move/i, keyword: 'move', type: 'modify' },\n      { pattern: /change/i, keyword: 'change', type: 'modify' },\n      { pattern: /modify/i, keyword: 'modify', type: 'modify' },\n      { pattern: /edit/i, keyword: 'edit', type: 'modify' }\n    ];\n    \n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って', type: 'generate' },\n      { pattern: /生成/, keyword: '生成', type: 'generate' },\n      { pattern: /作成/, keyword: '作成', type: 'generate' },\n      { pattern: /描いて/, keyword: '描いて', type: 'generate' },\n      { pattern: /書いて/, keyword: '書いて', type: 'generate' },\n      { pattern: /create/i, keyword: 'create', type: 'generate' },\n      { pattern: /generate/i, keyword: 'generate', type: 'generate' },\n      { pattern: /make/i, keyword: 'make', type: 'generate' },\n      { pattern: /draw/i, keyword: 'draw', type: 'generate' }\n    ];\n\n    return [...deletePatterns, ...modifyPatterns, ...generatePatterns];\n  }\n\n  /**\n   * Apply keyword highlighting to the input text\n   */\n  applyKeywordHighlighting() {\n    // TODO: 一時的にキーワードハイライト機能を無効化（リリース後に再検討）\n    return;\n\n    if (!this.input || this.isComposing) {\n      return;\n    }\n\n    const text = this.input.value;\n    if (!text.trim()) {\n      this.clearKeywordHighlighting();\n      return;\n    }\n\n    // Get all keyword patterns\n    const allKeywords = this.getAllCommandKeywords();\n    \n    // Find matches in the text\n    const matches = [];\n    for (const { pattern, keyword, type } of allKeywords) {\n      const match = text.match(pattern);\n      if (match) {\n        const startIndex = match.index;\n        const endIndex = startIndex + match[0].length;\n        matches.push({\n          start: startIndex,\n          end: endIndex,\n          keyword: match[0], // Use actual matched text\n          type: type\n        });\n      }\n    }\n\n    // Sort matches by position to avoid overlaps\n    matches.sort((a, b) => a.start - b.start);\n\n    // Apply highlighting if we have matches\n    if (matches.length > 0) {\n      this.createHighlightOverlay(text, matches);\n    } else {\n      this.clearKeywordHighlighting();\n    }\n  }\n\n  /**\n   * Create a highlighting overlay div that sits behind the textarea\n   */\n  createHighlightOverlay(text, matches) {\n    // Remove existing overlay\n    this.clearKeywordHighlighting();\n\n    // Create highlight overlay div\n    this.highlightOverlay = document.createElement('div');\n    this.highlightOverlay.className = 'keyword-highlight-overlay';\n    \n    // Copy textarea styles to overlay\n    const computedStyle = window.getComputedStyle(this.input);\n\n    if (!this.inputDefaultStyles) {\n      this.captureInputDefaultStyles();\n    }\n    this.highlightOverlay.style.cssText = `\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      overflow: hidden;\n      font-family: ${computedStyle.fontFamily};\n      font-size: ${computedStyle.fontSize};\n      font-weight: ${computedStyle.fontWeight};\n      line-height: ${computedStyle.lineHeight};\n      letter-spacing: ${computedStyle.letterSpacing};\n      padding: ${computedStyle.padding};\n      border: ${computedStyle.borderWidth} solid transparent;\n      margin: 0;\n      z-index: 1;\n      color: transparent;\n      background: transparent;\n    `;\n\n    // Build highlighted HTML\n    let highlightedHTML = '';\n    let lastIndex = 0;\n\n    for (const match of matches) {\n      // Add text before this match\n      highlightedHTML += this.escapeHtml(text.substring(lastIndex, match.start));\n      \n      // Add highlighted keyword\n      const color = this.getKeywordColor(match.type);\n      highlightedHTML += `<span style=\"color: ${color}; font-weight: 600; background: linear-gradient(135deg, ${color}22 0%, ${color}11 100%); border-radius: 3px; padding: 1px 2px;\">${this.escapeHtml(match.keyword)}</span>`;\n      \n      lastIndex = match.end;\n    }\n\n    // Add remaining text\n    highlightedHTML += this.escapeHtml(text.substring(lastIndex));\n\n    this.highlightOverlay.innerHTML = highlightedHTML;\n\n    // Make textarea background transparent so overlay shows through\n    this.input.style.background = 'transparent';\n    this.input.style.backgroundColor = 'transparent';\n    this.input.style.backgroundImage = 'none';\n    this.input.style.color = this.getInputTextColor();\n\n    // Insert overlay before textarea\n    this.inputWrapper.insertBefore(this.highlightOverlay, this.input);\n  }\n\n  /**\n   * Get the appropriate color for each keyword type\n   */\n  getKeywordColor(type) {\n    return KEYWORD_HIGHLIGHT_COLOR;\n  }\n\n  getInputTextColor() {\n    if (this.isWabiSabiMode) {\n      return '#F5F5F5';\n    }\n    return this.isDarkMode ? '#ffffff' : '#1f2937';\n  }\n\n  captureInputDefaultStyles() {\n    if (!this.input) {\n      return;\n    }\n    const computedStyle = window.getComputedStyle(this.input);\n    this.inputDefaultStyles = {\n      background: computedStyle.background,\n      backgroundImage: computedStyle.backgroundImage,\n      backgroundColor: computedStyle.backgroundColor,\n      color: computedStyle.color\n    };\n  }\n\n  /**\n   * Clear keyword highlighting\n   */\n  clearKeywordHighlighting() {\n    if (this.highlightOverlay) {\n      this.highlightOverlay.remove();\n      this.highlightOverlay = null;\n    }\n    \n    // Restore textarea background\n    if (this.input) {\n      if (this.inputDefaultStyles) {\n        this.input.style.background = this.inputDefaultStyles.background;\n        this.input.style.backgroundImage = this.inputDefaultStyles.backgroundImage;\n        this.input.style.backgroundColor = this.inputDefaultStyles.backgroundColor;\n        this.input.style.color = this.inputDefaultStyles.color;\n      } else {\n        this.input.style.background = '';\n        this.input.style.backgroundImage = '';\n        this.input.style.backgroundColor = '';\n        this.input.style.color = '';\n      }\n    }\n  }\n\n  /**\n   * Escape HTML characters\n   */\n  escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  /**\n   * メディアタイプ検出（画像/動画）\n   */\n  detectMediaType(text) {\n    const videoPatterns = [\n      /動画|ビデオ|映像|ムービー/,\n      /video|movie|clip/i\n    ];\n    \n    const imagePatterns = [\n      /画像|写真|絵|イラスト|イメージ/,\n      /image|picture|photo|illustration/i\n    ];\n    \n    if (videoPatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'video',\n        confidence: 0.8,\n        reason: '動画生成コマンド'\n      };\n    }\n    \n    if (imagePatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'image',\n        confidence: 0.8,\n        reason: '画像生成コマンド'\n      };\n    }\n    \n    // デフォルトは画像\n    return {\n      type: 'image',\n      confidence: 0.6,\n      reason: '生成コマンド（画像デフォルト）'\n    };\n  }\n\n  /**\n   * コマンドタイプインジケーター表示\n   */\n  showCommandTypeIndicator(commandInfo) {\n    const { type, confidence, reason } = commandInfo;\n    \n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    // Proactive UX: 低信頼度時に提案表示\n    if (confidence < 0.7) {\n      this.showProactiveSuggestion(type, confidence);\n    } else {\n      this.hideProactiveSuggestion();\n    }\n    \n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[type].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n    // this.commandTypeIndicator.style.display = 'block';\n    // this.commandTypeIndicator.style.cursor = 'default';\n    \n    // スワイプジェスチャー対応\n    this.enableGestureControl();\n  }\n\n  /**\n   * Proactive UX: 低信頼度時の提案表示\n   */\n  showProactiveSuggestion(detectedType, confidence) {\n    if (!this.proactiveSuggestion) {\n      this.proactiveSuggestion = document.createElement('div');\n      this.proactiveSuggestion.id = 'proactive-suggestion';\n      this.proactiveSuggestion.style.cssText = `\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;\n      // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n      // 代わりに入力フィールドの前に挿入\n      this.container.insertBefore(this.proactiveSuggestion, this.input);\n    }\n\n    const alternativeTypes = ['generate', 'modify', 'delete'].filter(t => t !== detectedType);\n    const suggestion = alternativeTypes[0]; // 最初の代替案\n\n    const suggestionLabels = {\n      generate: '🎨 生成',\n      modify: '✏️ 変更', \n      delete: '🗑️ 削除'\n    };\n\n    this.proactiveSuggestion.innerHTML = `\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style=\"margin-top: 4px; font-size: 10px; opacity: 0.8;\">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;\n    \n    this.proactiveSuggestion.style.display = 'block';\n    \n    // クリックで提案モードに変更\n    this.proactiveSuggestion.onclick = () => {\n      this.currentMode = suggestion;\n      this.hideProactiveSuggestion();\n      this.updateIndicatorForMode(suggestion, 0.9);\n    };\n  }\n\n  /**\n   * Proactive UX提案を非表示\n   */\n  hideProactiveSuggestion() {\n    if (this.proactiveSuggestion) {\n      this.proactiveSuggestion.style.display = 'none';\n    }\n  }\n\n  /**\n   * 指定モードでインジケーター更新\n   */\n  updateIndicatorForMode(mode, confidence) {\n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[mode].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n  }\n\n  /**\n   * ジェスチャーコントロール有効化\n   */\n  enableGestureControl() {\n    // 旧スワイプジェスチャー機能は削除（ラジオボタンUIに統合済み）\n    // ラジオボタンで直接モード選択可能になったため、スワイプ操作は不要\n    this.gestureEnabled = true;\n  }\n\n  /**\n   * アクションボタン作成\n   */\n  createActionButtons() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;\n\n    // 履歴ボタン削除 - タスク進行状況に置き換え済み\n\n    // クリアオールボタン\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '🧹 全削除';\n    clearBtn.style.cssText = this.getModernButtonStyles('danger');\n    clearBtn.addEventListener('click', () => this.clearAll());\n\n    // historyBtn削除済み\n    container.appendChild(clearBtn);\n\n    return container;\n  }\n\n  /**\n   * スタイル定義\n   */\n  getContainerStyles() {\n    const positions = {\n      'bottom-right': 'bottom: 20px; right: 20px;',\n      'bottom-left': 'bottom: 20px; left: 20px;',\n      'top-right': 'top: 20px; right: 20px;',\n      'top-left': 'top: 20px; left: 20px;',\n      'center': 'top: 50%; left: 50%; transform: translate(-50%, -50%);'\n    };\n\n    // 2025 Glassmorphism仕様：ダーク・ライト両対応\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(99, 102, 241, 0.2)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)'\n    };\n\n    // 侘び寂びモード - 枯山水の静寂：独自のアイデンティティ\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))',\n      backdropFilter: 'blur(20px) saturate(120%)',\n      border: '1px solid rgba(93, 64, 55, 0.5)',\n      boxShadow: '0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      position: fixed;\n      ${positions[this.config.position] || positions['bottom-right']}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  getHeaderStyles() {\n    // ダークモードと同じ紫グラデーションで統一\n    const gradientColors = 'linear-gradient(135deg, #4f46e5, #7c3aed)';\n\n    return `\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `;\n  }\n\n  getOutputStyles() {\n    // カスタムスクロールバーのCSSを注入\n    this.addScrollbarStyles();\n\n    return `\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.2)'};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)'};\n    `;\n  }\n\n  /**\n   * スクロールバーのカスタムスタイルをページに注入\n   */\n  addScrollbarStyles() {\n    if (document.getElementById('custom-scrollbar-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'custom-scrollbar-styles';\n    style.textContent = `\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.5)'};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* 2025年トレンド: 微細な浮遊感アニメーション */\n      @keyframes gentleFloat {\n        0%, 100% { \n          transform: translateY(0px) scale(1);\n        }\n        25% { \n          transform: translateY(-2px) scale(1.005);\n        }\n        50% { \n          transform: translateY(-1px) scale(1.002);\n        }\n        75% { \n          transform: translateY(-3px) scale(1.008);\n        }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  getInputStyles() {\n    // 2025 Glassmorphism仕様：入力フィールド\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))',\n      border: '1px solid rgba(255, 255, 255, 0.5)',\n      boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)'\n    };\n\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))',\n      border: '1px solid rgba(97, 97, 97, 0.5)',\n      boxShadow: '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(55, 65, 81, 0.6)'};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `;\n  }\n\n  getModernButtonStyles(type) {\n    const styles = {\n      primary: this.isWabiSabiMode ? `\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      ` : `\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,\n      secondary: this.isWabiSabiMode ? `\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,\n      danger: this.isWabiSabiMode ? `\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `\n    };\n\n    return `\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `;\n  }\n\n  getModeButtonStyles(isActive, mode) {\n    // モードカラー設定\n    const modeColors = {\n      generate: 'linear-gradient(135deg, #22c55e, #16a34a)',  // Green - チャット欄と同じ緑色\n      modify: 'linear-gradient(135deg, #22c55e, #16a34a)',    // Green - チャット欄と同じ緑色\n      delete: 'linear-gradient(135deg, #22c55e, #16a34a)'     // Green - チャット欄と同じ緑色\n    };\n    \n    return `\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive ? 'white' : 'rgba(255, 255, 255, 0.7)'};\n      background: ${isActive ? modeColors[mode] : 'transparent'};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `;\n  }\n\n  /**\n   * イベントバインディング\n   */\n  bindEvents() {\n    // キーボードショートカット\n    document.addEventListener('keydown', (e) => {\n      // 設定されたキーでUI表示切替\n      if (e.key === this.config.activationKey) {\n        e.preventDefault();\n        this.toggle();\n        return;\n      }\n      \n      // Enterキー処理はinitUI()内で行うため、ここでは処理しない\n      // （IME対応のため）\n      \n      // Escapeで非表示\n      if (this.isVisible && e.key === 'Escape') {\n        this.hide();\n      }\n      \n      // Ctrl+Z/Ctrl+Y でUndo/Redo\n      if (this.isVisible && e.ctrlKey) {\n        if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault();\n          this.undo();\n        } else if (e.key === 'y' || (e.key === 'z' && e.shiftKey)) {\n          e.preventDefault();\n          this.redo();\n        }\n      }\n    });\n\n    // 入力フィールドのスタイル調整\n    this.input.addEventListener('focus', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8BC34A';\n        this.input.style.boxShadow = '0 0 5px rgba(139, 195, 74, 0.5)';\n      } else {\n        this.input.style.borderColor = '#74b9ff';\n        this.input.style.boxShadow = '0 0 5px rgba(116, 185, 255, 0.5)';\n      }\n    });\n\n    this.input.addEventListener('blur', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8D6E63';\n        this.input.style.boxShadow = 'none';\n      } else {\n        this.input.style.borderColor = '#4a90e2';\n        this.input.style.boxShadow = 'none';\n      }\n    });\n  }\n\n  /**\n   * UI表示/非表示切替\n   */\n  toggle() {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * UI表示\n   */\n  show() {\n    this.container.style.display = 'flex';\n    this.container.style.flexDirection = 'column';\n    this.floatingContainer.style.display = 'flex';\n\n    // UIフォームの位置に合わせて配置（少し遅延して正確な位置を取得）\n    setTimeout(() => {\n      const containerRect = this.container.getBoundingClientRect();\n      this.floatingContainer.style.left = containerRect.left + 'px';\n      this.floatingContainer.style.top = (containerRect.top - 80) + 'px';\n      this.floatingContainer.style.width = containerRect.width + 'px';\n      this.floatingContainer.style.transform = 'none';\n    }, 50);\n\n    this.isVisible = true;\n    this.input.focus();\n\n    // フォーム表示中はチョコアイコンを隠す\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0';\n      this.floatingChocolateIcon.style.pointerEvents = 'none';\n    }\n\n    // コントロールを無効化\n    this.onControlsToggle(true);\n    // コントロール停止時も静かに\n  }\n\n  /**\n   * UI非表示\n   */\n  hide() {\n    this.container.style.display = 'none';\n    this.floatingContainer.style.display = 'none';\n    this.isVisible = false;\n\n    // フォーム非表示時はチョコアイコンを再表示\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.pointerEvents = 'auto';\n    }\n\n    // コントロールを再有効化\n    this.onControlsToggle(false);\n    this.logDebug('🎮 コントロールを再開');\n  }\n\n  /**\n   * モード切り替え\n   */\n  switchMode(mode) {\n    if (this.currentMode === mode) return;\n    \n    this.currentMode = mode;\n    \n    // モードボタンのスタイル更新\n    this.container.querySelectorAll('[data-mode]').forEach(btn => {\n      const isActive = btn.dataset.mode === mode;\n      btn.style.cssText = this.getModeButtonStyles(isActive, btn.dataset.mode);\n    });\n    \n    // 入力フィールドのプレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n    \n    // 実行ボタンのラベルと色更新\n    const executeBtn = this.container.querySelector('#execute-btn');\n    const labels = {\n      generate: '🎨 Generate Object',\n      modify: '✏️ Apply Changes', \n      delete: '🗑️ Delete Objects'\n    };\n    \n    const buttonColors = {\n      generate: 'linear-gradient(135deg, #5b21b6, #4c1d95)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)', \n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    executeBtn.innerHTML = `<span>${labels[mode]}</span>`;\n    executeBtn.style.background = buttonColors[mode];\n    \n    // モード切り替え通知は不要（ボタンで分かるため）\n  }\n  \n  /**\n   * モード別プレースホルダー\n   */\n  getPlaceholderForMode(mode) {\n    const placeholders = {\n      generate: '「猫の画像を作って」と話しかけて ⏎ ✨',\n      import: 'ファイルを選択して ⏎ 📁',\n      modify: '選択後「ピンクに変更」と伝えて ⏎ ✏️',\n      delete: '選択後、コマンドをそのまま送って ⏎ 🗑️'\n    };\n    return placeholders[mode] || placeholders.generate;\n  }\n\n  /**\n   * コマンド実行\n   */\n  async executeCommand() {\n    const command = this.input.value.trim();\n    if (!command) return;\n\n    // 最終的なコマンドタイプ判定\n    const commandType = this.analyzeCommandType(command);\n\n    if (this.selectedFile) {\n      if (this.currentMode !== 'import') {\n        this.selectMode('import', false);\n      }\n      this.currentMode = 'import';\n    } else {\n      this.currentMode = commandType.type;\n    }\n\n    // 削除の場合は確認ダイアログ\n    if (commandType.requiresConfirmation) {\n      const confirmed = await this.showDeleteConfirmation(command);\n      if (!confirmed) {\n        this.addOutput('❌ 削除をキャンセルしました', 'system');\n        return;\n      }\n    }\n\n    // 入力をクリア\n    this.input.value = '';\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.style.display = 'none';\n    this.hideProactiveSuggestion();\n\n    // コマンド表示（メディアタイプ付き）\n    const mediaIcon = commandType.mediaType === 'video' ? '🎬' : '🖼️';\n    // タスクカード作成\n    const taskId = this.addTaskCard(command, { status: 'processing' });\n\n    // コマンド実行前の状態を履歴に保存\n    this.saveCommandToHistory({\n      command: command,\n      mode: this.currentMode,\n      mediaType: commandType.mediaType,\n      timestamp: Date.now()\n    });\n\n    try {\n      // 処理メッセージ表示\n      // タスクカードは既に1183行目で作成済み（taskId変数）\n      // 重複を避けるため、ここでは作成しない\n\n      let result;\n      \n      // モードに応じたコマンド処理\n      const modePrefix = this.getModePrefix(this.currentMode);\n      const fullCommand = `${modePrefix}${command}`;\n\n      // モード別の実行処理\n      this.logDebug('🔍 Current mode check:', this.currentMode);\n      if (this.currentMode === 'import') {\n        this.logDebug('📁 Import mode detected - bypassing SceneManager');\n        // Importモード: 直接処理（SceneManagerを迂回）\n        if (!this.selectedFile) {\n          throw new Error('ファイルが選択されていません。まずファイルを選択してください。');\n        }\n        result = await this.handleImportCommand(command);\n      } else if (this.sceneManager) {\n        // 他のモード: SceneManager経由\n        result = await this.sceneManager.executeCommand(fullCommand);\n      } else if (this.client) {\n        // モードに応じてAPIエンドポイントを選択\n        if (this.currentMode === 'generate') {\n          // 生成モード: 新しいオブジェクトを作成\n          if (commandType.mediaType === 'video') {\n            result = await this.client.generateVideo(command, {\n              model: this.selectedVideoService || undefined\n            });\n          } else {\n            result = await this.client.generateImage(command, {\n              service: this.selectedImageService || undefined\n            });\n          }\n        } else if (this.currentMode === 'modify') {\n          // 変更モード: 既存オブジェクトを変更（選択が必要）\n          if (!this.selectedObject) {\n            throw new Error('変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。');\n          }\n          result = await this.client.modifySelectedObject(this.selectedObject, command);\n        } else if (this.currentMode === 'delete') {\n          // 削除モード: オブジェクト選択チェック\n          if (!this.selectedObject && !this.sceneManager?.getSelectedObjects()?.length) {\n            this.addOutput('⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。', 'system');\n            return;\n          }\n          // 削除モード: 確認ダイアログを表示してから削除\n          const confirmMessage = `本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;\n          if (!confirm(confirmMessage)) {\n            this.addOutput('❌ 削除がキャンセルされました', 'system');\n            return;\n          }\n          result = await this.client.deleteObjects(command);\n        } else {\n          // その他のモード\n          result = await this.client.executeCommand(fullCommand);\n        }\n      } else {\n        throw new Error('SceneManager または Client が設定されていません');\n      }\n\n      // taskId取得とSSE接続開始\n      if (result && result.taskId) {\n        this.connectToProgress(result.taskId, taskId);\n        this.currentTaskId = result.taskId;\n      }\n\n      // 成功メッセージ\n      const successMessages = {\n        generate: ``, // 成功メッセージ削除 - 結果で十分\n        modify: '✅ 変更を適用しました',\n        delete: '🗑️ 削除しました'\n      };\n      \n      // タスクカード完了\n      if (taskId) {\n        this.updateTaskCard(taskId, 'completed');\n      }\n      \n      // 詳細情報表示\n      if (result.modelName) {\n        // デバッグ情報削除 - モーダル表示用に保存\n      }\n      \n      if (result.objectId) {\n        // オブジェクトID削除\n      }\n      \n      if (result.position) {\n        // 位置情報削除\n      }\n\n      if (commandType.mediaType) {\n        // メディアタイプ削除\n      }\n\n    } catch (error) {\n      const errorMessages = {\n        generate: `❌ ${commandType.mediaType === 'video' ? '動画' : '画像'}生成エラー`,\n        modify: '❌ 変更エラー', \n        delete: '❌ 削除エラー'\n      };\n      // タスクカードエラー\n      if (taskId) {\n        this.updateTaskCard(taskId, 'error', { errorMessage: error.message });\n      }\n\n      this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`, 'error');\n      console.error('Command execution error:', error);\n    }\n\n    // 2025年UXトレンド: コマンド実行後の自動選択解除\n    if (this.sceneManager && this.sceneManager.selectedObject) {\n      // Modify/Deleteコマンド後は選択を自動解除してストレス軽減\n      if (this.currentMode === 'modify' || this.currentMode === 'delete') {\n        setTimeout(() => {\n          this.sceneManager.deselectObject();\n        }, 500); // 少し遅延させて操作完了を視覚的に確認\n      }\n    }\n\n    // 出力エリアを最下部にスクロール\n    if (this.config.autoScroll) {\n      this.scrollToBottom();\n    }\n  }\n\n  /**\n   * 削除確認ダイアログ\n   */\n  async showConfirmationDialog(options) {\n    const {\n      icon = '🗑️',\n      title = '確認',\n      message = 'この操作を実行しますか？',\n      confirmText = '実行',\n      cancelText = 'キャンセル',\n      confirmColor = '#ef4444'\n    } = options;\n\n    return new Promise((resolve) => {\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;\n\n      const dialog = document.createElement('div');\n      dialog.style.cssText = `\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(239, 235, 233, 0.4), rgba(215, 204, 200, 0.3))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.3)' : 'rgba(255, 255, 255, 0.5)')};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isWabiSabiMode\n          ? '0 8px 32px rgba(93, 64, 55, 0.2), 0 0 0 1px rgba(161, 136, 127, 0.2)'\n          : (this.isDarkMode\n            ? '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)'\n            : '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)')};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;\n\n      dialog.innerHTML = `\n        <div style=\"font-size: 56px; margin-bottom: 20px;\">${icon}</div>\n        <h3 style=\"margin: 0 0 16px 0; color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;\">\n          ${title}\n        </h3>\n        <p style=\"margin: 0 0 28px 0; color: ${this.isDarkMode ? '#d1d5db' : '#6b7280'}; line-height: 1.6; font-size: 16px;\">\n          ${message}\n        </p>\n        <div style=\"display: flex; gap: 8px; justify-content: center;\">\n          <button id=\"cancel-btn\" style=\"\n            padding: 14px 24px;\n            background: ${this.isDarkMode \n              ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n              : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))'};\n            border: 1px solid ${this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)'};\n            border-radius: 12px;\n            color: ${this.isDarkMode ? '#d1d5db' : '#374151'};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          \">${cancelText}</button>\n          <button id=\"confirm-btn\" style=\"\n            padding: 14px 24px;\n            background: ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')' \n              : confirmColor === '#ef4444'\n              ? 'linear-gradient(135deg, #ef4444, #dc2626)'\n              : 'linear-gradient(135deg, #ff7b47, #f97316)'};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'rgba(99, 102, 241, 0.3)' \n              : confirmColor === '#ef4444' \n              ? 'rgba(239, 68, 68, 0.3)' \n              : 'rgba(255, 123, 71, 0.3)'};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          \">${confirmText}</button>\n        </div>\n      `;\n\n      modal.appendChild(dialog);\n      document.body.appendChild(modal);\n\n      // アニメーション開始\n      requestAnimationFrame(() => {\n        modal.style.opacity = '1';\n        dialog.style.transform = 'scale(1)';\n        dialog.style.opacity = '1';\n      });\n\n      // イベントリスナー\n      dialog.querySelector('#cancel-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(false);\n      };\n\n      dialog.querySelector('#confirm-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(true);\n      };\n\n      // ESCキーでキャンセル\n      const escHandler = (e) => {\n        if (e.key === 'Escape') {\n          this.closeModalWithAnimation(modal);\n          document.removeEventListener('keydown', escHandler);\n          resolve(false);\n        }\n      };\n      document.addEventListener('keydown', escHandler);\n\n      // モーダル背景クリックでキャンセル\n      modal.onclick = (e) => {\n        if (e.target === modal) {\n          this.closeModalWithAnimation(modal);\n          resolve(false);\n        }\n      };\n    });\n  }\n\n  async showDeleteConfirmation(command) {\n    return this.showConfirmationDialog({\n      icon: '🗑️',\n      title: '削除の確認',\n      message: `「${command}」を実行しますか？<br>この操作は取り消すことができません。`,\n      confirmText: '削除実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#ff7b47'\n    });\n  }\n\n  /**\n   * 出力エリアにメッセージ追加\n   */\n  /**\n   * タスクカード追加（従来のaddOutputを置き換え）\n   */\n  addOutput(message, type = 'default', options = {}) {\n    // タスクカード形式で処理\n    if (type === 'task' || type === 'progress') {\n      return this.addTaskCard(message, options);\n    }\n\n    // エラーとシステムメッセージのみ表示\n    if (type === 'error' || type === 'system') {\n      this.addSystemMessage(message, type);\n    }\n  }\n\n  /**\n   * フローティングタスクカード追加\n   */\n  addTaskCard(taskInfo, options = {}) {\n    if (!this.taskCards) this.taskCards = new Map();\n\n    const taskId = options.taskId || `task_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`;\n    const status = options.status || 'pending';\n    const prompt = taskInfo.prompt || taskInfo.command || taskInfo;\n\n    // フローティングカード作成\n    const card = document.createElement('div');\n    card.className = 'floating-task-card';\n    card.setAttribute('data-task-id', taskId);\n\n    // 2025年トレンド: 待機中のアニメーション効果\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    // iOS 26 Liquid Glass + 2026年トレンドスタイル\n    card.style.cssText = this.getFloatingCardStyles(status);\n    // アニメーション用初期状態（非表示）- 強制設定\n    card.style.setProperty('opacity', '0', 'important');\n    card.style.setProperty('transform', 'translateY(20px) scale(0.95)', 'important');\n    card.style.setProperty('filter', 'blur(4px)', 'important');\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    const statusText = {\n      pending: '待機中',\n      processing: '生成中',\n      progress: '進行中',\n      completed: '完了',\n      error: 'エラー'\n    };\n\n    // 温かみのあるメッセージ表示\n    const friendlyMessage = this.getFriendlyMessage(status, prompt, options.errorMessage);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // フローティングコンテナに追加（最新が上に来るように）\n    this.floatingContainer.insertBefore(card, this.floatingContainer.firstChild);\n    \n    // カード表示制限を適用（最新3個まで表示）\n    this.updateCardDisplayLimit();\n\n    this.taskCards.set(taskId, {\n      element: card,\n      status: status,\n      prompt: prompt,\n      originalPrompt: prompt, // 元のプロンプト\n      startTime: Date.now(),\n      endTime: null,\n      error: null,\n      contentType: 'image', // 'image', 'video', etc.\n      model: null,\n      settings: null\n    });\n\n    // カード詳細モーダル用のイベントリスナー\n    this.addCardDetailEvents(card, taskId);\n    \n    // 入場アニメーション\n    this.animateCardEntrance(card);\n    \n    // 2025年トレンド: シマーエフェクトCSS確保\n    this.ensureShimmerStyles();\n    \n    return taskId;\n  }\n\n  /**\n   * 2025年トレンド: シマーエフェクトスタイルを確保\n   */\n  ensureShimmerStyles() {\n    if (document.querySelector('#chocodrop-shimmer-styles')) return;\n    \n    const styleSheet = document.createElement('style');\n    styleSheet.id = 'chocodrop-shimmer-styles';\n    styleSheet.textContent = `\n      /* 2025年トレンド: シマーエフェクト（強化版） */\n      .chocodrop-shimmer {\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .chocodrop-shimmer::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(255, 255, 255, 0.7)'},\n          transparent\n        );\n        animation: shimmer 1.5s infinite;\n        pointer-events: none;\n        z-index: 1;\n      }\n      \n      .chocodrop-shimmer > * {\n        position: relative;\n        z-index: 2;\n      }\n      \n      /* 2025年トレンド: 微細な浮遊感 */\n      .chocodrop-float {\n        animation: gentleFloat 4s ease-in-out infinite;\n      }\n      \n      /* 待機中の特別なパルス効果（強化版） */\n      .chocodrop-shimmer.floating-task-card {\n        animation: gentleFloat 4s ease-in-out infinite, subtlePulse 3s ease-in-out infinite;\n      }\n      \n      @keyframes subtlePulse {\n        0%, 100% { \n          box-shadow: 0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1);\n        }\n        50% { \n          box-shadow: 0 12px 40px rgba(15, 23, 42, 0.5), 0 0 0 1px rgba(99, 102, 241, 0.3);\n        }\n      }\n    `;\n    \n    document.head.appendChild(styleSheet);\n  }\n\n  /**\n   * フローティングタスクカード更新\n   */\n  updateTaskCard(taskId, status, options = {}) {\n    if (!this.taskCards || !this.taskCards.has(taskId)) return;\n\n    const taskData = this.taskCards.get(taskId);\n    const card = taskData.element;\n\n    // ステータス更新\n    taskData.status = status;\n\n    // エラー情報を保存\n    if (status === 'error' && options.errorMessage) {\n      taskData.error = options.errorMessage;\n    }\n\n    // 2025年トレンド: アニメーション状態管理\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      // 待機中・処理中: シマーエフェクト追加\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    } else {\n      // 完了・エラー: シマーエフェクト削除\n      card.classList.remove('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    // 温かみのあるメッセージ更新（エラー時は理由も含める）\n    const friendlyMessage = this.getFriendlyMessage(status, taskData.prompt, taskData.error);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // スタイル更新（完了状態に応じて）\n    card.style.cssText = this.getFloatingCardStyles(status);\n\n    // 完了時の自動消去アニメーション\n    if (status === 'completed') {\n      this.animateCardSuccess(card, taskId);\n    } else if (status === 'error') {\n      this.animateCardError(card, taskId);\n    }\n  }\n\n  /**\n   * システムメッセージ表示\n   */\n  addSystemMessage(message, type) {\n    const entry = document.createElement('div');\n    entry.className = `system-message ${type}`;\n    entry.style.cssText = `\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type === 'error' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(107, 114, 128, 0.1)'};\n      border: 1px solid ${type === 'error' ? 'rgba(239, 68, 68, 0.3)' : 'rgba(107, 114, 128, 0.3)'};\n      color: ${type === 'error' ? '#fca5a5' : (this.isDarkMode ? '#d1d5db' : '#6b7280')};\n    `;\n    entry.textContent = message;\n    this.outputDiv.appendChild(entry);\n    this.scrollToBottom();\n  }\n\n  /**\n   * タスクカードスタイル取得\n   */\n  getTaskCardStyles(status) {\n    const baseStyles = `\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(255, 255, 255, 0.15)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.25)'};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;\n\n    const statusBorders = {\n      pending: 'rgba(167, 139, 250, 0.3)',     // 薄紫\n      processing: 'rgba(192, 132, 252, 0.5)',  // 紫（強調）\n      progress: 'rgba(236, 72, 153, 0.4)',     // ピンク\n      completed: 'rgba(167, 139, 250, 0.4)',   // 紫\n      error: 'rgba(239, 68, 68, 0.4)'          // 赤\n    };\n\n    return baseStyles + `border-left: 3px solid ${statusBorders[status] || statusBorders.pending};`;\n  }\n\n  /**\n   * フローティングカードスタイル（iOS 26 Liquid Glass + 2026年トレンド）\n   */\n  getFloatingCardStyles(status) {\n    // 2025年Glassmorphism仕様：フローティングタスクカード\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)',\n      color: '#ffffff'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)',\n      color: '#1f2937'\n    };\n\n    const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n    \n    // 2025年トレンド: 待機中のシマーエフェクト\n    const shimmerEffect = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      position: relative;\n      overflow: hidden;\n      &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'},\n          transparent\n        );\n        animation: shimmer 2s infinite;\n      }\n    ` : '';\n\n    // 2025年トレンド: 微細な浮遊感\n    const floatingAnimation = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      animation: gentleFloat 4s ease-in-out infinite, shimmer 2s infinite;\n    ` : '';\n\n    return `\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      ${shimmerEffect}\n      ${floatingAnimation}\n      position: relative;\n      overflow: hidden;\n    `;\n  }\n\n  /**\n   * カード表示制限を適用（最大3個まで表示、それ以上は「+ N」で表示）\n   */\n  updateCardDisplayLimit() {\n    const maxVisibleCards = 3;\n    const allCards = Array.from(this.floatingContainer.children).filter(child => \n      !child.classList.contains('overflow-counter')\n    );\n    \n    // 既存のカウンターを削除\n    const existingCounter = this.floatingContainer.querySelector('.overflow-counter');\n    if (existingCounter) {\n      existingCounter.remove();\n    }\n    \n    if (allCards.length <= maxVisibleCards) {\n      // カードが3個以下の場合、すべて表示\n      allCards.forEach(card => {\n        card.style.display = 'flex';\n      });\n    } else {\n      // カードが4個以上の場合、最新3個のみ表示し、残りはカウンター表示\n      const visibleCards = allCards.slice(0, maxVisibleCards); // 最初の3個（最新）\n      const hiddenCount = allCards.length - maxVisibleCards;\n      \n      // 古いカードを非表示\n      allCards.forEach((card, index) => {\n        if (index < maxVisibleCards) {\n          card.style.display = 'flex';\n        } else {\n          card.style.display = 'none';\n        }\n      });\n      \n      // 「+ N」カウンターを作成\n      const counter = document.createElement('div');\n      counter.className = 'overflow-counter';\n      // テーマに応じたカウンタースタイル\n      const counterBaseColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.12)';\n      const counterBorderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.15)';\n      const counterTextColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.6)';\n      \n      counter.style.cssText = `\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;\n      counter.innerHTML = `+ ${hiddenCount}`;\n      \n      // カウンターを最後に挿入（最下部に配置）\n      this.floatingContainer.appendChild(counter);\n      \n      // カウンターのホバー効果（テーマ対応）\n      const counterHoverColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.18)';\n      \n      counter.addEventListener('mouseenter', () => {\n        counter.style.background = counterHoverColor;\n        counter.style.transform = 'scale(1.05)';\n      });\n      \n      counter.addEventListener('mouseleave', () => {\n        counter.style.background = counterBaseColor;\n        counter.style.transform = 'scale(1)';\n      });\n    }\n  }\n\n  /**\n   * カードに詳細モーダル用のイベントリスナーを追加\n   */\n  addCardDetailEvents(card, taskId) {\n    // タッチデバイス検出\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    \n    if (isTouchDevice) {\n      // モバイル/タブレット: タップで詳細表示\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    } else {\n      // デスクトップ: ホバーで詳細表示\n      let hoverTimeout;\n      \n      card.addEventListener('mouseenter', () => {\n        hoverTimeout = setTimeout(() => {\n          this.showTaskDetailModal(taskId);\n        }, 800); // 0.8秒ホバーで表示\n      });\n      \n      card.addEventListener('mouseleave', () => {\n        if (hoverTimeout) {\n          clearTimeout(hoverTimeout);\n        }\n      });\n      \n      // クリックでも表示（デスクトップでも使いやすく）\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    }\n  }\n\n  /**\n   * タスク詳細モーダルを表示\n   */\n  showTaskDetailModal(taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData) return;\n    \n    // 既存のモーダルを削除\n    const existingModal = document.querySelector('.task-detail-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n    \n    // モーダル作成\n    const modal = this.createTaskDetailModal(taskData);\n    document.body.appendChild(modal);\n    \n    // 入場アニメーション\n    requestAnimationFrame(() => {\n      modal.style.opacity = '1';\n      modal.querySelector('.modal-content').style.transform = 'translateY(0) scale(1)';\n    });\n  }\n\n  /**\n   * タスク詳細モーダルのHTML要素を作成\n   */\n  createTaskDetailModal(taskData) {\n    const modal = document.createElement('div');\n    modal.className = 'task-detail-modal';\n    \n    // テーマに応じたスタイル\n    const overlayColor = this.isDarkMode ? 'rgba(0, 0, 0, 0.6)' : 'rgba(0, 0, 0, 0.4)';\n    const modalBg = this.isDarkMode ? 'rgba(20, 20, 20, 0.95)' : 'rgba(255, 255, 255, 0.95)';\n    const modalBorder = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n    const textColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(0, 0, 0, 0.9)';\n    const labelColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)';\n    \n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;\n    \n    // 実行時間計算\n    const duration = taskData.endTime \n      ? ((taskData.endTime - taskData.startTime) / 1000).toFixed(1)\n      : ((Date.now() - taskData.startTime) / 1000).toFixed(1);\n    \n    // ステータス表示\n    const statusText = taskData.status === 'pending' ? '待機中' \n                    : taskData.status === 'in-progress' ? '実行中' \n                    : taskData.status === 'completed' ? '完了' \n                    : 'エラー';\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;\">\n        <h3 style=\"margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;\">タスク詳細</h3>\n        <button class=\"close-btn\" style=\"\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        \">×</button>\n      </div>\n      \n      <div style=\"space-y: 16px;\">\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📝 元のプロンプト</div>\n          <div style=\"color: ${textColor}; font-size: 14px; line-height: 1.4;\">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📊 ステータス</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">⏱️ 実行時間</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${duration}秒</div>\n        </div>\n        \n        ${taskData.error ? `\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">❌ エラー詳細</div>\n          <div style=\"color: #ef4444; font-size: 14px; line-height: 1.4;\">${taskData.error}</div>\n        </div>\n        ` : ''}\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">🎨 コンテンツタイプ</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${taskData.contentType || '画像'}</div>\n        </div>\n      </div>\n    `;\n    \n    // イベントリスナー\n    modalContent.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    const closeBtn = modalContent.querySelector('.close-btn');\n    closeBtn.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    closeBtn.addEventListener('mouseenter', () => {\n      closeBtn.style.color = textColor;\n    });\n    \n    closeBtn.addEventListener('mouseleave', () => {\n      closeBtn.style.color = labelColor;\n    });\n    \n    modal.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    modal.appendChild(modalContent);\n    return modal;\n  }\n\n  /**\n   * タスク詳細モーダルを閉じる\n   */\n  closeTaskDetailModal(modal) {\n    modal.style.opacity = '0';\n    modal.querySelector('.modal-content').style.transform = 'translateY(20px) scale(0.95)';\n    \n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    }, 300);\n  }\n\n  /**\n   * カード入場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardEntrance(card) {\n    // iOS 26 Liquid Glass 入場エフェクト\n    card.style.transform = 'translateY(20px) scale(0.95)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(4px)';\n\n    requestAnimationFrame(() => {\n      card.style.transition = 'all 0.6s cubic-bezier(0.16, 1, 0.3, 1)';\n      card.style.transform = 'translateY(0) scale(1)';\n      card.style.opacity = '1';\n      card.style.filter = 'blur(0px)';\n\n      // 2026年トレンド: 微細な光る効果\n      card.style.boxShadow = '0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)';\n    });\n  }\n\n  /**\n   * 成功時アニメーション + 自動消去（iOS 26 Liquid Glass）\n   */\n  animateCardSuccess(card, taskId) {\n    // iOS 26 Liquid Glass 成功エフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(76, 175, 80, 0.6)';\n    card.style.transform = 'scale(1.08)';\n    card.style.boxShadow = '0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)';\n    card.style.filter = 'brightness(1.1) saturate(1.2)';\n\n    // 2026年トレンド: 流体的な戻りアニメーション\n    setTimeout(() => {\n      card.style.transform = 'scale(1.02)';\n      card.style.filter = 'brightness(1.05) saturate(1.1)';\n    }, 150);\n\n    // Liquid Glass風のスムーズなフェードアウト（2秒後に自動削除）\n    setTimeout(() => {\n      this.animateCardExit(card, taskId);\n    }, 2000);\n  }\n\n  /**\n   * エラー時アニメーション（2026年トレンド UX）\n   */\n  animateCardError(card, taskId) {\n    // iOS 26 Liquid Glass エラーエフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(244, 67, 54, 0.7)';\n    card.style.boxShadow = '0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)';\n    card.style.filter = 'saturate(1.3) brightness(1.1)';\n\n    // 2026年トレンド: より自然なpulseアニメーション（shakeより洗練）\n    card.style.animation = 'errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2';\n\n    // UX改善: エラー内容を表示するツールチップ風UI\n    this.addErrorTooltip(card, taskId);\n\n    // エラーは手動で消すまで表示継続（クリックで消去）\n    card.style.cursor = 'pointer';\n    card.onclick = () => this.animateCardExit(card, taskId);\n\n    // 5秒後に自動フェードアウト（UX改善）\n    setTimeout(() => {\n      if (this.taskCards.has(taskId)) {\n        this.animateCardExit(card, taskId);\n      }\n    }, 5000);\n  }\n\n  /**\n   * エラー時のツールチップ表示（UX改善）\n   */\n  addErrorTooltip(card, taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData || !taskData.error) return;\n\n    // ツールチップ要素作成\n    const tooltip = document.createElement('div');\n    tooltip.style.cssText = `\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;\n    tooltip.textContent = taskData.error;\n\n    card.style.position = 'relative';\n    card.appendChild(tooltip);\n\n    // フェードイン\n    requestAnimationFrame(() => {\n      tooltip.style.opacity = '1';\n    });\n\n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      if (tooltip.parentNode) {\n        tooltip.style.opacity = '0';\n        setTimeout(() => {\n          if (tooltip.parentNode) {\n            tooltip.parentNode.removeChild(tooltip);\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * カード退場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardExit(card, taskId) {\n    // iOS 26 Liquid Glass 退場エフェクト - 2026年トレンドの「スッと消える」\n    card.style.transition = 'all 0.28s cubic-bezier(0.4, 0, 0.2, 1)';\n    card.style.transform = 'translateY(-12px) scale(0.92)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(6px) brightness(1.2)';\n\n    // 2026年トレンド: 消去時の微細な光の拡散効果\n    card.style.boxShadow = '0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)';\n\n    setTimeout(() => {\n      if (card.parentNode) {\n        card.parentNode.removeChild(card);\n      }\n      this.taskCards.delete(taskId);\n      // カード削除後に表示制限を再適用\n      this.updateCardDisplayLimit();\n    }, 280);\n  }\n\n  /**\n   * ユーザーの表現スタイルを自然に感知\n   */\n  getResponseType(prompt) {\n    // ユーザーの表現スタイルを自然に感知\n    if (/ちょこっと|ちょこん|少し|軽く/.test(prompt) || prompt.length < 15) {\n      return 'casual';\n    }\n    if (/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)) {\n      return 'magical';\n    }\n    return 'balanced'; // 80%がここに該当\n  }\n\n  /**\n   * 温かみのあるメッセージを生成（マーケ提案ベース）\n   */\n  getFriendlyMessage(status, prompt, errorMessage = null) {\n    const shortPrompt = prompt.length > 15 ? prompt.substring(0, 15) + '...' : prompt;\n\n    // 自然な応答システム適用\n    const responseType = this.getResponseType(prompt);\n\n    switch (status) {\n      case 'pending':\n        return responseType === 'casual' ? 'ちょこっと準備中です...' :\n               responseType === 'magical' ? '魔法をかけようとしています...' :\n               'ちょこっと魔法の準備中...';\n      case 'processing':\n      case 'in-progress':\n      case 'progress':\n        // Modify mode specific messages for processing\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整中です...' :\n                 responseType === 'magical' ? 'イメージを変化させています...' :\n                 'ちょこんと編集中です...';\n        }\n        return responseType === 'casual' ? 'ちょこんと配置中です...' :\n               responseType === 'magical' ? 'あなたの想いを形にしています...' :\n               'ちょこっと魔法をかけています...';\n      case 'completed':\n        // Delete mode specific messages\n        if (this.currentMode === 'delete') {\n          return responseType === 'casual' ? 'ちょこっと削除しました！' :\n                 responseType === 'magical' ? 'すっきりと片付きました！' :\n                 'ちょこんと削除完了！すっきりですね！';\n        }\n        // Modify mode specific messages\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整しました！' :\n                 responseType === 'magical' ? '素敵に変身しました！' :\n                 'ちょこんと編集完了！いい感じですね！';\n        }\n        // Default completion messages for other modes\n        return responseType === 'casual' ? 'ちょこっとドロップしました！' :\n               responseType === 'magical' ? '素敵な世界が完成しました！' :\n               'ちょこんと配置完了！素敵ですね！';\n      case 'error':\n        // エラー理由があれば含める\n        if (errorMessage) {\n          const shortError = errorMessage.length > 30 ? errorMessage.substring(0, 30) + '...' : errorMessage;\n          return `❌ ${shortError}`;\n        }\n        return responseType === 'casual' ? 'おっと、エラーが発生しました' :\n               responseType === 'magical' ? '申し訳ございません、処理に失敗しました' :\n               'エラーが発生しました。もう一度お試しください';\n      default:\n        return shortPrompt;\n    }\n  }\n\n  /**\n   * ステータス色取得\n   */\n  getStatusColor(status) {\n    // ネオンパープル/ピンク系で統一（2025トレンド）\n    const colors = {\n      pending: this.isDarkMode ? '#a78bfa' : '#7c3aed',        // 薄紫\n      processing: this.isDarkMode ? '#c084fc' : '#9333ea',     // 紫（生成中）\n      progress: this.isDarkMode ? '#ec4899' : '#be185d',       // ピンク\n      completed: this.isDarkMode ? '#a78bfa' : '#7c3aed',      // 紫（完了も統一）\n      error: this.isDarkMode ? '#f87171' : '#dc2626'           // 赤（エラーのみ）\n    };\n    return colors[status] || colors.pending;\n  }\n\n  /**\n   * ステータスインジケーター作成（パーセント表示なし）\n   */\n  createStatusIndicator(status) {\n    if (status === 'processing' || status === 'progress') {\n      return `\n        <div class=\"status-indicator\" style=\"\n          background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        \">\n          <div class=\"status-pulse\" style=\"\n            background: linear-gradient(90deg, transparent, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'}, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          \"></div>\n        </div>\n        <div style=\"display: flex; align-items: center; gap: 4px; margin-top: 8px;\">\n          <div class=\"status-dots\" style=\"font-size: 10px; color: ${this.isDarkMode ? '#c084fc' : '#9333ea'};\">\n            処理中<span style=\"animation: dots 1.5s infinite;\">...</span>\n          </div>\n        </div>\n      `;\n    }\n    return '';\n  }\n\n  /**\n   * タスク完了アニメーション\n   */\n  animateTaskCompletion(card) {\n    // 控えめなサクセスアニメーション\n    card.style.animation = 'taskComplete 0.8s ease-out';\n\n    // 微妙なパーティクル効果を追加（控えめ）\n    this.addSubtleParticleEffect(card);\n\n    setTimeout(() => {\n      card.style.animation = '';\n    }, 800);\n\n    this.ensureTaskAnimations();\n  }\n\n  /**\n   * 控えめなパーティクル効果\n   */\n  addSubtleParticleEffect(card) {\n    const particles = 3; // 少ない数のパーティクル\n    const rect = card.getBoundingClientRect();\n\n    for (let i = 0; i < particles; i++) {\n      const particle = document.createElement('div');\n      particle.style.cssText = `\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right - 20}px;\n        top: ${rect.top + 10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;\n\n      // ランダムな方向に少し移動\n      const angle = (i / particles) * Math.PI * 2;\n      const distance = 15; // 控えめな距離\n      particle.style.setProperty('--move-x', `${Math.cos(angle) * distance}px`);\n      particle.style.setProperty('--move-y', `${Math.sin(angle) * distance}px`);\n\n      document.body.appendChild(particle);\n\n      // 自動削除\n      setTimeout(() => particle.remove(), 1200);\n    }\n  }\n\n  /**\n   * タスクアニメーション用CSS確保\n   */\n  ensureTaskAnimations() {\n    if (document.getElementById('task-animations')) return;\n\n    const style = document.createElement('style');\n    style.id = 'task-animations';\n    style.textContent = `\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * プログレス付きタスクステータス表示（互換性のため）\n   */\n  addTaskStatus(message, percent = 0, taskId = null) {\n    const id = taskId || `task_${Date.now()}`;\n    return this.addTaskCard(message, {\n      percent: Math.min(Math.max(percent, 0), 100),\n      taskId: id,\n      status: percent > 0 ? 'progress' : 'pending'\n    });\n  }\n\n  /**\n   * プログレス更新\n   */\n  updateTaskProgress(taskId, percent, newMessage = null) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask && newMessage) {\n      // 既存タスクを更新\n      this.addOutput(newMessage, 'progress', { \n        percent: Math.min(Math.max(percent, 0), 100),\n        taskId\n      });\n    }\n  }\n\n  /**\n   * タスク完了（プログレスバー削除）\n   */\n  completeTask(taskId) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask) {\n      // 完了アニメーション\n      existingTask.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n      existingTask.style.opacity = '0';\n      existingTask.style.transform = 'translateX(20px)';\n      \n      setTimeout(() => {\n        if (existingTask.parentNode) {\n          existingTask.remove();\n        }\n      }, 500);\n    }\n  }\n\n  /**\n   * SSE接続開始（リアルタイム進捗受信）\n   */\n  connectToProgress(serverTaskId, uiTaskId = null) {\n    if (this.activeConnections.has(serverTaskId)) {\n      return;\n    }\n\n    const eventSource = new EventSource(`/api/progress/${serverTaskId}`);\n    this.activeConnections.set(serverTaskId, eventSource);\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        data.uiTaskId = uiTaskId; // UI用タスクIDを追加\n        this.handleProgressUpdate(data);\n      } catch (error) {\n        console.error('SSE data parse error:', error);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error);\n      this.disconnectProgress(serverTaskId);\n    };\n  }\n\n  /**\n   * 進捗更新処理\n   */\n  handleProgressUpdate(data) {\n    switch (data.type) {\n      case 'connected':\n        this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);\n        break;\n\n      case 'progress':\n        if (data.percent !== undefined && data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'progress', { percent: data.percent });\n        }\n        break;\n\n      case 'completed':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'completed');\n        }\n        this.disconnectProgress(data.taskId);\n        break;\n\n      case 'error':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'error', { errorMessage: data.message });\n        }\n        this.addOutput(`❌ ${data.message}`, 'error');\n        this.disconnectProgress(data.taskId);\n        break;\n    }\n  }\n\n  /**\n   * SSE接続終了\n   */\n  disconnectProgress(taskId) {\n    const connection = this.activeConnections.get(taskId);\n    if (connection) {\n      connection.close();\n      this.activeConnections.delete(taskId);\n    }\n  }\n\n  /**\n   * 出力エリアを最下部にスクロール\n   */\n  scrollToBottom() {\n    if (this.outputDiv) {\n      this.outputDiv.scrollTop = this.outputDiv.scrollHeight;\n    }\n  }\n\n  /**\n   * モード別コマンドプレフィックス\n   */\n  getModePrefix(mode) {\n    // サーバー側でモードを区別するためのプレフィックス\n    const prefixes = {\n      generate: '', // デフォルトは生成モード\n      modify: '[変更] ',\n      delete: '[削除] '\n    };\n    return prefixes[mode] || '';\n  }\n\n  /**\n   * コマンド保存 (Undo/Redoシステム)\n   */\n  saveCommandToHistory(commandData) {\n    // 現在のインデックス以降の履歴を削除（新しいコマンドが実行されたため）\n    this.commandHistory = this.commandHistory.slice(0, this.currentHistoryIndex + 1);\n    \n    // 新しいコマンドを履歴に追加\n    this.commandHistory.push(commandData);\n    this.currentHistoryIndex = this.commandHistory.length - 1;\n    \n    // 最大コマンド保存数を超えた場合、古いコマンドを削除\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentHistoryIndex--;\n    }\n    \n    // ボタン状態を更新\n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undo実行\n   */\n  undo() {\n    if (!this.canUndo()) {\n      this.addOutput('↶ Undoできる操作がありません', 'hint');\n      return;\n    }\n    \n    const command = this.commandHistory[this.currentHistoryIndex];\n    this.currentHistoryIndex--;\n    \n    // Undoの逆操作を実行（簡易実装）\n    if (command.mode === 'generate') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の生成を取り消しました`, 'system');\n      // 実際のシーン管理では最後に作成されたオブジェクトを削除\n      if (this.sceneManager && this.sceneManager.undoLastGenerate) {\n        this.sceneManager.undoLastGenerate();\n      }\n    } else if (command.mode === 'modify') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の変更を取り消しました`, 'system');\n      // 実際のシーン管理では前の状態に戻す\n      if (this.sceneManager && this.sceneManager.undoLastModify) {\n        this.sceneManager.undoLastModify();\n      }\n    } else if (command.mode === 'delete') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の削除を取り消しました`, 'system');\n      // 実際のシーン管理では削除されたオブジェクトを復元\n      if (this.sceneManager && this.sceneManager.undoLastDelete) {\n        this.sceneManager.undoLastDelete();\n      }\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Redo実行\n   */\n  redo() {\n    if (!this.canRedo()) {\n      this.addOutput('↷ Redoできる操作がありません', 'hint');\n      return;\n    }\n    \n    this.currentHistoryIndex++;\n    const command = this.commandHistory[this.currentHistoryIndex];\n    \n    // Redoでコマンドを再実行\n    this.addOutput(`↷ Redo: \"${command.command}\" を再実行しました`, 'system');\n    \n    // 実際のシーン管理でのRedo処理\n    if (this.sceneManager && this.sceneManager.redoCommand) {\n      this.sceneManager.redoCommand(command);\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undoが可能かチェック\n   */\n  canUndo() {\n    return this.currentHistoryIndex >= 0;\n  }\n\n  /**\n   * Redoが可能かチェック\n   */\n  canRedo() {\n    return this.currentHistoryIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Undo/Redoボタンの状態更新\n   */\n  updateUndoRedoButtons() {\n    if (this.undoBtn) {\n      this.undoBtn.disabled = !this.canUndo();\n      this.undoBtn.style.opacity = this.canUndo() ? '1' : '0.4';\n      this.undoBtn.style.cursor = this.canUndo() ? 'pointer' : 'not-allowed';\n    }\n    \n    if (this.redoBtn) {\n      this.redoBtn.disabled = !this.canRedo();\n      this.redoBtn.style.opacity = this.canRedo() ? '1' : '0.4';\n      this.redoBtn.style.cursor = this.canRedo() ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  /**\n   * 確認付き全オブジェクト削除\n   */\n  async clearAllWithConfirmation() {\n    const confirmed = await this.showClearAllConfirmation();\n    if (confirmed) {\n      this.clearAll();\n    }\n  }\n\n  /**\n   * Clear All確認ダイアログ\n   */\n  async showClearAllConfirmation() {\n    return this.showConfirmationDialog({\n      icon: '🧹',\n      title: 'Clear All の確認',\n      message: 'すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。',\n      confirmText: 'Clear All 実行',\n      cancelText: 'キャンセル',\n      confirmColor: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n    });\n  }\n\n  /**\n   * モーダルクローズアニメーション\n   */\n  closeModalWithAnimation(modal) {\n    const dialog = modal.querySelector('div:last-child');\n    dialog.style.transform = 'scale(0.9)';\n    dialog.style.opacity = '0';\n    modal.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (modal.parentElement) {\n        document.body.removeChild(modal);\n      }\n    }, 200);\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    if (this.sceneManager) {\n      this.sceneManager.clearAll();\n      this.addOutput('🧹 全ての実験オブジェクトを削除しました', 'system');\n    } else if (this.client) {\n      // サーバー側での削除は未実装\n      this.addOutput('⚠️ サーバー側削除は未実装', 'error');\n    }\n  }\n\n  // showHistory() メソッド完全削除済み\n\n  /**\n   * 利用可能なコマンド例を表示\n   */\n  showExamples() {\n    const examples = [\n      '右上にドラゴンを作って',\n      '中央に大きなユニコーンを生成',\n      '左下に小さな桜を作って',\n      '空に鳳凰を作って',\n      '地面に神社を作って'\n    ];\n\n    this.addOutput('💡 コマンド例:', 'system');\n    examples.forEach(example => {\n      this.addOutput(`   \"${example}\"`, 'hint');\n    });\n  }\n\n  /**\n   * SceneManager設定\n   */\n  setSceneManager(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.applyServiceSelectionToSceneManager();\n  }\n\n  /**\n   * Client設定\n   */\n  setClient(client) {\n    this.client = client;\n  }\n\n  /**\n   * 設定更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n    // 必要に応じてUIを更新\n    if (newConfig.activationKey) {\n      // 新しいキーバインドを反映するため、イベントリスナーを再設定\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  /**\n   * スタイル再適用\n   */\n  refreshStyles() {\n    // Generateモードボタンのスタイルを再適用\n    const generateBtn = this.container?.querySelector('[data-mode=\"generate\"]');\n    if (generateBtn) {\n      generateBtn.style.cssText = this.getModeButtonStyles(true, 'generate');\n    }\n\n    // Executeボタンのスタイルを再適用\n    const executeBtn = this.container?.querySelector('#execute-btn');\n    if (executeBtn) {\n      executeBtn.style.cssText = this.getModernButtonStyles('primary');\n    }\n\n    // サービスモーダルの背景とスタイルを更新\n    if (this.serviceModal) {\n      this.updateServiceModalStyles();\n    }\n\n    // サービスセレクターテーマ更新\n    this.updateServiceSelectorTheme();\n  }\n\n  updateServiceModalStyles() {\n    if (!this.serviceModal) return;\n\n    // モーダルの背景とボーダーを更新（枯山水の静寂）\n    this.serviceModal.style.background = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.4), rgba(189, 189, 189, 0.35))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))');\n\n    this.serviceModal.style.border = this.isWabiSabiMode\n      ? '1px solid rgba(141, 110, 99, 0.4)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.3)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    this.serviceModal.style.color = this.isWabiSabiMode\n      ? '#424242'\n      : (this.isDarkMode ? '#ffffff' : '#1f2937');\n\n    this.serviceModal.style.boxShadow = this.isWabiSabiMode\n      ? '0 20px 40px rgba(93, 64, 55, 0.35)'\n      : '0 20px 40px rgba(15, 23, 42, 0.35)';\n  }\n\n  /**\n   * テーマ切り替え\n   */\n  toggleTheme() {\n    // 3段階サイクル: light → dark → wabisabi → light\n    switch (this.currentTheme) {\n      case 'light':\n        this.currentTheme = 'dark';\n        break;\n      case 'dark':\n        this.currentTheme = 'wabisabi';\n        break;\n      case 'wabisabi':\n        this.currentTheme = 'light';\n        break;\n      default:\n        this.currentTheme = 'light';\n    }\n\n    // 状態更新\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    localStorage.setItem('live-command-theme', this.currentTheme);\n\n    // アイコンボタン更新\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n\n      const config = themeConfig[this.currentTheme];\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n    }\n\n    // 全スタイル再適用\n    this.applyTheme();\n\n    // テーマ切り替え完了（履歴には出力しない）\n  }\n\n  /**\n   * テーマ適用\n   */\n  applyTheme() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isWabiSabiMode ? 'wabisabi-mode' : (this.isDarkMode ? 'dark-mode' : 'light-mode');\n\n    // メインコンテナ（display状態を保持）\n    const currentDisplay = this.container.style.display;\n    const currentFlexDirection = this.container.style.flexDirection;\n    this.container.style.cssText = this.getContainerStyles();\n    this.container.style.display = currentDisplay || 'flex';\n    this.container.style.flexDirection = currentFlexDirection || 'column';\n\n    // フローティングブランドバッジのテーマ再適用\n    const brandBadge = this.container.querySelector('.floating-brand-badge');\n    if (brandBadge) {\n      brandBadge.style.background = this.isDarkMode \n        ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))'\n        : 'linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))';\n      brandBadge.style.border = `1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'}`;\n    }\n\n    // 入力フィールド\n    const hadHighlight = !!this.highlightOverlay;\n    this.inputDefaultStyles = null;\n    this.clearKeywordHighlighting();\n    this.input.style.cssText = this.getInputStyles();\n    this.captureInputDefaultStyles();\n    if (hadHighlight || (this.input && this.input.value.trim())) {\n      this.applyKeywordHighlighting();\n    }\n\n    // スタイル適用\n    this.output.style.cssText = this.getOutputStyles();\n\n    // ラジオボタンモードセレクターの2025年仕様テーマ再適用\n    if (this.radioModeContainer) {\n      this.radioModeContainer.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))');\n      this.radioModeContainer.style.borderColor = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.4)'\n        : (this.isDarkMode\n          ? 'rgba(99, 102, 241, 0.15)'\n          : 'rgba(255, 255, 255, 0.25)');\n\n      // 各ラジオボタンのスタイル更新\n      Object.keys(this.radioModeButtons).forEach(key => {\n        const { button } = this.radioModeButtons[key];\n        if (this.currentMode !== key) {\n          button.style.color = this.isWabiSabiMode\n            ? 'rgba(245, 245, 245, 0.8)'\n            : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n          button.style.background = 'transparent';\n          button.style.border = '1px solid transparent';\n          button.style.boxShadow = 'none';\n        }\n      });\n\n      // 現在選択されているモードのスタイルも更新\n      this.selectMode(this.currentMode, false);\n    }\n\n    // アクションボタンのテーマ再適用\n    if (this.clearBtn) {\n      this.clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    }\n    if (this.historyBtn) {\n      this.historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n      this.historyBtn.style.opacity = '0.5';\n    }\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n      const config = themeConfig[this.currentTheme] || themeConfig.light;\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n      this.themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    }\n    if (this.settingsButton) {\n      this.settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    }\n\n    this.updateServiceSelectorTheme();\n\n    // 閉じるボタンのテーマ更新\n    const closeButton = this.container.querySelector('.close-button');\n    if (closeButton) {\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.background = this.isDarkMode \n        ? 'rgba(255, 255, 255, 0.1)' \n        : 'rgba(0, 0, 0, 0.1)';\n    }\n\n    // フローティングコンテナとタスクカードのテーマ更新\n    this.updateFloatingContainerTheme();\n\n    // 既存の出力テキストの色を更新\n    this.updateExistingTextColors();\n  }\n\n  /**\n   * フローティングコンテナとタスクカードのテーマ更新\n   */\n  updateFloatingContainerTheme() {\n    if (!this.floatingContainer) return;\n\n    // フローティングコンテナの表示状態を保持\n    const currentDisplay = this.floatingContainer.style.display;\n\n    // 既存のタスクカードの色だけをテーマに合わせて更新（レイアウトは保持）\n    if (this.taskCards && this.taskCards.size > 0) {\n      this.taskCards.forEach((taskData, taskId) => {\n        const card = taskData.element;\n        if (card) {\n          // テーマ関連の色のみ更新（位置やアニメーション状態は保持）\n          // 2025年Glassmorphism仕様適用\n          const glassmorphismDark = {\n            background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n            border: '1px solid rgba(99, 102, 241, 0.25)',\n            color: '#ffffff'\n          };\n\n          const glassmorphismLight = {\n            background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n            border: '1px solid rgba(255, 255, 255, 0.4)',\n            color: '#1f2937'\n          };\n\n          const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n\n          card.style.setProperty('background', theme.background, 'important');\n          card.style.setProperty('border', theme.border, 'important');\n          card.style.setProperty('color', theme.color, 'important');\n        }\n      });\n    }\n\n    // テーマ切り替え時は位置は変更せず、表示状態のみ復元\n    this.floatingContainer.style.display = currentDisplay;\n  }\n\n  /**\n   * 既存のテキスト色を現在のテーマに合わせて更新\n   */\n  updateExistingTextColors() {\n    const colors = this.isDarkMode ? {\n      system: '#60a5fa',\n      command: '#93c5fd',\n      success: '#f472b6',\n      error: '#f87171',\n      processing: '#fbbf24',\n      info: '#d1d5db',\n      hint: '#d1d5db'\n    } : {\n      system: '#1e40af',\n      command: '#1d4ed8',\n      success: '#be185d',\n      error: '#dc2626',\n      processing: '#d97706',\n      info: '#7c3aed',\n      hint: '#374151'\n    };\n\n    const defaultTextColor = this.isDarkMode ? '#d1d5db' : '#374151';\n\n    // output内の全てのdivの色を更新\n    this.output.querySelectorAll('div').forEach(line => {\n      const text = line.textContent;\n      let type = 'default';\n      \n      // テキストの内容からタイプを判定\n      if (text.includes('📋') || text.includes('🎨') || text.includes('🎮') || text.includes('UI起動')) {\n        type = 'system';\n      } else if (text.startsWith('> ')) {\n        type = 'command';\n      } else if (text.includes('✅') || text.includes('⭐') || text.includes('生成しました')) {\n        type = 'success';\n      } else if (text.includes('❌') || text.includes('エラー')) {\n        type = 'error';\n      } else if (text.includes('中...')) {\n        type = 'processing';\n      } else if (text.includes('📍') || text.includes('使用モデル:') || text.includes('位置:')) {\n        type = 'info';\n      } else if (text.includes('   ')) {\n        type = 'hint';\n      }\n\n      line.style.color = colors[type] || defaultTextColor;\n    });\n  }\n\n  /**\n   * Importインターフェース表示\n   */\n  showImportInterface() {\n    // 隠しファイル入力を作成（Importボタンから直接選択できるので、ボタンは不要）\n    if (!this.fileInput) {\n      this.fileInput = document.createElement('input');\n      this.fileInput.type = 'file';\n      this.fileInput.accept = '.glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov';\n      this.fileInput.style.display = 'none';\n      this.fileInput.onchange = (e) => this.handleFileSelection(e);\n      document.body.appendChild(this.fileInput);\n    }\n\n    // ドラッグ&ドロップ機能を有効化\n    this.enableDragAndDrop();\n  }\n\n  /**\n   * Importインターフェース非表示\n   */\n  hideImportInterface() {\n    if (this.fileSelectButton && this.fileSelectButton.parentNode) {\n      this.fileSelectButton.parentNode.removeChild(this.fileSelectButton);\n    }\n    this.disableDragAndDrop();\n  }\n\n  /**\n   * ファイル選択ダイアログを開く\n   */\n  openFileSelector() {\n    if (this.fileInput) {\n      this.fileInput.click();\n    }\n  }\n\n  /**\n   * Importボタンから直接ファイル選択を実行\n   */\n  triggerFileSelection() {\n    // ファイル入力要素が存在しない場合は作成\n    if (!this.fileInput) {\n      this.showImportInterface(); // 既存のファイル入力作成処理を呼び出し\n    }\n\n    // 直接ファイル選択ダイアログを開く\n    this.openFileSelector();\n\n    // Import モードに切り替え（UI反映）\n    this.selectMode('import', true);\n  }\n\n  /**\n   * ファイル選択処理\n   */\n  async handleFileSelection(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      // 前回のObjectURLをクリーンアップ（メモリリーク防止）\n      if (this.selectedFile && this.selectedFile.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n\n      // ファイルタイプを判定\n      const fileType = this.detectFileType(file.name);\n\n      // ファイルをローカルURLとして処理\n      const fileUrl = URL.createObjectURL(file);\n\n      // ファイル情報を保存\n      this.selectedFile = {\n        file: file,\n        url: fileUrl,\n        type: fileType,\n        name: file.name\n      };\n\n      this.selectMode('import', true);\n\n      // 自動的にデフォルトプロンプトで実行\n      const defaultPrompt = `中央に設置 (${file.name})`;\n      this.input.value = defaultPrompt;\n\n      this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`, 'system');\n      this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`, 'system');\n\n      // 自動実行（少し遅延を入れてUX向上）\n      setTimeout(() => {\n        this.executeCommand();\n      }, 500);\n\n    } catch (error) {\n      console.error('File selection error:', error);\n      this.addOutput(`❌ ファイル選択エラー: ${error.message}`, 'error');\n    } finally {\n      // IMPORTANT: ファイル入力をリセットして同じファイルの再選択を可能にする\n      if (event.target) {\n        event.target.value = '';\n      }\n    }\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を有効化\n   */\n  enableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.addEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.addEventListener('drop', this.handleDrop.bind(this));\n    this.input.addEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.addEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を無効化\n   */\n  disableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.removeEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.removeEventListener('drop', this.handleDrop.bind(this));\n    this.input.removeEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.removeEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグオーバー処理\n   */\n  handleDragOver(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグエンター処理\n   */\n  handleDragEnter(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグリーブ処理\n   */\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n  }\n\n  /**\n   * ドロップ処理\n   */\n  async handleDrop(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length === 0) return;\n\n    const file = files[0]; // 最初のファイルのみ処理\n\n    // ファイルタイプをチェック\n    const fileType = this.detectFileType(file.name);\n    if (!fileType) {\n      this.addOutput('❌ サポートされていないファイル形式です', 'error');\n      return;\n    }\n\n    // ファイル選択処理と同じ流れ\n    this.handleFileSelection({ target: { files: [file] } });\n  }\n\n  /**\n   * ファイルタイプ判定\n   */\n  detectFileType(fileName) {\n    const ext = fileName.toLowerCase().split('.').pop();\n\n    if (['glb', 'gltf'].includes(ext)) return '3d';\n    if (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) return 'image';\n    if (['mp4', 'mov', 'webm'].includes(ext)) return 'video';\n\n    return null;\n  }\n\n  /**\n   * Importコマンド処理\n   */\n  async handleImportCommand(command) {\n    if (!this.selectedFile) {\n      throw new Error('ファイルが選択されていません');\n    }\n\n    try {\n      // プロンプトから位置情報を解析\n      const position = this.sceneManager ? this.sceneManager.parsePosition(command) : { x: 0, y: 5, z: -10 };\n\n      let result;\n\n      switch (this.selectedFile.type) {\n        case '3d':\n          // 3Dモデルを読み込み\n          if (this.sceneManager) {\n            result = await this.sceneManager.load3DModel(this.selectedFile.url, {\n              position: position,\n              // scale: 自動調整に任せる\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'image':\n          // 画像をテクスチャプレーンとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadImageFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'video':\n          // 動画をビデオテクスチャとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadVideoFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        default:\n          throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`);\n      }\n\n      // ファイル情報をクリーンアップ\n      const processedFileName = this.selectedFile?.name;\n      const importedType = this.selectedFile?.type;\n      const importedUrl = this.selectedFile?.url;\n\n      if (importedType !== 'video' && importedUrl) {\n        URL.revokeObjectURL(importedUrl);\n      }\n\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n\n      return {\n        success: true,\n        message: `${processedFileName || 'ファイル'} を ${position.x}, ${position.y}, ${position.z} に配置しました`,\n        objectId: result.objectId\n      };\n\n    } catch (error) {\n      // エラー時もファイル情報をクリーンアップ\n      if (this.selectedFile?.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n      throw error;\n    }\n  }\n\n  /**\n   * 削除モードが選択された時の処理\n   */\n  handleDeleteModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：削除コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を削除 ⏎`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 削除対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 削除するオブジェクトを選択後、削除ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('delete');\n      \n      // DELETEモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 修正モードが選択された時の処理\n   */\n  handleModifyModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：修正コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 修正対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 修正するオブジェクトを選択後、修正ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('modify');\n      \n      // Modifyモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Attention Animation\n   * オブジェクト未選択時の注意喚起アニメーション\n   */\n  triggerAttentionAnimation(mode) {\n    const chatOutput = this.chatOutput;\n    const inputField = this.input;\n    \n    // 2025年トレンド1: Micro-Shake Effect（微細な震え）\n    this.addMicroShakeEffect(chatOutput);\n    \n    // 2025年トレンド2: Context-Aware Glow（状況認識グロー）\n    this.addContextGlow(inputField, mode);\n    \n    // 2025年トレンド3: Emotional Pulse（感情的パルス）\n    this.addEmotionalPulse(chatOutput, mode);\n    \n    // 2025年トレンド4: 3D Depth Shadow（立体的影効果）\n    this.add3DDepthEffect(chatOutput);\n  }\n\n  /**\n   * 2025年トレンド：Micro-Shake Effect\n   */\n  addMicroShakeEffect(element) {\n    element.style.animation = 'microShake2025 0.5s ease-in-out';\n    \n    // CSSアニメーションを動的追加\n    this.ensureMicroShakeAnimation();\n    \n    // アニメーション後クリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 500);\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Glow\n   */\n  addContextGlow(element, mode) {\n    const glowColor = mode === 'delete' ? 'rgba(239, 68, 68, 0.4)' : 'rgba(99, 102, 241, 0.4)';\n    \n    element.style.transition = 'all 0.3s ease';\n    element.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n    \n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      element.style.boxShadow = '';\n    }, 3000);\n  }\n\n  /**\n   * 2025年トレンド：Emotional Pulse\n   */\n  addEmotionalPulse(element, mode) {\n    const pulseColor = mode === 'delete' ? '#ef4444' : (this.isWabiSabiMode ? '#8BC34A' : '#6366f1');\n    \n    element.style.borderLeft = `4px solid ${pulseColor}`;\n    element.style.animation = 'emotionalPulse2025 2s ease-in-out infinite';\n    \n    // CSSアニメーションを動的追加\n    this.ensureEmotionalPulseAnimation();\n    \n    // 6秒後にアニメーション停止\n    setTimeout(() => {\n      element.style.animation = '';\n      element.style.borderLeft = '';\n    }, 6000);\n  }\n\n  /**\n   * 2025年トレンド：3D Depth Effect\n   */\n  add3DDepthEffect(element) {\n    element.style.transform = 'translateZ(8px) rotateX(1deg)';\n    element.style.transition = 'transform 0.3s ease';\n    \n    // 2秒後に元に戻す\n    setTimeout(() => {\n      element.style.transform = '';\n    }, 2000);\n  }\n\n  /**\n   * Micro-Shake CSSアニメーション確保\n   */\n  ensureMicroShakeAnimation() {\n    if (document.getElementById('micro-shake-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'micro-shake-2025';\n    style.textContent = `\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Emotional Pulse CSSアニメーション確保\n   */\n  ensureEmotionalPulseAnimation() {\n    if (document.getElementById('emotional-pulse-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'emotional-pulse-2025';\n    style.textContent = `\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * モード切り替え時の入力欄メッセージ上書き機能\n   * ユーザビリティ向上：他モードのメッセージを新モードの初期状態にクリア\n   */\n  clearInputOnModeSwitch(newMode) {\n    // 現在の入力欄に内容がある場合のみ処理\n    if (this.input.value.trim()) {\n      // 以前のモードのメッセージかどうかを判定\n      const isPreviousModeMessage = this.isPreviousModeMessage(this.input.value, newMode);\n      \n      if (isPreviousModeMessage) {\n        // 以前のモードのメッセージの場合、新モードの初期メッセージに置き換え\n        this.input.value = '';\n        this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`, 'system');\n      }\n    }\n  }\n\n  /**\n   * 入力内容が以前のモードのメッセージかどうかを判定\n   */\n  isPreviousModeMessage(inputValue, currentMode) {\n    // Delete/Modifyモードの特徴的なメッセージパターンを検出\n    const deletePatterns = [\n      /.*を削除$/,\n      /削除$/\n    ];\n    \n    const modifyPatterns = [\n      /.*を$/,\n      /.*を変更/,\n      /.*をピンク/,\n      /.*を大きく/,\n      /.*を小さく/,\n      /.*を移動/,\n      /回転/,\n      /反転/,\n      /ミラー/,\n      /傾け/,\n      /向きを変え/,\n      /.*を.*色/,\n      /.*を.*サイズ/\n    ];\n    \n    const importPatterns = [\n      /ファイル/,\n      /画像/,\n      /インポート/\n    ];\n\n    // 現在のモードと異なるパターンにマッチする場合は上書き対象\n    switch (currentMode) {\n      case 'delete':\n        return modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'modify':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'import':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'generate':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      default:\n        return false;\n    }\n  }\n\n  /**\n   * モード表示名を取得\n   */\n  getModeDisplayName(mode) {\n    const modeNames = {\n      'generate': '生成',\n      'import': 'インポート',\n      'modify': '修正',\n      'delete': '削除'\n    };\n    return modeNames[mode] || mode;\n  }\n\n  /**\n   * 常時表示フローティングチョコアイコンを作成\n   */\n  createFloatingChocolateIcon() {\n    // 既存のアイコンがあれば削除\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.remove();\n    }\n\n    this.floatingChocolateIcon = document.createElement('div');\n    this.floatingChocolateIcon.innerHTML = '🍫';\n    this.floatingChocolateIcon.title = 'ChocoDrop を開く (@キーでも開けます)';\n    this.floatingChocolateIcon.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;\n\n    // ホバー効果\n    this.floatingChocolateIcon.addEventListener('mouseover', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1.1) translateY(-2px)';\n      this.floatingChocolateIcon.style.boxShadow = '0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)';\n      this.floatingChocolateIcon.style.opacity = '1';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    this.floatingChocolateIcon.addEventListener('mouseout', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1) translateY(0)';\n      this.floatingChocolateIcon.style.boxShadow = '0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)';\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    // クリックで ChocoDrop を開く\n    this.floatingChocolateIcon.addEventListener('click', () => {\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // 右クリックメニュー\n    this.floatingChocolateIcon.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.showFloatingIconContextMenu(e);\n    });\n\n    // DOM に追加\n    document.body.appendChild(this.floatingChocolateIcon);\n  }\n\n  /**\n   * フローティングアイコンの右クリックメニューを表示\n   */\n  showFloatingIconContextMenu(event) {\n    // 既存のメニューがあれば削除\n    const existingMenu = document.querySelector('.floating-icon-context-menu');\n    if (existingMenu) {\n      existingMenu.remove();\n    }\n\n    // コンテキストメニュー作成\n    const menu = document.createElement('div');\n    menu.className = 'floating-icon-context-menu';\n    menu.style.cssText = `\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isWabiSabiMode\n        ? 'rgba(239, 235, 233, 0.9)'\n        : (this.isDarkMode ? 'rgba(17, 24, 39, 0.85)' : 'rgba(255, 255, 255, 0.85)')};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.2)')};\n      border-radius: 12px;\n      box-shadow: ${this.isWabiSabiMode\n        ? '0 8px 24px rgba(93, 64, 55, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'\n        : '0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'};\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n    `;\n\n    // メニューアイテム1: フォームを開く\n    const openFormItem = document.createElement('div');\n    openFormItem.innerHTML = '📄 フォームを開く';\n    openFormItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    openFormItem.addEventListener('mouseover', () => {\n      openFormItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    openFormItem.addEventListener('mouseout', () => {\n      openFormItem.style.background = 'transparent';\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    openFormItem.addEventListener('click', () => {\n      menu.remove();\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // メニューアイテム2: アイコンを非表示\n    const hideIconItem = document.createElement('div');\n    hideIconItem.innerHTML = '✕ アイコンを非表示';\n    hideIconItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    hideIconItem.addEventListener('mouseover', () => {\n      hideIconItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    hideIconItem.addEventListener('mouseout', () => {\n      hideIconItem.style.background = 'transparent';\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    hideIconItem.addEventListener('click', () => {\n      menu.remove();\n      this.hideFloatingIcon();\n    });\n\n    // メニューに追加\n    menu.appendChild(openFormItem);\n    menu.appendChild(hideIconItem);\n\n    // DOM に追加\n    document.body.appendChild(menu);\n\n    // 画面外に出ないように調整\n    const rect = menu.getBoundingClientRect();\n    if (rect.right > window.innerWidth) {\n      menu.style.left = `${event.clientX - rect.width}px`;\n    }\n    if (rect.bottom > window.innerHeight) {\n      menu.style.top = `${event.clientY - rect.height}px`;\n    }\n\n    // 外部クリックで閉じる\n    const closeMenu = (e) => {\n      if (!menu.contains(e.target)) {\n        menu.remove();\n        document.removeEventListener('click', closeMenu);\n      }\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', closeMenu);\n    }, 10);\n  }\n\n  /**\n   * フローティングアイコンを非表示にする\n   */\n  hideFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * フローティングアイコンを表示する\n   */\n  showFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'flex';\n    }\n  }\n\n  dispose() {\n    // キーワードハイライトのクリーンアップ\n    this.clearKeywordHighlighting();\n\n    // ファイル選択関連のクリーンアップ\n    if (this.fileInput && this.fileInput.parentNode) {\n      this.fileInput.parentNode.removeChild(this.fileInput);\n    }\n    if (this.selectedFile && this.selectedFile.url) {\n      URL.revokeObjectURL(this.selectedFile.url);\n    }\n\n    // フローティングチョコアイコンのクリーンアップ\n    if (this.floatingChocolateIcon && this.floatingChocolateIcon.parentNode) {\n      this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon);\n    }\n\n    if (this.container && this.container.parentElement) {\n      this.container.parentElement.removeChild(this.container);\n    }\n  }\n\n  showOverlayTextarea() {\n    if (this.overlayTextarea) return;\n\n    this.isExpanded = true;\n    \n    // オーバーレイテキストエリアを作成\n    this.overlayTextarea = document.createElement('textarea');\n    this.overlayTextarea.value = this.input.value;\n    this.overlayTextarea.placeholder = this.input.placeholder;\n    \n    // フォームの位置とサイズを取得\n    const containerRect = this.container.getBoundingClientRect();\n    \n    // 画面境界を考慮した位置調整\n    const overlayHeight = 300;\n    const padding = 20;\n    \n    let top = containerRect.top + 60;\n    let left = containerRect.left;\n    let width = containerRect.width;\n    \n    // 右端がはみ出る場合\n    if (left + width > window.innerWidth - padding) {\n      left = window.innerWidth - width - padding;\n    }\n    \n    // 左端がはみ出る場合\n    if (left < padding) {\n      left = padding;\n      width = Math.min(width, window.innerWidth - 2 * padding);\n    }\n    \n    // 下端がはみ出る場合\n    if (top + overlayHeight > window.innerHeight - padding) {\n      top = Math.max(padding, window.innerHeight - overlayHeight - padding);\n    }\n\n    const overlayBackground = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))');\n\n    const overlayBorder = this.isWabiSabiMode\n      ? '1px solid rgba(93, 64, 55, 0.5)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.25)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    const overlayInnerShadow = this.isWabiSabiMode\n      ? '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n      : (this.isDarkMode\n        ? '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n        : '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)');\n\n    const overlayTextColor = this.getInputTextColor();\n\n    // オーバーレイのスタイル設定\n    this.overlayTextarea.style.cssText = `\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${overlayBackground};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${overlayBorder};\n      box-shadow: ${overlayInnerShadow};\n      border-radius: 16px;\n      color: ${overlayTextColor};\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;\n    \n    // ドキュメントに追加\n    document.body.appendChild(this.overlayTextarea);\n    \n    // アニメーション開始\n    requestAnimationFrame(() => {\n      this.overlayTextarea.style.opacity = '1';\n    });\n    \n    // フォーカス設定\n    this.overlayTextarea.focus();\n    \n    // 入力同期\n    this.overlayTextarea.addEventListener('input', (e) => {\n      this.input.value = e.target.value;\n    });\n    \n    // Escapeキーで閉じる\n    this.overlayTextarea.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.hideOverlayTextarea();\n      }\n    });\n    \n    // 外側クリックで閉じる\n    this.overlayTextarea.addEventListener('blur', () => {\n      setTimeout(() => this.hideOverlayTextarea(), 100);\n    });\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n}\n","import { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\nimport { SceneManager } from './SceneManager.js';\nimport { CommandUI } from './CommandUI.js';\n\n/**\n * ChocoDrop ワンステップ初期化ヘルパー\n * 共有フォルダから複数の Three.js プロジェクトへ使い回すことを想定\n *\n * @param {THREE.Scene} scene - 既存 Three.js シーン\n * @param {Object} options - 初期化オプション\n * @param {THREE.Camera} [options.camera] - 相対配置計算に使用するカメラ\n * @param {THREE.WebGLRenderer} [options.renderer] - マウス操作を有効化する場合に使用\n * @param {string} [options.serverUrl] - ChocoDrop サーバーの明示的 URL\n * @param {ChocoDropClient} [options.client] - 既存のクライアントを注入する場合（旧 LiveCommandClient）\n * @param {Function} [options.onControlsToggle] - UI 開閉時に呼ばれるコールバック\n * @param {Object} [options.sceneOptions] - SceneManager へ渡す追加オプション\n * @param {Object} [options.uiOptions] - CommandUI へ渡す追加オプション\n * @returns {Object} - 初期化済みのコンポーネント群と dispose ヘルパー\n */\nexport function createChocoDrop(scene, options = {}) {\n  if (!scene) {\n    throw new Error('THREE.Scene インスタンスが必要です');\n  }\n\n  const {\n    camera = null,\n    renderer = null,\n    serverUrl = null,\n    client = null,\n    onControlsToggle = () => {},\n    sceneOptions = {},\n    uiOptions = {}\n  } = options;\n\n  const resolvedServerUrl = serverUrl || sceneOptions.serverUrl || null;\n  const chocoDropClient = client || new ChocoDropClient(resolvedServerUrl);\n\n  const sceneManager = new SceneManager(scene, {\n    camera,\n    renderer,\n    serverUrl: resolvedServerUrl,\n    client: chocoDropClient,\n    ...sceneOptions\n  });\n\n  const commandUI = new CommandUI({\n    sceneManager,\n    client: chocoDropClient,\n    onControlsToggle,\n    ...uiOptions\n  });\n\n  return {\n    client: chocoDropClient,\n    sceneManager,\n    ui: commandUI,\n    dispose() {\n      commandUI.dispose?.();\n      sceneManager.dispose?.();\n    }\n  };\n}\n\n// 旧API名の互換エクスポート\nexport const createChocoDro = createChocoDrop;\nexport const createLiveCommand = createChocoDrop;\n","import { ChocoDropClient, ChocoDroClient, LiveCommandClient } from '../LiveCommandClient.js';\nimport { SceneManager } from '../SceneManager.js';\nimport { CommandUIDemo } from './CommandUIDemo.js';\nimport { createChocoDrop, createChocoDro, createLiveCommand } from '../bootstrap.js';\n\n/**\n * Demo version bootstrap function\n * Creates ChocoDrop instance with CommandUIDemo (restricted functionality)\n */\nfunction createChocoDropDemo(scene, options = {}) {\n  if (!scene) {\n    throw new Error('THREE.Scene インスタンスが必要です');\n  }\n\n  const {\n    camera = null,\n    renderer = null,\n    serverUrl = null,\n    client = null,\n    onControlsToggle = () => {},\n    sceneOptions = {},\n    uiOptions = {},\n    ...otherSceneOptions\n  } = options;\n\n  const resolvedServerUrl = serverUrl || sceneOptions.serverUrl || null;\n  const chocoDropClient = client || new ChocoDropClient(resolvedServerUrl);\n\n  // 旧APIとの互換のため、トップレベルに渡された追加オプションもSceneManagerへ伝搬させる\n  const mergedSceneOptions = {\n    ...sceneOptions,\n    ...otherSceneOptions\n  };\n\n  const sceneManager = new SceneManager(scene, {\n    camera,\n    renderer,\n    serverUrl: resolvedServerUrl,\n    client: chocoDropClient,\n    ...mergedSceneOptions\n  });\n\n  // Use CommandUIDemo instead of CommandUI\n  const commandUI = new CommandUIDemo({\n    sceneManager,\n    client: chocoDropClient,\n    onControlsToggle,\n    ...uiOptions\n  });\n\n  sceneManager.ui = commandUI;\n  commandUI.setSceneManager(sceneManager);\n\n  return {\n    sceneManager,\n    ui: commandUI,\n    client: chocoDropClient,\n    dispose: () => {\n      if (commandUI) commandUI.dispose();\n      if (sceneManager) sceneManager.dispose();\n    }\n  };\n}\n\n// Export everything for demo UMD\nexport {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUIDemo,\n  createChocoDropDemo,\n  createChocoDropDemo as createChocoDrop,  // Alias for compatibility\n  createChocoDro,\n  createLiveCommand\n};\n\n// Default export for convenience\nexport default {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUI: CommandUIDemo, // Alias for demo\n  CommandUIDemo,\n  createChocoDrop: createChocoDropDemo, // Use demo version\n  createChocoDro,\n  createLiveCommand\n};\n"],"mappings":"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","ignoreList":[]}