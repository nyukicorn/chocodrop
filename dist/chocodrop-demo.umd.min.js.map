{"version":3,"file":"chocodrop-demo.umd.min.js","sources":["../src/client/LiveCommandClient.js","../src/common/translation-dictionary.js","../src/client/SceneManager.js","../src/client/demo/CommandUIDemo.js","../src/client/CommandUI.js","../src/client/bootstrap.js","../src/client/demo/index.js"],"sourcesContent":["/**\n * ChocoDrop Client - サーバーとの通信クライアント\n */\nexport class ChocoDropClient {\n  constructor(serverUrl = null) {\n    this.serverUrl = null;\n    this.initialized = false;\n    this.initPromise = null;\n\n    if (serverUrl) {\n      this.serverUrl = serverUrl;\n      this.initialized = true;\n      console.log('🍫 ChocoDropClient initialized:', serverUrl);\n    } else {\n      // 設定取得を遅延実行（Promiseを保存）\n      this.initPromise = this.initializeWithConfig();\n    }\n  }\n\n  /**\n   * サーバーから設定を取得して初期化\n   */\n  async initializeWithConfig() {\n    try {\n      // 現在のページのホストとポートを基準に設定API呼び出し\n      const baseUrl = `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\n\n      const response = await fetch(`${baseUrl}/api/config`);\n      if (response.ok) {\n        const config = await response.json();\n        this.serverUrl = config.serverUrl;\n        console.log('🍫 ChocoDropClient initialized from config:', this.serverUrl);\n      } else {\n        // フォールバック：ポート推測\n        this.serverUrl = this.detectServerUrl();\n        console.log('🍫 ChocoDropClient fallback to detected URL:', this.serverUrl);\n      }\n    } catch (error) {\n      console.warn('⚠️ ChocoDrop config fetch failed, using fallback:', error);\n      this.serverUrl = this.detectServerUrl();\n    }\n\n    this.initialized = true;\n  }\n\n  /**\n   * サーバーURL自動検出（フォールバック）\n   */\n  detectServerUrl() {\n    const currentPort = window.location.port;\n    const protocol = window.location.protocol;\n    const hostname = window.location.hostname;\n\n    // ポートが未指定の場合（ファイルプロトコル等）は既定の 3011 を使用\n    if (!currentPort) {\n      return `${protocol}//${hostname}:3011`;\n    }\n\n    return `${protocol}//${hostname}:${currentPort}`;\n  }\n\n  /**\n   * 初期化完了を待機\n   */\n  async ensureInitialized() {\n    if (this.initialized) return;\n\n    // initPromiseがあれば待機\n    if (this.initPromise) {\n      await this.initPromise;\n      return;\n    }\n\n    // フォールバック：初期化されていない場合はエラー\n    throw new Error('ChocoDropClient not initialized');\n  }\n\n  /**\n   * 画像生成リクエスト\n   */\n  async generateImage(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎨 Requesting image generation: \"${prompt}\"`);\n\n    try {\n      const payload = {\n        prompt,\n        width: options.width || 512,\n        height: options.height || 512\n      };\n\n      if (options.service) {\n        payload.service = options.service;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Image generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Image generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成リクエスト\n   */\n  async generateVideo(prompt, options = {}) {\n    await this.ensureInitialized();\n    console.log(`🎬 Requesting video generation: \"${prompt}\"`);\n\n    try {\n      const safeDefaults = {\n        // aspect_ratio: サーバー側で各モデル最適な比率を自動選択\n        resolution: '720p',\n        enable_safety_checker: true,\n        enable_prompt_expansion: true\n      };\n\n      const payload = {\n        prompt,\n        duration: typeof options.duration === 'number' && options.duration > 0 ? options.duration : 3,\n        resolution: options.resolution || safeDefaults.resolution,\n        enable_safety_checker: options.enable_safety_checker ?? safeDefaults.enable_safety_checker,\n        enable_prompt_expansion: options.enable_prompt_expansion ?? safeDefaults.enable_prompt_expansion\n      };\n\n      // ユーザーが明示的にアスペクト比を指定した場合のみ追加\n      if (options.aspect_ratio) {\n        payload.aspect_ratio = options.aspect_ratio;\n      }\n      // それ以外はサーバー側で各モデルに最適な比率を自動選択\n\n      if (options.model) {\n        payload.model = options.model;\n      }\n\n      if (typeof options.width === 'number' && options.width > 0) {\n        payload.width = options.width;\n      }\n\n      if (typeof options.height === 'number' && options.height > 0) {\n        payload.height = options.height;\n      }\n\n      if (typeof options.seed === 'number') {\n        payload.seed = options.seed;\n      }\n\n      if (options.negative_prompt) {\n        payload.negative_prompt = options.negative_prompt;\n      }\n\n      if (typeof options.frames_per_second === 'number' && options.frames_per_second > 0) {\n        payload.frames_per_second = options.frames_per_second;\n      }\n\n      if (typeof options.guidance_scale === 'number') {\n        payload.guidance_scale = options.guidance_scale;\n      }\n\n      const response = await fetch(`${this.serverUrl}/api/generate-video`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Video generation result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Video generation request failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド実行\n   */\n  async executeCommand(command) {\n    await this.ensureInitialized();\n    console.log(`🎯 Executing command: \"${command}\"`);\n\n    try {\n      const response = await fetch(`${this.serverUrl}/api/command`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ command })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Command execution result:', result);\n      \n      return result;\n\n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 選択されたオブジェクトを変更\n   */\n  async modifySelectedObject(selectedObject, command) {\n    await this.ensureInitialized();\n    console.log(`🔧 Modifying selected object: \"${command}\"`);\n\n    try {\n      // 既存の /api/command エンドポイントを使用\n      // オブジェクト情報をコマンドのコンテキストとして含める\n      const modifyCommand = `${command} (対象オブジェクト: ${selectedObject?.userData?.objectId || selectedObject?.id || 'unknown'})`;\n\n      const response = await fetch(`${this.serverUrl}/api/command`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ command: modifyCommand })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Object modification result:', result);\n\n      return result;\n\n    } catch (error) {\n      console.error('❌ Object modification failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 利用可能なサービス一覧取得\n   */\n  async getAvailableServices() {\n    await this.ensureInitialized();\n    try {\n      const response = await fetch(`${this.serverUrl}/api/services`);\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n\n      return await response.json();\n\n    } catch (error) {\n      console.error('❌ Failed to get services:', error);\n      return [];\n    }\n  }\n}\n\n// 後方互換のため旧名称もエクスポート\nexport const LiveCommandClient = ChocoDropClient;\nexport const ChocoDroClient = ChocoDropClient;\n","/**\n * ChocoDrop 共通翻訳辞書\n * サーバー・クライアント共通で使用する日本語→英語翻訳辞書\n */\n\nconst TRANSLATION_DICTIONARY = {\n  // ファンタジー・魔法系\n  'ユニコーン': 'unicorn',\n  'ドラゴン': 'dragon',\n  '龍': 'dragon',\n  '怪獣': 'monster',\n  'モンスター': 'monster',\n  '魔法使い': 'wizard',\n  '魔術師': 'sorcerer',\n  '魔女': 'witch',\n  '妖精': 'fairy',\n  '🧚': 'fairy',\n  '🧙': 'wizard',\n  '魔法杖': 'magic wand',\n  '杖': 'wand',\n  'スタッフ': 'staff',\n  '魔法': 'magic',\n  '呪文': 'spell',\n  '魔法陣': 'magic circle',\n  '水晶玉': 'crystal ball',\n  '薬瓶': 'potion bottle',\n  '魔導書': 'grimoire',\n  'フェニックス': 'phoenix',\n  'グリフィン': 'griffin',\n  'ペガサス': 'pegasus',\n  'ケルベロス': 'cerberus',\n\n  // 動物\n  '画像': 'image',\n  '写真': 'photo',\n  'イメージ': 'image',\n  '絵': 'picture',\n  'ファイル': 'file',\n  'メディア': 'media',\n  '素材': 'asset',\n  '動画': 'video',\n  'ビデオ': 'video',\n  'ムービー': 'movie',\n  '映像': 'video',\n  'クリップ': 'clip',\n  '猫': 'cat',\n  'ネコ': 'cat',\n  'ねこ': 'cat',\n  '犬': 'dog',\n  'イヌ': 'dog',\n  'いぬ': 'dog',\n  '狼': 'wolf',\n  '熊': 'bear',\n  'ライオン': 'lion',\n  'トラ': 'tiger',\n  '象': 'elephant',\n  'キリン': 'giraffe',\n  'シマウマ': 'zebra',\n  'パンダ': 'panda',\n  'ウサギ': 'rabbit',\n  'リス': 'squirrel',\n  'ハムスター': 'hamster',\n  'フクロウ': 'owl',\n  'ワシ': 'eagle',\n  'カラス': 'crow',\n  'ハト': 'dove',\n  'ペンギン': 'penguin',\n  'イルカ': 'dolphin',\n  'クジラ': 'whale',\n  'サメ': 'shark',\n  'タコ': 'octopus',\n  'カニ': 'crab',\n  'エビ': 'shrimp',\n\n  // 自然・風景\n  '花': 'flower',\n  'はな': 'flower',\n  'ハナ': 'flower',\n  '桜': 'cherry blossom',\n  'バラ': 'rose',\n  'ひまわり': 'sunflower',\n  'チューリップ': 'tulip',\n  '雲': 'cloud',\n  '空': 'sky',\n  '海': 'ocean',\n  '湖': 'lake',\n  '川': 'river',\n  '山': 'mountain',\n  'やま': 'mountain',\n  'ヤマ': 'mountain',\n  '森': 'forest',\n  '木': 'tree',\n  'き': 'tree',\n  'キ': 'tree',\n  '草原': 'meadow',\n  '砂漠': 'desert',\n  '滝': 'waterfall',\n  '洞窟': 'cave',\n  '島': 'island',\n  '星座': 'constellation',\n  '銀河': 'galaxy',\n  '惑星': 'planet',\n\n  // 建物・場所\n  '城': 'castle',\n  'しろ': 'castle',\n  'シロ': 'castle',\n  '宮殿': 'palace',\n  '家': 'house',\n  '塔': 'tower',\n  '教会': 'church',\n  '神殿': 'temple',\n  '図書館': 'library',\n  '学校': 'school',\n  '病院': 'hospital',\n  '駅': 'station',\n  '空港': 'airport',\n  '港': 'port',\n  '橋': 'bridge',\n  '灯台': 'lighthouse',\n  '風車': 'windmill',\n  '庭': 'garden',\n  '公園': 'park',\n  '遊園地': 'amusement park',\n\n  // 乗り物\n  '車': 'car',\n  '電車': 'train',\n  'バス': 'bus',\n  '飛行機': 'airplane',\n  'ヘリコプター': 'helicopter',\n  '船': 'ship',\n  'ヨット': 'yacht',\n  '自転車': 'bicycle',\n  'バイク': 'motorcycle',\n  'ロケット': 'rocket',\n\n  // 天体・時間\n  '月': 'moon',\n  '太陽': 'sun',\n  '星': 'star',\n  '彗星': 'comet',\n  '流れ星': 'shooting star',\n  '虹': 'rainbow',\n  '雷': 'lightning',\n  '雪': 'snow',\n  '雨': 'rain',\n  '嵐': 'storm',\n  '霧': 'fog',\n  '氷': 'ice',\n  '火': 'fire',\n  '水': 'water',\n  '風': 'wind',\n  '光': 'light',\n  '影': 'shadow',\n  '夜': 'night',\n  '朝': 'morning',\n  '夕方': 'evening',\n\n  // 色・素材\n  '赤': 'red',\n  '青': 'blue',\n  '緑': 'green',\n  '黄色': 'yellow',\n  '白': 'white',\n  '黒': 'black',\n  '紫': 'purple',\n  'ピンク': 'pink',\n  'オレンジ': 'orange',\n  '茶色': 'brown',\n  'グレー': 'gray',\n  '金': 'gold',\n  '銀': 'silver',\n  'プラチナ': 'platinum',\n  '銅': 'copper',\n  '鉄': 'iron',\n  '石': 'stone',\n  '木材': 'wood',\n  'ガラス': 'glass',\n  '水晶': 'crystal',\n  'ダイヤモンド': 'diamond',\n\n  // 鳥類\n  '鳥': 'bird',\n  'とり': 'bird',\n  'トリ': 'bird'\n};\n\n/**\n * オブジェクト識別用のエイリアス辞書（拡張版）\n * 翻訳辞書から逆マッピングを生成し、エイリアスも含める\n */\nfunction createObjectKeywords() {\n  const keywords = {};\n\n  // 翻訳辞書から逆マッピングを作成\n  for (const [japanese, english] of Object.entries(TRANSLATION_DICTIONARY)) {\n    // 英語をキーとして日本語とエイリアスを格納\n    if (!keywords[japanese]) {\n      keywords[japanese] = [];\n    }\n\n    // 英語の翻訳を追加\n    if (!keywords[japanese].includes(english)) {\n      keywords[japanese].push(english);\n    }\n  }\n\n  return keywords;\n}\n\n/**\n * 日本語キーワードを英語に翻訳\n */\nfunction translateKeyword(japanese) {\n  return TRANSLATION_DICTIONARY[japanese] || japanese;\n}\n\n/**\n * ファイル名と日本語キーワードをマッチング\n */\nfunction matchKeywordWithFilename(keyword, filename, keywords) {\n  const lowerFilename = filename.toLowerCase();\n\n  // 直接マッチ\n  if (lowerFilename.includes(keyword.toLowerCase())) {\n    return true;\n  }\n\n  // キーワード辞書での相互マッチ\n  for (const [jp, aliases] of Object.entries(keywords)) {\n    // キーワードが日本語の場合、対応する英語エイリアスをファイル名で探す\n    if (keyword.includes(jp)) {\n      for (const alias of aliases) {\n        if (lowerFilename.includes(alias.toLowerCase())) {\n          return true;\n        }\n      }\n    }\n  }\n\n  // 翻訳辞書での直接マッチ\n  const englishKeyword = translateKeyword(keyword);\n  if (englishKeyword !== keyword && lowerFilename.includes(englishKeyword.toLowerCase())) {\n    return true;\n  }\n\n  return false;\n}\n\n// ES6 Modules (クライアント用)\nexport { TRANSLATION_DICTIONARY, createObjectKeywords, translateKeyword, matchKeywordWithFilename };\n\n// CommonJS (サーバー用)\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = { TRANSLATION_DICTIONARY, createObjectKeywords, translateKeyword, matchKeywordWithFilename };\n}\n","// UMDビルド対応: グローバルのTHREEを優先し、なければES moduleのimportを使用\nimport * as THREEModule from 'three';\nconst THREE = globalThis.THREE || THREEModule;\nimport { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\nimport { createObjectKeywords, matchKeywordWithFilename } from '../common/translation-dictionary.js';\n\n/**\n * Scene Manager - 3D scene integration for ChocoDrop System\n * Handles natural language parsing and 3D object management\n */\nexport class SceneManager {\n  constructor(scene, options = {}) {\n    if (!scene) {\n      throw new Error('THREE.Scene is required');\n    }\n    \n    this.scene = scene;\n    this.camera = options.camera || null;\n    this.renderer = options.renderer || null;\n    this.labelRenderer = null; // CSS2DRenderer for UI overlays like audio controls\n    // ChocoDrop Client（共通クライアント注入を優先）\n    // 外部フォルダから共有する場合は options.client でクライアントを再利用\n    this.client = options.client || new ChocoDropClient(options.serverUrl);\n    \n    // 実験オブジェクト管理用グループ\n    this.experimentGroup = new THREE.Group();\n    this.experimentGroup.name = 'LiveExperiments';\n    // 一旦シーンに追加（後でカメラに移動する可能性あり）\n    this.scene.add(this.experimentGroup);\n    \n    // コマンド履歴\n    this.commandHistory = [];\n    \n    // オブジェクト管理\n    this.spawnedObjects = new Map();\n    this.objectCounter = 0;\n    this.selectedObject = null;\n    this.selectedImageService = options.selectedImageService || null;\n    this.selectedVideoService = options.selectedVideoService || null;\n    this.audioControls = new Map();\n    this.audioControlUpdateInterval = null;\n    this.audioControlUpdateListener = null;\n\n    // Animation管理（UI要素用）\n    this.clock = new THREE.Clock();\n    \n    // レイキャスティング用\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    this.lastHoveredObject = null;\n    \n    // 設定\n    this.config = {\n      showLocationIndicator: options.showLocationIndicator !== false,\n      indicatorDuration: options.indicatorDuration || 3000,\n      defaultObjectScale: options.defaultObjectScale || 1.0,\n      enableObjectSelection: options.enableObjectSelection !== false,\n      enableMouseInteraction: options.enableMouseInteraction,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n    \n    // クリックイベントの設定\n    this.setupClickEvents();\n    \n    console.log('🧪 SceneManager initialized with click selection');\n\n    // デバッグやコンソール操作を容易にするためグローバル参照を保持\n    if (typeof globalThis !== 'undefined') {\n      globalThis.sceneManager = this;\n    }\n  }\n  /**\n   * クリックイベントの設定\n   */\n  setupClickEvents() {\n    // enableMouseInteractionが明示的にtrueの場合のみマウス操作を有効化\n    if (this.config.enableMouseInteraction === true && this.renderer) {\n      this.setupObjectDragging();\n      console.log('🖱️ Mouse interaction enabled - Click to select, Shift+drag to move objects');\n    } else if (this.config.enableMouseInteraction === true && !this.renderer) {\n      console.warn('⚠️ Mouse interaction requested but renderer not provided. Mouse interaction disabled.');\n    } else {\n      console.log('🖱️ Mouse interaction disabled (safe mode). Set enableMouseInteraction: true to enable.');\n    }\n  }\n\n  // デバッグ情報表示メソッド\n  debugSceneInfo() {\n    console.log('🔍 === SCENE DEBUG INFO ===');\n    \n    // カメラ情報\n    if (this.camera) {\n      console.log(`📷 Camera:\n        - Position: (${this.camera.position.x.toFixed(2)}, ${this.camera.position.y.toFixed(2)}, ${this.camera.position.z.toFixed(2)})\n        - Rotation: (${(this.camera.rotation.x * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.y * 180 / Math.PI).toFixed(1)}°, ${(this.camera.rotation.z * 180 / Math.PI).toFixed(1)}°)\n        - FOV: ${this.camera.fov || 'N/A'}\n        - Near/Far: ${this.camera.near || 'N/A'}/${this.camera.far || 'N/A'}`);\n    }\n    \n    // シーン階層\n    console.log(`🌳 Scene hierarchy:\n      - Total objects in scene: ${this.scene.children.length}\n      - experimentGroup exists: ${this.scene.getObjectByName('LiveExperiments') ? 'Yes' : 'No'}\n      - experimentGroup children: ${this.experimentGroup.children.length}`);\n    \n    // 生成されたオブジェクト\n    console.log(`📦 Spawned objects: ${this.spawnedObjects.size}`);\n    this.spawnedObjects.forEach((obj, id) => {\n      const worldPos = new THREE.Vector3();\n      obj.getWorldPosition(worldPos);\n      console.log(`  - ${id} (${obj.userData.type}): \n        Local: (${obj.position.x.toFixed(2)}, ${obj.position.y.toFixed(2)}, ${obj.position.z.toFixed(2)})\n        World: (${worldPos.x.toFixed(2)}, ${worldPos.y.toFixed(2)}, ${worldPos.z.toFixed(2)})\n        Visible: ${obj.visible}, Scale: ${obj.scale.x.toFixed(2)}`);\n      \n      // 3Dモデルの詳細情報\n      if (obj.userData.type === 'generated_3d_model') {\n        const box = new THREE.Box3().setFromObject(obj);\n        const size = box.getSize(new THREE.Vector3());\n        const center = box.getCenter(new THREE.Vector3());\n        console.log(`    📐 Bounding box - Center: (${center.x.toFixed(2)}, ${center.y.toFixed(2)}, ${center.z.toFixed(2)}), Size: (${size.x.toFixed(2)}, ${size.y.toFixed(2)}, ${size.z.toFixed(2)})`);\n        \n        // メッシュ数\n        let meshCount = 0;\n        obj.traverse((child) => {\n          if (child.isMesh) meshCount++;\n        });\n        console.log(`    🎭 Meshes: ${meshCount}`);\n      }\n    });\n    \n    // カメラからの距離計算\n    if (this.camera && this.spawnedObjects.size > 0) {\n      console.log(`📏 Distances from camera:`);\n      this.spawnedObjects.forEach((obj, id) => {\n        const distance = this.camera.position.distanceTo(obj.position);\n        console.log(`  - ${id}: ${distance.toFixed(2)} units`);\n      });\n    }\n    \n    console.log('=========================');\n  }\n  \n\n  \n  /**\n   * オブジェクト選択\n   */\n  selectObject(object) {\n    // 既に同じオブジェクトが選択されている場合は何もしない\n    if (this.selectedObject === object) {\n      return;\n    }\n\n    // 前の選択を解除\n    this.deselectObject();\n\n    this.selectedObject = object;\n\n    this.createModernSelectionIndicator(object);\n\n    console.log(`✅ Selected object: ${object.name}`);\n    \n    // CommandUIに選択情報を表示\n    if (this.commandUI) {\n      const objectInfo = object.userData || {};\n      this.commandUI.addOutput(`📍 選択: ${object.name}`, 'info');\n      if (objectInfo.prompt) {\n        this.commandUI.addOutput(`   プロンプト: ${objectInfo.prompt}`, 'hint');\n      }\n      if (objectInfo.modelName) {\n        this.commandUI.addOutput(`   モデル: ${objectInfo.modelName}`, 'hint');\n      }\n\n      // 削除モードが待機中の場合、削除コマンドを自動入力\n      if (this.commandUI.currentMode === 'delete') {\n        const objectName = objectInfo.originalPrompt || object.name || '選択したオブジェクト';\n        this.commandUI.input.value = `${objectName}を削除`;\n        this.commandUI.input.focus();\n        // カーソルを文末に移動（選択状態を解除）\n        this.commandUI.input.setSelectionRange(this.commandUI.input.value.length, this.commandUI.input.value.length);\n        this.commandUI.addOutput(`🎯 削除対象設定: ${objectName}`, 'system');\n      }\n    }\n  }\n\n  createModernSelectionIndicator(object) {\n    // シンプルで確実な選択インジケーター\n    // 既存のインジケーターを削除（重複防止）\n    const existingIndicator = object.getObjectByName('selectionIndicator');\n    if (existingIndicator) {\n      object.remove(existingIndicator);\n    }\n\n    const indicatorGroup = new THREE.Group();\n    indicatorGroup.name = 'selectionIndicator';\n\n    // オブジェクトのバウンディングボックスを正確に取得\n    const box = new THREE.Box3().setFromObject(object);\n    const size = box.getSize(new THREE.Vector3());\n    const center = box.getCenter(new THREE.Vector3());\n\n    // 小さなマージンを追加して枠が見えやすくする\n    const margin = 0.1;\n    const adjustedSize = new THREE.Vector3(\n      size.x + margin,\n      size.y + margin, \n      size.z + margin\n    );\n\n    // シンプルな黄色い枠線\n    // PlaneGeometryの場合は平面的な枠を作成\n    if (object.geometry && object.geometry.type === 'PlaneGeometry') {\n      // スケールは既にオブジェクトに適用されているので、ジオメトリのサイズのみ使用\n      const width = object.geometry.parameters.width;\n      const height = object.geometry.parameters.height;\n      \n      // 平面の周りに枠線を作成\n      const shape = new THREE.Shape();\n      shape.moveTo(-width/2, -height/2);\n      shape.lineTo(width/2, -height/2);\n      shape.lineTo(width/2, height/2);\n      shape.lineTo(-width/2, height/2);\n      shape.lineTo(-width/2, -height/2);\n      \n      const points = shape.getPoints();\n      const geometryLine = new THREE.BufferGeometry().setFromPoints(points);\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const materialLine = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const line = new THREE.Line(geometryLine, materialLine);\n      line.position.set(0, 0, 0.01); // 少し前に出して見えるようにする\n      indicatorGroup.add(line);\n    } else {\n      // その他のオブジェクトは通常の3Dボックス枠\n      const edgesGeometry = new THREE.EdgesGeometry(\n        new THREE.BoxGeometry(adjustedSize.x, adjustedSize.y, adjustedSize.z)\n      );\n      // 2025年トレンド: アダプティブ選択インジケーター\n      const adaptiveColor = this.getAdaptiveSelectionColor();\n      const edgesMaterial = new THREE.LineBasicMaterial({\n        color: adaptiveColor,\n        linewidth: 2,\n        transparent: true,\n        opacity: 0.9\n      });\n      \n      const edges = new THREE.LineSegments(edgesGeometry, edgesMaterial);\n      edges.position.copy(center);\n      indicatorGroup.add(edges);\n    }\n\n    // インジケーターをオブジェクトの子として追加（オブジェクトと一緒に動く）\n    object.add(indicatorGroup);\n    indicatorGroup.position.set(0, 0, 0); // 親からの相対位置は0\n\n    // リサイズハンドルを追加（親オブジェクトを直接渡す）\n    this.addResizeHandles(indicatorGroup, adjustedSize, center, object);\n  }\n\n  /**\n   * リサイズハンドルを追加\n   */\n  addResizeHandles(indicatorGroup, size, center, parentObject) {\n    // PlaneGeometryオブジェクト用のリサイズハンドル\n    console.log('🔧 addResizeHandles called');\n\n    if (!parentObject) {\n      console.log('❌ No parent object provided');\n      return;\n    }\n\n    if (!parentObject.geometry) {\n      console.log('❌ Parent has no geometry');\n      return;\n    }\n\n    if (parentObject.geometry.type !== 'PlaneGeometry') {\n      console.log(`❌ Geometry type is ${parentObject.geometry.type}, not PlaneGeometry`);\n      return;\n    }\n\n    console.log('✅ PlaneGeometry detected, creating handles');\n\n    const handleSize = 0.15; // 2025年トレンド: より小さく洗練された\n    const handleGeometry = new THREE.BoxGeometry(handleSize, handleSize, handleSize);\n    // 角を丸くするため、後でroundedBoxを使用\n\n    // 常に前面に表示されるマテリアル\n    // 2025年トレンド: アダプティブリサイズハンドル\n    const adaptiveColor = this.getAdaptiveSelectionColor();\n    const handleMaterial = new THREE.MeshBasicMaterial({\n      color: adaptiveColor,\n      transparent: true,\n      opacity: 0.8,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    const handleHoverMaterial = new THREE.MeshBasicMaterial({\n      color: this.getAdaptiveHoverColor(),\n      transparent: true,\n      opacity: 1.0,\n      depthTest: false,\n      depthWrite: false\n    });\n\n    // 四隅の位置を計算（親オブジェクトのジオメトリサイズに基づく）\n    const width = parentObject.geometry.parameters.width;\n    const height = parentObject.geometry.parameters.height;\n\n    const positions = [\n      { x: width/2, y: height/2, z: 0.1, corner: 'top-right' },\n      { x: -width/2, y: height/2, z: 0.1, corner: 'top-left' },\n      { x: width/2, y: -height/2, z: 0.1, corner: 'bottom-right' },\n      { x: -width/2, y: -height/2, z: 0.1, corner: 'bottom-left' }\n    ];\n\n    positions.forEach((pos, index) => {\n      const handle = new THREE.Mesh(handleGeometry, handleMaterial.clone());\n      handle.position.set(pos.x, pos.y, pos.z); // 親からの相対位置\n      handle.userData = { \n        isResizeHandle: true, \n        handleIndex: index,\n        corner: pos.corner,\n        defaultMaterial: handle.material,\n        hoverMaterial: handleHoverMaterial.clone()\n      };\n      \n      // ホバーエフェクトを追加\n      // レンダリング順序を高く設定（常に前面）\n      handle.renderOrder = 1001;\n\n      handle.onHover = () => {\n        handle.material = handle.userData.hoverMaterial;\n        handle.scale.setScalar(1.5);\n        document.body.style.cursor = 'nw-resize';\n      };\n\n      handle.onHoverExit = () => {\n        handle.material = handle.userData.defaultMaterial;\n        handle.scale.setScalar(1.0);\n        document.body.style.cursor = 'default';\n      };\n\n      indicatorGroup.add(handle);\n\n      // デバッグ用にハンドルが見えることを確認\n      console.log(`🔴 Added resize handle at ${pos.corner}`);\n    });\n  }\n\n  /**\n   * 選択インジケーターのスケールをリアルタイム更新（パフォーマンス最適化版）\n   */\n  updateSelectionIndicatorScale(object) {\n    // リサイズ中はインジケーターの更新をスキップ（パフォーマンス最適化）\n    // 枠線はオブジェクトと一緒にスケールされるので、特別な更新は不要\n\n    // ハンドル位置のみ更新が必要な場合は、ここで処理\n    // 現在は自動的にオブジェクトと一緒にスケールされるので処理不要\n  }\n\n  /**\n   * オブジェクト選択解除\n   */\n  deselectObject() {\n    // シンプルで確実な選択解除\n    if (this.selectedObject) {\n      // 選択インジケーターを削除（オブジェクトの子から探す）\n      const indicator = this.selectedObject.getObjectByName('selectionIndicator');\n      if (indicator) {\n        this.selectedObject.remove(indicator);\n        \n        // メモリリークを防ぐためにリソースを破棄\n        indicator.traverse((child) => {\n          if (child.geometry) child.geometry.dispose();\n          if (child.material) {\n            if (Array.isArray(child.material)) {\n              child.material.forEach(material => material.dispose());\n            } else {\n              child.material.dispose();\n            }\n          }\n        });\n      }\n\n      console.log(`✅ Deselected: ${this.selectedObject.name}`);\n      this.selectedObject = null;\n    }\n  }\n\n  /**\n   * マウスドラッグによるオブジェクト移動機能\n   */\n  setupObjectDragging() {\n    if (!this.renderer) return;\n    \n    const canvas = this.renderer.domElement;\n    let isDragging = false;\n    let dragObject = null;\n    let dragOffset = new THREE.Vector3();\n    let mouseStart = new THREE.Vector2();\n    let dragMode = 'move'; // 'move', 'resize', 'rotate'\n    let originalScale = new THREE.Vector3();\n    \n    canvas.addEventListener('mousedown', (event) => {\n      if (event.button !== 0) return; // 左クリックのみ\n      \n      // レイキャスティングでオブジェクト検出\n      const rect = canvas.getBoundingClientRect();\n      this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(this.mouse, this.camera);\n      // オブジェクトとその子（選択インジケーター含む）を検出対象に\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const object = intersects[0].object;\n\n        // リサイズハンドルがクリックされた場合 - Shiftキー不要\n        if (object.userData && object.userData.isResizeHandle) {\n          // リサイズモード開始\n          isDragging = true;\n          dragObject = this.selectedObject; // リサイズする実際のオブジェクト\n          dragMode = 'resize';\n          \n          // ハンドル情報を保存\n          this.resizeHandleInfo = {\n            corner: object.userData.corner,\n            handleIndex: object.userData.handleIndex\n          };\n          \n          originalScale.copy(dragObject.scale);\n          mouseStart.set(event.clientX, event.clientY);\n          canvas.style.cursor = 'nw-resize';\n          console.log(`🔄 Started resizing: ${dragObject.name} from ${object.userData.corner}`);\n          return;\n        }\n\n        // 回転ハンドルがクリックされた場合\n        if (object.userData && object.userData.isRotateHandle) {\n          // 回転モード開始（今後実装）\n          console.log(`🔄 Rotation handle clicked for: ${this.selectedObject.name}`);\n          return;\n        }\n\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video' || object.userData.type === 'generated_3d_model' || object.userData.source === 'imported_file')) {\n          \n          // 🗑️ Deleteモードでのクリック処理\n          if (this.commandUI && this.commandUI.currentMode === 'delete') {\n            // 削除確認ダイアログを表示して直接削除\n            const objectName = object.name;\n            console.log(`🗑️ Delete mode: clicked on ${objectName}`);\n            \n            this.commandUI.showDeleteConfirmation(`オブジェクト「${objectName}」を削除`)\n              .then(confirmed => {\n                if (confirmed) {\n                  this.removeObject(objectName);\n                  this.commandUI.addOutput(`🗑️ 削除完了: ${objectName}`, 'success');\n                } else {\n                  this.commandUI.addOutput(`❌ 削除キャンセル: ${objectName}`, 'info');\n                }\n              })\n              .catch(error => {\n                console.error('Delete confirmation error:', error);\n                this.commandUI.addOutput(`❌ 削除エラー: ${objectName}`, 'error');\n              });\n            return; // 削除モードの場合は移動処理をスキップ\n          }\n          \n          // 移動モード開始（Shiftキー不要）\n          isDragging = true;\n          dragObject = object;\n          dragMode = 'move';\n          dragOffset.copy(intersects[0].point).sub(object.position);\n          mouseStart.set(event.clientX, event.clientY);\n\n          // 高品質な視覚フィードバック\n          if (object.material) {\n            // 移動中の透明度変更（オプション）\n            // object.material.opacity = 0.8;\n            // object.material.transparent = true;\n          }\n          // スケール変更を削除（大きくなる原因）\n\n          canvas.style.cursor = 'move';\n          console.log(`🔄 Started moving: ${object.name} (Shift-free interaction)`);\n\n          // 選択状態も更新\n          this.selectObject(object);\n        } else {\n          // 通常クリック: 選択のみ\n          this.selectObject(object);\n        }\n      } else {\n        this.deselectObject();\n      }\n    });\n    \n    canvas.addEventListener('mousemove', (event) => {\n      // ドラッグ中でない場合はホバーエフェクトを処理\n      if (!isDragging) {\n        this.handleHoverEffects(event, canvas);\n        return;\n      }\n      \n      // ドラッグ中の処理\n      if (!dragObject) return;\n      \n      // マウスの移動量を計算\n      const deltaX = event.clientX - mouseStart.x;\n      const deltaY = event.clientY - mouseStart.y;\n\n      if (dragMode === 'resize') {\n        // リサイズモード: より直感的な方向計算\n        if (!this.resizeHandleInfo) {\n          console.error('❌ Resize handle info missing');\n          return;\n        }\n        \n        const corner = this.resizeHandleInfo.corner;\n        let scaleMultiplier = 1;\n        \n        // 各ハンドルの位置に応じた直感的な方向計算\n        switch(corner) {\n          case 'top-right': \n            // 右上ハンドル: 右上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'top-left':\n            // 左上ハンドル: 左上方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY < 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-right':\n            // 右下ハンドル: 右下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX > 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          case 'bottom-left':\n            // 左下ハンドル: 左下方向に引っ張ると拡大\n            scaleMultiplier = (deltaX < 0 && deltaY > 0) ? 1 + (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001 : 1 - (Math.abs(deltaX) + Math.abs(deltaY)) * 0.001;\n            break;\n          default:\n            scaleMultiplier = 1 + (deltaX + deltaY) * 0.001; // フォールバック\n        }\n        \n        const newScale = Math.max(0.1, Math.min(5.0, originalScale.x * scaleMultiplier));\n        dragObject.scale.setScalar(newScale);\n\n        // 選択インジケーターも更新（パフォーマンス最適化）\n        this.updateSelectionIndicatorScale(dragObject);\n\n      } else if (dragMode === 'move') {\n        // 移動モード（シンプルで直感的な平面移動）\n        const moveScale = 0.01;\n\n        // 直感的な移動：右にドラッグ→右に移動、上にドラッグ→上に移動\n        dragObject.position.x += deltaX * moveScale;\n        dragObject.position.y -= deltaY * moveScale; // Y軸は画面上下と逆なので反転\n\n        mouseStart.set(event.clientX, event.clientY);\n      }\n    });\n    \n    canvas.addEventListener('mouseup', () => {\n      if (isDragging && dragObject) {\n        // ドラッグ終了の処理\n        if (dragObject.material) {\n          dragObject.material.opacity = 1.0;\n          dragObject.material.transparent = false;\n        }\n\n        // スケールを元に戻す（移動開始時に変更した場合）\n        // 現在は移動開始時のスケール変更を削除したので、この処理は不要\n\n        console.log(`✅ Finished dragging: ${dragObject.name} to (${dragObject.position.x.toFixed(1)}, ${dragObject.position.y.toFixed(1)}, ${dragObject.position.z.toFixed(1)})`);\n\n        isDragging = false;\n        dragObject = null;\n        dragMode = 'move'; // リセット\n        this.resizeHandleInfo = null; // リサイズハンドル情報をクリーンアップ\n        canvas.style.cursor = 'default';\n      }\n    });\n    \n    // Shift+ホイールでリサイズ機能を追加\n    canvas.addEventListener('wheel', (event) => {\n      event.preventDefault();\n      \n      const rect = canvas.getBoundingClientRect();\n      const mouse = new THREE.Vector2();\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      \n      this.raycaster.setFromCamera(mouse, this.camera);\n      const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n      \n      if (intersects.length > 0) {\n        const obj = intersects[0].object;\n        // 生成された画像・動画・3Dモデル対象（Shift不要の直感的操作）\n        if (obj.userData && (obj.userData.type === 'generated_image' || obj.userData.type === 'generated_video' || obj.userData.type === 'generated_3d_model')) {\n          const scaleFactor = event.deltaY > 0 ? 0.9 : 1.1;\n          const newScale = obj.scale.x * scaleFactor;\n          \n          // 最小・最大サイズ制限\n          if (newScale >= 0.2 && newScale <= 5.0) {\n            obj.scale.setScalar(newScale);\n            \n            // 高品質な視覚フィードバック\n            if (obj.material) {\n              obj.material.emissive.setHex(0x333333);\n              setTimeout(() => {\n                if (obj.material) {\n                  obj.material.emissive.setHex(0x000000);\n                }\n              }, 150);\n            }\n            \n            console.log(`🔄 Resized ${obj.userData.type}: ${obj.name} to scale ${newScale.toFixed(2)} (Shift-free interaction)`);\n          }\n        }\n      }\n    });\n\n    // 選択したオブジェクトの角度調整キーボードコントロール\n    document.addEventListener('keydown', (event) => {\n      const activeEl = document.activeElement;\n      if (activeEl && (activeEl.tagName === 'INPUT' || activeEl.tagName === 'TEXTAREA' || activeEl.isContentEditable)) {\n        return;\n      }\n      if (!this.selectedObject) return;\n      \n      const object = this.selectedObject;\n      // 生成された画像・動画のみ角度調整可能\n      if (!object.userData || (object.userData.type !== 'generated_image' && object.userData.type !== 'generated_video')) {\n        return;\n      }\n      \n      const rotationStep = Math.PI / 36; // 5度ずつ回転\n      let rotated = false;\n      \n      switch (event.key) {\n        case 'ArrowLeft':\n          object.rotation.y -= rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowRight':\n          object.rotation.y += rotationStep;\n          rotated = true;\n          break;\n        case 'ArrowUp':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationX = object.rotation.x - rotationStep;\n          if (newRotationX >= -Math.PI/6 && newRotationX <= Math.PI/6) {\n            object.rotation.x = newRotationX;\n            rotated = true;\n          }\n          break;\n        case 'ArrowDown':\n          // X軸回転は制限（-30度から+30度まで）\n          const newRotationXDown = object.rotation.x + rotationStep;\n          if (newRotationXDown >= -Math.PI/6 && newRotationXDown <= Math.PI/6) {\n            object.rotation.x = newRotationXDown;\n            rotated = true;\n          }\n          break;\n        case 'r':\n        case 'R':\n          // リセット：正面向きに戻す\n          object.rotation.x = 0;\n          // カメラの視線方向（ユーザーがモニターで見ている方向）に向ける\n          const cameraDirection = new THREE.Vector3();\n          this.camera.getWorldDirection(cameraDirection);\n          const targetPoint = object.position.clone().add(cameraDirection.multiplyScalar(-1));\n          object.lookAt(targetPoint);\n          object.rotation.x = 0; // お辞儀防止\n          rotated = true;\n          console.log(`🔄 Reset rotation for: ${object.name}`);\n          break;\n\n        case 'i':\n        case 'I':\n          // デバッグ情報表示\n          this.debugSceneInfo();\n          event.preventDefault();\n          break;\n      }\n      \n      if (rotated) {\n        event.preventDefault();\n        const angles = {\n          x: (object.rotation.x * 180 / Math.PI).toFixed(1),\n          y: (object.rotation.y * 180 / Math.PI).toFixed(1),\n          z: (object.rotation.z * 180 / Math.PI).toFixed(1)\n        };\n        console.log(`🔄 Rotated ${object.userData.type}: ${object.name} to (${angles.x}°, ${angles.y}°, ${angles.z}°)`);\n      }\n    });\n\n    console.log('🖱️ Object dragging system enabled (Drag to move objects - Shift-free interaction)');\n    console.log('🔄 Object resizing system enabled (Scroll to resize images/videos - Shift-free interaction)');\n    console.log('🎯 Angle adjustment enabled (Select object + Arrow keys to rotate, R to reset)');\n  }\n\n  handleHoverEffects(event, canvas) {\n    // レイキャスティングでオブジェクト検出\n    const rect = canvas.getBoundingClientRect();\n    this.mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    this.mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n    \n    this.raycaster.setFromCamera(this.mouse, this.camera);\n\n    // オブジェクトとその子（選択インジケーター含む）を検出対象に\n    const intersects = this.raycaster.intersectObjects(this.experimentGroup.children, true);\n    \n    // 前回ホバーしていたオブジェクトのエフェクトをリセット\n    if (this.lastHoveredObject && this.lastHoveredObject.onHoverExit) {\n      this.lastHoveredObject.onHoverExit();\n      this.lastHoveredObject = null;\n    }\n    \n    // 新しいホバー対象を検出\n    if (intersects.length > 0) {\n      const object = intersects[0].object;\n      \n      // リサイズハンドルにホバーした場合\n      if (object.userData && object.userData.isResizeHandle && object.onHover) {\n        object.onHover();\n        this.lastHoveredObject = object;\n        return;\n      }\n      \n      // 通常のオブジェクトにホバーした場合\n      if (object.userData && (object.userData.type === 'generated_image' || object.userData.type === 'generated_video')) {\n        // 移動可能なオブジェクトの場合はカーソルを変更\n        canvas.style.cursor = 'move';\n\n        this.lastHoveredObject = { onHoverExit: () => { canvas.style.cursor = 'default'; } };\n        return;\n      }\n    }\n    \n    // ホバー対象がない場合はデフォルトカーソル\n    canvas.style.cursor = 'default';\n  }\n\n  /**\n   * メインコマンド実行エントリーポイント\n   * @param {string} command - 自然言語コマンド\n   */\n  async executeCommand(command) {\n    const timestamp = Date.now();\n    console.log(`🎯 Executing: \"${command}\"`);\n    \n    try {\n      // コマンド解析\n      const parsed = this.parseCommand(command);\n      console.log('📝 Parsed:', parsed);\n      \n      // コマンド実行\n      const result = await this.dispatchCommand(parsed);\n      \n      // 履歴に記録\n      this.commandHistory.push({\n        timestamp,\n        command,\n        parsed,\n        result,\n        status: 'success'\n      });\n      \n      return result;\n      \n    } catch (error) {\n      console.error('❌ Command execution failed:', error);\n      \n      this.commandHistory.push({\n        timestamp,\n        command,\n        error: error.message,\n        status: 'error'\n      });\n      \n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語コマンド解析\n   * @param {string} command \n   * @returns {object} 解析結果\n   */\n  parseCommand(command) {\n    // プレフィックスでモードを判定\n    if (command.startsWith('[変更] ')) {\n      const actualCommand = command.replace('[変更] ', '');\n      return this.parseObjectModificationCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    if (command.startsWith('[削除] ')) {\n      const actualCommand = command.replace('[削除] ', '');\n      return this.parseDeleteCommand(actualCommand.toLowerCase().trim());\n    }\n    \n    // 動画生成の判定（プレフィックスなし = 生成モード）\n    const cmd = command.toLowerCase().trim();\n    \n    // 自然言語オブジェクト操作の判定（「オブジェクト名 + 動作」パターン）\n    const naturalLanguagePattern = this.parseNaturalLanguageCommand(cmd);\n    if (naturalLanguagePattern) {\n      return naturalLanguagePattern;\n    }\n    \n    // 動画関連キーワードをチェック（文脈を考慮）\n    const videoKeywords = ['動画', 'ビデオ', 'ムービー', '映像', '動く',\n                          'video', 'movie', 'motion', 'moving', 'clip'];\n\n    // アニメーションは文脈で判定\n    const isAnimationForVideo = cmd.includes('アニメーション') &&\n      (cmd.includes('作って') || cmd.includes('生成') || cmd.includes('を') ||\n       cmd.includes('create') || cmd.includes('make') || cmd.includes('generate'));\n\n    const isVideoRequest = videoKeywords.some(keyword => cmd.includes(keyword)) ||\n      (cmd.includes('animate') && !cmd.includes('を')) || // \"animate a cat\"は動画、\"猫をanimate\"は操作\n      isAnimationForVideo;\n    \n    if (isVideoRequest) {\n      return {\n        type: 'video_generation',\n        prompt: command,\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // オブジェクト選択関連キーワードをチェック\n    const selectKeywords = ['選択', 'select', 'オブジェクト選択', '既存', 'existing'];\n    const isSelectRequest = selectKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isSelectRequest) {\n      return {\n        type: 'object_selection',\n        position: this.parsePosition(cmd)\n      };\n    }\n    \n    // ファイルインポート関連キーワードをチェック\n    const importKeywords = ['インポート', 'import', '読み込', '読込', 'ファイル', 'file', '画像を選択', '動画を選択', '選択して配置'];\n    const isImportRequest = importKeywords.some(keyword => cmd.includes(keyword));\n    \n    if (isImportRequest) {\n      const isVideoImport = cmd.includes('動画') || cmd.includes('video') || cmd.includes('mp4');\n      return {\n        type: 'file_import',\n        fileType: isVideoImport ? 'video' : 'image',\n        position: this.parsePosition(cmd),\n        size: this.parseSize(cmd)\n      };\n    }\n    \n    // 画像生成キーワードをチェック\n    const imageKeywords = ['画像', '写真', 'イメージ', '絵', 'ピクチャー', \n                          'image', 'picture', 'photo', 'generate', 'create', 'make', 'draw'];\n    const isImageRequest = imageKeywords.some(keyword => cmd.includes(keyword));\n    \n    // デフォルト: 画像生成として処理\n    return {\n      type: 'image_generation',\n      prompt: command,\n      position: this.parsePosition(cmd),\n      size: this.parseSize(cmd)\n    };\n  }\n\n  /**\n   * コマンドから対象オブジェクトを特定\n   */\n  /**\n   * オブジェクト識別用キーワード辞書を取得\n   */\n  getObjectKeywords() {\n    return createObjectKeywords();\n  }\n\n  normalizeTargetPhrase(phrase) {\n    if (!phrase) {\n      return '';\n    }\n\n    let result = `${phrase}`.trim();\n\n    result = result.replace(/[。、，,.!?！？]/g, ' ').trim();\n\n    const referentialPattern = /^(さっき|先ほど|直前|最近|この前|その|あの|この|前回|前の|最新|最後|last|latest)\\s*(の)?/i;\n    while (referentialPattern.test(result)) {\n      result = result.replace(referentialPattern, '').trim();\n    }\n\n    const politePattern = /(してください|して下さい|してね|してよ|してくれ|してくれませんか|してくださいね|してくださいよ|お願いします?|お願い|頼む)$/i;\n    result = result.replace(politePattern, '').trim();\n\n    const trailingPatterns = [\n      /(を)?(左右反転|反転|削除|消して|消す|変更|変えて|塗り替えて|塗って|回転|回して|移動|動かして|拡大|縮小|大きく|小さく|並べ|寄せて|整列|選択|選んで|指定|生成|作って|描いて|アップロード|アップして|読み込んで|読み込んだ|開いて|閉じて|置いて|配置して|貼り付けて|flip|delete|remove|change|make|turn|rotate|move|scale|resize|generate|create).*$/i,\n      /(を|に|へ|で|から|まで|と|や|って)$/i\n    ];\n\n    for (const pattern of trailingPatterns) {\n      result = result.replace(pattern, '').trim();\n    }\n\n    result = result.replace(/(を|に|へ|で|から|まで|と|や|って)$/i, '').trim();\n\n    if (!result) {\n      const englishLeadingPattern = /^(flip|delete|remove|change|make|turn|rotate|move|scale|resize|generate|create)\\s+/i;\n      if (englishLeadingPattern.test(phrase.trim())) {\n        result = phrase.trim().replace(englishLeadingPattern, '').trim();\n      }\n    }\n\n    result = result.replace(/(を|に|へ|で|から|まで|と|や|って)$/i, '').trim();\n\n    return result;\n  }\n\n  isReferentialCommand(command) {\n    if (!command) {\n      return false;\n    }\n    return /(さっき|先ほど|直前|最近|前回|前の|最後|最新|last|previous|before)/i.test(command);\n  }\n\n  getObjectSourceType(object) {\n    if (!object || !object.userData) {\n      return null;\n    }\n    return object.userData.source || object.userData.type || null;\n  }\n\n  getRecentObjects(command) {\n    const objects = Array.from(this.spawnedObjects.values());\n    if (objects.length === 0) {\n      return [];\n    }\n\n    const importContext = /(インポート|取り込|アップロード|読み込)/.test(command);\n    const generatedContext = /(生成|作っ|描い|create|generate)/.test(command);\n\n    let candidates = objects;\n    if (importContext) {\n      candidates = candidates.filter(obj => this.getObjectSourceType(obj) === 'imported_file');\n    } else if (generatedContext) {\n      candidates = candidates.filter(obj => {\n        const source = this.getObjectSourceType(obj);\n        return source === 'generated_image' || source === 'generated_video';\n      });\n    }\n\n    if (candidates.length === 0) {\n      candidates = objects;\n    }\n\n    return candidates.sort((a, b) => {\n      const aTime = a.userData?.lastModified || a.userData?.createdAt || 0;\n      const bTime = b.userData?.lastModified || b.userData?.createdAt || 0;\n      return bTime - aTime;\n    });\n  }\n\n  findRecentObjectByContext(command, normalizedTarget, objectKeywords) {\n    const candidates = this.getRecentObjects(command);\n    if (candidates.length === 0) {\n      return null;\n    }\n\n    if (normalizedTarget) {\n      for (const candidate of candidates) {\n        if (this.matchesObjectName(candidate, normalizedTarget, objectKeywords)) {\n          return candidate;\n        }\n      }\n    }\n\n    return candidates[0];\n  }\n\n  extractTextTokens(text) {\n    if (!text) {\n      return [];\n    }\n\n    return text\n      .replace(/[。、，,.!?！？]/g, ' ')\n      .split(/[\\s_/\\-]+/)\n      .map(token => token.trim())\n      .filter(token => token.length > 1);\n  }\n\n  buildObjectKeywordHints({ prompt = '', fileName = '', baseType = null } = {}) {\n    const keywords = new Set();\n\n    if (prompt) {\n      keywords.add(prompt.toLowerCase());\n      for (const token of this.extractTextTokens(prompt)) {\n        keywords.add(token.toLowerCase());\n      }\n    }\n\n    if (fileName) {\n      const baseName = fileName.replace(/\\.[^/.]+$/, '');\n      keywords.add(baseName.toLowerCase());\n      for (const token of this.extractTextTokens(baseName)) {\n        keywords.add(token.toLowerCase());\n      }\n    }\n\n    if (baseType === 'image') {\n      ['image', 'photo', 'picture', '画像', '写真', 'イメージ'].forEach(keyword => keywords.add(keyword));\n    } else if (baseType === 'video') {\n      ['video', 'movie', 'clip', '動画', 'ビデオ', 'ムービー', '映像'].forEach(keyword => keywords.add(keyword));\n    }\n\n    return Array.from(keywords).filter(Boolean);\n  }\n\n  findObjectByKeyword(command) {\n    // 共通翻訳辞書から拡張されたキーワード辞書を使用\n    const objectKeywords = this.getObjectKeywords();\n    const normalizedCommand = this.normalizeTargetPhrase(command);\n\n    // インポート順序での指定を解析（例: \"2番目にインポートした猫\", \"最初にインポートしたユニコーン\"）\n    const importOrderMatch = command.match(/((\\d+)番目|最初|初回|1番目)に(インポート|取り込)した(.+)/);\n    if (importOrderMatch) {\n      let orderNumber = 1; // デフォルトは1番目\n      if (importOrderMatch[2]) {\n        // 数字が指定されている場合\n        orderNumber = parseInt(importOrderMatch[2]);\n      } else if (importOrderMatch[1] === '最初' || importOrderMatch[1] === '初回') {\n        orderNumber = 1;\n      } else if (importOrderMatch[1] === '1番目') {\n        orderNumber = 1;\n      }\n      const objectName = this.normalizeTargetPhrase(importOrderMatch[4]) || importOrderMatch[4].trim();\n      return this.findImportedObjectByOrder(objectName, orderNumber, objectKeywords);\n    }\n\n    // インポート vs 生成の区別（例: \"インポートした猫\", \"生成した犬\", \"作った画像\"）\n    const sourceMatch = command.match(/(インポート|取り込|アップロード|読み込|生成|作った)した?(.+)/);\n    if (sourceMatch) {\n      const sourceType = sourceMatch[1];\n      const objectName = this.normalizeTargetPhrase(sourceMatch[2]) || sourceMatch[2].trim();\n      const isImported = sourceType === 'インポート' || sourceType === '取り込';\n      return this.findObjectBySourceAndName(objectName, isImported, objectKeywords);\n    }\n\n    if (this.isReferentialCommand(command)) {\n      const recentObject = this.findRecentObjectByContext(command, normalizedCommand, objectKeywords);\n      if (recentObject) {\n        return recentObject;\n      }\n    }\n\n    // 従来のキーワード検索（すべてのオブジェクト対象）\n    return this.findObjectByName(normalizedCommand || command, objectKeywords);\n  }\n\n  /**\n   * インポート順序でオブジェクトを検索\n   */\n  findImportedObjectByOrder(objectName, orderNumber, objectKeywords) {\n    // インポートされたオブジェクトのみを取得してimportOrder順でソート\n    const importedObjects = [];\n    for (const child of this.spawnedObjects.values()) {\n      if (!child.userData || this.getObjectSourceType(child) !== 'imported_file') continue;\n      importedObjects.push(child);\n    }\n\n    // importOrderでソート\n    importedObjects.sort((a, b) => (a.userData.importOrder || 0) - (b.userData.importOrder || 0));\n\n    // オブジェクト名でフィルタリング\n    const matchingObjects = objectName\n      ? importedObjects.filter(child => this.matchesObjectName(child, objectName, objectKeywords))\n      : importedObjects;\n\n    if (matchingObjects.length >= orderNumber) {\n      const foundObject = matchingObjects[orderNumber - 1]; // 1-based index\n      console.log(`🎯 Found ${orderNumber}番目 imported object \"${objectName}\": ${foundObject.name}`);\n      return foundObject;\n    }\n\n    console.warn(`⚠️ ${orderNumber}番目にインポートした\"${objectName}\"が見つかりません`);\n    return null;\n  }\n\n  /**\n   * ソース（インポート/生成）と名前でオブジェクトを検索\n   */\n  findObjectBySourceAndName(objectName, isImported, objectKeywords) {\n    for (const child of this.spawnedObjects.values()) {\n      if (!child.userData) continue;\n\n      const childSource = this.getObjectSourceType(child);\n      const isChildImported = childSource === 'imported_file';\n      const isChildGenerated = childSource === 'generated_image' || childSource === 'generated_video';\n\n      if (isImported && !isChildImported) continue;\n      if (!isImported && !isChildGenerated) continue;\n\n      if (this.matchesObjectName(child, objectName, objectKeywords)) {\n        const sourceLabel = isImported ? 'インポートした' : '生成した';\n        console.log(`🎯 Found ${sourceLabel} object \"${objectName}\": ${child.name}`);\n        return child;\n      }\n    }\n\n    const sourceLabel = isImported ? 'インポートした' : '生成した';\n    console.warn(`⚠️ ${sourceLabel}\"${objectName}\"が見つかりません`);\n    return null;\n  }\n\n  /**\n   * 名前でオブジェクトを検索（従来の方式）\n   */\n  findObjectByName(command, objectKeywords) {\n    const target = command && command.trim();\n    if (!target) {\n      return null;\n    }\n\n    for (const child of this.spawnedObjects.values()) {\n      if (!child) continue;\n      if (this.matchesObjectName(child, target, objectKeywords)) {\n        return child;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * オブジェクトが指定された名前にマッチするかチェック\n   */\n  matchesObjectName(child, objectName, objectKeywords) {\n    if (!child || !objectName) {\n      return false;\n    }\n\n    const targetLower = objectName.toLowerCase();\n\n    if (child.userData && Array.isArray(child.userData.keywords)) {\n      for (const keyword of child.userData.keywords) {\n        if (!keyword) continue;\n        const keywordLower = keyword.toLowerCase();\n        if (targetLower.includes(keywordLower) || keywordLower.includes(targetLower)) {\n          return true;\n        }\n      }\n    }\n\n    for (const [keyword, aliases] of Object.entries(objectKeywords)) {\n      const keywordLower = keyword.toLowerCase();\n      if (targetLower.includes(keywordLower)) {\n        return true;\n      }\n\n      for (const alias of aliases) {\n        const aliasLower = alias.toLowerCase();\n        if (targetLower.includes(aliasLower)) {\n          return true;\n        }\n      }\n    }\n\n    if (child.userData && child.userData.prompt) {\n      const promptLower = child.userData.prompt.toLowerCase();\n      if (promptLower.includes(targetLower) || targetLower.includes(promptLower)) {\n        return true;\n      }\n    }\n\n    if (child.userData && child.userData.fileName) {\n      if (matchKeywordWithFilename(objectName, child.userData.fileName, objectKeywords)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * 画像生成コマンド解析\n   */\n  parseImageGenerationCommand(command) {\n    // プロンプト抽出 (「を」「に」「で」などで区切る)\n    let prompt = command;\n    const particles = ['を', 'に', 'で', 'の'];\n    \n    for (const particle of particles) {\n      if (command.includes(particle)) {\n        const parts = command.split(particle);\n        if (parts[0]) {\n          prompt = parts[0].trim();\n          break;\n        }\n      }\n    }\n    \n    // 不要な語句を除去\n    prompt = prompt\n      .replace(/(画像|作って|生成|して|ください)/g, '')\n      .trim();\n    \n    return {\n      type: 'image_generation',\n      prompt,\n      position: this.parsePosition(command),\n      size: this.parseSize(command)\n    };\n  }\n\n  /**\n   * オブジェクト変更コマンド解析\n   */\n  parseObjectModificationCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 色変更の解析\n    let color = null;\n    const colorMap = {\n      '赤': 0xff0000, '赤色': 0xff0000,\n      '青': 0x0000ff, '青色': 0x0000ff,\n      '緑': 0x00ff00, '緑色': 0x00ff00,\n      '黄': 0xffff00, '黄色': 0xffff00, '黄色い': 0xffff00,\n      '紫': 0xff00ff, '紫色': 0xff00ff,\n      '橙': 0xff8800, '橙色': 0xff8800, 'オレンジ': 0xff8800, 'オレンジ色': 0xff8800,\n      '白': 0xffffff, '白色': 0xffffff,\n      '黒': 0x000000, '黒色': 0x000000,\n      '灰': 0x808080, '灰色': 0x808080, 'グレー': 0x808080, 'グレー色': 0x808080,\n      'ピンク': 0xffc0cb, 'ピンク色': 0xffc0cb,\n      '茶': 0x8b4513, '茶色': 0x8b4513,\n      '銀': 0xc0c0c0, '銀色': 0xc0c0c0,\n      '金': 0xffd700, '金色': 0xffd700\n    };\n    \n    for (const [colorName, colorValue] of Object.entries(colorMap)) {\n      if (cmd.includes(colorName)) {\n        color = colorValue;\n        break;\n      }\n    }\n\n    // エフェクト解析の追加\n    const effects = this.parseEffects(cmd);\n    \n    // サイズ変更の解析\n    let scale = null;\n    if (cmd.includes('大きく') || cmd.includes('拡大')) {\n      scale = 1.5;\n    } else if (cmd.includes('小さく') || cmd.includes('縮小')) {\n      scale = 0.7;\n    } else if (cmd.includes('倍')) {\n      const match = cmd.match(/(\\d+(?:\\.\\d+)?)\\s*倍/);\n      if (match) {\n        scale = parseFloat(match[1]);\n      }\n    }\n    \n    // 移動コマンドの解析\n    let movement = null;\n    if (cmd.includes('移動') || cmd.includes('動か') || cmd.includes('へ')) {\n      movement = this.parsePositionFromPrompt(cmd);\n    }\n\n    // 回転コマンドの解析\n    let rotation = null;\n    if (cmd.includes('回転') || cmd.includes('回す') || cmd.includes('回して') || cmd.includes('rotate')) {\n      // 角度指定があるかチェック\n      const degreeMatch = cmd.match(/(\\d+)\\s*度/);\n      if (degreeMatch) {\n        rotation = parseFloat(degreeMatch[1]) * Math.PI / 180; // 度をラジアンに変換\n      } else {\n        rotation = Math.PI / 4; // デフォルトは45度\n      }\n    }\n\n    // 透明度コマンドの解析\n    let opacity = null;\n    if (cmd.includes('透明') || cmd.includes('transparent')) {\n      if (cmd.includes('半透明')) {\n        opacity = 0.5;\n      } else {\n        opacity = 0.3; // デフォルトの透明度\n      }\n    } else if (cmd.includes('不透明') || cmd.includes('opaque')) {\n      opacity = 1.0;\n    }\n\n    // 反転コマンドの解析\n    let flip = null;\n    if (cmd.includes('左右反転') || cmd.includes('反転') || cmd.includes('ひっくり返') || cmd.includes('flip')) {\n      flip = true;\n    }\n\n    return {\n      type: 'object_modification',\n      command: command,\n      color: color,\n      scale: scale,\n      movement: movement,\n      rotation: rotation,\n      opacity: opacity,\n      flip: flip,\n      effects: effects,\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * エフェクト解析 - Phase 2 総合エフェクトシステム\n   */\n  parseEffects(cmd) {\n    const effects = [];\n\n    // エフェクトキーワード辞書\n    const effectKeywords = {\n      // 透明度系\n      '透明': { type: 'opacity', value: 0.0, name: 'transparent' },\n      '半透明': { type: 'opacity', value: 0.5, name: 'semi_transparent' },\n      '不透明': { type: 'opacity', value: 1.0, name: 'opaque' },\n      '濃く': { type: 'opacity', value: 1.0, name: 'solid' },\n\n      // 発光系\n      '光らせ': { type: 'glow', color: 0xffffff, intensity: 0.5, name: 'glow_white' },\n      '光る': { type: 'glow', color: 0xffffff, intensity: 0.5, name: 'glow_white' },\n      'ネオン': { type: 'glow', color: 0x00ffff, intensity: 0.8, name: 'neon_cyan' },\n      'ホログラム': { type: 'glow', color: 0x00ffff, intensity: 0.6, name: 'hologram' },\n\n      // 材質系\n      'メタリック': { type: 'material', metalness: 0.8, roughness: 0.2, name: 'metallic' },\n      '金属質': { type: 'material', metalness: 0.9, roughness: 0.1, name: 'metallic_shiny' },\n      'ガラス': { type: 'material', metalness: 0.0, roughness: 0.0, name: 'glass' },\n      'マット': { type: 'material', metalness: 0.0, roughness: 1.0, name: 'matte' },\n\n      // アニメーション系\n      'ふわふわ': { type: 'animation', animation: 'float', speed: 0.002, amplitude: 0.5, name: 'float_gentle' },\n      '浮く': { type: 'animation', animation: 'float', speed: 0.003, amplitude: 0.8, name: 'float_strong' },\n      '漂う': { type: 'animation', animation: 'float', speed: 0.001, amplitude: 0.3, name: 'float_slow' },\n\n      'ドクドク': { type: 'animation', animation: 'pulse', speed: 0.003, amplitude: 0.15, name: 'pulse_heartbeat' },\n      '鼓動': { type: 'animation', animation: 'pulse', speed: 0.0025, amplitude: 0.1, name: 'pulse_heart' },\n      '脈動': { type: 'animation', animation: 'pulse', speed: 0.004, amplitude: 0.2, name: 'pulse_throb' },\n\n      'くるくる': { type: 'animation', animation: 'spin', speed: 0.02, axis: 'y', name: 'spin_y' },\n      'スピン': { type: 'animation', animation: 'spin', speed: 0.03, axis: 'y', name: 'spin_fast' },\n      '回る': { type: 'animation', animation: 'spin', speed: 0.015, axis: 'y', name: 'spin_slow' },\n\n      'きらめ': { type: 'animation', animation: 'sparkle', intensity: 0.8, name: 'sparkle' },\n      '輝': { type: 'animation', animation: 'sparkle', intensity: 1.0, name: 'shine' },\n      'キラキラ': { type: 'animation', animation: 'sparkle', intensity: 0.9, name: 'twinkle' },\n\n      // 宇宙的エフェクト\n      '宇宙': { type: 'cosmic', colors: [0x4444ff, 0xff4488, 0x44ffaa], intensity: 0.9, name: 'cosmic' },\n      'オーロラ': { type: 'aurora', colors: [0x00ffaa, 0x4488ff, 0xff88aa], intensity: 0.8, name: 'aurora' },\n      '星雲': { type: 'nebula', colors: [0x8844ff, 0xff8844, 0x44aaff], intensity: 1.0, name: 'nebula' },\n      'エネルギー': { type: 'energy', colors: [0xffaa00, 0x00aaff, 0xaa00ff], intensity: 0.7, name: 'energy' },\n      '神秘的': { type: 'mystic', colors: [0xaa44ff, 0xff44aa, 0x44ffff], intensity: 0.6, name: 'mystic' },\n\n      // アート系エフェクト\n      '水彩': { type: 'watercolor_art', colors: [0xff6b9d, 0x4ecdc4, 0xffe66d, 0x95e1d3], opacity: 0.6, name: 'watercolor' },\n      '水彩画': { type: 'watercolor_art', colors: [0xff6b9d, 0x4ecdc4, 0xffe66d, 0x95e1d3], opacity: 0.6, name: 'watercolor' },\n      'パステル': { type: 'pastel_art', colors: [0xffb3ba, 0xffdfba, 0xffffba, 0xbaffc9, 0xbae1ff], opacity: 0.7, name: 'pastel' },\n      '虹色': { type: 'rainbow_glow', colors: [0xff0000, 0xff8800, 0xffff00, 0x00ff00, 0x0088ff, 0x0000ff, 0x8800ff], intensity: 0.5, name: 'rainbow_glow' }\n    };\n\n    // プリセット効果\n    const presetEffects = {\n      '魔法っぽく': [\n        { type: 'glow', color: 0xcc44ff, intensity: 0.7, name: 'magic_glow' },\n        { type: 'animation', animation: 'pulse', speed: 0.003, amplitude: 0.1, name: 'magic_pulse' },\n        { type: 'animation', animation: 'sparkle', intensity: 0.6, name: 'magic_sparkle' }\n      ],\n      '幽霊': [\n        { type: 'opacity', value: 0.6, name: 'ghost_transparent' },\n        { type: 'animation', animation: 'float', speed: 0.002, amplitude: 0.4, name: 'ghost_float' },\n        { type: 'glow', color: 0xffffff, intensity: 0.3, name: 'ghost_aura' }\n      ],\n      'サイバー': [\n        { type: 'glow', color: 0x00ffaa, intensity: 0.8, name: 'cyber_glow' },\n        { type: 'material', metalness: 0.8, roughness: 0.1, name: 'cyber_metal' },\n        { type: 'animation', animation: 'glitch', intensity: 0.1, name: 'cyber_glitch' }\n      ],\n      '夢みたい': [\n        { type: 'opacity', value: 0.7, name: 'dream_soft' },\n        { type: 'animation', animation: 'float', speed: 0.0015, amplitude: 0.3, name: 'dream_float' },\n        { type: 'animation', animation: 'rainbow', speed: 0.001, name: 'dream_rainbow' }\n      ]\n    };\n\n    // プリセット効果をチェック\n    for (const [presetName, presetEffectList] of Object.entries(presetEffects)) {\n      if (cmd.includes(presetName)) {\n        effects.push(...presetEffectList);\n        console.log(`✨ Preset effect applied: ${presetName}`);\n        continue;\n      }\n    }\n\n    const chromaRequested = this.requiresChromaKey(cmd);\n    const chromaConfig = chromaRequested ? this.detectChromaKeyConfig(cmd) : null;\n    const canApplyChroma = chromaConfig !== null;\n\n    // 個別効果をチェック\n    for (const [keyword, effect] of Object.entries(effectKeywords)) {\n      if (canApplyChroma && keyword === '透明') {\n        continue;\n      }\n      if (cmd.includes(keyword)) {\n        effects.push(effect);\n        console.log(`🎭 Effect detected: ${keyword} -> ${effect.name}`);\n      }\n    }\n\n    if (chromaRequested) {\n      if (canApplyChroma) {\n        effects.push({\n          type: 'chroma_key',\n          color: chromaConfig.color,\n          threshold: chromaConfig.threshold,\n          smoothing: chromaConfig.smoothing,\n          name: 'chroma_key'\n        });\n        console.log(`🪄 Chroma key requested (color: #${chromaConfig.color.toString(16)}, threshold: ${chromaConfig.threshold})`);\n      } else if (this.commandUI) {\n        this.commandUI.showInputFeedback('背景を透過するには背景色を指定してください（例：「背景の白を透過して」）', 'info');\n      }\n    }\n\n    return effects;\n  }\n\n  requiresChromaKey(cmd) {\n    if (!cmd) return false;\n    const chromaKeywords = ['クロマキー', 'グリーンバック', 'remove background', 'transparent background'];\n    if (chromaKeywords.some(keyword => cmd.includes(keyword))) {\n      return true;\n    }\n    const backgroundTerms = ['背景を', '背景の', '背景'];\n    const actionTerms = ['透過', '透明', '消', '抜', 'なくして'];\n    if (backgroundTerms.some(term => cmd.includes(term)) && actionTerms.some(term => cmd.includes(term))) {\n      return true;\n    }\n    return false;\n  }\n\n  detectChromaKeyConfig(cmd) {\n    const color = this.detectChromaKeyColor(cmd);\n    if (color === null) {\n      return null;\n    }\n    let threshold;\n    switch (color) {\n      case 0xffffff:\n        threshold = 0.12;\n        break;\n      case 0x000000:\n        threshold = 0.14;\n        break;\n      case 0x00ff00:\n        threshold = 0.32;\n        break;\n      case 0x0000ff:\n        threshold = 0.3;\n        break;\n      default:\n        threshold = 0.2;\n    }\n    return {\n      color,\n      threshold,\n      smoothing: 0.1\n    };\n  }\n\n  detectChromaKeyColor(cmd) {\n    const hexMatch = cmd.match(/#([0-9a-fA-F]{6})/);\n    if (hexMatch) {\n      return parseInt(hexMatch[1], 16);\n    }\n\n    const colorKeywords = [\n      { tokens: ['白', 'ホワイト', 'しろ'], value: 0xffffff },\n      { tokens: ['黒', 'ブラック', 'くろ'], value: 0x000000 },\n      { tokens: ['緑', 'グリーン', 'みどり'], value: 0x00ff00 },\n      { tokens: ['青', 'ブルー', 'あお'], value: 0x0000ff },\n      { tokens: ['赤', 'レッド', 'あか'], value: 0xff0000 },\n      { tokens: ['黄', 'イエロー', 'きいろ'], value: 0xffff00 },\n      { tokens: ['ピンク'], value: 0xffc0cb },\n      { tokens: ['オレンジ'], value: 0xff8800 }\n    ];\n\n    for (const entry of colorKeywords) {\n      if (entry.tokens.some(token => cmd.includes(token))) {\n        return entry.value;\n      }\n    }\n\n    if (cmd.includes('グリーンバック')) {\n      return 0x00ff00;\n    }\n\n    return null;\n  }\n\n  /**\n   * エフェクト適用システム - Phase 2\n   */\n  applyEffects(targetObject, effects) {\n    let applied = false;\n\n    for (const effect of effects) {\n      console.log(`✨ Applying effect: ${effect.name} (${effect.type})`);\n\n      switch (effect.type) {\n        case 'opacity':\n          applied = this.applyOpacityEffect(targetObject, effect) || applied;\n          break;\n        case 'glow':\n          applied = this.applyGlowEffect(targetObject, effect) || applied;\n          break;\n        case 'material':\n          applied = this.applyMaterialEffect(targetObject, effect) || applied;\n          break;\n        case 'animation':\n          applied = this.applyAnimationEffect(targetObject, effect) || applied;\n          break;\n        case 'cosmic':\n        case 'aurora':\n        case 'nebula':\n        case 'energy':\n        case 'mystic':\n        case 'rainbow_glow':\n          applied = this.applyCosmicEffect(targetObject, effect) || applied;\n          break;\n        case 'watercolor_art':\n        case 'pastel_art':\n          applied = this.applyWatercolorEffect(targetObject, effect) || applied;\n          break;\n        case 'chroma_key':\n          applied = this.applyChromaKeyEffect(targetObject, effect) || applied;\n          break;\n        default:\n          console.warn(`🚫 Unknown effect type: ${effect.type}`);\n      }\n    }\n\n    return applied;\n  }\n\n  /**\n   * 透明度エフェクト適用\n   */\n  applyOpacityEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    targetObject.material.transparent = true;\n    targetObject.material.opacity = effect.value;\n    targetObject.material.needsUpdate = true;\n\n    console.log(`👻 Opacity set to: ${effect.value} (${effect.name})`);\n    return true;\n  }\n\n  /**\n   * 発光エフェクト適用\n   */\n  applyGlowEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    if (this.ensureEmissiveSupport(targetObject)) {\n      targetObject.material.emissive = new THREE.Color(effect.color);\n      targetObject.material.emissiveIntensity = effect.intensity;\n      targetObject.material.needsUpdate = true;\n      console.log(`💡 Glow applied: color=0x${effect.color.toString(16)}, intensity=${effect.intensity}`);\n      return true;\n    }\n\n    // Fallback: 調色による簡易発光表現\n    const fallbackColor = new THREE.Color(effect.color);\n    if (!targetObject.userData.originalColor) {\n      targetObject.userData.originalColor = targetObject.material.color ? targetObject.material.color.clone() : null;\n    }\n    if (targetObject.material.color) {\n      targetObject.material.color.lerp(fallbackColor, 0.4);\n      targetObject.material.needsUpdate = true;\n      console.log('💡 Glow fallback applied via color tint');\n      return true;\n    }\n\n    console.warn('🚫 Glow effect could not be applied');\n    return false;\n  }\n\n  ensureEmissiveSupport(targetObject) {\n    const material = targetObject.material;\n    if (!material) return false;\n    return 'emissive' in material && material.emissive !== undefined;\n  }\n\n  /**\n   * 材質エフェクト適用\n   */\n  applyMaterialEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    // StandardMaterial の場合のみ適用\n    if (targetObject.material.type === 'MeshStandardMaterial') {\n      if (effect.metalness !== undefined) {\n        targetObject.material.metalness = effect.metalness;\n      }\n      if (effect.roughness !== undefined) {\n        targetObject.material.roughness = effect.roughness;\n      }\n      targetObject.material.needsUpdate = true;\n\n      console.log(`🔩 Material updated: metalness=${effect.metalness}, roughness=${effect.roughness}`);\n      return true;\n    } else {\n      console.warn(`🚫 Material effect requires StandardMaterial, got: ${targetObject.material.type}`);\n      return false;\n    }\n  }\n\n  /**\n   * アニメーションエフェクト適用\n   */\n  applyAnimationEffect(targetObject, effect) {\n    // アニメーション管理オブジェクトを初期化\n    if (!this.animations) {\n      this.animations = new Map();\n      this.startAnimationLoop();\n    }\n\n    const animationId = `${targetObject.uuid}_${effect.animation}`;\n\n    // 既存のアニメーションがあれば停止\n    if (this.animations.has(animationId)) {\n      this.animations.delete(animationId);\n    }\n\n    // 新しいアニメーションを追加\n    const animationData = {\n      object: targetObject,\n      type: effect.animation,\n      speed: effect.speed,\n      amplitude: effect.amplitude || 1.0,\n      axis: effect.axis || 'y',\n      intensity: effect.intensity || 1.0,\n      startTime: Date.now(),\n      originalPosition: { ...targetObject.position },\n      originalScale: { ...targetObject.scale },\n      originalRotation: { ...targetObject.rotation }\n    };\n\n    this.animations.set(animationId, animationData);\n    console.log(`🎬 Animation started: ${effect.animation} for ${targetObject.name}`);\n    return true;\n  }\n\n  /**\n   * 宇宙的エフェクト適用（オーロラ、星雲、エネルギー）\n   */\n  applyCosmicEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    const useColorFallback = !this.ensureEmissiveSupport(targetObject);\n\n    // アニメーション管理オブジェクトを初期化\n    if (!this.animations) {\n      this.animations = new Map();\n      this.startAnimationLoop();\n    }\n\n    // 複数色の発光と色変化アニメーションを組み合わせ\n    const cosmicAnimationId = `${targetObject.uuid}_${effect.type}`;\n\n    // 既存のコスミックエフェクトがあれば削除\n    if (this.animations.has(cosmicAnimationId)) {\n      this.animations.delete(cosmicAnimationId);\n    }\n\n    if (useColorFallback) {\n      if (targetObject.material.color) {\n        if (!targetObject.userData.originalColor) {\n          targetObject.userData.originalColor = targetObject.material.color.clone();\n        }\n        targetObject.material.color.set(effect.colors[0]);\n        targetObject.material.needsUpdate = true;\n      } else {\n        console.warn('🚫 Cosmic fallback could not adjust color');\n      }\n    } else {\n      targetObject.material.emissive = new THREE.Color(effect.colors[0]);\n      targetObject.material.emissiveIntensity = effect.intensity;\n      targetObject.material.needsUpdate = true;\n    }\n\n    // コスミックアニメーションデータを作成\n    const cosmicData = {\n      object: targetObject,\n      type: 'cosmic',\n      cosmicType: effect.type,\n      colors: effect.colors,\n      intensity: effect.intensity,\n      speed: this.getCosmicSpeed(effect.type),\n      startTime: Date.now(),\n      colorIndex: 0,\n      originalEmissive: !useColorFallback && targetObject.material.emissive ? targetObject.material.emissive.clone() : null,\n      originalEmissiveIntensity: !useColorFallback ? (targetObject.material.emissiveIntensity || 0) : 0,\n      useColorFallback\n    };\n\n    this.animations.set(cosmicAnimationId, cosmicData);\n    console.log(`🌌 Cosmic effect started: ${effect.type} with ${effect.colors.length} colors`);\n    return true;\n  }\n\n  applyChromaKeyEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n    const material = targetObject.material;\n    const texture = material.map;\n\n    if (!texture) {\n      console.warn('🚫 Chroma key requires texture map');\n      return false;\n    }\n\n    if (material.userData && material.userData.isChromaKeyMaterial && material.uniforms) {\n      material.uniforms.keyColor.value.setHex(effect.color);\n      material.uniforms.threshold.value = effect.threshold;\n      material.uniforms.smoothing.value = effect.smoothing;\n      material.needsUpdate = true;\n      console.log('🎯 Updated existing chroma key material');\n      return true;\n    }\n\n    const shaderMaterial = new THREE.ShaderMaterial({\n      uniforms: {\n        map: { value: texture },\n        keyColor: { value: new THREE.Color(effect.color) },\n        threshold: { value: effect.threshold },\n        smoothing: { value: effect.smoothing }\n      },\n      vertexShader: `varying vec2 vUv;\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}`,\n      fragmentShader: `uniform sampler2D map;\\nuniform vec3 keyColor;\\nuniform float threshold;\\nuniform float smoothing;\\nvarying vec2 vUv;\\nvoid main() {\\n  vec4 color = texture2D(map, vUv);\\n  float dist = distance(color.rgb, keyColor);\\n  float alpha = smoothstep(threshold, threshold + smoothing, dist) * color.a;\\n  if (alpha <= 0.0) discard;\\n  gl_FragColor = vec4(color.rgb, alpha);\\n}`,\n      transparent: true,\n      side: THREE.DoubleSide,\n      depthTest: material.depthTest,\n      depthWrite: material.depthWrite,\n      toneMapped: material.toneMapped === true\n    });\n\n    shaderMaterial.userData.isChromaKeyMaterial = true;\n    targetObject.material = shaderMaterial;\n\n    if (typeof material.dispose === 'function') {\n      material.dispose();\n    }\n\n    console.log('🪄 Applied chroma key shader material');\n    return true;\n  }\n\n  /**\n   * 宇宙的エフェクトのスピード設定\n   */\n  getCosmicSpeed(cosmicType) {\n    switch (cosmicType) {\n      case 'cosmic': return 0.0005;      // ゆっくりと神秘的に\n      case 'aurora': return 0.0008;      // オーロラのような流れ\n      case 'nebula': return 0.0003;      // 星雲のようにゆったり\n      case 'energy': return 0.0015;      // エネルギッシュに\n      case 'mystic': return 0.0006;      // 神秘的にゆらゆら\n      case 'rainbow_glow': return 0.001; // 虹色は適度なスピード\n      default: return 0.0008;\n    }\n  }\n\n  /**\n   * 水彩画・パステル系エフェクト適用\n   */\n  applyWatercolorEffect(targetObject, effect) {\n    if (!targetObject.material) return false;\n\n    // 透明度を設定\n    targetObject.material.transparent = true;\n    targetObject.material.opacity = effect.opacity;\n\n    // アニメーション管理オブジェクトを初期化\n    if (!this.animations) {\n      this.animations = new Map();\n      this.startAnimationLoop();\n    }\n\n    // 水彩画アニメーションID\n    const watercolorAnimationId = `${targetObject.uuid}_${effect.type}`;\n\n    // 既存の水彩画エフェクトがあれば削除\n    if (this.animations.has(watercolorAnimationId)) {\n      this.animations.delete(watercolorAnimationId);\n    }\n\n    // 初期色を設定（発光ではなく拡散色）\n    targetObject.material.color = new THREE.Color(effect.colors[0]);\n    targetObject.material.needsUpdate = true;\n\n    // 水彩画アニメーションデータを作成\n    const watercolorData = {\n      object: targetObject,\n      type: 'watercolor',\n      artType: effect.type,\n      colors: effect.colors,\n      opacity: effect.opacity,\n      speed: this.getWatercolorSpeed(effect.type),\n      startTime: Date.now(),\n      colorIndex: 0,\n      originalColor: new THREE.Color(targetObject.material.color),\n      originalOpacity: targetObject.material.opacity\n    };\n\n    this.animations.set(watercolorAnimationId, watercolorData);\n    console.log(`🎨 Watercolor effect started: ${effect.type} with ${effect.colors.length} colors`);\n    return true;\n  }\n\n  /**\n   * 水彩画系エフェクトのスピード設定\n   */\n  getWatercolorSpeed(artType) {\n    switch (artType) {\n      case 'watercolor_art': return 0.0003;  // 水彩画は非常にゆっくり\n      case 'pastel_art': return 0.0002;      // パステルはより穏やか\n      default: return 0.0003;\n    }\n  }\n\n  /**\n   * アニメーションループ開始\n   */\n  startAnimationLoop() {\n    if (this.animationLoopRunning) return;\n\n    this.animationLoopRunning = true;\n\n    const animate = () => {\n      if (this.animations && this.animations.size > 0) {\n        this.updateAnimations();\n      }\n\n      if (this.animationLoopRunning) {\n        requestAnimationFrame(animate);\n      }\n    };\n\n    animate();\n    console.log(`🎭 Animation loop started`);\n  }\n\n  /**\n   * アニメーション更新\n   */\n  updateAnimations() {\n    const currentTime = Date.now();\n\n    for (const [id, animation] of this.animations.entries()) {\n      const elapsed = (currentTime - animation.startTime) * 0.001; // 秒に変換\n\n      switch (animation.type) {\n        case 'float':\n          this.updateFloatAnimation(animation, elapsed);\n          break;\n        case 'pulse':\n          this.updatePulseAnimation(animation, elapsed);\n          break;\n        case 'spin':\n          this.updateSpinAnimation(animation, elapsed);\n          break;\n        case 'sparkle':\n          this.updateSparkleAnimation(animation, elapsed);\n          break;\n        case 'rainbow':\n          this.updateRainbowAnimation(animation, elapsed);\n          break;\n        case 'glitch':\n          this.updateGlitchAnimation(animation, elapsed);\n          break;\n        case 'cosmic':\n          this.updateCosmicAnimation(animation, elapsed);\n          break;\n        case 'watercolor':\n          this.updateWatercolorAnimation(animation, elapsed);\n          break;\n      }\n    }\n  }\n\n  /**\n   * 浮遊アニメーション\n   */\n  updateFloatAnimation(animation, elapsed) {\n    const yOffset = Math.sin(elapsed * animation.speed * 2 * Math.PI) * animation.amplitude;\n    animation.object.position.y = animation.originalPosition.y + yOffset;\n  }\n\n  /**\n   * パルスアニメーション\n   */\n  updatePulseAnimation(animation, elapsed) {\n    const scaleOffset = Math.sin(elapsed * animation.speed * 2 * Math.PI) * animation.amplitude;\n    const newScale = 1 + scaleOffset;\n    animation.object.scale.setScalar(animation.originalScale.x * newScale);\n  }\n\n  /**\n   * 回転アニメーション\n   */\n  updateSpinAnimation(animation, elapsed) {\n    const rotationAmount = elapsed * animation.speed * 2 * Math.PI;\n    if (animation.axis === 'x') {\n      animation.object.rotation.x = animation.originalRotation.x + rotationAmount;\n    } else if (animation.axis === 'y') {\n      animation.object.rotation.y = animation.originalRotation.y + rotationAmount;\n    } else if (animation.axis === 'z') {\n      animation.object.rotation.z = animation.originalRotation.z + rotationAmount;\n    }\n  }\n\n  /**\n   * キラキラアニメーション（発光の明滅）\n   */\n  updateSparkleAnimation(animation, elapsed) {\n    if (animation.object.material) {\n      const intensity = (Math.sin(elapsed * 3 * 2 * Math.PI) * 0.5 + 0.5) * animation.intensity;\n      animation.object.material.emissiveIntensity = intensity;\n      animation.object.material.needsUpdate = true;\n    }\n  }\n\n  /**\n   * 虹色アニメーション\n   */\n  updateRainbowAnimation(animation, elapsed) {\n    if (animation.object.material) {\n      const hue = (elapsed * animation.speed) % 1;\n      const color = new THREE.Color().setHSL(hue, 1, 0.5);\n      animation.object.material.color = color;\n      animation.object.material.needsUpdate = true;\n    }\n  }\n\n  /**\n   * グリッチアニメーション\n   */\n  updateGlitchAnimation(animation, elapsed) {\n    if (Math.random() < 0.1) { // 10%の確率でグリッチ\n      const offset = (Math.random() - 0.5) * animation.intensity;\n      animation.object.position.x = animation.originalPosition.x + offset;\n      animation.object.position.z = animation.originalPosition.z + offset;\n    } else {\n      animation.object.position.x = animation.originalPosition.x;\n      animation.object.position.z = animation.originalPosition.z;\n    }\n  }\n\n  /**\n   * 宇宙的アニメーション（オーロラ、星雲、エネルギーエフェクト）\n   */\n  updateCosmicAnimation(animation, elapsed) {\n    if (!animation.object.material) return;\n\n    // 色の循環スピードを調整\n    const colorCycleSpeed = elapsed * animation.speed;\n    const numColors = animation.colors.length;\n\n    // 滑らかな色の遷移を実現\n    const colorProgress = (colorCycleSpeed % numColors);\n    const currentColorIndex = Math.floor(colorProgress);\n    const nextColorIndex = (currentColorIndex + 1) % numColors;\n    const lerpFactor = colorProgress - currentColorIndex;\n\n    // 現在の色と次の色をブレンド\n    const currentColor = new THREE.Color(animation.colors[currentColorIndex]);\n    const nextColor = new THREE.Color(animation.colors[nextColorIndex]);\n    const blendedColor = currentColor.lerp(nextColor, lerpFactor);\n\n    // 宇宙的エフェクトタイプごとの特別な処理\n    let intensityMultiplier = 1.0;\n    switch (animation.cosmicType) {\n      case 'aurora':\n        // オーロラは波のような強弱変化\n        intensityMultiplier = 0.7 + 0.3 * Math.sin(elapsed * 2.5);\n        break;\n      case 'nebula':\n        // 星雲はゆっくりとした脈動\n        intensityMultiplier = 0.8 + 0.2 * Math.sin(elapsed * 1.2);\n        break;\n      case 'energy':\n        // エネルギーは激しく変動\n        intensityMultiplier = 0.6 + 0.4 * (Math.sin(elapsed * 4) * Math.cos(elapsed * 3));\n        break;\n      case 'cosmic':\n        // 宇宙は神秘的にゆらゆら\n        intensityMultiplier = 0.8 + 0.2 * Math.sin(elapsed * 1.8);\n        break;\n      case 'mystic':\n        // 神秘的は複雑な変化\n        intensityMultiplier = 0.7 + 0.3 * Math.sin(elapsed * 1.5) * Math.cos(elapsed * 0.8);\n        break;\n      case 'rainbow_glow':\n        // 虹色は鮮やかに輝く\n        intensityMultiplier = 0.6 + 0.3 * Math.sin(elapsed * 2.0);\n        break;\n    }\n\n    if (animation.useColorFallback) {\n      if (animation.object.material.color) {\n        animation.object.material.color.copy(blendedColor);\n        animation.object.material.needsUpdate = true;\n      }\n    } else {\n      animation.object.material.emissive = blendedColor;\n      animation.object.material.emissiveIntensity = animation.intensity * intensityMultiplier;\n      animation.object.material.needsUpdate = true;\n    }\n  }\n\n  /**\n   * 水彩画アニメーション（拡散色の柔らかな変化）\n   */\n  updateWatercolorAnimation(animation, elapsed) {\n    if (!animation.object.material) return;\n\n    // 色の循環スピードを調整（宇宙エフェクトより遅い）\n    const colorCycleSpeed = elapsed * animation.speed;\n    const numColors = animation.colors.length;\n\n    // 滑らかな色の遷移\n    const colorProgress = (colorCycleSpeed % numColors);\n    const currentColorIndex = Math.floor(colorProgress);\n    const nextColorIndex = (currentColorIndex + 1) % numColors;\n    const lerpFactor = colorProgress - currentColorIndex;\n\n    // 現在の色と次の色をブレンド\n    const currentColor = new THREE.Color(animation.colors[currentColorIndex]);\n    const nextColor = new THREE.Color(animation.colors[nextColorIndex]);\n    const blendedColor = currentColor.lerp(nextColor, lerpFactor);\n\n    // 透明度の柔らかな変化\n    let opacityMultiplier = 1.0;\n    switch (animation.artType) {\n      case 'watercolor_art':\n        // 水彩画は透明度もゆっくり変化\n        opacityMultiplier = 0.9 + 0.1 * Math.sin(elapsed * 0.5);\n        break;\n      case 'pastel_art':\n        // パステルは透明度をより安定\n        opacityMultiplier = 0.95 + 0.05 * Math.sin(elapsed * 0.3);\n        break;\n    }\n\n    // 拡散色を設定（emissiveではなくcolor）\n    animation.object.material.color = blendedColor;\n    animation.object.material.opacity = animation.opacity * opacityMultiplier;\n    animation.object.material.needsUpdate = true;\n  }\n\n  /**\n   * プロンプトに基づいて自動エフェクトを決定\n   */\n  getAutoEffectsFromPrompt(prompt) {\n    if (!prompt) return null;\n\n    const lowerPrompt = prompt.toLowerCase();\n\n    // 魔法・ファンタジー系\n    if (lowerPrompt.includes('ユニコーン') || lowerPrompt.includes('unicorn') ||\n        lowerPrompt.includes('魔法') || lowerPrompt.includes('magic') ||\n        lowerPrompt.includes('魔女') || lowerPrompt.includes('wizard') ||\n        lowerPrompt.includes('fairy') || lowerPrompt.includes('妖精')) {\n      return ['魔法っぽく'];\n    }\n\n    // 宇宙・神秘系\n    if (lowerPrompt.includes('ドラゴン') || lowerPrompt.includes('dragon') ||\n        lowerPrompt.includes('宇宙') || lowerPrompt.includes('space') ||\n        lowerPrompt.includes('星') || lowerPrompt.includes('star')) {\n      return ['宇宙'];\n    }\n\n    // 幽霊・透明系\n    if (lowerPrompt.includes('幽霊') || lowerPrompt.includes('ghost') ||\n        lowerPrompt.includes('精霊') || lowerPrompt.includes('spirit')) {\n      return ['幽霊'];\n    }\n\n    // サイバー・未来系\n    if (lowerPrompt.includes('ロボット') || lowerPrompt.includes('robot') ||\n        lowerPrompt.includes('サイバー') || lowerPrompt.includes('cyber') ||\n        lowerPrompt.includes('未来') || lowerPrompt.includes('future')) {\n      return ['サイバー'];\n    }\n\n    // 動物系 - 軽いキラキラエフェクト\n    if (lowerPrompt.includes('猫') || lowerPrompt.includes('cat') ||\n        lowerPrompt.includes('犬') || lowerPrompt.includes('dog') ||\n        lowerPrompt.includes('鳥') || lowerPrompt.includes('bird')) {\n      return ['きらめ'];\n    }\n\n    // 花・自然系 - パステルエフェクト\n    if (lowerPrompt.includes('花') || lowerPrompt.includes('flower') ||\n        lowerPrompt.includes('桜') || lowerPrompt.includes('cherry') ||\n        lowerPrompt.includes('自然') || lowerPrompt.includes('nature')) {\n      return ['パステル'];\n    }\n\n    return null; // 該当なしの場合はエフェクトなし\n  }\n\n  /**\n   * オブジェクト認識成功時のフィードバックエフェクト\n   */\n  applyRecognitionFeedback(targetObject) {\n    console.log(`🎯 Object recognition successful: ${targetObject.name}`);\n\n    // 短時間のキラキラエフェクトで認識成功を視覚的に伝える\n    const feedbackEffect = [{\n      type: 'animation',\n      animation: 'sparkle',\n      intensity: 0.8,\n      name: 'recognition_feedback'\n    }];\n\n    this.applyEffects(targetObject, feedbackEffect);\n\n    // 3秒後にフィードバックエフェクトを停止\n    setTimeout(() => {\n      this.stopRecognitionFeedback(targetObject);\n    }, 3000);\n  }\n\n  /**\n   * 認識フィードバックエフェクトを停止\n   */\n  stopRecognitionFeedback(targetObject) {\n    if (!this.animations) return;\n\n    const feedbackAnimationId = `${targetObject.uuid}_sparkle`;\n    if (this.animations.has(feedbackAnimationId)) {\n      this.animations.delete(feedbackAnimationId);\n\n      // 発光を元に戻す\n      if (targetObject.material) {\n        targetObject.material.emissiveIntensity = 0;\n        targetObject.material.needsUpdate = true;\n      }\n\n      console.log(`✨ Recognition feedback stopped for: ${targetObject.name}`);\n    }\n  }\n\n  /**\n   * 削除コマンド解析\n   */\n  parseDeleteCommand(command) {\n    const cmd = command.toLowerCase().trim();\n    \n    // 選択されたオブジェクトのみを削除するか、全削除かを判定\n    if (cmd.includes('選択') || cmd.includes('これ') || cmd.includes('この')) {\n      return {\n        type: 'delete',\n        target: 'selected',\n        requiresSelection: true\n      };\n    }\n    \n    if (cmd.includes('全部') || cmd.includes('すべて') || cmd.includes('全て')) {\n      return {\n        type: 'delete',\n        target: 'all'\n      };\n    }\n    \n    // デフォルト: 選択されたオブジェクトを削除\n    return {\n      type: 'delete',\n      target: 'selected',\n      requiresSelection: true\n    };\n  }\n\n  /**\n   * 自然言語オブジェクト操作コマンド解析\n   * 例: \"ユニコーンを右に移動\", \"猫の画像をピンクに\", \"1つ目の猫を左に\"\n   */\n  parseNaturalLanguageCommand(command) {\n    // 移動パターンをチェック\n    const movePatterns = [\n      '(\\S+?)を(.+?)に移動', \n      '(\\S+?)を(.+?)へ移動',\n      '(\\S+?)を(.+?)に動か',\n      '(\\S+?)を(.+?)へ動か'\n    ];\n    \n    for (const pattern of movePatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n        const direction = match[2];\n        \n        console.log(`🎯 Natural language move detected: \"${objectName}\" to \"${direction}\"`);\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          movement: this.parsePositionFromPrompt(direction),\n          requiresObjectSearch: true\n        };\n      }\n    }\n    \n    // 色変更パターンをチェック\n    const colorPatterns = [\n      '(\\S+?)を(\\S+?)色に',\n      '(\\S+?)を(\\S+?)に'\n    ];\n    \n    // 色変更は基本的な色のみ対応\n    const colorKeywords = ['赤', '赤色', '青', '青色', '緑', '緑色', '黄', '黄色', '黄色い', '紫', '紫色',\n                          '橙', '橙色', 'オレンジ', 'オレンジ色', '白', '白色', '黒', '黒色',\n                          '灰', '灰色', 'グレー', 'グレー色', 'ピンク', 'ピンク色', '茶', '茶色', '銀', '銀色', '金', '金色'];\n    \n    for (const pattern of colorPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match && colorKeywords.some(color => match[2].includes(color))) {\n        const objectName = match[1];\n        const colorName = match[2];\n        \n        console.log(`🎨 Natural language color change detected: \"${objectName}\" to \"${colorName}\"`);\n        \n        // 色変更の解析（既存のロジックを流用）\n        const colorMap = {\n          '赤': 0xff0000, '赤色': 0xff0000,\n          '青': 0x0000ff, '青色': 0x0000ff,\n          '緑': 0x00ff00, '緑色': 0x00ff00,\n          '黄': 0xffff00, '黄色': 0xffff00, '黄色い': 0xffff00,\n          '紫': 0xff00ff, '紫色': 0xff00ff,\n          '橙': 0xff8800, '橙色': 0xff8800, 'オレンジ': 0xff8800, 'オレンジ色': 0xff8800,\n          '白': 0xffffff, '白色': 0xffffff,\n          '黒': 0x000000, '黒色': 0x000000,\n          '灰': 0x808080, '灰色': 0x808080, 'グレー': 0x808080, 'グレー色': 0x808080,\n          'ピンク': 0xffc0cb, 'ピンク色': 0xffc0cb,\n          '茶': 0x8b4513, '茶色': 0x8b4513,\n          '銀': 0xc0c0c0, '銀色': 0xc0c0c0,\n          '金': 0xffd700, '金色': 0xffd700\n        };\n        \n        let colorValue = null;\n        for (const [colorKey, value] of Object.entries(colorMap)) {\n          if (colorName.includes(colorKey)) {\n            colorValue = value;\n            break;\n          }\n        }\n        \n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          color: colorValue,\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    // 回転パターンをチェック\n    const rotationPatterns = [\n      '(\\S+?)を回転',\n      '(\\S+?)を回す',\n      '(\\S+?)を回して',\n      '(\\S+?)回転',\n      '回転.*?(\\S+)'\n    ];\n\n    for (const pattern of rotationPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n\n        console.log(`🔄 Natural language rotation detected: \"${objectName}\"`);\n\n        // 角度指定があるかチェック\n        const degreeMatch = command.match(/(\\d+)\\s*度/);\n        const rotation = degreeMatch ?\n          parseFloat(degreeMatch[1]) * Math.PI / 180 :\n          Math.PI / 4; // デフォルト45度\n\n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          rotation: rotation,\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    // 反転パターンをチェック\n    const flipPatterns = [\n      '(\\S+?)を左右反転',\n      '(\\S+?)を反転',\n      '(\\S+?)反転',\n      '(\\S+?)をひっくり返',\n      '(\\S+?)をflip'\n    ];\n\n    for (const pattern of flipPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match) {\n        const objectName = match[1];\n\n        console.log(`🔄 Natural language flip detected: \"${objectName}\"`);\n\n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          flip: true, // 反転フラグを追加\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    // エフェクトパターンをチェック（水彩、宇宙エフェクトなど）\n    const effectPatterns = [\n      '(\\S+?)を(\\S+?)っぽく',\n      '(\\S+?)を(\\S+?)に',\n      '(\\S+?)を(\\S+?)風に',\n      '(\\S+?)を(\\S+?)みたい'\n    ];\n\n    const effectKeywords = ['水彩', '水彩画', '宇宙', 'オーロラ', '星雲', 'エネルギー', '神秘的',\n                            'パステル', '魔法', '幽霊', 'サイバー', '夢', '光', 'ネオン',\n                            'メタリック', '金属', 'ガラス', 'マット'];\n\n    for (const pattern of effectPatterns) {\n      const regex = new RegExp(pattern);\n      const match = command.match(regex);\n      if (match && effectKeywords.some(effect => match[2].includes(effect))) {\n        const objectName = match[1];\n        const effectName = match[2];\n\n        console.log(`✨ Natural language effect detected: \"${objectName}\" with \"${effectName}\"`);\n\n        return {\n          type: 'natural_object_modification',\n          targetObjectName: objectName,\n          command: effectName, // エフェクトはコマンドとして渡す\n          requiresObjectSearch: true\n        };\n      }\n    }\n\n    return null; // 自然言語パターンに一致しない場合\n  }\n\n  /**\n   * 移動コマンドから相対位置を解析（オブジェクト移動用）\n   */\n  parsePositionFromPrompt(command) {\n    let x = 0, y = 0, z = 0;\n    \n    // 左右移動（修正：左右を正しい方向に）\n    if (command.includes('右へ') || command.includes('右に') || command.includes('右側へ') || command.includes('右側に')) {\n      x = 5; // 5メートル右へ（正の値で右に移動）\n    } else if (command.includes('左へ') || command.includes('左に') || command.includes('左側へ') || command.includes('左側に')) {\n      x = -5; // 5メートル左へ（負の値で左に移動）\n    }\n    \n    // 上下移動\n    if (command.includes('上へ') || command.includes('上に') || command.includes('上側へ')) {\n      y = 3; // 3メートル上へ\n    } else if (command.includes('下へ') || command.includes('下に') || command.includes('下側へ')) {\n      y = -3; // 3メートル下へ\n    }\n    \n    // 前後移動\n    if (command.includes('前へ') || command.includes('手前へ') || command.includes('近くへ')) {\n      z = 3; // カメラに近づける\n    } else if (command.includes('後ろへ') || command.includes('奥へ') || command.includes('遠くへ')) {\n      z = -3; // カメラから遠ざける\n    }\n    \n    // 距離指定の解析\n    const distanceMatch = command.match(/(\\d+(?:\\.\\d+)?)\\s*(?:メートル|m)/);\n    if (distanceMatch) {\n      const distance = parseFloat(distanceMatch[1]);\n      // 方向に応じて距離を適用\n      if (Math.abs(x) > 0) x = x > 0 ? distance : -distance;\n      if (Math.abs(y) > 0) y = y > 0 ? distance : -distance;\n      if (Math.abs(z) > 0) z = z > 0 ? distance : -distance;\n    }\n    \n    // 「少し」「大きく」などの修飾語\n    if (command.includes('少し') || command.includes('ちょっと')) {\n      x *= 0.5; y *= 0.5; z *= 0.5;\n    } else if (command.includes('大きく') || command.includes('たくさん')) {\n      x *= 2; y *= 2; z *= 2;\n    }\n    \n    console.log(`📍 Position movement parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * 位置情報解析（カメラ相対位置）\n   */\n  parsePosition(command) {\n    const defaultPos = { x: 0, y: 5, z: 10 }; // カメラ前方10m、少し上\n    \n    // 基本方向の解析（カメラ相対座標系）\n    let x = 0, y = 5, z = 10; // デフォルト値（カメラ相対、正のzが前方）\n    \n    // 組み合わせ位置を最初にチェック（優先度最高）\n    if (command.includes('左下')) {\n      x = -8; y = 0; z = 10;  // 左下: 左側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 左下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右上')) {\n      x = 5; y = 4; z = 12;  // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 右上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('左上')) {\n      x = -8; y = 4; z = 15; // y座標を下げて画面内に収める\n      console.log(`📍 Position parsed from \"${command}\": 左上 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('右下')) {\n      x = 8; y = 0; z = 10; // 右下: 右側で低い位置\n      console.log(`📍 Position parsed from \"${command}\": 右下 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 特殊位置\n    if (command.includes('中央') || command.includes('真ん中') || command.includes('正面')) {\n      x = 0; y = 3; z = 12;  // y=3 で目線レベルに\n      console.log(`📍 Position parsed from \"${command}\": 中央 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('空') || command.includes('天空')) {\n      x = 0; y = 20; z = 10;\n      console.log(`📍 Position parsed from \"${command}\": 空中 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    } else if (command.includes('地面') || command.includes('足元')) {\n      x = 0; y = 1; z = 8;\n      console.log(`📍 Position parsed from \"${command}\": 地面 (${x}, ${y}, ${z})`);\n      return { x, y, z };\n    }\n    \n    // 個別方向の解析\n    // 前後方向\n    if (command.includes('前に') || command.includes('手前に')) {\n      z = 5; // カメラに近づける\n    } else if (command.includes('後ろに') || command.includes('奥に') || command.includes('遠くに')) {\n      z = 20; // カメラから遠ざける\n    }\n    \n    // 左右方向\n    if (command.includes('右に') || command.includes('右側') || command.includes('画面の右')) {\n      x = 8;\n    } else if (command.includes('左に') || command.includes('左側') || command.includes('画面の左')) {\n      x = -8;\n    }\n    \n    // 上下方向（カメラ相対）\n    if (command.includes('上に') || command.includes('上側') || command.includes('画面の上') || command.includes('高い位置に') || command.includes('空中に')) {\n      y = 8; // カメラから8メートル上\n    } else if (command.includes('下に') || command.includes('下側') || command.includes('画面の下') || command.includes('低い位置に') || command.includes('地面に')) {\n      y = -2; // カメラから2メートル下\n    }\n    \n    // 距離指定\n    if (command.includes('近くに') || command.includes('すぐ前に')) {\n      z = Math.min(z * 0.5, 3); // 半分の距離、ただし最低3m（正の値なので min を使用）\n    } else if (command.includes('遠くに') || command.includes('向こうに')) {\n      z = z * 1.5; // 1.5倍の距離\n    }\n    \n    console.log(`📍 Position parsed from \"${command}\": (${x}, ${y}, ${z})`);\n    \n    return { x, y, z };\n  }\n\n  /**\n   * サイズ解析\n   */\n  parseSize(command) {\n    if (command.includes('大きな') || command.includes('大きい')) return { scale: 2.0 };\n    if (command.includes('小さな') || command.includes('小さい')) return { scale: 0.5 };\n    return { scale: this.config.defaultObjectScale };\n  }\n\n  /**\n   * コマンド種別別実行\n   */\n  async dispatchCommand(parsed) {\n    switch (parsed.type) {\n      case 'image_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('画像生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeImageGeneration(parsed);\n        \n      case 'video_generation':\n        // サーバーなしの場合は生成機能を無効化\n        if (!this.client || !this.client.serverUrl) {\n          throw new Error('動画生成機能を使用するにはサーバー設定が必要です。インポート機能のみ利用可能です。');\n        }\n        return await this.executeVideoGeneration(parsed);\n        \n      case 'object_modification':\n        return await this.executeObjectModification(parsed);\n        \n      case 'natural_object_modification':\n        return await this.executeNaturalObjectModification(parsed);\n        \n      case 'delete':\n        return await this.executeDelete(parsed);\n        \n      case 'file_import':\n        return await this.executeFileImport(parsed);\n        \n      case 'object_selection':\n        return await this.executeObjectSelection(parsed);\n        \n      default:\n        throw new Error(`Unknown command type: ${parsed.type}`);\n    }\n  }\n\n  /**\n   * 画像生成実行\n   */\n  async executeImageGeneration(parsed) {\n    try {\n      console.log(`🎨 Generating image: \"${parsed.prompt}\"`);\n      \n      // 段階的にサイズを試行（シーンに配置しやすいサイズを優先）\n      const fallbackSizes = [\n        { width: 512, height: 512 },    // 1:1 基本サイズ（互換性最高）\n        { width: 768, height: 432 },    // 16:9 現代的サイズ\n        { width: 1024, height: 1024 },  // 大きめ1:1\n        { width: 640, height: 480 },    // 4:3 クラシック\n      ];\n      \n      let imageResult;\n      let lastError;\n      \n      for (let i = 0; i < fallbackSizes.length; i++) {\n        const dimensions = fallbackSizes[i];\n        try {\n          console.log(`🔄 Trying ${dimensions.width}x${dimensions.height}...`);\n          \n          imageResult = await this.client.generateImage(parsed.prompt, {\n            width: dimensions.width,\n            height: dimensions.height,\n            service: this.selectedImageService || undefined\n          });\n          \n          if (imageResult.success) {\n            console.log(`✅ Success with ${dimensions.width}x${dimensions.height}`);\n            break;\n          }\n        } catch (error) {\n          lastError = error;\n          console.log(`⚠️ Failed with ${dimensions.width}x${dimensions.height}: ${error.message}`);\n          \n          // 最後の試行でない場合は続行\n          if (i < fallbackSizes.length - 1) {\n            console.log(`🔄 Retrying with next size...`);\n            continue;\n          }\n        }\n      }\n      \n      // 結果にモデル情報を含める\n      if (imageResult && imageResult.modelName) {\n        console.log(`📡 Used model: ${imageResult.modelName}`);\n      }\n      \n      const loader = new THREE.TextureLoader();\n      let texture;\n      if (imageResult && imageResult.success && (imageResult.imageUrl || imageResult.localPath)) {\n        // 成功: 生成された画像をテクスチャとして使用\n        let imageUrl = imageResult.imageUrl;\n        \n        // localPathの場合はWebアクセス可能なURLに変換\n        if (!imageUrl && imageResult.localPath) {\n          const filename = imageResult.localPath.split('/').pop();\n          imageUrl = `${this.client.serverUrl}/generated/${filename}`;\n        }\n        \n        console.log(`✅ Image generated successfully: ${imageUrl}`);\n        texture = await loader.loadAsync(imageUrl);\n\n        // テクスチャの色彩を正確に表示するための設定\n        texture.colorSpace = THREE.SRGBColorSpace; // 正しいカラースペース\n      } else {\n        // 失敗: プレースホルダー画像を使用\n        console.log(`⚠️ Using fallback image (last error: ${lastError?.message || 'unknown'})`);\n        texture = this.createFallbackTexture(parsed.prompt);\n      }\n\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n      if (aspectRatio >= 1) {\n        planeWidth = baseSize;\n        planeHeight = baseSize / aspectRatio;\n      } else {\n        planeWidth = baseSize * aspectRatio;\n        planeHeight = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n        side: THREE.DoubleSide, // 両面表示\n        toneMapped: false    // トーンマッピングを無効化（より鮮やかな色彩）\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（画像も前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      material.alphaTest = 0.01;\n      material.needsUpdate = true;\n\n      // カメラ相対位置で配置（カメラの向きも考慮）\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        // フォールバック: 絶対座標\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n      \n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n      \n      // 識別用の名前とメタデータ\n      const objectId = `generated_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_image',\n        source: 'generated_image',\n        modelName: imageResult?.modelName || this.selectedImageService || null,\n        keywords: this.buildObjectKeywordHints({ prompt: parsed.prompt, baseType: 'image' })\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n\n      console.log(`✅ Created object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n\n      // 生成位置にパーティクルエフェクトを追加（視覚的フィードバック）\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: imageResult?.modelName,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎨 Image generation failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 動画生成実行\n   */\n  async executeVideoGeneration(parsed) {\n    try {\n      console.log(`🎬 Generating video: \"${parsed.prompt}\"`);\n      console.log('🔍 Video generation - selectedVideoService:', this.selectedVideoService);\n      \n      // ChocoDro Client経由で動画生成\n      // アスペクト比は各モデルのサポート状況に応じてサーバー側で最適化\n      const videoResult = await this.client.generateVideo(parsed.prompt, {\n        duration: 3,\n        model: this.selectedVideoService || undefined\n        // width, height指定を削除してサーバー側デフォルト(16:9)を使用\n      });\n      \n      // 結果にモデル情報を含める\n      if (videoResult.modelName) {\n        console.log(`📡 Used model: ${videoResult.modelName}`);\n      }\n      \n      let videoTexture;\n      let video = null; // video変数をスコープ外で定義\n      \n      if (videoResult.success && videoResult.videoUrl) {\n        // 成功: 生成された動画をテクスチャとして使用\n        console.log(`✅ Video generated successfully: ${videoResult.videoUrl}`);\n        \n        // HTML5 video要素を作成\n        video = document.createElement('video');\n        video.src = videoResult.videoUrl;\n        video.crossOrigin = 'anonymous';\n        video.loop = true;\n        video.muted = true; // 初期はミュート（ユーザーが手動で音声制御）\n        video.playsInline = true;\n        \n        // 動画テクスチャを作成\n        videoTexture = new THREE.VideoTexture(video);\n        videoTexture.colorSpace = THREE.SRGBColorSpace;\n        \n        // 動画の自動再生を開始\n        video.addEventListener('loadeddata', () => {\n          video.play().catch(console.error);\n        });\n        \n      } else {\n        // 失敗: プレースホルダー動画テクスチャを使用\n        console.log(`⚠️ Using fallback video texture`);\n        videoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      }\n      \n      // 動画を表示する平面ジオメトリを作成（アスペクト比を考慮）\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n\n      const requestedWidth = videoResult.metadata?.width || 512;\n      const requestedHeight = videoResult.metadata?.height || 512;\n      const planeAspect = requestedWidth && requestedHeight ? requestedWidth / requestedHeight : 1;\n\n      let planeWidth = baseSize;\n      let planeHeight = baseSize;\n\n      if (planeAspect >= 1) {\n        planeHeight = baseSize / planeAspect;\n      } else {\n        planeWidth = baseSize * planeAspect;\n      }\n\n      const geometry = new THREE.PlaneGeometry(planeWidth, planeHeight);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定（動画を前面に表示）\n      plane.renderOrder = 1000;  // 高い値で前面に表示\n      material.depthTest = true;  // 深度テストは有効に\n      material.depthWrite = true; // 深度書き込みも有効に\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      // スケールは幅計算に含めているので、ここでは1.0に固定\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        source: 'generated_video',\n        videoUrl: videoResult.videoUrl,\n        modelName: videoResult.modelName || this.selectedVideoService || null,\n        width: requestedWidth,\n        height: requestedHeight,\n        videoElement: video,\n        keywords: this.buildObjectKeywordHints({ prompt: parsed.prompt, baseType: 'video' })\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created video object: ${objectId} at (${parsed.position.x}, ${parsed.position.y}, ${parsed.position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(parsed.position);\n      }\n      \n      return {\n        objectId,\n        position: parsed.position,\n        prompt: parsed.prompt,\n        modelName: videoResult.modelName,\n        videoUrl: videoResult.videoUrl,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video generation failed:', error);\n      \n      // エラー時もプレースホルダー動画を表示\n      console.log('🔄 Creating fallback video plane due to generation error');\n      const fallbackVideoTexture = this.createFallbackVideoTexture(parsed.prompt);\n      \n      // 動画を表示する平面ジオメトリを作成\n      const sizeScale = parsed.size?.scale ?? this.config.defaultObjectScale ?? 1;\n      const baseSize = 6 * sizeScale;\n      const geometry = new THREE.PlaneGeometry(baseSize, baseSize);\n      const material = new THREE.MeshBasicMaterial({\n        map: fallbackVideoTexture,\n        transparent: false,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(parsed.position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(parsed.position.x, parsed.position.y, parsed.position.z);\n      }\n\n      plane.scale.setScalar(1.0);\n\n      // 識別用の名前とメタデータ\n      const objectId = `generated_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        prompt: parsed.prompt,\n        createdAt: Date.now(),\n        type: 'generated_video',\n        source: 'generated_video',\n        videoUrl: null, // エラー時はnull\n        modelName: 'Error Fallback',\n        width: 512,\n        height: 512,\n        videoElement: null,\n        error: error.message,\n        keywords: this.buildObjectKeywordHints({ prompt: parsed.prompt, baseType: 'video' })\n      };\n\n      // シーンに追加\n      this.scene.add(plane);\n      console.log('📍 Fallback video plane added to scene');\n\n      return {\n        success: false,\n        error: error.message,\n        object: plane,\n        prompt: parsed.prompt\n      };\n    }\n  }\n\n  async loadImageFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 }, fileName = null } = options;\n      \n      console.log(`📁 Loading image file: ${fileUrl}`);\n      \n      // ファイルからテクスチャを読み込み\n      const loader = new THREE.TextureLoader();\n      const texture = await loader.loadAsync(fileUrl);\n\n      // テクスチャの色彩を正確に表示するための設定\n      texture.colorSpace = THREE.SRGBColorSpace;\n\n      // アスペクト比を算出（fallback: 1）\n      const imageWidth = texture.image?.naturalWidth || texture.image?.width || texture.source?.data?.width || 1;\n      const imageHeight = texture.image?.naturalHeight || texture.image?.height || texture.source?.data?.height || 1;\n      const aspectRatio = imageWidth / imageHeight || 1;\n      \n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      if (aspectRatio >= 1) {\n        width = baseSize;\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n        height = baseSize;\n      }\n\n      // 画像を表示する平面ジオメトリを作成（縦横比を維持）\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      material.alphaTest = 0.01;\n      material.needsUpdate = true;\n      \n      const plane = new THREE.Mesh(geometry, material);\n\n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // ファイル名からpromptを作成（拡張子を除去）\n      const prompt = fileName ? fileName.replace(/\\.[^/.]+$/, '') : 'imported_image';\n\n      // 識別用の名前とメタデータ\n      const objectId = `imported_image_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_image',\n        prompt: prompt, // ファイル名をpromptとして設定\n        fileName: fileName, // 元のファイル名も保存\n        importOrder: this.objectCounter, // インポート順序を記録\n        keywords: this.buildObjectKeywordHints({ prompt, fileName, baseType: 'image' })\n      };\n      \n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n\n      console.log(`✅ Created imported image: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n\n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('📁 Image file loading failed:', error);\n      throw error;\n    }\n  }\n\n  async loadVideoFile(fileUrl, options = {}) {\n    try {\n      const { position = { x: 0, y: 5, z: -10 }, fileName = null } = options;\n      \n      console.log(`🎬 Loading video file: ${fileUrl}`);\n      \n      // HTMLVideoElementを作成\n      const video = document.createElement('video');\n      video.src = fileUrl;\n      video.loop = true;\n      video.muted = true;\n      video.playsInline = true;\n      video.autoplay = true;\n      video.preload = 'auto';\n\n      // VideoTextureを作成\n      const videoTexture = new THREE.VideoTexture(video);\n      videoTexture.colorSpace = THREE.SRGBColorSpace;\n\n      // ビデオの読み込みとサイズ取得\n      await new Promise((resolve, reject) => {\n        const handleLoaded = () => {\n          console.log(`🎬 Video loaded: ${video.videoWidth}x${video.videoHeight}`);\n          resolve();\n        };\n        const handleError = (event) => {\n          reject(event?.error || new Error('Video failed to load'));\n        };\n\n        video.addEventListener('loadedmetadata', handleLoaded, { once: true });\n        video.addEventListener('error', handleError, { once: true });\n        video.load();\n      });\n\n      try {\n        await video.play();\n      } catch (playError) {\n        console.warn('🎬 Video autoplay could not start automatically. Playback will require user interaction.', playError);\n      }\n      \n      // アスペクト比を計算してサイズ調整\n      const aspectRatio = video.videoWidth / video.videoHeight;\n      const baseSize = 6;\n      let width = baseSize;\n      let height = baseSize;\n      \n      if (aspectRatio > 1) {\n        height = baseSize / aspectRatio;\n      } else {\n        width = baseSize * aspectRatio;\n      }\n      \n      // 動画を表示する平面ジオメトリを作成\n      const geometry = new THREE.PlaneGeometry(width, height);\n      const material = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: true,\n        side: THREE.DoubleSide,\n        toneMapped: false\n      });\n      material.alphaTest = 0.01;\n      material.needsUpdate = true;\n      \n      const plane = new THREE.Mesh(geometry, material);\n      \n      // レンダリング順序を設定\n      plane.renderOrder = 1000;\n      material.depthTest = true;\n      material.depthWrite = true;\n      \n      // カメラ相対位置で配置\n      if (this.camera) {\n        const finalPosition = this.calculateCameraRelativePosition(position);\n        plane.position.copy(finalPosition);\n        this.alignPlaneToCamera(plane);\n      } else {\n        plane.position.set(position.x, position.y, position.z);\n      }\n      \n      plane.scale.setScalar(1.0);\n      \n      // ファイル名からpromptを作成（拡張子を除去）\n      const prompt = fileName ? fileName.replace(/\\.[^/.]+$/, '') : 'imported_video';\n\n      // 識別用の名前とメタデータ\n      const objectId = `imported_video_${++this.objectCounter}`;\n      plane.name = objectId;\n      plane.userData = {\n        id: objectId,\n        source: 'imported_file',\n        createdAt: Date.now(),\n        type: 'generated_video',\n        videoElement: video,\n        objectUrl: fileUrl,\n        prompt: prompt, // ファイル名をpromptとして設定\n        fileName: fileName, // 元のファイル名も保存\n        importOrder: this.objectCounter, // インポート順序を記録\n        keywords: this.buildObjectKeywordHints({ prompt, fileName, baseType: 'video' })\n      };\n\n      // 音声制御UIを作成\n      this.createAudioControl(plane);\n\n      this.experimentGroup.add(plane);\n      this.spawnedObjects.set(objectId, plane);\n      \n      console.log(`✅ Created imported video: ${objectId} at (${position.x}, ${position.y}, ${position.z})`);\n      \n      // 生成位置にパーティクルエフェクトを追加\n      if (this.config.showLocationIndicator) {\n        this.createLocationIndicator(position);\n      }\n      \n      return {\n        objectId,\n        position: position,\n        success: true\n      };\n      \n    } catch (error) {\n      console.error('🎬 Video file loading failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 自然言語オブジェクト操作実行\n   */\n  async executeNaturalObjectModification(parsed) {\n    // オブジェクトを名前で検索\n    const targetObjects = this.findObjectsByName(parsed.targetObjectName);\n    \n    if (targetObjects.length === 0) {\n      return {\n        success: false,\n        message: `オブジェクト「${parsed.targetObjectName}」が見つかりませんでした`\n      };\n    }\n    \n    console.log(`🔍 Found ${targetObjects.length} object(s) matching \"${parsed.targetObjectName}\"`);\n    \n    // 複数の場合は序数詞で選択、なければ最初のオブジェクト\n    const targetObject = this.selectObjectFromMultiple(targetObjects, parsed.targetObjectName);\n    console.log(`🎯 Operating on object: ${targetObject.name}`);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Texture color tint changed to: #${parsed.color.toString(16)}`);\n      } else {\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Material color changed to: #${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n\n    // Phase 2: エフェクト適用\n    if (parsed.effects && parsed.effects.length > 0) {\n      const effectsApplied = this.applyEffects(targetObject, parsed.effects);\n      if (effectsApplied) {\n        modified = true;\n      }\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y,\n        z: currentPos.z + parsed.movement.z\n      };\n      \n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        movement: parsed.movement,\n        command: `Natural language: ${parsed.targetObjectName}`\n      });\n      \n      return {\n        success: true,\n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          movement: parsed.movement\n        }\n      };\n    } else {\n      return {\n        success: false,\n        message: '変更可能な属性が見つかりませんでした'\n      };\n    }\n  }\n  \n  /**\n   * 名前でオブジェクトを検索\n   */\n  findObjectsByName(searchName) {\n    const results = [];\n    const searchLower = searchName.toLowerCase();\n    \n    // 生成されたオブジェクトから検索\n    for (const [objectId, object] of this.spawnedObjects) {\n      // プロンプト情報から検索\n      if (object.userData.prompt) {\n        const promptLower = object.userData.prompt.toLowerCase();\n        \n        // 部分一致で検索（「ユニコーン」が「ユニコーンの画像」にマッチ）\n        if (promptLower.includes(searchLower)) {\n          results.push(object);\n          console.log(`✅ Object match found: ${objectId} (prompt: \"${object.userData.prompt}\")`);\n        }\n      }\n      \n      // オブジェクト名からも検索\n      if (object.name && object.name.toLowerCase().includes(searchLower)) {\n        results.push(object);\n        console.log(`✅ Object match found: ${objectId} (name: \"${object.name}\")`);\n      }\n    }\n    \n    return results;\n  }\n  \n  /**\n   * 複数オブジェクトから序数詞で選択\n   */\n  selectObjectFromMultiple(objects, originalCommand) {\n    // 序数詞パターンをチェック\n    const ordinalPatterns = [\n      /(\\d+)つ目の/, /(\\d+)番目の/, /(\\d+)個目の/,\n      /最初の|1つ目の|1番目の|1個目の/,\n      /最後の|最終の/,\n      /2つ目の|2番目の|2個目の/,\n      /3つ目の|3番目の|3個目の/\n    ];\n    \n    for (const pattern of ordinalPatterns) {\n      const match = originalCommand.match(pattern);\n      if (match) {\n        let index;\n        \n        if (match[1]) {\n          // 数字が見つかった場合\n          index = parseInt(match[1]) - 1; // 1ベースから0ベースに変換\n        } else {\n          // 特別な表現の場合\n          const matchedText = match[0];\n          if (matchedText.includes('最初') || matchedText.includes('1つ目') || \n              matchedText.includes('1番目') || matchedText.includes('1個目')) {\n            index = 0;\n          } else if (matchedText.includes('最後') || matchedText.includes('最終')) {\n            index = objects.length - 1;\n          } else if (matchedText.includes('2つ目') || matchedText.includes('2番目') || matchedText.includes('2個目')) {\n            index = 1;\n          } else if (matchedText.includes('3つ目') || matchedText.includes('3番目') || matchedText.includes('3個目')) {\n            index = 2;\n          }\n        }\n        \n        if (index >= 0 && index < objects.length) {\n          console.log(`🔢 Selected object by ordinal: index ${index + 1} of ${objects.length}`);\n          return objects[index];\n        } else {\n          console.warn(`⚠️ Invalid ordinal index: ${index + 1} (available: 1-${objects.length})`);\n        }\n      }\n    }\n    \n    // 序数詞が見つからない場合はデフォルトで最初のオブジェクト\n    console.log(`🔢 No ordinal specified, using first object`);\n    return objects[0];\n  }\n\n  /**\n   * オブジェクト変更実行\n   */\n  async executeObjectModification(parsed) {\n    // コマンドから対象オブジェクトを特定\n    let targetObject = this.findObjectByKeyword(parsed.command);\n    \n    // キーワードで見つからない場合、選択されたオブジェクトを使用\n    if (!targetObject) {\n      if (!this.selectedObject) {\n        return { \n          success: false, \n          message: 'オブジェクトを選択するか、対象を指定してください（例：「猫を赤くして」）' \n        };\n      }\n      targetObject = this.selectedObject;\n    } else {\n      // キーワードで見つけたオブジェクトを選択状態にする\n      this.selectObject(targetObject);\n\n      // オブジェクト認識成功のフィードバックエフェクト\n      this.applyRecognitionFeedback(targetObject);\n    }\n    console.log(`🔧 Modifying object: ${targetObject.name}`);\n    console.log(`🔍 Debug - parsed.movement:`, parsed.movement);\n    \n    let modified = false;\n    \n    // 色変更\n    if (parsed.color !== null && targetObject.material) {\n      if (targetObject.material.map) {\n        // テクスチャがある場合は色調変更\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Texture color tint changed to: #${parsed.color.toString(16)}`);\n      } else {\n        // テクスチャがない場合は直接色変更\n        targetObject.material.color.setHex(parsed.color);\n        targetObject.material.needsUpdate = true;\n        console.log(`🎨 Material color changed to: #${parsed.color.toString(16)}`);\n      }\n      modified = true;\n    }\n\n    // Phase 2: エフェクト適用\n    if (parsed.effects && parsed.effects.length > 0) {\n      const effectsApplied = this.applyEffects(targetObject, parsed.effects);\n      if (effectsApplied) {\n        modified = true;\n      }\n    }\n    \n    // サイズ変更\n    if (parsed.scale !== null) {\n      const currentScale = targetObject.scale.x; // 現在のスケール取得\n      const newScale = currentScale * parsed.scale;\n      targetObject.scale.setScalar(newScale);\n      console.log(`📏 Scale changed from ${currentScale} to ${newScale}`);\n      modified = true;\n    }\n    \n    // 位置移動\n    if (parsed.movement !== null) {\n      // 現在位置から相対移動\n      const currentPos = targetObject.position;\n      const newPos = {\n        x: currentPos.x + parsed.movement.x,\n        y: currentPos.y + parsed.movement.y,\n        z: currentPos.z + parsed.movement.z\n      };\n\n      targetObject.position.set(newPos.x, newPos.y, newPos.z);\n      console.log(`📍 Position moved from (${currentPos.x.toFixed(1)}, ${currentPos.y.toFixed(1)}, ${currentPos.z.toFixed(1)}) to (${newPos.x.toFixed(1)}, ${newPos.y.toFixed(1)}, ${newPos.z.toFixed(1)})`);\n      modified = true;\n    }\n\n    // 回転\n    if (parsed.rotation !== null) {\n      const currentRotation = targetObject.rotation.y;\n      const newRotation = currentRotation + parsed.rotation;\n      targetObject.rotation.y = newRotation;\n      const degrees = (parsed.rotation * 180 / Math.PI).toFixed(1);\n      console.log(`🔄 Rotation changed by ${degrees}° (new Y rotation: ${(newRotation * 180 / Math.PI).toFixed(1)}°)`);\n      modified = true;\n    }\n\n    // 透明度\n    if (parsed.opacity !== null && targetObject.material) {\n      const currentOpacity = targetObject.material.opacity || 1.0;\n      targetObject.material.opacity = parsed.opacity;\n      targetObject.material.transparent = parsed.opacity < 1.0;\n      console.log(`🔍 Opacity changed from ${currentOpacity.toFixed(2)} to ${parsed.opacity.toFixed(2)}`);\n      modified = true;\n    }\n\n    // 左右反転\n    if (parsed.flip) {\n      const currentScaleX = targetObject.scale.x;\n      targetObject.scale.x = -currentScaleX; // X軸を反転\n      console.log(`↔️ Object flipped horizontally (scale.x: ${currentScaleX} → ${targetObject.scale.x})`);\n      modified = true;\n    }\n    \n    if (modified) {\n      // メタデータ更新\n      targetObject.userData.lastModified = Date.now();\n      targetObject.userData.modifications = targetObject.userData.modifications || [];\n      targetObject.userData.modifications.push({\n        timestamp: Date.now(),\n        color: parsed.color,\n        scale: parsed.scale,\n        movement: parsed.movement,\n        rotation: parsed.rotation,\n        opacity: parsed.opacity,\n        command: parsed.command\n      });\n\n      this.updateAllAudioControlPositions();\n\n      return {\n        success: true,\n        message: `オブジェクト「${targetObject.name}」を変更しました`,\n        objectId: targetObject.name,\n        modifications: {\n          color: parsed.color,\n          scale: parsed.scale,\n          movement: parsed.movement,\n          rotation: parsed.rotation,\n          opacity: parsed.opacity\n        }\n      };\n    } else {\n      return { \n        success: false, \n        message: '変更可能な属性が見つかりませんでした' \n      };\n    }\n  }\n\n  /**\n   * 削除実行\n   */\n  async executeDelete(parsed) {\n    // コマンドの安全性チェック\n    const command = parsed.command || '';\n    \n    // 「すべて」削除の場合\n    if (parsed.target === 'all' || command.includes('すべて') || command.includes('全部')) {\n      this.clearAll();\n      return { success: true, message: 'すべてのオブジェクトを削除しました' };\n    }\n    \n    // まずコマンドから対象オブジェクトを特定\n    const targetByKeyword = this.findObjectByKeyword(command);\n    \n    // 削除対象の優先順位：\n    // 1. コマンドで指定されたオブジェクト\n    // 2. 選択されているオブジェクト\n    // 3. コマンドが単に「削除」だけの場合は選択オブジェクトを優先\n    \n    let targetObject = null;\n    let deleteReason = '';\n    \n    // コマンドが単純な削除コマンドか判定\n    const isSimpleDeleteCommand = command.match(/^(削除|消して|消す|delete|remove)$/i);\n    \n    if (isSimpleDeleteCommand && this.selectedObject) {\n      // 単純な「削除」コマンドで選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    } else if (targetByKeyword) {\n      // キーワードで特定できた場合\n      targetObject = targetByKeyword;\n      deleteReason = 'コマンドで指定されたオブジェクト';\n    } else if (this.selectedObject) {\n      // その他の場合で選択オブジェクトがある場合\n      targetObject = this.selectedObject;\n      deleteReason = '選択されたオブジェクト';\n    }\n    \n    if (targetObject) {\n      const objectId = targetObject.name;\n      console.log(`🗑️ Deleting ${deleteReason}: ${objectId}`);\n      \n      // 選択状態を解除\n      if (targetObject === this.selectedObject) {\n        this.deselectObject();\n      }\n      \n      // オブジェクトを削除\n      const success = this.removeObject(objectId);\n      \n      if (success) {\n        return { \n          success: true, \n          message: `${deleteReason}「${objectId}」を削除しました`,\n          deletedObjectId: objectId\n        };\n      } else {\n        return { \n          success: false, \n          message: 'オブジェクトの削除に失敗しました' \n        };\n      }\n    }\n    \n    return { \n      success: false, \n      message: '削除対象が見つかりませんでした。オブジェクトを選択するか、対象を指定してください' \n    };\n  }\n\n  async executeFileImport(parsed) {\n    try {\n      console.log('🍫 Starting file import process...');\n      \n      // ファイル選択ダイアログを表示\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.style.display = 'none';\n      \n      if (parsed.fileType === 'video') {\n        input.accept = 'video/*';\n      } else {\n        input.accept = 'image/*';\n      }\n      \n      document.body.appendChild(input);\n      \n      return new Promise((resolve, reject) => {\n        input.onchange = async (event) => {\n          try {\n            const file = event.target.files[0];\n            if (!file) {\n              reject(new Error('ファイルが選択されませんでした'));\n              return;\n            }\n            \n            console.log(`📁 Selected file: ${file.name}`);\n            \n            // ファイルのObjectURLを作成\n            const fileUrl = URL.createObjectURL(file);\n            \n            let result;\n            if (parsed.fileType === 'video' || file.type.startsWith('video/')) {\n              result = await this.loadVideoFile(fileUrl, { position: parsed.position });\n            } else {\n              result = await this.loadImageFile(fileUrl, { position: parsed.position });\n            }\n            \n            console.log('✅ File import completed:', result);\n            resolve(result);\n            \n          } catch (error) {\n            console.error('❌ File import failed:', error);\n            reject(error);\n          } finally {\n            document.body.removeChild(input);\n          }\n        };\n        \n        input.oncancel = () => {\n          document.body.removeChild(input);\n          reject(new Error('ファイル選択がキャンセルされました'));\n        };\n        \n        input.click();\n      });\n      \n    } catch (error) {\n      console.error('❌ File import execution failed:', error);\n      throw error;\n    }\n  }\n\n  async executeObjectSelection(parsed) {\n    try {\n      console.log('🎯 Starting object selection...');\n      \n      const objects = this.getSpawnedObjects();\n      if (objects.length === 0) {\n        throw new Error('選択可能なオブジェクトがありません。まずファイルをインポートしてください。');\n      }\n      \n      console.log(`📋 Available objects: ${objects.length}`);\n      \n      // オブジェクト選択UIを作成\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.8);\n        z-index: 10000;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `;\n      \n      const container = document.createElement('div');\n      container.style.cssText = `\n        background: #1a1a2e;\n        border-radius: 12px;\n        padding: 24px;\n        max-width: 500px;\n        max-height: 70vh;\n        overflow-y: auto;\n        color: white;\n        font-family: Arial, sans-serif;\n      `;\n      \n      const title = document.createElement('h3');\n      title.textContent = '🎯 オブジェクトを選択してください';\n      title.style.cssText = 'margin: 0 0 16px 0; color: #ec4899;';\n      container.appendChild(title);\n      \n      const objectList = document.createElement('div');\n      objectList.style.cssText = 'margin-bottom: 16px;';\n      \n      objects.forEach((obj, index) => {\n        const item = document.createElement('div');\n        item.style.cssText = `\n          padding: 12px;\n          margin: 8px 0;\n          background: #2a2a3e;\n          border-radius: 8px;\n          cursor: pointer;\n          border: 2px solid transparent;\n          transition: all 0.3s ease;\n        `;\n        \n        const name = obj.userData?.type === 'generated_image' ? '🖼️ 画像' : \n                     obj.userData?.type === 'generated_video' ? '🎬 動画' : '📄 ファイル';\n        const time = new Date(obj.userData?.createdAt).toLocaleTimeString();\n        \n        item.innerHTML = `\n          <div style=\"font-weight: bold;\">${name} #${index + 1}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">作成: ${time}</div>\n          <div style=\"font-size: 12px; color: #94a3b8;\">位置: (${Math.round(obj.position.x)}, ${Math.round(obj.position.y)}, ${Math.round(obj.position.z)})</div>\n        `;\n        \n        item.onmouseover = () => {\n          item.style.borderColor = '#ec4899';\n          item.style.background = '#3a3a4e';\n        };\n        \n        item.onmouseout = () => {\n          item.style.borderColor = 'transparent';\n          item.style.background = '#2a2a3e';\n        };\n        \n        item.onclick = () => {\n          resolve({ selectedObjectId: obj.id, selectedObject: obj });\n          document.body.removeChild(modal);\n        };\n        \n        objectList.appendChild(item);\n      });\n      \n      container.appendChild(objectList);\n      \n      const cancelBtn = document.createElement('button');\n      cancelBtn.textContent = 'キャンセル';\n      cancelBtn.style.cssText = `\n        background: #666;\n        color: white;\n        border: none;\n        padding: 8px 16px;\n        border-radius: 6px;\n        cursor: pointer;\n        font-size: 14px;\n      `;\n      \n      cancelBtn.onclick = () => {\n        document.body.removeChild(modal);\n        reject(new Error('オブジェクト選択がキャンセルされました'));\n      };\n      \n      container.appendChild(cancelBtn);\n      modal.appendChild(container);\n      document.body.appendChild(modal);\n      \n      return new Promise((resolve, reject) => {\n        // Promise handlers are set up in the click events above\n      });\n      \n    } catch (error) {\n      console.error('❌ Object selection failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * フォールバック用のテクスチャ作成\n   */\n  createFallbackTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // グラデーション背景\n    const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n    gradient.addColorStop(0, `hsl(${hue}, 70%, 60%)`);\n    gradient.addColorStop(1, `hsl(${(hue + 60) % 360}, 70%, 40%)`);\n    \n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 512, 512);\n    \n    // テキスト描画\n    ctx.fillStyle = 'white';\n    ctx.font = '24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('🎨', 256, 230);\n    \n    ctx.font = '16px Arial';\n    ctx.fillText(prompt.slice(0, 20), 256, 270);\n    \n    ctx.font = '14px Arial';\n    ctx.fillStyle = 'rgba(255,255,255,0.7)';\n    ctx.fillText('Placeholder Image', 256, 300);\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * フォールバック用の動画テクスチャ作成\n   */\n  createFallbackVideoTexture(prompt) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 512;\n    canvas.height = 512;\n    const ctx = canvas.getContext('2d');\n    \n    // プロンプトベースの色を生成\n    const hash = this.hashString(prompt);\n    const hue = hash % 360;\n    \n    // アニメーション用の変数\n    let animationFrame = 0;\n    \n    const animate = () => {\n      // グラデーション背景（時間で変化）\n      const gradient = ctx.createLinearGradient(0, 0, 512, 512);\n      const offset = (animationFrame * 2) % 360;\n      gradient.addColorStop(0, `hsl(${(hue + offset) % 360}, 70%, 60%)`);\n      gradient.addColorStop(1, `hsl(${(hue + offset + 60) % 360}, 70%, 40%)`);\n      \n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, 512, 512);\n      \n      // 動的テキスト描画\n      ctx.fillStyle = 'white';\n      ctx.font = '24px Arial';\n      ctx.textAlign = 'center';\n      \n      // 動画アイコンをアニメーション\n      const icons = ['🎬', '🎥', '📹', '🎞️'];\n      const iconIndex = Math.floor(animationFrame / 10) % icons.length;\n      ctx.fillText(icons[iconIndex], 256, 230);\n      \n      ctx.font = '16px Arial';\n      ctx.fillText(prompt.slice(0, 20), 256, 270);\n      \n      ctx.font = '14px Arial';\n      ctx.fillStyle = 'rgba(255,255,255,0.7)';\n      ctx.fillText('Placeholder Video', 256, 300);\n      \n      animationFrame++;\n      \n      // 60FPSでアニメーション\n      setTimeout(() => requestAnimationFrame(animate), 1000/60);\n    };\n    \n    // アニメーション開始\n    animate();\n    \n    return new THREE.CanvasTexture(canvas);\n  }\n\n  /**\n   * 文字列のハッシュ値を計算\n   */\n  hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // 32bit整数に変換\n    }\n    return Math.abs(hash);\n  }\n\n  /**\n   * 生成されたオブジェクト一覧取得\n   */\n  getSpawnedObjects() {\n    return Array.from(this.spawnedObjects.entries()).map(([id, object]) => ({\n      id,\n      name: object.name,\n      userData: object.userData,\n      position: object.position.clone()\n    }));\n  }\n\n  /**\n   * オブジェクト削除\n   */\n  removeObject(objectId) {\n    const object = this.spawnedObjects.get(objectId);\n    if (object) {\n      if (object.userData?.videoElement) {\n        const videoElement = object.userData.videoElement;\n        try {\n          videoElement.pause();\n          if (typeof videoElement.removeAttribute === 'function') {\n            videoElement.removeAttribute('src');\n          } else {\n            videoElement.src = '';\n          }\n          if (typeof videoElement.load === 'function') {\n            videoElement.load();\n          }\n        } catch (error) {\n          console.warn('🎬 Failed to release video element resources:', error);\n        }\n      }\n\n      if (object.userData?.objectUrl) {\n        try {\n          URL.revokeObjectURL(object.userData.objectUrl);\n        } catch (error) {\n          console.warn('🎬 Failed to revoke object URL:', error);\n        }\n      }\n\n      if (object.userData?.cleanupCallbacks) {\n        try {\n          object.userData.cleanupCallbacks.forEach(cb => {\n            if (typeof cb === 'function') cb();\n          });\n        } catch (error) {\n          console.warn('🧹 Cleanup callbacks failed:', error);\n        }\n      }\n\n      this.experimentGroup.remove(object);\n      this.spawnedObjects.delete(objectId);\n      \n      // ジオメトリとマテリアルのメモリ解放\n      if (object.geometry) object.geometry.dispose();\n      if (object.material) {\n        const materials = Array.isArray(object.material) ? object.material : [object.material];\n        materials.forEach(mat => {\n          if (mat.map && typeof mat.map.dispose === 'function') {\n            mat.map.dispose();\n          }\n          mat.dispose();\n        });\n      }\n      \n      console.log(`🗑️ Removed object: ${objectId}`);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    const objectIds = Array.from(this.spawnedObjects.keys());\n    objectIds.forEach(id => this.removeObject(id));\n    console.log('🧹 Cleared all experimental objects');\n  }\n\n  /**\n   * コマンド履歴取得\n   */\n  getCommandHistory() {\n    return [...this.commandHistory];\n  }\n\n  /**\n   * 生成位置に一時的な視覚インジケーターを表示\n   */\n  createLocationIndicator(relativePosition) {\n    // 目立つ光る球体を作成\n    const geometry = new THREE.SphereGeometry(1, 16, 16);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00,\n      transparent: true,\n      opacity: 0.9\n    });\n    \n    const indicator = new THREE.Mesh(geometry, material);\n    \n    // カメラ相対位置でインジケーターも配置\n    if (this.camera) {\n      const indicatorPos = this.calculateCameraRelativePosition({\n        x: relativePosition.x,\n        y: relativePosition.y + 2, // オブジェクトの少し上に表示\n        z: relativePosition.z\n      });\n      indicator.position.copy(indicatorPos);\n    } else {\n      indicator.position.set(relativePosition.x, relativePosition.y + 2, relativePosition.z);\n    }\n    \n    console.log(`🟢 インジケーター表示: (${indicator.position.x.toFixed(1)}, ${indicator.position.y.toFixed(1)}, ${indicator.position.z.toFixed(1)})`);\n    \n    this.scene.add(indicator);\n    \n    // 設定された時間後に自動削除\n    setTimeout(() => {\n      this.scene.remove(indicator);\n      geometry.dispose();\n      material.dispose();\n    }, this.config.indicatorDuration);\n    \n    // アニメーション（点滅効果）\n    let opacity = 0.8;\n    let direction = -1;\n    const animate = () => {\n      opacity += direction * 0.05;\n      if (opacity <= 0.3) direction = 1;\n      if (opacity >= 0.8) direction = -1;\n      \n      material.opacity = opacity;\n      \n      if (indicator.parent) {\n        requestAnimationFrame(animate);\n      }\n    };\n    animate();\n  }\n\n  /**\n   * カメラ相対位置計算（画面座標対応）\n   */\n  calculateCameraRelativePosition(relativePosition) {\n    if (!this.camera) {\n      if (this.config.enableDebugLogging) {\n        console.warn('📷 Camera not available, using fallback positioning');\n      }\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n\n    try {\n      // カメラの位置と方向を取得\n      const cameraPos = this.camera.position.clone();\n      const cameraDirection = new THREE.Vector3();\n      this.camera.getWorldDirection(cameraDirection);\n      \n      // カメラの右方向と上方向を計算\n      const cameraRight = new THREE.Vector3();\n      const cameraUp = new THREE.Vector3(0, 1, 0); // ワールドの上方向\n      cameraRight.crossVectors(cameraDirection, cameraUp).normalize();\n      const cameraUpActual = new THREE.Vector3();\n      cameraUpActual.crossVectors(cameraRight, cameraDirection).normalize();\n\n      // 相対位置をカメラ座標系で計算\n      const finalPosition = cameraPos.clone();\n      \n      // 前後方向（Z軸）: カメラの向きに沿って（正の値で前方、負の値で後方）\n      finalPosition.add(cameraDirection.clone().multiplyScalar(relativePosition.z));\n      \n      // 左右方向（X軸）: カメラの右方向に沿って\n      finalPosition.add(cameraRight.clone().multiplyScalar(relativePosition.x));\n      \n      // 上下方向（Y軸）: カメラの上方向に沿って\n      finalPosition.add(cameraUpActual.clone().multiplyScalar(relativePosition.y));\n\n      this.logDebug(\n        `📍 Camera relative position calculated: (${finalPosition.x.toFixed(1)}, ${finalPosition.y.toFixed(1)}, ${finalPosition.z.toFixed(1)})`\n      );\n      return finalPosition;\n      \n    } catch (error) {\n      console.error('❌ Camera relative position calculation failed:', error);\n      return new THREE.Vector3(relativePosition.x, relativePosition.y, relativePosition.z);\n    }\n  }\n\n  /**\n   * カメラを設定\n   */\n  alignPlaneToCamera(plane) {\n    if (!this.camera) {\n      return;\n    }\n\n    const forward = new THREE.Vector3();\n    this.camera.getWorldDirection(forward); // カメラの前方向（前方が負Z）\n    forward.negate(); // 平面の法線をカメラ側へ向ける\n\n    let up = new THREE.Vector3().copy(this.camera.up).applyQuaternion(this.camera.quaternion).normalize();\n    if (Math.abs(forward.dot(up)) > 0.999) {\n      up = new THREE.Vector3(0, 1, 0);\n      if (Math.abs(forward.dot(up)) > 0.999) {\n        up = new THREE.Vector3(0, 0, 1);\n      }\n    }\n\n    const right = new THREE.Vector3().crossVectors(up, forward).normalize();\n    up = new THREE.Vector3().crossVectors(forward, right).normalize();\n\n    const orientation = new THREE.Matrix4();\n    orientation.makeBasis(right, up, forward);\n    plane.quaternion.setFromRotationMatrix(orientation);\n  }\n\n  /**\n   * カメラを設定\n   */\n  setCamera(camera) {\n    this.camera = camera;\n  }\n\n  /**\n   * 設定を更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  setImageService(serviceId) {\n    this.selectedImageService = serviceId || null;\n    this.logDebug('🎯 Updated image service:', this.selectedImageService);\n  }\n\n  getImageService() {\n    return this.selectedImageService;\n  }\n\n  setVideoService(serviceId) {\n    this.selectedVideoService = serviceId || null;\n    this.logDebug('🎬 Updated video service:', this.selectedVideoService);\n  }\n\n  getVideoService() {\n    return this.selectedVideoService;\n  }\n\n\n\n\n\n  /**\n   * 音声制御UIを作成\n   */\n  createAudioControl(videoObject) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    // 音声制御ボタンを作成\n    const audioButton = document.createElement('div');\n    audioButton.className = 'chocodrop-audio-control';\n    audioButton.innerHTML = '♪'; // 初期状態：音楽記号\n    // カスタムツールチップを作成（プロジェクトのデザインシステムに合わせて）\n    const createTooltip = () => {\n      const tooltip = document.createElement('div');\n      tooltip.className = 'chocodrop-audio-tooltip';\n      tooltip.textContent = '音声のオン/オフ切り替え';\n      tooltip.style.cssText = `\n        position: absolute !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 8px !important;\n        padding: 8px 12px !important;\n        color: white !important;\n        font-size: 11px !important;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n        font-weight: 500 !important;\n        white-space: nowrap !important;\n        pointer-events: none !important;\n        z-index: 1000000 !important;\n        opacity: 0 !important;\n        transform: translateY(-100%) translateX(-50%) !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        margin-bottom: 8px !important;\n      `;\n      return tooltip;\n    };\n\n    const tooltip = createTooltip();\n    document.body.appendChild(tooltip);\n\n    // 縦型音量スライダーを作成\n    const createVolumeSlider = () => {\n      const sliderContainer = document.createElement('div');\n      sliderContainer.className = 'chocodrop-volume-slider';\n      sliderContainer.style.cssText = `\n        position: absolute !important;\n        width: 30px !important;\n        height: 100px !important;\n        background: rgba(0, 0, 0, 0.85) !important;\n        backdrop-filter: blur(12px) !important;\n        -webkit-backdrop-filter: blur(12px) !important;\n        border: 1px solid rgba(255, 255, 255, 0.15) !important;\n        border-radius: 15px !important;\n        padding: 10px 8px !important;\n        z-index: 1000001 !important;\n        opacity: 0 !important;\n        pointer-events: none !important;\n        transition: opacity 0.2s ease !important;\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3) !important;\n        display: flex !important;\n        flex-direction: column !important;\n        align-items: center !important;\n        justify-content: center !important;\n      `;\n\n      const slider = document.createElement('input');\n      slider.type = 'range';\n      slider.min = '0';\n      slider.max = '100';\n      slider.value = '100';\n      slider.style.cssText = `\n        width: 80px !important;\n        height: 12px !important;\n        background: rgba(255, 255, 255, 0.2) !important;\n        border-radius: 6px !important;\n        outline: none !important;\n        cursor: pointer !important;\n        -webkit-appearance: none !important;\n        appearance: none !important;\n        transform: rotate(-90deg) !important;\n        transform-origin: center !important;\n      `;\n\n      // WebKit用のスライダースタイル\n      const style = document.createElement('style');\n      style.textContent = `\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-track {\n          width: 6px;\n          height: 80px;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 3px;\n          border: none;\n        }\n        .chocodrop-volume-slider input[type=\"range\"]::-moz-range-thumb {\n          width: 14px;\n          height: 14px;\n          background: white;\n          border-radius: 50%;\n          cursor: pointer;\n          border: none;\n          box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        }\n      `;\n      document.head.appendChild(style);\n\n      // スライダーのスタイルをカスタマイズ\n      slider.addEventListener('input', (e) => {\n        const value = e.target.value;\n        videoElement.volume = value / 100;\n\n        // アイコンを音量に応じて変更\n        if (value == 0) {\n          audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n          audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n          audioButton.title = 'ミュート中';\n        } else {\n          audioButton.innerHTML = '♪';\n          audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n          audioButton.style.color = 'white !important';\n          audioButton.title = '音声ON';\n        }\n      });\n\n      sliderContainer.appendChild(slider);\n      return sliderContainer;\n    };\n\n    const volumeSlider = createVolumeSlider();\n    document.body.appendChild(volumeSlider);\n\n    audioButton.style.cssText = `\n      position: absolute !important;\n      width: 18px !important;\n      height: 18px !important;\n      background: rgba(0, 0, 0, 0.4) !important;\n      border: 1px solid rgba(255, 255, 255, 0.3) !important;\n      border-radius: 50% !important;\n      color: white !important;\n      font-size: 9px !important;\n      cursor: pointer !important;\n      display: flex !important;\n      align-items: center !important;\n      justify-content: center !important;\n      z-index: 999999 !important;\n      transition: all 0.2s ease !important;\n      user-select: none !important;\n      box-shadow: 0 1px 4px rgba(0,0,0,0.2) !important;\n      backdrop-filter: blur(8px) !important;\n      pointer-events: auto !important;\n      opacity: 1 !important;\n    `;\n\n    let isSliderVisible = false;\n\n    // ホバー効果とスライダー表示\n    audioButton.addEventListener('mouseenter', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.7)';\n      audioButton.style.transform = 'scale(1.05)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.5)';\n\n      if (!isSliderVisible) {\n        // ツールチップを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        tooltip.style.left = `${buttonRect.left + buttonRect.width / 2}px`;\n        tooltip.style.top = `${buttonRect.top - 8}px`;\n        tooltip.style.opacity = '1';\n      }\n    });\n\n    audioButton.addEventListener('mouseleave', () => {\n      audioButton.style.background = 'rgba(0, 0, 0, 0.5)';\n      audioButton.style.transform = 'scale(1.0)';\n      audioButton.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n\n      // ツールチップを非表示\n      tooltip.style.opacity = '0';\n    });\n\n    // 左クリック：ミュートのオン/オフ切り替え\n    audioButton.addEventListener('click', (e) => {\n      e.stopPropagation();\n\n      // スライダーが表示されている場合は閉じる\n      if (isSliderVisible) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n        return;\n      }\n\n      // ミュート切り替え\n      if (videoElement.muted || videoElement.volume === 0) {\n        videoElement.muted = false;\n        videoElement.volume = volumeSlider.querySelector('input').value / 100;\n        audioButton.innerHTML = '♪';\n        audioButton.style.background = 'rgba(0, 0, 0, 0.4) !important';\n        audioButton.style.color = 'white !important';\n        audioButton.title = '音声ON';\n      } else {\n        videoElement.muted = true;\n        audioButton.innerHTML = '<span style=\"position: relative;\">♪<span style=\"position: absolute; top: 0; left: 0; color: #8b5cf6; font-size: 14px;\">⃠</span></span>';\n        audioButton.style.background = 'rgba(99, 102, 241, 0.6) !important';\n        audioButton.title = 'ミュート中';\n      }\n    });\n\n    // 右クリック：音量スライダーの表示/非表示切り替え\n    audioButton.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      isSliderVisible = !isSliderVisible;\n\n      if (isSliderVisible) {\n        // スライダーを表示\n        const buttonRect = audioButton.getBoundingClientRect();\n        volumeSlider.style.left = `${buttonRect.left + buttonRect.width / 2 - 15}px`;\n        volumeSlider.style.top = `${buttonRect.top - 110}px`;\n        volumeSlider.style.opacity = '1';\n        volumeSlider.style.pointerEvents = 'auto';\n\n        // ツールチップを非表示\n        tooltip.style.opacity = '0';\n      } else {\n        // スライダーを非表示\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // 外側クリックでスライダーを閉じる\n    document.addEventListener('click', (e) => {\n      if (isSliderVisible && !audioButton.contains(e.target) && !volumeSlider.contains(e.target)) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // ページに追加\n    document.body.appendChild(audioButton);\n\n    // 動画オブジェクトに音声制御ボタンを関連付け\n    videoObject.userData.audioControlElement = audioButton;\n\n    // 位置更新関数を保存\n    videoObject.userData.updateAudioControlPosition = () => {\n      this.updateAudioControlPosition(videoObject, audioButton);\n    };\n\n    // 初期位置設定\n    this.updateAudioControlPosition(videoObject, audioButton);\n\n    this.audioControls.set(videoObject.userData.id || videoObject.uuid, {\n      object: videoObject,\n      audioButton,\n      tooltip,\n      volumeSlider,\n      hideSlider: () => {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    });\n\n    // スクロール・リサイズで追随\n    if (!this.audioControlUpdateListener) {\n      this.audioControlUpdateListener = () => {\n        this.updateAllAudioControlPositions();\n      };\n      window.addEventListener('scroll', this.audioControlUpdateListener, { passive: true });\n      window.addEventListener('resize', this.audioControlUpdateListener, { passive: true });\n    }\n\n    if (!this.audioControlUpdateInterval) {\n      this.audioControlUpdateInterval = setInterval(() => {\n        this.updateAllAudioControlPositions();\n      }, 100);\n    }\n\n    const cleanup = () => {\n      document.removeEventListener('click', onDocumentClick, true);\n      if (audioButton.parentNode) audioButton.parentNode.removeChild(audioButton);\n      if (tooltip.parentNode) tooltip.parentNode.removeChild(tooltip);\n      if (volumeSlider.parentNode) volumeSlider.parentNode.removeChild(volumeSlider);\n      this.audioControls.delete(videoObject.userData.id || videoObject.uuid);\n\n      if (this.audioControls.size === 0) {\n        if (this.audioControlUpdateInterval) {\n          clearInterval(this.audioControlUpdateInterval);\n          this.audioControlUpdateInterval = null;\n        }\n        if (this.audioControlUpdateListener) {\n          window.removeEventListener('scroll', this.audioControlUpdateListener);\n          window.removeEventListener('resize', this.audioControlUpdateListener);\n          this.audioControlUpdateListener = null;\n        }\n      }\n    };\n\n    const onDocumentClick = (e) => {\n      if (isSliderVisible && !audioButton.contains(e.target) && !volumeSlider.contains(e.target)) {\n        isSliderVisible = false;\n        volumeSlider.style.opacity = '0';\n        volumeSlider.style.pointerEvents = 'none';\n      }\n    };\n\n    document.addEventListener('click', onDocumentClick, true);\n\n    videoObject.userData.cleanupCallbacks = videoObject.userData.cleanupCallbacks || [];\n    videoObject.userData.cleanupCallbacks.push(cleanup);\n\n    console.log('🔊 Audio control created for video:', videoObject.userData.id);\n  }\n\n  /**\n   * 音声制御ボタンの位置を動画オブジェクトに合わせて更新\n   */\n  updateAudioControlPosition(videoObject, audioButton) {\n    if (!this.camera || !this.renderer || !audioButton.parentNode) return;\n\n    // 動画オブジェクトの3D座標を画面座標に変換\n    const vector = new THREE.Vector3();\n    videoObject.getWorldPosition(vector);\n    vector.project(this.camera);\n\n    // 画面座標に変換\n    const canvas = this.renderer.domElement;\n    const rect = canvas.getBoundingClientRect();\n\n    const x = (vector.x * 0.5 + 0.5) * rect.width + rect.left;\n    const y = -(vector.y * 0.5 - 0.5) * rect.height + rect.top;\n\n    // 動画オブジェクトの右上にボタンを配置\n    const geometry = videoObject.geometry;\n    if (geometry && geometry.parameters) {\n      const width = geometry.parameters.width * videoObject.scale.x;\n      const offsetX = 150; // 動画の右側に固定距離\n      const offsetY = -50; // 動画の上側に固定距離\n\n      audioButton.style.left = `${x + offsetX}px`;\n      audioButton.style.top = `${y + offsetY}px`;\n    } else {\n      // フォールバック: 動画中心の右上\n      audioButton.style.left = `${x + 50}px`;\n      audioButton.style.top = `${y - 20}px`;\n    }\n  }\n\n  updateAllAudioControlPositions() {\n    if (!this.audioControls || this.audioControls.size === 0) {\n      return;\n    }\n\n    this.audioControls.forEach((entry) => {\n      const obj = entry.object;\n      if (obj && obj.userData && obj.userData.updateAudioControlPosition) {\n        obj.userData.updateAudioControlPosition();\n      }\n    });\n  }\n\n  /**\n   * 動画音声の再生/停止を切り替え\n   */\n  toggleVideoAudio(videoObject, audioButton) {\n    const videoElement = videoObject.userData.videoElement;\n    if (!videoElement) return;\n\n    if (videoElement.muted) {\n      // ミュート解除：音声再生\n      videoElement.muted = false;\n      audioButton.innerHTML = '🔈'; // 音声再生中マーク\n      console.log('🔊 Audio enabled for video:', videoObject.userData.id);\n    } else {\n      // ミュート：音声停止\n      videoElement.muted = true;\n      audioButton.innerHTML = '🔊'; // 音声ありマーク\n      console.log('🔇 Audio muted for video:', videoObject.userData.id);\n    }\n  }\n\n  /**\n   * CSS2DRenderer初期化（音声制御UIなどの表示に必要）\n   */\n  initializeLabelRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に初期化済み\n    }\n\n    // CSS2DRendererを動的に読み込んで初期化\n    this.loadAndInitializeCSS2DRenderer();\n  }\n\n  /**\n   * CSS2DRendererの準備完了を保証\n   */\n  async ensureCSS2DRenderer() {\n    if (this.labelRenderer) {\n      return; // 既に準備完了\n    }\n\n    // 初期化処理がまだの場合は開始\n    if (!this.css2dInitPromise) {\n      this.css2dInitPromise = this.loadAndInitializeCSS2DRenderer();\n    }\n\n    // 初期化完了まで待機\n    await this.css2dInitPromise;\n  }\n\n  /**\n   * CSS2DRendererの動的読み込みと初期化\n   */\n  async loadAndInitializeCSS2DRenderer() {\n    try {\n      // CSS2DRendererが既に利用可能な場合\n      if (window.THREE && window.THREE.CSS2DRenderer) {\n        this.setupCSS2DRenderer();\n        return;\n      }\n\n      // Three.jsのCSS2DRendererを動的に読み込み\n      console.log('🏷️ Loading CSS2DRenderer dynamically...');\n\n      // CDNからCSS2DRendererを読み込み\n      const module = await import('https://cdn.skypack.dev/three@0.158.0/examples/jsm/renderers/CSS2DRenderer.js');\n\n      // グローバルに設定\n      if (!window.THREE) window.THREE = {};\n      window.THREE.CSS2DRenderer = module.CSS2DRenderer;\n      window.THREE.CSS2DObject = module.CSS2DObject;\n\n      console.log('✅ CSS2DRenderer loaded successfully');\n      this.setupCSS2DRenderer();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to load CSS2DRenderer:', error);\n      console.warn('🔧 Audio controls will not be visible. Please include CSS2DRenderer in your project.');\n    }\n  }\n\n  /**\n   * CSS2DRendererのセットアップ\n   */\n  setupCSS2DRenderer() {\n    try {\n      this.labelRenderer = new window.THREE.CSS2DRenderer();\n      this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n      this.labelRenderer.domElement.style.position = 'absolute';\n      this.labelRenderer.domElement.style.top = '0px';\n      this.labelRenderer.domElement.style.pointerEvents = 'none';\n\n      // メインレンダラーのコンテナに追加\n      if (this.renderer && this.renderer.domElement.parentNode) {\n        this.renderer.domElement.parentNode.appendChild(this.labelRenderer.domElement);\n      } else {\n        document.body.appendChild(this.labelRenderer.domElement);\n      }\n\n      console.log('🏷️ CSS2DRenderer initialized for UI overlays');\n\n      // リサイズハンドラーを追加\n      this.addLabelRendererResizeHandler();\n\n    } catch (error) {\n      console.warn('⚠️ Failed to setup CSS2DRenderer:', error);\n    }\n  }\n\n  /**\n   * CSS2DRendererのリサイズハンドラー追加\n   */\n  addLabelRendererResizeHandler() {\n    if (!this.labelRendererResizeHandler) {\n      this.labelRendererResizeHandler = () => {\n        if (this.labelRenderer) {\n          this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n        }\n      };\n      window.addEventListener('resize', this.labelRendererResizeHandler);\n    }\n  }\n\n  /**\n   * レンダリング更新（アニメーションループで呼び出し）\n   */\n  updateRenderer() {\n    if (this.labelRenderer && this.scene && this.camera) {\n      this.labelRenderer.render(this.scene, this.camera);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * 2025年トレンド: アダプティブ選択インジケーター色計算\n   * 背景色を自動検出してWCAG 2025基準のコントラスト比を保証\n   */\n  getAdaptiveSelectionColor() {\n    // シーンの背景色を取得\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 }; // デフォルト中間色\n    \n    if (backgroundColor) {\n      if (backgroundColor.isColor) {\n        bgColor = {\n          r: backgroundColor.r,\n          g: backgroundColor.g,\n          b: backgroundColor.b\n        };\n      }\n    }\n    \n    // 明度計算（相対輝度）\n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    // WCAG 2025準拠: 4.5:1以上のコントラスト比を確保\n    // 背景が暗い場合は明るい色、明るい場合は暗い色を選択\n    if (bgLuminance < 0.5) {\n      // 暗い背景: 明るいアクセント色\n      return 0x00ff88; // 明るいティール\n    } else {\n      // 明るい背景: 暗いアクセント色  \n      return 0x1a1a2e; // ダークネイビー\n    }\n  }\n  \n  /**\n   * アダプティブホバー色計算\n   */\n  getAdaptiveHoverColor() {\n    const backgroundColor = this.scene.background;\n    let bgColor = { r: 0.5, g: 0.5, b: 0.5 };\n    \n    if (backgroundColor && backgroundColor.isColor) {\n      bgColor = {\n        r: backgroundColor.r,\n        g: backgroundColor.g,\n        b: backgroundColor.b\n      };\n    }\n    \n    const getLuminance = (color) => {\n      const { r, g, b } = color;\n      const rs = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n      const gs = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n      const bs = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n      return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n    };\n    \n    const bgLuminance = getLuminance(bgColor);\n    \n    if (bgLuminance < 0.5) {\n      // 暗い背景: より明るいホバー色\n      return 0x00ffff; // シアン\n    } else {\n      // 明るい背景: より暗いホバー色\n      return 0xff3366; // ダークピンク\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  dispose() {\n    this.clearAll();\n    if (this.experimentGroup.parent) {\n      this.experimentGroup.parent.remove(this.experimentGroup);\n    }\n  }\n}\n","const IMAGE_SERVICE_STORAGE_KEY = 'chocodrop-service-image';\nconst VIDEO_SERVICE_STORAGE_KEY = 'chocodrop-service-video';\n\n/**\n * Command UI Demo - Demo version with restricted functionality\n * For GitHub Pages demo - import functionality only\n */\nexport class CommandUIDemo {\n  constructor(options = {}) {\n    this.sceneManager = options.sceneManager || null;\n    this.client = options.client || null;\n    this.onControlsToggle = options.onControlsToggle || (() => {});\n    \n    this.isVisible = false;\n    this.container = null;\n    this.input = null;\n    this.output = null;\n    this.currentMode = 'generate';\n\n    // リアルタイム進捗管理\n    this.activeConnections = new Map();\n    this.currentTaskId = null;\n    \n    // 設定\n    this.config = {\n      activationKey: options.activationKey || '@',\n      position: options.position || 'bottom-right',\n      width: options.width || 450,\n      maxHeight: options.maxHeight || 600,\n      theme: options.theme || 'dark',\n      skipServiceDialog: options.skipServiceDialog !== false,  // GitHub Pages用：デフォルトで無効化\n      showExamples: options.showExamples !== false,\n      autoScroll: options.autoScroll !== false,\n      enableDebugLogging: options.enableDebugLogging === true,\n      ...options.config\n    };\n\n    this.availableImageServices = [];\n    this.availableVideoServices = [];\n    this.selectedImageService = null;\n    this.selectedVideoService = null;\n    this.imageServiceSelect = null;\n    this.videoServiceSelect = null;\n    this.serviceSelectorContainer = null;\n    this.serviceSelectorStatus = null;\n    this.serviceSelectorContent = null;\n    this.serviceSelectorRetryButton = null;\n    this.serviceSelectorSaveButton = null;\n    this.serviceSelectorCancelButton = null;\n    this.serviceModalOverlay = null;\n    this.serviceModal = null;\n    this.servicesLoading = false;\n    this.isExpanded = false;\n    this.overlayTextarea = null;\n    this.pendingImageService = null;\n    this.pendingVideoService = null;\n\n    try {\n      const storedImage = localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY);\n      const storedVideo = localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY);\n      if (storedImage) {\n        this.selectedImageService = storedImage;\n      }\n      if (storedVideo) {\n        this.selectedVideoService = storedVideo;\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to load stored service selections:', error);\n    }\n\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    this.applyServiceSelectionToSceneManager();\n\n    // テーマモード状態管理 (light, dark, wabisabi)\n    this.currentTheme = localStorage.getItem('live-command-theme') || 'light';\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    \n    // Undo/Redo システム\n    this.commandHistory = [];\n    this.currentHistoryIndex = -1;\n    this.maxHistorySize = 50; // 最大コマンド保存数\n    \n    this.initUI();\n    this.bindEvents();\n\n    if (!this.client && this.sceneManager && this.sceneManager.client) {\n      this.client = this.sceneManager.client;\n    }\n\n    this.createServiceModal();\n    this.createFloatingChocolateIcon();\n\n    // DOM読み込み完了後にスタイルを確実に適用\n    document.addEventListener('DOMContentLoaded', () => {\n      this.refreshStyles();\n    });\n\n    this.logDebug('🎮 CommandUI initialized');\n\n    // GitHub Pages等でサービス設定を不要にする場合はスキップ\n    if (!this.config.skipServiceDialog && (!this.selectedImageService || !this.selectedVideoService)) {\n      this.openServiceModal(true);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * デモページ用のコンパクトトースト表示\n   */\n  showDemoMessage() {\n    this.showCompactToast('デモページでは利用できません');\n  }\n\n  /**\n   * コンパクトトースト通知を表示\n   */\n  showCompactToast(message) {\n    // 既存のトーストがあれば削除\n    const existingToast = document.getElementById('demo-toast');\n    if (existingToast) {\n      existingToast.remove();\n    }\n\n    // ボタンコンテナの位置を取得\n    const buttonContainer = this.radioModeContainer;\n    if (!buttonContainer) return;\n\n    const toast = document.createElement('div');\n    toast.id = 'demo-toast';\n    toast.textContent = message;\n    toast.style.cssText = `\n      position: absolute;\n      top: -35px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: ${this.isDarkMode ? 'rgba(139, 92, 246, 0.9)' : 'rgba(139, 92, 246, 0.85)'};\n      color: white;\n      padding: 6px 12px;\n      border-radius: 6px;\n      font-size: 12px;\n      font-weight: 500;\n      white-space: nowrap;\n      z-index: 1000;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      box-shadow: 0 2px 8px rgba(139, 92, 246, 0.3);\n    `;\n\n    // ボタンコンテナに相対配置\n    buttonContainer.style.position = 'relative';\n    buttonContainer.appendChild(toast);\n\n    // フェードイン\n    setTimeout(() => {\n      toast.style.opacity = '1';\n    }, 10);\n\n    // 3秒後に自動削除\n    setTimeout(() => {\n      if (toast.parentNode) {\n        toast.style.opacity = '0';\n        setTimeout(() => {\n          if (toast.parentNode) {\n            toast.remove();\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * UI要素の作成と配置\n   */\n  initUI() {\n    // メインコンテナ\n    this.container = document.createElement('div');\n    this.container.id = 'live-command-ui';\n    this.container.style.cssText = this.getContainerStyles();\n\n    // 2025年トレンド：Progressive Disclosure（ホバー時のみブランド表示）\n    const brandIndicator = document.createElement('div');\n    brandIndicator.className = 'progressive-brand-indicator';\n    brandIndicator.style.cssText = `\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, #6366f1, #8b5cf6);\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;\n    \n    // Progressive Disclosure: ホバー/クリックでブランド名表示\n    const brandText = document.createElement('div');\n    brandText.className = 'progressive-brand-text';\n    brandText.style.cssText = `\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.25)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;\n    brandText.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">🍫</span> <span style=\"color: #6366f1;\">ChocoDrop</span>';\n    \n    // Progressive Disclosure イベント\n    brandIndicator.addEventListener('mouseenter', () => {\n      brandText.style.opacity = '1';\n      brandText.style.transform = 'translateY(0) scale(1)';\n      brandIndicator.style.transform = 'scale(1.2)';\n      brandIndicator.style.opacity = '1';\n    });\n    \n    brandIndicator.addEventListener('mouseleave', () => {\n      brandText.style.opacity = '0';\n      brandText.style.transform = 'translateY(5px) scale(0.9)';\n      brandIndicator.style.transform = 'scale(1)';\n      brandIndicator.style.opacity = '0.7';\n    });\n    \n    brandIndicator.appendChild(brandText);\n    this.container.appendChild(brandIndicator);\n\n    // 出力エリア（タスクカードコンテナ）- 非表示に変更\n    this.output = document.createElement('div');\n    this.outputDiv = this.output; // 両方の参照を保持（互換性のため）\n    this.output.id = 'command-output';\n    this.output.className = 'command-output';\n    this.output.style.cssText = this.getOutputStyles();\n    // フローティングカード用コンテナ\n    this.floatingContainer = document.createElement('div');\n    this.floatingContainer.id = 'floating-cards-container';\n    this.floatingContainer.style.cssText = `\n      position: fixed;\n      top: var(--floating-top, 20px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column-reverse;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-end;\n    `;\n\n    // タスクカード管理用\n    this.taskCards = new Map();\n\n    // 入力フィールドラッパー（展開ボタン用）\n    this.inputWrapper = document.createElement('div');\n    this.inputWrapper.style.cssText = `\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;\n\n    // Ultra-Simple 単一入力フィールド（自動リサイズ対応）\n    this.input = document.createElement('textarea');\n    this.input.rows = 1;\n    this.input.id = 'command-input';\n    this.input.placeholder = '「右上にドラゴンを」「美しい桜の森を中央に」など... ✨';\n    this.input.style.cssText = this.getInputStyles();\n\n    // 展開ボタン（初期状態は非表示）\n    this.expandButton = document.createElement('div');\n    this.expandButton.innerHTML = '⤢';\n    this.expandButton.title = 'テキスト全体を表示';\n    this.expandButton.style.cssText = `\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n      border-radius: 6px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;\n\n    // 展開ボタンのホバー効果\n    this.expandButton.addEventListener('mouseenter', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      this.expandButton.style.transform = 'scale(1.1)';\n    });\n\n    this.expandButton.addEventListener('mouseleave', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      this.expandButton.style.transform = 'scale(1)';\n    });\n\n    // 展開ボタンのクリック処理\n    this.expandButton.addEventListener('click', () => {\n      if (this.isExpanded) {\n        this.hideOverlayTextarea();\n      } else {\n        this.showOverlayTextarea();\n      }\n    });\n\n    // ラッパーに要素を追加\n    this.inputWrapper.appendChild(this.input);\n    this.inputWrapper.appendChild(this.expandButton);\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合）\n\n    // ラジオボタン風モードセレクター\n    const modeSelector = this.createRadioModeSelector();\n\n    // ミニマルアクションボタン\n    const actionContainer = this.createMinimalActions();\n\n    // ×クローズボタンをフォーム右上に追加\n    const closeButton = document.createElement('div');\n    closeButton.innerHTML = '×';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;\n\n    closeButton.addEventListener('mouseover', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      closeButton.style.transform = 'scale(1.1)';\n    });\n\n    closeButton.addEventListener('mouseout', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.transform = 'scale(1)';\n    });\n\n    closeButton.addEventListener('click', () => {\n      this.hide();\n    });\n\n    // 組み立て（ヘッダー削除、ブランドバッジは既に追加済み）\n    // this.container.appendChild(this.output); // 大きなタスク表示エリアをDOMに追加しない\n    this.container.appendChild(closeButton);\n    this.container.appendChild(modeSelector);\n    this.container.appendChild(this.inputWrapper);\n    this.container.appendChild(actionContainer);\n\n    // フローティングカードコンテナをbodyに直接追加\n    document.body.appendChild(this.floatingContainer);\n\n    // DOM に追加\n    document.body.appendChild(this.container);\n\n    // 初回テーマ適用\n    this.applyTheme();\n\n    // 日本語IME対応のcomposition state管理\n    this.isComposing = false;\n    this.hasCompositionJustEnded = false;\n\n    // リアルタイム入力監視とコマンド検出（IME対応）\n    this.input.addEventListener('input', () => {\n      // IME入力中はコマンド検出を停止\n      if (this.isComposing) {\n        return;\n      }\n      \n      // 自動リサイズ処理\n      this.autoResizeTextarea();\n      \n      this.detectCommandType();\n    });\n    \n    // 日本語IME composition events\n    this.input.addEventListener('compositionstart', () => {\n      this.isComposing = true;\n    });\n    \n    this.input.addEventListener('compositionend', () => {\n      this.isComposing = false;\n      \n      // Safariのみフラグ設定（他のブラウザは不要）\n      const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n      if (isSafari) {\n        this.hasCompositionJustEnded = true;\n      }\n      \n      // 確定後のコマンド検出を実行\n      setTimeout(() => {\n        this.autoResizeTextarea();\n        this.detectCommandType();\n      }, 10);\n    });\n    \n    // Safari判定\n    const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n    \n    // 日本語IME対応Enterキー処理（Safari対応版）\n    this.input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        // Safari: compositionend直後のEnterをスキップ\n        if (isSafari && this.hasCompositionJustEnded) {\n          this.hasCompositionJustEnded = false;\n          return;\n        }\n\n        // その他のブラウザ: isComposingチェック\n        if (!isSafari && (e.isComposing || this.isComposing)) {\n          return;\n        }\n\n        // Generate モードのみデモ制限を適用\n        if (this.currentMode === 'generate') {\n          e.preventDefault();\n          this.showDemoMessage();\n          return;\n        }\n\n        e.preventDefault();\n        this.executeCommand();\n      }\n    });\n    \n    // 初期メッセージ\n    if (this.config.showExamples) {\n      // 起動メッセージ削除\n      // 起動時は静かに待機\n    }\n  }\n\n  /**\n   * モードセレクター作成\n   */\n  createMinimalActions() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;\n\n    // 左側: Clear All ボタン（承認済みのLayout Bデザイン）\n    const leftSection = document.createElement('div');\n    leftSection.style.cssText = 'display: flex; gap: 8px; align-items: center;';\n\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">🧹</span> Clear All';\n    clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    clearBtn.addEventListener('click', () => this.clearAllWithConfirmation());\n\n    // 履歴ボタン（将来実装用スペース確保）- 海外UI標準対応：同一幅\n    const historyBtn = document.createElement('button');\n    historyBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">📚</span> History';\n    historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n    historyBtn.style.opacity = '0.5';\n    historyBtn.disabled = true;\n    historyBtn.title = '履歴機能（開発中）';\n\n    leftSection.appendChild(clearBtn);\n    leftSection.appendChild(historyBtn);\n\n    // 右側: テーマトグルと設定（ヘッダーから移動）\n    const rightSection = document.createElement('div');\n    rightSection.style.cssText = 'display: flex; gap: 6px; align-items: center;';\n\n    const themeToggle = document.createElement('button');\n    const getThemeIcon = () => {\n      const themeConfig = {\n        light: '🌙',\n        dark: '🍵',\n        wabisabi: '☀️'\n      };\n      return themeConfig[this.currentTheme] || '🌙';\n    };\n\n    const getThemeTitle = () => {\n      const titleConfig = {\n        light: 'ダークモードに切り替え',\n        dark: '侘び寂びモードに切り替え',\n        wabisabi: 'ライトモードに切り替え'\n      };\n      return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n    };\n\n    const getThemeIconWithFilter = () => {\n      const icon = getThemeIcon();\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (icon === '☀️') {\n        return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n      } else if (icon === '🍵') {\n        return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n      } else {\n        return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n      }\n    };\n\n    themeToggle.innerHTML = getThemeIconWithFilter();\n    themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    themeToggle.title = getThemeTitle();\n    themeToggle.addEventListener('click', () => this.toggleTheme());\n\n    const settingsButton = document.createElement('button');\n    settingsButton.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">⚙️</span>';\n    settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    settingsButton.title = 'サービス設定を開く';\n    settingsButton.addEventListener('click', () => this.openServiceModal());\n\n    rightSection.appendChild(themeToggle);\n    rightSection.appendChild(settingsButton);\n\n    container.appendChild(leftSection);\n    container.appendChild(rightSection);\n\n    // 参照を保持\n    this.clearBtn = clearBtn;\n    this.historyBtn = historyBtn;\n    this.themeToggle = themeToggle;\n    this.settingsButton = settingsButton;\n\n    return container;\n  }\n\n  createServiceSelectorSection() {\n    this.serviceSelectorContainer = document.createElement('div');\n    this.serviceSelectorContainer.id = 'service-selector';\n    this.serviceSelectorContainer.style.cssText = `\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;\n\n    this.serviceSelectorStatus = document.createElement('div');\n    this.serviceSelectorStatus.textContent = 'サービス情報を読み込んでいます...';\n    this.serviceSelectorStatus.style.fontSize = '12px';\n    this.serviceSelectorStatus.style.opacity = '0.8';\n    this.serviceSelectorStatus.style.marginBottom = '8px';\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);\n\n    this.serviceSelectorContent = document.createElement('div');\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);\n\n    this.updateServiceSelectorTheme();\n    return this.serviceSelectorContainer;\n  }\n\n  createServiceModal() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.remove();\n      this.serviceModalOverlay = null;\n      this.serviceModal = null;\n    }\n\n    this.serviceModalOverlay = document.createElement('div');\n    this.serviceModalOverlay.id = 'chocodrop-service-modal-overlay';\n    this.serviceModalOverlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;\n\n    this.serviceModalOverlay.addEventListener('click', (event) => {\n      if (event.target === this.serviceModalOverlay) {\n        this.closeServiceModal();\n      }\n    });\n\n    this.serviceModal = document.createElement('div');\n    this.serviceModal.className = 'chocodrop-service-modal';\n    this.serviceModal.style.cssText = `\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;\n\n    const title = document.createElement('h2');\n    title.textContent = 'サービス設定';\n    title.style.cssText = `\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;\n\n    const subtitle = document.createElement('p');\n    subtitle.textContent = '利用するサービスを選択してください。';\n    subtitle.style.cssText = `\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;\n\n    const selector = this.createServiceSelectorSection();\n\n    const actionRow = document.createElement('div');\n    actionRow.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;\n\n    this.serviceSelectorRetryButton = document.createElement('button');\n    this.serviceSelectorRetryButton.textContent = '再読み込み';\n    this.serviceSelectorRetryButton.style.cssText = `\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorRetryButton.addEventListener('click', () => this.initializeServiceSelector(true));\n\n    const actionButtons = document.createElement('div');\n    actionButtons.style.cssText = 'display: flex; gap: 8px;';\n\n    this.serviceSelectorCancelButton = document.createElement('button');\n    this.serviceSelectorCancelButton.textContent = 'Cancel';\n    this.serviceSelectorCancelButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorCancelButton.addEventListener('click', () => this.closeServiceModal());\n\n    this.serviceSelectorSaveButton = document.createElement('button');\n    this.serviceSelectorSaveButton.textContent = 'Save';\n    this.serviceSelectorSaveButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, #6366f1, #8b5cf6);\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;\n    this.serviceSelectorSaveButton.addEventListener('click', () => this.handleServiceSave());\n\n    actionButtons.appendChild(this.serviceSelectorCancelButton);\n    actionButtons.appendChild(this.serviceSelectorSaveButton);\n\n    actionRow.appendChild(this.serviceSelectorRetryButton);\n    actionRow.appendChild(actionButtons);\n\n    this.serviceModal.appendChild(title);\n    this.serviceModal.appendChild(subtitle);\n    this.serviceModal.appendChild(selector);\n    this.serviceModal.appendChild(actionRow);\n\n    this.serviceModalOverlay.appendChild(this.serviceModal);\n    document.body.appendChild(this.serviceModalOverlay);\n\n    this.updateServiceSelectorTheme();\n    this.toggleServiceRetryButton(false);\n  }\n\n  openServiceModal(forceFetch = false) {\n    if (!this.serviceModalOverlay) {\n      this.createServiceModal();\n    }\n\n    this.serviceModalOverlay.style.display = 'flex';\n    requestAnimationFrame(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.opacity = '1';\n      }\n    });\n\n    this.resetPendingSelections();\n    this.initializeServiceSelector(forceFetch);\n  }\n\n  closeServiceModal() {\n    if (!this.serviceModalOverlay) {\n      return;\n    }\n\n    this.serviceModalOverlay.style.opacity = '0';\n    setTimeout(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.display = 'none';\n      }\n      this.resetPendingSelections();\n    }, 150);\n  }\n\n  async initializeServiceSelector(force = false) {\n    if (this.servicesLoading && !force) {\n      return;\n    }\n\n    if (!this.client || typeof this.client.getAvailableServices !== 'function') {\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n      return;\n    }\n\n    this.servicesLoading = true;\n    this.setServiceSelectorStatus('サービス情報を読み込んでいます...', 'info');\n    this.toggleServiceRetryButton(false);\n    this.setServiceButtonsEnabled(false);\n\n    try {\n      if (typeof this.client.ensureInitialized === 'function') {\n        await this.client.ensureInitialized();\n      }\n\n      const response = await this.client.getAvailableServices();\n      if (!response || response.success === false || !response.metadata) {\n        throw new Error(response?.error || 'サービス情報が取得できませんでした');\n      }\n\n      this.availableImageServices = Array.isArray(response.metadata?.image) ? response.metadata.image : [];\n      this.availableVideoServices = Array.isArray(response.metadata?.video) ? response.metadata.video : [];\n\n      this.selectedImageService = this.resolveServiceSelection(\n        'image',\n        this.availableImageServices,\n        response.default?.image\n      );\n\n      this.selectedVideoService = this.resolveServiceSelection(\n        'video',\n        this.availableVideoServices,\n        response.default?.video\n      );\n\n      this.pendingImageService = this.selectedImageService;\n      this.pendingVideoService = this.selectedVideoService;\n\n      this.populateServiceSelector();\n      this.applyServiceSelectionToSceneManager();\n      this.setServiceButtonsEnabled(true);\n    } catch (error) {\n      console.error('❌ Failed to initialize service selector:', error);\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした。サーバーが起動しているか確認のうえ、再読み込みしてください。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n    } finally {\n      this.servicesLoading = false;\n    }\n  }\n\n  setServiceSelectorStatus(message, type = 'info') {\n    if (!this.serviceSelectorStatus) {\n      return;\n    }\n    this.serviceSelectorStatus.textContent = message;\n    this.serviceSelectorStatus.dataset.statusType = type;\n    this.serviceSelectorStatus.classList.toggle('service-selector-helper', type !== 'error');\n    this.updateServiceSelectorTheme();\n  }\n\n  toggleServiceRetryButton(visible) {\n    if (!this.serviceSelectorRetryButton) {\n      return;\n    }\n    this.serviceSelectorRetryButton.style.display = visible ? 'inline-flex' : 'none';\n    this.updateServiceSelectorTheme();\n  }\n\n  resolveServiceSelection(type, services, defaultId) {\n    if (!services || services.length === 0) {\n      return null;\n    }\n\n    const storageKey = type === 'image' ? IMAGE_SERVICE_STORAGE_KEY : VIDEO_SERVICE_STORAGE_KEY;\n    let storedId = null;\n    try {\n      storedId = localStorage.getItem(storageKey);\n    } catch (error) {\n      console.warn('⚠️ Failed to access localStorage:', error);\n    }\n\n    const isStoredValid = storedId && services.some(service => service.id === storedId);\n    let resolvedId = isStoredValid ? storedId : null;\n\n    if (!resolvedId && defaultId && services.some(service => service.id === defaultId)) {\n      resolvedId = defaultId;\n    }\n\n    if (!resolvedId) {\n      resolvedId = services[0]?.id || null;\n    }\n\n    try {\n      if (resolvedId) {\n        localStorage.setItem(storageKey, resolvedId);\n      } else {\n        localStorage.removeItem(storageKey);\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to persist service selection:', error);\n    }\n\n    return resolvedId;\n  }\n\n  populateServiceSelector() {\n    if (!this.serviceSelectorContent) {\n      return;\n    }\n\n    this.serviceSelectorContent.innerHTML = '';\n\n    const hasImage = this.availableImageServices.length > 0;\n    const hasVideo = this.availableVideoServices.length > 0;\n\n    if (!hasImage && !hasVideo) {\n      this.setServiceSelectorStatus('利用可能なサービスが見つかりませんでした。', 'error');\n      return;\n    }\n\n    this.setServiceSelectorStatus('利用するサービスを選択してください。', 'info');\n\n    if (hasImage) {\n      const imageRow = this.buildServiceRow('image', '画像 (T2I)', this.availableImageServices, this.pendingImageService || this.selectedImageService);\n      this.serviceSelectorContent.appendChild(imageRow);\n    }\n\n    if (hasVideo) {\n      const videoRow = this.buildServiceRow('video', '動画 (T2V)', this.availableVideoServices, this.pendingVideoService || this.selectedVideoService);\n      this.serviceSelectorContent.appendChild(videoRow);\n    }\n\n    this.updateServiceSelectorTheme();\n  }\n\n  buildServiceRow(type, labelText, services, selectedId) {\n    const row = document.createElement('div');\n    row.className = `service-row service-row-${type}`;\n    row.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;\n\n    const label = document.createElement('label');\n    label.textContent = labelText;\n    label.style.fontSize = '13px';\n    label.style.fontWeight = '600';\n    row.appendChild(label);\n\n    const select = document.createElement('select');\n    select.dataset.serviceType = type;\n    select.style.fontFamily = 'inherit';\n    select.style.width = '100%';\n\n    services.forEach(service => {\n      const option = document.createElement('option');\n      option.value = service.id;\n      option.textContent = service.name || service.id;\n      if (service.description) {\n        option.title = service.description;\n      }\n      select.appendChild(option);\n    });\n\n    if (selectedId && services.some(service => service.id === selectedId)) {\n      select.value = selectedId;\n    }\n\n    select.addEventListener('change', (event) => {\n      this.onServiceSelectionChange(type, event.target.value);\n    });\n\n    row.appendChild(select);\n\n    const description = document.createElement('div');\n    description.className = 'service-description';\n    description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    description.style.fontSize = '11px';\n    description.style.opacity = '0.75';\n    description.style.lineHeight = '1.4';\n    description.style.minHeight = '14px';\n    row.appendChild(description);\n\n    select.addEventListener('change', () => {\n      description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    });\n\n    if (type === 'image') {\n      this.imageServiceSelect = select;\n    } else {\n      this.videoServiceSelect = select;\n    }\n\n    return row;\n  }\n\n  onServiceSelectionChange(type, serviceId) {\n    if (type === 'image') {\n      this.pendingImageService = serviceId;\n    } else {\n      this.pendingVideoService = serviceId;\n    }\n\n    const info = this.findServiceInfo(type, serviceId);\n    const description = type === 'image'\n      ? this.imageServiceSelect?.parentElement?.querySelector('.service-description')\n      : this.videoServiceSelect?.parentElement?.querySelector('.service-description');\n\n    if (description) {\n      description.textContent = info?.description || '';\n    }\n  }\n\n  handleServiceSave() {\n    const newImageId = this.pendingImageService || this.selectedImageService;\n    const newVideoId = this.pendingVideoService || this.selectedVideoService;\n\n    if (newImageId) {\n      try {\n        localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY, newImageId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist image service selection:', error);\n      }\n      this.selectedImageService = newImageId;\n      this.sceneManager?.setImageService(newImageId);\n    }\n\n    if (newVideoId) {\n      try {\n        localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY, newVideoId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist video service selection:', error);\n      }\n      this.selectedVideoService = newVideoId;\n      this.sceneManager?.setVideoService(newVideoId);\n    }\n\n    const imageInfo = this.findServiceInfo('image', newImageId);\n    const videoInfo = this.findServiceInfo('video', newVideoId);\n\n    if (imageInfo) {\n      this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`, 'system');\n    }\n    if (videoInfo) {\n      this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`, 'system');\n    }\n\n    this.closeServiceModal();\n  }\n\n  setServiceButtonsEnabled(enabled) {\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.disabled = !enabled;\n      this.serviceSelectorSaveButton.style.opacity = enabled ? '1' : '0.6';\n      this.serviceSelectorSaveButton.style.cursor = enabled ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  resetPendingSelections() {\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    if (this.imageServiceSelect && this.selectedImageService) {\n      this.imageServiceSelect.value = this.selectedImageService;\n    }\n    if (this.videoServiceSelect && this.selectedVideoService) {\n      this.videoServiceSelect.value = this.selectedVideoService;\n    }\n\n    if (this.serviceSelectorContent && this.serviceSelectorContent.childElementCount > 0) {\n      this.populateServiceSelector();\n    }\n  }\n\n  findServiceInfo(type, serviceId) {\n    const list = type === 'image' ? this.availableImageServices : this.availableVideoServices;\n    return list.find(service => service.id === serviceId) || null;\n  }\n\n  applyServiceSelectionToSceneManager() {\n    if (!this.sceneManager) {\n      return;\n    }\n    this.sceneManager.setImageService(this.selectedImageService);\n    this.sceneManager.setVideoService(this.selectedVideoService);\n  }\n\n  updateServiceSelectorTheme() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.style.background = this.isDarkMode\n        ? 'rgba(8, 11, 26, 0.55)'\n        : 'rgba(229, 231, 255, 0.45)';\n    }\n\n    if (this.serviceModal) {\n      this.serviceModal.style.background = this.isDarkMode\n        ? 'rgba(17, 24, 39, 0.15)'\n        : 'rgba(255, 255, 255, 0.15)';\n      this.serviceModal.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.4)'\n        : '1px solid rgba(99, 102, 241, 0.25)';\n      this.serviceModal.style.color = this.isDarkMode ? '#e5e7ff' : '#1f2937';\n    }\n\n    if (this.serviceSelectorStatus) {\n      const type = this.serviceSelectorStatus.dataset?.statusType;\n      const statusColor = type === 'error'\n        ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n        : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.75)');\n      this.serviceSelectorStatus.style.color = statusColor;\n    }\n\n    if (this.serviceSelectorContainer) {\n      const labels = this.serviceSelectorContainer.querySelectorAll('label');\n      labels.forEach(label => {\n        label.style.color = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(31, 41, 55, 0.9)';\n      });\n\n      const selects = this.serviceSelectorContainer.querySelectorAll('select');\n      selects.forEach(select => {\n        select.style.background = this.isDarkMode ? 'rgba(99, 102, 241, 0.18)' : 'rgba(99, 102, 241, 0.12)';\n        select.style.border = this.isDarkMode ? '1px solid rgba(129, 140, 248, 0.45)' : '1px solid rgba(99, 102, 241, 0.45)';\n        select.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n        select.style.padding = '10px 12px';\n        select.style.borderRadius = '10px';\n        select.style.fontSize = '13px';\n        select.style.outline = 'none';\n        select.style.boxShadow = this.isDarkMode\n          ? '0 12px 28px rgba(15, 23, 42, 0.5)'\n          : '0 12px 24px rgba(99, 102, 241, 0.2)';\n      });\n\n      const descriptions = this.serviceSelectorContainer.querySelectorAll('.service-description');\n      descriptions.forEach(desc => {\n        desc.style.color = this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.7)';\n      });\n    }\n\n    if (this.serviceSelectorRetryButton) {\n      this.serviceSelectorRetryButton.style.background = this.isDarkMode\n        ? 'rgba(129, 140, 248, 0.35)'\n        : 'rgba(99, 102, 241, 0.15)';\n      this.serviceSelectorRetryButton.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.5)'\n        : '1px solid rgba(99, 102, 241, 0.45)';\n      this.serviceSelectorRetryButton.style.color = this.isDarkMode ? '#f9fafb' : '#1e1b4b';\n      this.serviceSelectorRetryButton.style.boxShadow = this.isDarkMode\n        ? '0 0 8px rgba(129, 140, 248, 0.45)'\n        : '0 0 8px rgba(99, 102, 241, 0.35)';\n    }\n\n    if (this.serviceSelectorCancelButton) {\n      this.serviceSelectorCancelButton.style.border = this.isDarkMode\n        ? '1px solid rgba(209, 213, 219, 0.3)'\n        : '1px solid rgba(148, 163, 184, 0.5)';\n      this.serviceSelectorCancelButton.style.color = this.isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(30, 41, 59, 0.85)';\n    }\n\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.style.background = this.isDarkMode\n        ? 'linear-gradient(135deg, #6366f1, #8b5cf6)'\n        : 'linear-gradient(135deg, #818cf8, #a855f7)';\n      this.serviceSelectorSaveButton.style.boxShadow = this.isDarkMode\n        ? '0 16px 28px rgba(99, 102, 241, 0.4)'\n        : '0 16px 28px rgba(129, 140, 248, 0.35)';\n    }\n  }\n\n  /**\n   * ラジオボタン風モードセレクター作成\n   */\n  createRadioModeSelector() {\n    const container = document.createElement('div');\n    container.className = 'radio-mode-selector';\n    container.style.cssText = `\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))')};\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(141, 110, 99, 0.4)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(255, 255, 255, 0.25)')};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;\n\n    const modes = [\n      { value: 'generate', label: 'Generate', icon: '🚫', disabled: true },\n      { value: 'import', label: 'Import', icon: '📥' },\n      { value: 'modify', label: 'Modify', icon: '🔧' },\n      { value: 'delete', label: 'Delete', icon: '🗑️' }\n    ];\n\n    this.radioModeButtons = {};\n\n    modes.forEach(mode => {\n      const button = document.createElement('div');\n      button.className = `mode-option ${mode.value}`;\n      button.style.cssText = `\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: ${mode.disabled ? 'not-allowed' : 'pointer'};\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${mode.disabled ? 'rgba(139, 92, 246, 0.6)' : this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)')};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n        opacity: ${mode.disabled ? '0.6' : '1'};\n      `;\n\n      const icon = document.createElement('div');\n      icon.textContent = mode.icon;\n      icon.style.cssText = `\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${mode.disabled ? 'hue-rotate(240deg) saturate(0.8) brightness(1.1)' : this.isDarkMode \n          ? 'hue-rotate(220deg) saturate(0.8) brightness(1.2)' \n          : 'hue-rotate(240deg) saturate(0.7) brightness(0.9)'};\n        transition: filter 0.2s ease;\n      `;\n\n      const label = document.createElement('span');\n      label.textContent = mode.label;\n\n      // AUTOバッジを作成\n      const autoBadge = document.createElement('div');\n      autoBadge.className = 'auto-badge';\n      autoBadge.textContent = 'AUTO';\n      autoBadge.style.cssText = `\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;\n\n      button.appendChild(icon);\n      button.appendChild(label);\n      button.appendChild(autoBadge);\n\n      // イベント処理\n      if (mode.disabled) {\n        // クリック時のみコンパクトトースト表示\n        button.addEventListener('click', (e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          this.showDemoMessage();\n        });\n      } else {\n        // 通常のクリックイベント\n        button.addEventListener('click', () => {\n          if (mode.value === 'import') {\n            this.triggerFileSelection();\n          } else {\n            this.selectMode(mode.value, true); // trueは手動選択を示す\n          }\n        });\n      }\n\n      this.radioModeButtons[mode.value] = { button, autoBadge };\n      container.appendChild(button);\n    });\n\n\n    this.radioModeContainer = container;\n    // デモページではImportを初期選択\n    this.selectMode('import', false);\n\n    return container;\n  }\n\n  /**\n   * モード選択（ラジオボタンUI更新）\n   */\n  selectMode(mode, isManual = false, detectedKeyword = null) {\n    this.currentMode = mode;\n\n    // 全ボタンをリセット\n    Object.keys(this.radioModeButtons).forEach(key => {\n      const { button, autoBadge } = this.radioModeButtons[key];\n      button.style.color = this.isWabiSabiMode\n        ? '#F5F5F5'\n        : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n      button.style.background = 'transparent';\n      button.style.border = '1px solid transparent';\n      button.style.transform = 'scale(1)';\n      button.style.boxShadow = 'none';\n      // AUTOバッジを非表示\n      autoBadge.style.display = 'none';\n      autoBadge.style.opacity = '0';\n    });\n\n    // 選択されたボタンをハイライト（2025年仕様）\n    const { button, autoBadge } = this.radioModeButtons[mode];\n    \n    // 2025 Glassmorphism選択状態\n    const selectedGlass = this.isWabiSabiMode\n      ? {\n          background: 'linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))',\n          border: '1px solid rgba(109, 76, 65, 0.4)',\n          boxShadow: '0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)',\n          color: '#F5F5F5'\n        }\n      : (this.isDarkMode\n        ? {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))',\n            border: '1px solid rgba(99, 102, 241, 0.4)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)',\n            color: '#a5b4fc'\n          }\n        : {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))',\n            border: '1px solid rgba(99, 102, 241, 0.3)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)',\n            color: '#6366f1'\n          });\n\n    button.style.color = selectedGlass.color;\n    button.style.background = selectedGlass.background;\n    button.style.border = selectedGlass.border;\n    button.style.boxShadow = selectedGlass.boxShadow;\n    button.style.transform = 'scale(1.02)';\n\n    // AUTOバッジの表示制御\n    if (!isManual && detectedKeyword) {\n      // 自動切り替えの場合はAUTOバッジを表示\n      autoBadge.style.display = 'inline-block';\n      setTimeout(() => {\n        autoBadge.style.opacity = '1';\n        autoBadge.style.transform = 'scale(1)';\n      }, 100);\n      \n      // 3秒後にフェードアウト\n      setTimeout(() => {\n        autoBadge.style.opacity = '0';\n        autoBadge.style.transform = 'scale(0.8)';\n        setTimeout(() => {\n          autoBadge.style.display = 'none';\n        }, 200);\n      }, 3000);\n    }\n\n    // パルス効果を追加\n    if (!isManual) {\n      this.addPulseEffect(button);\n      this.addContainerGlow(mode);\n    }\n\n    // プレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n\n    // モード切り替え時の入力欄メッセージ上書き機能\n    if (isManual) {\n      this.clearInputOnModeSwitch(mode);\n    }\n\n    // Importモード専用処理\n    if (mode === 'import' || this.selectedFile) {\n      this.showImportInterface();\n    } else {\n      this.hideImportInterface();\n    }\n\n    // Deleteモード専用処理\n    if (mode === 'delete' && isManual) {\n      this.handleDeleteModeSelection();\n    }\n\n    // Modifyモード専用処理\n    if (mode === 'modify' && isManual) {\n      this.handleModifyModeSelection();\n    }\n\n    // モード切り替えメッセージは表示しない（UIで分かるため）\n  }\n\n  /**\n   * パルス効果を追加\n   */\n  addPulseEffect(element) {\n    // 既存のアニメーションをリセット\n    element.style.animation = 'none';\n    \n    // 少し遅らせてからアニメーションを適用（リフロー強制）\n    setTimeout(() => {\n      element.style.animation = 'smartModePulse 0.6s ease-out';\n    }, 10);\n    \n    // アニメーション終了後にクリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 610);\n    \n    // CSSアニメーションを動的に追加（まだ存在しない場合）\n    this.ensurePulseAnimation();\n  }\n\n  /**\n   * パルスアニメーション用CSSを確保\n   */\n  ensurePulseAnimation() {\n    if (document.getElementById('smart-mode-pulse-animation')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'smart-mode-pulse-animation';\n    style.textContent = `\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コンテナグロー効果\n   */\n  addContainerGlow(mode) {\n    const container = this.radioModeContainer;\n    if (!container) return;\n\n    // モードに応じてグロー色を設定\n    const glowColors = this.isWabiSabiMode ? {\n      generate: 'rgba(139, 195, 74, 0.4)',  // 侘び寂びモード：チャット欄と同じ緑\n      import: 'rgba(139, 195, 74, 0.4)',    // 侘び寂びモード：チャット欄と同じ緑\n      modify: 'rgba(139, 195, 74, 0.4)',    // 侘び寂びモード：チャット欄と同じ緑\n      delete: 'rgba(139, 195, 74, 0.4)'     // 侘び寂びモード：チャット欄と同じ緑\n    } : {\n      generate: 'rgba(79, 70, 229, 0.4)',   // ライト/ダークモード：元の紫\n      import: 'rgba(34, 197, 94, 0.4)',     // ライト/ダークモード：元の緑\n      modify: 'rgba(236, 72, 153, 0.4)',    // ライト/ダークモード：元のピンク\n      delete: 'rgba(107, 114, 128, 0.3)'    // ライト/ダークモード：元のグレー\n    };\n\n    // 一時的にグロー効果を適用\n    const glowColor = glowColors[mode];\n    if (glowColor) {\n      container.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n      container.style.borderColor = glowColor.replace('0.4', '0.6').replace('0.3', '0.5');\n    }\n    \n    // 1秒後にグロー効果を除去\n    setTimeout(() => {\n      container.style.boxShadow = '';\n      container.style.borderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.15)';\n    }, 1000);\n  }\n\n  getActionButtonStyles(variant = 'secondary') {\n    const baseStyles = `\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;\n\n    if (variant === 'secondary') {\n      // Clear All, History ボタン用 - 美しい配置と統一感\n      return baseStyles + `\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.6)'\n          : (this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)')};\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? '#d1d5db' : '#374151')};\n        text-align: center;\n        white-space: nowrap;\n      `;\n    } else if (variant === 'icon') {\n      // テーマトグル、設定ボタン用\n      return baseStyles + `\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(255, 255, 255, 0.4)'};\n        color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'};\n      `;\n    }\n  }\n\n  /**\n   * 破壊的アクション用ボタンスタイル（赤系ガラス効果）\n   */\n  getDestructiveButtonStyles() {\n    return `\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode ? 'rgba(220, 38, 127, 0.4)' : 'rgba(190, 24, 93, 0.35)'};\n      border-radius: 6px;\n      background: ${this.isDarkMode ? 'rgba(220, 38, 127, 0.3)' : 'rgba(190, 24, 93, 0.25)'};\n      color: ${this.isDarkMode ? '#fca5a5' : '#dc2626'};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `;\n  }\n\n  getCommandTypeIndicatorStyles() {\n    return `\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)'};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `;\n  }\n\n  /**\n   * テキストエリアの自動リサイズ処理（最大2行）\n   */\n  autoResizeTextarea() {\n    // 高さをリセットして正確な scrollHeight を取得\n    this.input.style.height = 'auto';\n    \n    // 現在のコンテンツに基づいて高さを計算\n    const lineHeight = 22; // CSS で設定した line-height\n    const padding = 28; // 上下のパディング合計 (14px * 2)\n    const maxLines = 2;\n    const maxHeight = (lineHeight * maxLines) + padding;\n    \n    // スクロール高さに基づいて新しい高さを決定\n    const newHeight = Math.min(this.input.scrollHeight, maxHeight);\n    \n    // 高さを適用\n    this.input.style.height = newHeight + 'px';\n    \n    // 2行を超える場合はスクロールを有効化と展開ボタン表示\n    if (this.input.scrollHeight > maxHeight) {\n      this.input.style.overflowY = 'auto';\n      // 展開ボタンを表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'flex';\n      }\n    } else {\n      this.input.style.overflowY = 'hidden';\n      // 展開ボタンを非表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * リアルタイムコマンドタイプ検出\n   */\n  detectCommandType() {\n    const input = this.input.value.trim();\n    if (!input) {\n      this.selectMode('generate', false);\n      return;\n    }\n\n    const commandType = this.analyzeCommandType(input);\n\n    // Delete/Modifyは手動選択を優先、自動切り替えしない\n    if (this.currentMode === 'delete' || this.currentMode === 'modify') {\n      return; // 現在のモードを維持\n    }\n    // Generate/Importのみ自動切り替え\n    this.selectMode(commandType.type, false, commandType.detectedKeyword);\n  }\n\n  /**\n   * ルールベースコマンド分析\n   */\n  analyzeCommandType(text) {\n    this.logDebug(`🔍 Analyzing command: \"${text}\"`);\n\n    // メディアタイプの検出\n    const mediaInfo = this.detectMediaType(text);\n    \n    // 削除コマンドの検出\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除' },\n      { pattern: /消去/, keyword: '消去' },\n      { pattern: /消して/, keyword: '消して' },\n      { pattern: /消す/, keyword: '消す' },\n      { pattern: /取り除/, keyword: '取り除' },\n      { pattern: /除去/, keyword: '除去' },\n      { pattern: /削除して/, keyword: '削除して' },\n      { pattern: /delete/i, keyword: 'delete' },\n      { pattern: /remove/i, keyword: 'remove' },\n      { pattern: /clear/i, keyword: 'clear' },\n      { pattern: /erase/i, keyword: 'erase' }\n    ];\n    \n    // 変更・移動コマンドの検出\n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動' },\n      { pattern: /動かして/, keyword: '動かして' },\n      { pattern: /変更/, keyword: '変更' },\n      { pattern: /変えて/, keyword: '変えて' },\n      { pattern: /修正/, keyword: '修正' },\n      { pattern: /調整/, keyword: '調整' },\n      { pattern: /回転/, keyword: '回転' },\n      { pattern: /反転/, keyword: '反転' },\n      { pattern: /ミラー/, keyword: 'ミラー' },\n      { pattern: /傾け/, keyword: '傾け' },\n      { pattern: /向きを変え/, keyword: '向きを変え' },\n      { pattern: /向きを変更/, keyword: '向きを変更' },\n      { pattern: /左右(逆|反転)/, keyword: '左右反転' },\n      { pattern: /上下(逆|反転)/, keyword: '上下反転' },\n      { pattern: /逆さ/, keyword: '逆さ' },\n      { pattern: /ひっくり返/, keyword: 'ひっくり返す' },\n      { pattern: /.*を.*色/, keyword: '色変更' },\n      { pattern: /.*を.*サイズ/, keyword: 'サイズ変更' },\n      { pattern: /を.*に.*して/, keyword: '変更' },\n      { pattern: /move/i, keyword: 'move' },\n      { pattern: /change/i, keyword: 'change' },\n      { pattern: /modify/i, keyword: 'modify' },\n      { pattern: /edit/i, keyword: 'edit' }\n    ];\n    \n    // 生成コマンドの検出（デフォルト）\n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って' },\n      { pattern: /生成/, keyword: '生成' },\n      { pattern: /作成/, keyword: '作成' },\n      { pattern: /描いて/, keyword: '描いて' },\n      { pattern: /書いて/, keyword: '書いて' },\n      { pattern: /create/i, keyword: 'create' },\n      { pattern: /generate/i, keyword: 'generate' },\n      { pattern: /make/i, keyword: 'make' },\n      { pattern: /draw/i, keyword: 'draw' }\n    ];\n\n    // 削除パターンチェック\n    for (const { pattern, keyword } of deletePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Delete pattern matched: ${keyword}`);\n        return {\n          type: 'delete',\n          confidence: 0.9,\n          reason: '削除キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: true,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 変更パターンチェック\n    for (const { pattern, keyword } of modifyPatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Modify pattern matched: ${keyword}`);\n        return {\n          type: 'modify',\n          confidence: 0.8,\n          reason: '変更キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // 生成パターンチェック\n    for (const { pattern, keyword } of generatePatterns) {\n      if (pattern.test(text)) {\n        return {\n          type: 'generate',\n          confidence: mediaInfo.confidence,\n          reason: mediaInfo.reason,\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword\n        };\n      }\n    }\n    \n    // デフォルト（生成モード）\n    this.logDebug(`ℹ️ No specific pattern matched, defaulting to generate mode`);\n    return {\n      type: 'generate',\n      confidence: mediaInfo.confidence,\n      reason: mediaInfo.reason,\n      mediaType: mediaInfo.type,\n      requiresConfirmation: false,\n      detectedKeyword: null\n    };\n  }\n\n  /**\n   * メディアタイプ検出（画像/動画）\n   */\n  detectMediaType(text) {\n    const videoPatterns = [\n      /動画|ビデオ|映像|ムービー/,\n      /video|movie|clip/i\n    ];\n    \n    const imagePatterns = [\n      /画像|写真|絵|イラスト|イメージ/,\n      /image|picture|photo|illustration/i\n    ];\n    \n    if (videoPatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'video',\n        confidence: 0.8,\n        reason: '動画生成コマンド'\n      };\n    }\n    \n    if (imagePatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'image',\n        confidence: 0.8,\n        reason: '画像生成コマンド'\n      };\n    }\n    \n    // デフォルトは画像\n    return {\n      type: 'image',\n      confidence: 0.6,\n      reason: '生成コマンド（画像デフォルト）'\n    };\n  }\n\n  /**\n   * コマンドタイプインジケーター表示\n   */\n  showCommandTypeIndicator(commandInfo) {\n    const { type, confidence, reason } = commandInfo;\n    \n    const typeLabels = {\n      generate: '🎨 生成モード',\n      import: '📥 インポートモード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      import: 'linear-gradient(135deg, #22c55e, #16a34a)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    // Proactive UX: 低信頼度時に提案表示\n    if (confidence < 0.7) {\n      this.showProactiveSuggestion(type, confidence);\n    } else {\n      this.hideProactiveSuggestion();\n    }\n    \n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[type].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n    // this.commandTypeIndicator.style.display = 'block';\n    // this.commandTypeIndicator.style.cursor = 'default';\n    \n    // スワイプジェスチャー対応\n    this.enableGestureControl();\n  }\n\n  /**\n   * Proactive UX: 低信頼度時の提案表示\n   */\n  showProactiveSuggestion(detectedType, confidence) {\n    if (!this.proactiveSuggestion) {\n      this.proactiveSuggestion = document.createElement('div');\n      this.proactiveSuggestion.id = 'proactive-suggestion';\n      this.proactiveSuggestion.style.cssText = `\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;\n      // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n      // 代わりに入力フィールドの前に挿入\n      this.container.insertBefore(this.proactiveSuggestion, this.input);\n    }\n\n    const alternativeTypes = ['generate', 'modify', 'delete'].filter(t => t !== detectedType);\n    const suggestion = alternativeTypes[0]; // 最初の代替案\n\n    const suggestionLabels = {\n      generate: '🎨 生成',\n      modify: '✏️ 変更', \n      delete: '🗑️ 削除'\n    };\n\n    this.proactiveSuggestion.innerHTML = `\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style=\"margin-top: 4px; font-size: 10px; opacity: 0.8;\">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;\n    \n    this.proactiveSuggestion.style.display = 'block';\n    \n    // クリックで提案モードに変更\n    this.proactiveSuggestion.onclick = () => {\n      this.currentMode = suggestion;\n      this.hideProactiveSuggestion();\n      this.updateIndicatorForMode(suggestion, 0.9);\n    };\n  }\n\n  /**\n   * Proactive UX提案を非表示\n   */\n  hideProactiveSuggestion() {\n    if (this.proactiveSuggestion) {\n      this.proactiveSuggestion.style.display = 'none';\n    }\n  }\n\n  /**\n   * 指定モードでインジケーター更新\n   */\n  updateIndicatorForMode(mode, confidence) {\n    const typeLabels = {\n      generate: '🎨 生成モード',\n      import: '📥 インポートモード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      import: 'linear-gradient(135deg, #22c55e, #16a34a)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[mode].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n  }\n\n  /**\n   * ジェスチャーコントロール有効化\n   */\n  enableGestureControl() {\n    // 旧スワイプジェスチャー機能は削除（ラジオボタンUIに統合済み）\n    // ラジオボタンで直接モード選択可能になったため、スワイプ操作は不要\n    this.gestureEnabled = true;\n  }\n\n  /**\n   * アクションボタン作成\n   */\n  createActionButtons() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;\n\n    // 履歴ボタン削除 - タスク進行状況に置き換え済み\n\n    // クリアオールボタン\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '🧹 全削除';\n    clearBtn.style.cssText = this.getModernButtonStyles('danger');\n    clearBtn.addEventListener('click', () => this.clearAll());\n\n    // historyBtn削除済み\n    container.appendChild(clearBtn);\n\n    return container;\n  }\n\n  /**\n   * スタイル定義\n   */\n  getContainerStyles() {\n    const positions = {\n      'bottom-right': 'bottom: 20px; right: 20px;',\n      'bottom-left': 'bottom: 20px; left: 20px;',\n      'top-right': 'top: 20px; right: 20px;',\n      'top-left': 'top: 20px; left: 20px;',\n      'center': 'top: 50%; left: 50%; transform: translate(-50%, -50%);'\n    };\n\n    // 2025 Glassmorphism仕様：ダーク・ライト両対応\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(99, 102, 241, 0.2)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)'\n    };\n\n    // 侘び寂びモード - 枯山水の静寂：独自のアイデンティティ\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))',\n      backdropFilter: 'blur(20px) saturate(120%)',\n      border: '1px solid rgba(93, 64, 55, 0.5)',\n      boxShadow: '0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      position: fixed;\n      ${positions[this.config.position] || positions['bottom-right']}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  getHeaderStyles() {\n    // ダークモードと同じ紫グラデーションで統一\n    const gradientColors = 'linear-gradient(135deg, #4f46e5, #7c3aed)';\n\n    return `\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `;\n  }\n\n  getOutputStyles() {\n    // カスタムスクロールバーのCSSを注入\n    this.addScrollbarStyles();\n\n    return `\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.2)'};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)'};\n    `;\n  }\n\n  /**\n   * スクロールバーのカスタムスタイルをページに注入\n   */\n  addScrollbarStyles() {\n    if (document.getElementById('custom-scrollbar-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'custom-scrollbar-styles';\n    style.textContent = `\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.5)'};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      /* wabi-sabiモード用の入力フィールドフォーカススタイル */\n      .wabisabi-mode textarea:focus,\n      .wabisabi-mode input:focus {\n        background: linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3)) !important;\n        border: 1px solid rgba(141, 110, 99, 0.6) !important;\n        box-shadow: 0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2), 0 0 0 2px rgba(141, 110, 99, 0.2) !important;\n        color: #F5F5F5 !important;\n        outline: none !important;\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  getInputStyles() {\n    // 2025 Glassmorphism仕様：入力フィールド\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))',\n      border: '1px solid rgba(255, 255, 255, 0.5)',\n      boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)'\n    };\n\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))',\n      border: '1px solid rgba(97, 97, 97, 0.5)',\n      boxShadow: '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(55, 65, 81, 0.6)'};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `;\n  }\n\n  getModernButtonStyles(type) {\n    const styles = {\n      primary: this.isWabiSabiMode ? `\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      ` : `\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,\n      secondary: this.isWabiSabiMode ? `\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,\n      danger: this.isWabiSabiMode ? `\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `\n    };\n\n    return `\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `;\n  }\n\n  getModeButtonStyles(isActive, mode) {\n    // モードカラー設定\n    const modeColors = {\n      generate: 'linear-gradient(135deg, #22c55e, #16a34a)', // Green - チャット欄と同じ緑色\n      import: 'linear-gradient(135deg, #22c55e, #16a34a)',   // Green - チャット欄と同じ緑色\n      modify: 'linear-gradient(135deg, #22c55e, #16a34a)',    // Green - チャット欄と同じ緑色\n      delete: 'linear-gradient(135deg, #22c55e, #16a34a)'     // Green - チャット欄と同じ緑色\n    };\n    \n    return `\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive ? 'white' : (this.isWabiSabiMode ? '#F5F5F5' : 'rgba(255, 255, 255, 0.7)')};\n      background: ${isActive ? modeColors[mode] : 'transparent'};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `;\n  }\n\n  /**\n   * イベントバインディング\n   */\n  bindEvents() {\n    // キーボードショートカット\n    document.addEventListener('keydown', (e) => {\n      // 設定されたキーでUI表示切替\n      if (e.key === this.config.activationKey) {\n        e.preventDefault();\n        this.toggle();\n        return;\n      }\n      \n      // Enterキー処理はinitUI()内で行うため、ここでは処理しない\n      // （IME対応のため）\n      \n      // Escapeで非表示\n      if (this.isVisible && e.key === 'Escape') {\n        this.hide();\n      }\n      \n      // Ctrl+Z/Ctrl+Y でUndo/Redo\n      if (this.isVisible && e.ctrlKey) {\n        if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault();\n          this.undo();\n        } else if (e.key === 'y' || (e.key === 'z' && e.shiftKey)) {\n          e.preventDefault();\n          this.redo();\n        }\n      }\n    });\n\n    // 入力フィールドのスタイル調整\n    this.input.addEventListener('focus', () => {\n      this.input.style.borderColor = '#74b9ff';\n      this.input.style.boxShadow = '0 0 5px rgba(116, 185, 255, 0.5)';\n    });\n\n    this.input.addEventListener('blur', () => {\n      this.input.style.borderColor = '#4a90e2';\n      this.input.style.boxShadow = 'none';\n    });\n  }\n\n  /**\n   * UI表示/非表示切替\n   */\n  toggle() {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * UI表示\n   */\n  show() {\n    this.container.style.display = 'flex';\n    this.container.style.flexDirection = 'column';\n    this.floatingContainer.style.display = 'flex';\n\n    // UIフォームの位置に合わせて配置（少し遅延して正確な位置を取得）\n    setTimeout(() => {\n      const containerRect = this.container.getBoundingClientRect();\n      this.floatingContainer.style.left = containerRect.left + 'px';\n      this.floatingContainer.style.top = (containerRect.top - 80) + 'px';\n      this.floatingContainer.style.width = containerRect.width + 'px';\n      this.floatingContainer.style.transform = 'none';\n    }, 50);\n\n    this.isVisible = true;\n    this.input.focus();\n\n    // フォーム表示中はチョコアイコンを隠す\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0';\n      this.floatingChocolateIcon.style.pointerEvents = 'none';\n    }\n\n    // コントロールを無効化\n    this.onControlsToggle(true);\n    // コントロール停止時も静かに\n  }\n\n  /**\n   * UI非表示\n   */\n  hide() {\n    this.container.style.display = 'none';\n    this.floatingContainer.style.display = 'none';\n    this.isVisible = false;\n\n    // フォーム非表示時はチョコアイコンを再表示\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.pointerEvents = 'auto';\n    }\n\n    // コントロールを再有効化\n    this.onControlsToggle(false);\n    this.logDebug('🎮 コントロールを再開');\n  }\n\n  /**\n   * モード切り替え\n   */\n  switchMode(mode) {\n    if (this.currentMode === mode) return;\n    \n    this.currentMode = mode;\n    \n    // モードボタンのスタイル更新\n    this.container.querySelectorAll('[data-mode]').forEach(btn => {\n      const isActive = btn.dataset.mode === mode;\n      btn.style.cssText = this.getModeButtonStyles(isActive, btn.dataset.mode);\n    });\n    \n    // 入力フィールドのプレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n    \n    // 実行ボタンのラベルと色更新\n    const executeBtn = this.container.querySelector('#execute-btn');\n    const labels = {\n      generate: '🎨 Generate Object',\n      modify: '✏️ Apply Changes', \n      delete: '🗑️ Delete Objects'\n    };\n    \n    const buttonColors = {\n      generate: 'linear-gradient(135deg, #5b21b6, #4c1d95)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)', \n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    executeBtn.innerHTML = `<span>${labels[mode]}</span>`;\n    executeBtn.style.background = buttonColors[mode];\n    \n    // モード切り替え通知は不要（ボタンで分かるため）\n  }\n  \n  /**\n   * モード別プレースホルダー\n   */\n  getPlaceholderForMode(mode) {\n    const placeholders = {\n      generate: '「猫の画像を作って」と話しかけて ⏎ ✨',\n      import: 'ファイルを選択して ⏎ 📁',\n      modify: '選択後「背景の緑色を透明にして」と伝えて ⏎ ✏️',\n      delete: '選択後、コマンドをそのまま送って ⏎ 🗑️'\n    };\n    return placeholders[mode] || placeholders.generate;\n  }\n\n  /**\n   * デモ版専用: 向き・反転コマンドをローカルで処理\n   */\n  handleDemoOrientationCommand(command) {\n    if (!this.sceneManager) {\n      return null;\n    }\n\n    const normalized = command.toLowerCase();\n    const wantsVerticalFlip = /上下|逆さ|さかさ|ひっくり返/.test(normalized);\n    const wantsHorizontalFlip = /左右|向きを変え|向きを変更|横向き|ミラー|反転/.test(normalized);\n    const wantsRotateRight = /右向き|右を向|右に向け/.test(normalized);\n    const wantsRotateLeft = /左向き|左を向|左に向け/.test(normalized);\n    const wantsRotateBack = /後ろ向き|反対向き|背中|180度|半回転/.test(normalized);\n\n    const hasOrientationKeyword = wantsVerticalFlip || wantsHorizontalFlip || wantsRotateRight || wantsRotateLeft || wantsRotateBack;\n    if (!hasOrientationKeyword) {\n      return null;\n    }\n\n    let targetObject = this.sceneManager.selectedObject;\n    if (!targetObject && typeof this.sceneManager.findObjectByKeyword === 'function') {\n      targetObject = this.sceneManager.findObjectByKeyword(normalized);\n      if (targetObject) {\n        this.sceneManager.selectObject(targetObject);\n      }\n    }\n\n    if (!targetObject) {\n      this.addOutput('⚠️ 変更したいオブジェクトを先に選択してください。', 'warning');\n      return { handled: true, result: { success: false, message: '対象オブジェクトが見つかりませんでした' } };\n    }\n\n    const operations = [];\n\n    if (wantsHorizontalFlip) {\n      const currentX = targetObject.scale.x === 0 ? 1 : targetObject.scale.x;\n      targetObject.scale.x = -currentX;\n      operations.push('左右反転');\n    }\n\n    if (wantsVerticalFlip) {\n      const currentY = targetObject.scale.y === 0 ? 1 : targetObject.scale.y;\n      targetObject.scale.y = -currentY;\n      operations.push('上下反転');\n    }\n\n    if (wantsRotateRight) {\n      targetObject.rotation.y = Math.PI / 2;\n      operations.push('右向き');\n    }\n\n    if (wantsRotateLeft) {\n      targetObject.rotation.y = -Math.PI / 2;\n      operations.push('左向き');\n    }\n\n    if (wantsRotateBack) {\n      targetObject.rotation.y = Math.PI;\n      operations.push('背面向き');\n    }\n\n    if (operations.length === 0) {\n      // ここまで来て操作が無ければ SceneManager に委譲\n      return { handled: false };\n    }\n\n    // 変更履歴を追加\n    targetObject.userData = targetObject.userData || {};\n    targetObject.userData.modifications = targetObject.userData.modifications || [];\n    targetObject.userData.modifications.push({\n      timestamp: Date.now(),\n      type: 'orientation',\n      operations,\n      command\n    });\n\n    // 選択表示を更新\n    if (typeof this.sceneManager.createModernSelectionIndicator === 'function') {\n      this.sceneManager.createModernSelectionIndicator(targetObject);\n    }\n\n    const message = `✏️ ${operations.join('・')} を適用しました`;\n    this.addOutput(message, 'success');\n\n    return {\n      handled: true,\n      result: {\n        success: true,\n        message,\n        objectId: targetObject.name,\n        operations\n      }\n    };\n  }\n\n  /**\n   * コマンド実行\n   */\n  async executeCommand() {\n    const command = this.input.value.trim();\n    if (!command) return;\n\n    // 最終的なコマンドタイプ判定\n    const commandType = this.analyzeCommandType(command);\n\n    if (this.selectedFile) {\n      if (this.currentMode !== 'import') {\n        this.selectMode('import', false);\n      }\n      this.currentMode = 'import';\n    } else {\n      this.currentMode = commandType.type;\n    }\n\n    // 削除の場合は確認ダイアログ\n    if (commandType.requiresConfirmation) {\n      const confirmed = await this.showDeleteConfirmation(command);\n      if (!confirmed) {\n        this.addOutput('❌ 削除をキャンセルしました', 'system');\n        return;\n      }\n    }\n\n    // 入力をクリア\n    this.input.value = '';\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.style.display = 'none';\n    this.hideProactiveSuggestion();\n\n    // コマンド表示（メディアタイプ付き）\n    const mediaIcon = commandType.mediaType === 'video' ? '🎬' : '🖼️';\n    // タスクカード作成\n    const taskId = this.addTaskCard(command, { status: 'processing' });\n\n    // コマンド実行前の状態を履歴に保存\n    this.saveCommandToHistory({\n      command: command,\n      mode: this.currentMode,\n      mediaType: commandType.mediaType,\n      timestamp: Date.now()\n    });\n\n    try {\n      // 処理メッセージ表示\n      // タスクカードは既に1183行目で作成済み（taskId変数）\n      // 重複を避けるため、ここでは作成しない\n\n      let result;\n      \n      // モードに応じたコマンド処理\n      const modePrefix = this.getModePrefix(this.currentMode);\n      const fullCommand = `${modePrefix}${command}`;\n\n      // モード別の実行処理\n      this.logDebug('🔍 Current mode check:', this.currentMode);\n      if (this.currentMode === 'import') {\n        this.logDebug('📁 Import mode detected - bypassing SceneManager');\n        // Importモード: 直接処理（SceneManagerを迂回）\n        if (!this.selectedFile) {\n          throw new Error('ファイルが選択されていません。まずファイルを選択してください。');\n        }\n        result = await this.handleImportCommand(command);\n      } else if (this.sceneManager) {\n        if (this.currentMode === 'modify') {\n          const orientationResult = this.handleDemoOrientationCommand(command);\n          if (orientationResult && orientationResult.handled) {\n            result = orientationResult.result;\n          } else {\n            result = await this.sceneManager.executeCommand(fullCommand);\n          }\n        } else {\n          result = await this.sceneManager.executeCommand(fullCommand);\n        }\n      } else if (this.client) {\n        // モードに応じてAPIエンドポイントを選択\n        if (this.currentMode === 'generate') {\n          // 生成モード: 新しいオブジェクトを作成\n          if (commandType.mediaType === 'video') {\n            result = await this.client.generateVideo(command, {\n              model: this.selectedVideoService || undefined\n            });\n          } else {\n            result = await this.client.generateImage(command, {\n              service: this.selectedImageService || undefined\n            });\n          }\n        } else if (this.currentMode === 'modify') {\n          // 変更モード: 既存オブジェクトを変更（選択が必要）\n          if (!this.selectedObject) {\n            throw new Error('変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。');\n          }\n          result = await this.client.modifySelectedObject(this.selectedObject, command);\n        } else if (this.currentMode === 'delete') {\n          // 削除モード: オブジェクト選択チェック\n          if (!this.selectedObject && !this.sceneManager?.getSelectedObjects()?.length) {\n            this.addOutput('⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。', 'system');\n            return;\n          }\n          // 削除モード: 確認ダイアログを表示してから削除\n          const confirmMessage = `本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;\n          if (!confirm(confirmMessage)) {\n            this.addOutput('❌ 削除がキャンセルされました', 'system');\n            return;\n          }\n          result = await this.client.deleteObjects(command);\n        } else {\n          // その他のモード\n          result = await this.client.executeCommand(fullCommand);\n        }\n      } else {\n        throw new Error('SceneManager または Client が設定されていません');\n      }\n\n      // taskId取得とSSE接続開始\n      if (result && result.taskId) {\n        this.connectToProgress(result.taskId, taskId);\n        this.currentTaskId = result.taskId;\n      }\n\n      // 成功メッセージ\n      const successMessages = {\n        generate: ``, // 成功メッセージ削除 - 結果で十分\n        modify: '✅ 変更を適用しました',\n        delete: '🗑️ 削除しました'\n      };\n      \n      // タスクカード完了\n      if (taskId) {\n        this.updateTaskCard(taskId, 'completed');\n      }\n      \n      // 詳細情報表示\n      if (result.modelName) {\n        // デバッグ情報削除 - モーダル表示用に保存\n      }\n      \n      if (result.objectId) {\n        // オブジェクトID削除\n      }\n      \n      if (result.position) {\n        // 位置情報削除\n      }\n\n      if (commandType.mediaType) {\n        // メディアタイプ削除\n      }\n\n    } catch (error) {\n      const errorMessages = {\n        generate: `❌ ${commandType.mediaType === 'video' ? '動画' : '画像'}生成エラー`,\n        modify: '❌ 変更エラー', \n        delete: '❌ 削除エラー'\n      };\n      // タスクカードエラー\n      if (taskId) {\n        this.updateTaskCard(taskId, 'error');\n      }\n\n      this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`, 'error');\n      console.error('Command execution error:', error);\n    }\n\n    // 2025年UXトレンド: コマンド実行後の自動選択解除\n    if (this.sceneManager && this.sceneManager.selectedObject) {\n      // Modify/Deleteコマンド後は選択を自動解除してストレス軽減\n      if (this.currentMode === 'modify' || this.currentMode === 'delete') {\n        setTimeout(() => {\n          this.sceneManager.deselectObject();\n        }, 500); // 少し遅延させて操作完了を視覚的に確認\n      }\n    }\n\n    // 出力エリアを最下部にスクロール\n    if (this.config.autoScroll) {\n      this.scrollToBottom();\n    }\n  }\n\n  /**\n   * 削除確認ダイアログ\n   */\n  async showConfirmationDialog(options) {\n    const {\n      icon = '🗑️',\n      title = '確認',\n      message = 'この操作を実行しますか？',\n      confirmText = '実行',\n      cancelText = 'キャンセル',\n      confirmColor = '#ef4444'\n    } = options;\n\n    return new Promise((resolve) => {\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;\n\n      const dialog = document.createElement('div');\n      dialog.style.cssText = `\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.3)' : 'rgba(255, 255, 255, 0.5)'};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isDarkMode \n          ? '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)'\n          : '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)'};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;\n\n      dialog.innerHTML = `\n        <div style=\"font-size: 56px; margin-bottom: 20px;\">${icon}</div>\n        <h3 style=\"margin: 0 0 16px 0; color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;\">\n          ${title}\n        </h3>\n        <p style=\"margin: 0 0 28px 0; color: ${this.isDarkMode ? '#d1d5db' : '#6b7280'}; line-height: 1.6; font-size: 16px;\">\n          ${message}\n        </p>\n        <div style=\"display: flex; gap: 8px; justify-content: center;\">\n          <button id=\"cancel-btn\" style=\"\n            padding: 14px 24px;\n            background: ${this.isDarkMode \n              ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n              : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))'};\n            border: 1px solid ${this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)'};\n            border-radius: 12px;\n            color: ${this.isDarkMode ? '#d1d5db' : '#374151'};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          \">${cancelText}</button>\n          <button id=\"confirm-btn\" style=\"\n            padding: 14px 24px;\n            background: ${confirmColor === '#6366f1' \n              ? 'linear-gradient(135deg, #6366f1, #8b5cf6)' \n              : confirmColor === '#ef4444'\n              ? 'linear-gradient(135deg, #ef4444, #dc2626)'\n              : 'linear-gradient(135deg, #ff7b47, #f97316)'};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor === '#6366f1' \n              ? 'rgba(99, 102, 241, 0.3)' \n              : confirmColor === '#ef4444' \n              ? 'rgba(239, 68, 68, 0.3)' \n              : 'rgba(255, 123, 71, 0.3)'};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          \">${confirmText}</button>\n        </div>\n      `;\n\n      modal.appendChild(dialog);\n      document.body.appendChild(modal);\n\n      // アニメーション開始\n      requestAnimationFrame(() => {\n        modal.style.opacity = '1';\n        dialog.style.transform = 'scale(1)';\n        dialog.style.opacity = '1';\n      });\n\n      // イベントリスナー\n      dialog.querySelector('#cancel-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(false);\n      };\n\n      dialog.querySelector('#confirm-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(true);\n      };\n\n      // ESCキーでキャンセル\n      const escHandler = (e) => {\n        if (e.key === 'Escape') {\n          this.closeModalWithAnimation(modal);\n          document.removeEventListener('keydown', escHandler);\n          resolve(false);\n        }\n      };\n      document.addEventListener('keydown', escHandler);\n\n      // モーダル背景クリックでキャンセル\n      modal.onclick = (e) => {\n        if (e.target === modal) {\n          this.closeModalWithAnimation(modal);\n          resolve(false);\n        }\n      };\n    });\n  }\n\n  async showDeleteConfirmation(command) {\n    return this.showConfirmationDialog({\n      icon: '🗑️',\n      title: '削除の確認',\n      message: `「${command}」を実行しますか？<br>この操作は取り消すことができません。`,\n      confirmText: '削除実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#ff7b47'\n    });\n  }\n\n  /**\n   * 出力エリアにメッセージ追加\n   */\n  /**\n   * タスクカード追加（従来のaddOutputを置き換え）\n   */\n  addOutput(message, type = 'default', options = {}) {\n    // タスクカード形式で処理\n    if (type === 'task' || type === 'progress') {\n      return this.addTaskCard(message, options);\n    }\n\n    // エラーとシステムメッセージのみ表示\n    if (type === 'error' || type === 'system') {\n      this.addSystemMessage(message, type);\n    }\n  }\n\n  /**\n   * フローティングタスクカード追加\n   */\n  addTaskCard(taskInfo, options = {}) {\n    if (!this.taskCards) this.taskCards = new Map();\n\n    const taskId = options.taskId || `task_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`;\n    const status = options.status || 'pending';\n    const prompt = taskInfo.prompt || taskInfo.command || taskInfo;\n\n    // フローティングカード作成\n    const card = document.createElement('div');\n    card.className = 'floating-task-card';\n    card.setAttribute('data-task-id', taskId);\n\n    // iOS 26 Liquid Glass + 2026年トレンドスタイル\n    card.style.cssText = this.getFloatingCardStyles(status);\n    // アニメーション用初期状態（非表示）- 強制設定\n    card.style.setProperty('opacity', '0', 'important');\n    card.style.setProperty('transform', 'translateY(20px) scale(0.95)', 'important');\n    card.style.setProperty('filter', 'blur(4px)', 'important');\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    const statusText = {\n      pending: '待機中',\n      processing: '生成中',\n      progress: '進行中',\n      completed: '完了',\n      error: 'エラー'\n    };\n\n    // 温かみのあるメッセージ表示\n    const friendlyMessage = this.getFriendlyMessage(status, prompt);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // フローティングコンテナに追加（最新が下に来るように）\n    this.floatingContainer.appendChild(card);\n    \n    // カード表示制限を適用（最大3個まで表示）\n    this.updateCardDisplayLimit();\n\n    this.taskCards.set(taskId, {\n      element: card,\n      status: status,\n      prompt: prompt,\n      originalPrompt: prompt, // 元のプロンプト\n      startTime: Date.now(),\n      endTime: null,\n      error: null,\n      contentType: 'image', // 'image', 'video', etc.\n      model: null,\n      settings: null\n    });\n\n    // カード詳細モーダル用のイベントリスナー\n    this.addCardDetailEvents(card, taskId);\n    \n    // 入場アニメーション\n    this.animateCardEntrance(card);\n    return taskId;\n  }\n\n  /**\n   * フローティングタスクカード更新\n   */\n  updateTaskCard(taskId, status, options = {}) {\n    if (!this.taskCards || !this.taskCards.has(taskId)) return;\n\n    const taskData = this.taskCards.get(taskId);\n    const card = taskData.element;\n\n    // ステータス更新\n    taskData.status = status;\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    // 温かみのあるメッセージ更新\n    const friendlyMessage = this.getFriendlyMessage(status, taskData.prompt);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // 完了時の自動消去アニメーション\n    if (status === 'completed') {\n      this.animateCardSuccess(card, taskId);\n    } else if (status === 'error') {\n      this.animateCardError(card, taskId);\n    }\n  }\n\n  /**\n   * システムメッセージ表示\n   */\n  addSystemMessage(message, type) {\n    const entry = document.createElement('div');\n    entry.className = `system-message ${type}`;\n    entry.style.cssText = `\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type === 'error' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(107, 114, 128, 0.1)'};\n      border: 1px solid ${type === 'error' ? 'rgba(239, 68, 68, 0.3)' : 'rgba(107, 114, 128, 0.3)'};\n      color: ${type === 'error' ? '#fca5a5' : (this.isDarkMode ? '#d1d5db' : '#6b7280')};\n    `;\n    entry.textContent = message;\n    this.outputDiv.appendChild(entry);\n    this.scrollToBottom();\n  }\n\n  /**\n   * タスクカードスタイル取得\n   */\n  getTaskCardStyles(status) {\n    const baseStyles = `\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(255, 255, 255, 0.15)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.25)'};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;\n\n    const statusBorders = {\n      pending: 'rgba(167, 139, 250, 0.3)',     // 薄紫\n      processing: 'rgba(192, 132, 252, 0.5)',  // 紫（強調）\n      progress: 'rgba(236, 72, 153, 0.4)',     // ピンク\n      completed: 'rgba(167, 139, 250, 0.4)',   // 紫\n      error: 'rgba(239, 68, 68, 0.4)'          // 赤\n    };\n\n    return baseStyles + `border-left: 3px solid ${statusBorders[status] || statusBorders.pending};`;\n  }\n\n  /**\n   * フローティングカードスタイル（iOS 26 Liquid Glass + 2026年トレンド）\n   */\n  getFloatingCardStyles(status) {\n    // 2025年Glassmorphism仕様：フローティングタスクカード\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)',\n      color: '#ffffff'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)',\n      color: '#1f2937'\n    };\n\n    const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n    return `\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  /**\n   * カード表示制限を適用（最大3個まで表示、それ以上は「+ N」で表示）\n   */\n  updateCardDisplayLimit() {\n    const maxVisibleCards = 3;\n    const allCards = Array.from(this.floatingContainer.children).filter(child => \n      !child.classList.contains('overflow-counter')\n    );\n    \n    // 既存のカウンターを削除\n    const existingCounter = this.floatingContainer.querySelector('.overflow-counter');\n    if (existingCounter) {\n      existingCounter.remove();\n    }\n    \n    if (allCards.length <= maxVisibleCards) {\n      // カードが3個以下の場合、すべて表示\n      allCards.forEach(card => {\n        card.style.display = 'flex';\n      });\n    } else {\n      // カードが4個以上の場合、最新3個のみ表示し、残りはカウンター表示\n      const visibleCards = allCards.slice(-maxVisibleCards); // 最新3個\n      const hiddenCount = allCards.length - maxVisibleCards;\n      \n      // 古いカードを非表示\n      allCards.forEach((card, index) => {\n        if (index < allCards.length - maxVisibleCards) {\n          card.style.display = 'none';\n        } else {\n          card.style.display = 'flex';\n        }\n      });\n      \n      // 「+ N」カウンターを作成\n      const counter = document.createElement('div');\n      counter.className = 'overflow-counter';\n      // テーマに応じたカウンタースタイル\n      const counterBaseColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.12)';\n      const counterBorderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.15)';\n      const counterTextColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.6)';\n      \n      counter.style.cssText = `\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;\n      counter.innerHTML = `+ ${hiddenCount}`;\n      \n      // カウンターを最初に挿入（最上部に配置）\n      this.floatingContainer.insertBefore(counter, this.floatingContainer.firstChild);\n      \n      // カウンターのホバー効果（テーマ対応）\n      const counterHoverColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.18)';\n      \n      counter.addEventListener('mouseenter', () => {\n        counter.style.background = counterHoverColor;\n        counter.style.transform = 'scale(1.05)';\n      });\n      \n      counter.addEventListener('mouseleave', () => {\n        counter.style.background = counterBaseColor;\n        counter.style.transform = 'scale(1)';\n      });\n    }\n  }\n\n  /**\n   * カードに詳細モーダル用のイベントリスナーを追加\n   */\n  addCardDetailEvents(card, taskId) {\n    // タッチデバイス検出\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    \n    if (isTouchDevice) {\n      // モバイル/タブレット: タップで詳細表示\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    } else {\n      // デスクトップ: ホバーで詳細表示\n      let hoverTimeout;\n      \n      card.addEventListener('mouseenter', () => {\n        hoverTimeout = setTimeout(() => {\n          this.showTaskDetailModal(taskId);\n        }, 800); // 0.8秒ホバーで表示\n      });\n      \n      card.addEventListener('mouseleave', () => {\n        if (hoverTimeout) {\n          clearTimeout(hoverTimeout);\n        }\n      });\n      \n      // クリックでも表示（デスクトップでも使いやすく）\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    }\n  }\n\n  /**\n   * タスク詳細モーダルを表示\n   */\n  showTaskDetailModal(taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData) return;\n    \n    // 既存のモーダルを削除\n    const existingModal = document.querySelector('.task-detail-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n    \n    // モーダル作成\n    const modal = this.createTaskDetailModal(taskData);\n    document.body.appendChild(modal);\n    \n    // 入場アニメーション\n    requestAnimationFrame(() => {\n      modal.style.opacity = '1';\n      modal.querySelector('.modal-content').style.transform = 'translateY(0) scale(1)';\n    });\n  }\n\n  /**\n   * タスク詳細モーダルのHTML要素を作成\n   */\n  createTaskDetailModal(taskData) {\n    const modal = document.createElement('div');\n    modal.className = 'task-detail-modal';\n    \n    // テーマに応じたスタイル\n    const overlayColor = this.isDarkMode ? 'rgba(0, 0, 0, 0.6)' : 'rgba(0, 0, 0, 0.4)';\n    const modalBg = this.isDarkMode ? 'rgba(20, 20, 20, 0.95)' : 'rgba(255, 255, 255, 0.95)';\n    const modalBorder = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n    const textColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(0, 0, 0, 0.9)';\n    const labelColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)';\n    \n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;\n    \n    // 実行時間計算\n    const duration = taskData.endTime \n      ? ((taskData.endTime - taskData.startTime) / 1000).toFixed(1)\n      : ((Date.now() - taskData.startTime) / 1000).toFixed(1);\n    \n    // ステータス表示\n    const statusText = taskData.status === 'pending' ? '待機中' \n                    : taskData.status === 'in-progress' ? '実行中' \n                    : taskData.status === 'completed' ? '完了' \n                    : 'エラー';\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;\">\n        <h3 style=\"margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;\">タスク詳細</h3>\n        <button class=\"close-btn\" style=\"\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        \">×</button>\n      </div>\n      \n      <div style=\"space-y: 16px;\">\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📝 元のプロンプト</div>\n          <div style=\"color: ${textColor}; font-size: 14px; line-height: 1.4;\">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📊 ステータス</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">⏱️ 実行時間</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${duration}秒</div>\n        </div>\n        \n        ${taskData.error ? `\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">❌ エラー詳細</div>\n          <div style=\"color: #ef4444; font-size: 14px; line-height: 1.4;\">${taskData.error}</div>\n        </div>\n        ` : ''}\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">🎨 コンテンツタイプ</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${taskData.contentType || '画像'}</div>\n        </div>\n      </div>\n    `;\n    \n    // イベントリスナー\n    modalContent.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    const closeBtn = modalContent.querySelector('.close-btn');\n    closeBtn.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    closeBtn.addEventListener('mouseenter', () => {\n      closeBtn.style.color = textColor;\n    });\n    \n    closeBtn.addEventListener('mouseleave', () => {\n      closeBtn.style.color = labelColor;\n    });\n    \n    modal.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    modal.appendChild(modalContent);\n    return modal;\n  }\n\n  /**\n   * タスク詳細モーダルを閉じる\n   */\n  closeTaskDetailModal(modal) {\n    modal.style.opacity = '0';\n    modal.querySelector('.modal-content').style.transform = 'translateY(20px) scale(0.95)';\n    \n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    }, 300);\n  }\n\n  /**\n   * カード入場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardEntrance(card) {\n    // iOS 26 Liquid Glass 入場エフェクト\n    card.style.transform = 'translateY(20px) scale(0.95)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(4px)';\n\n    requestAnimationFrame(() => {\n      card.style.transition = 'all 0.6s cubic-bezier(0.16, 1, 0.3, 1)';\n      card.style.transform = 'translateY(0) scale(1)';\n      card.style.opacity = '1';\n      card.style.filter = 'blur(0px)';\n\n      // 2026年トレンド: 微細な光る効果\n      card.style.boxShadow = '0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)';\n    });\n  }\n\n  /**\n   * 成功時アニメーション + 自動消去（iOS 26 Liquid Glass）\n   */\n  animateCardSuccess(card, taskId) {\n    // iOS 26 Liquid Glass 成功エフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(76, 175, 80, 0.6)';\n    card.style.transform = 'scale(1.08)';\n    card.style.boxShadow = '0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)';\n    card.style.filter = 'brightness(1.1) saturate(1.2)';\n\n    // 2026年トレンド: 流体的な戻りアニメーション\n    setTimeout(() => {\n      card.style.transform = 'scale(1.02)';\n      card.style.filter = 'brightness(1.05) saturate(1.1)';\n    }, 150);\n\n    // Liquid Glass風のスムーズなフェードアウト（2秒後に自動削除）\n    setTimeout(() => {\n      this.animateCardExit(card, taskId);\n    }, 2000);\n  }\n\n  /**\n   * エラー時アニメーション（2026年トレンド UX）\n   */\n  animateCardError(card, taskId) {\n    // iOS 26 Liquid Glass エラーエフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(244, 67, 54, 0.7)';\n    card.style.boxShadow = '0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)';\n    card.style.filter = 'saturate(1.3) brightness(1.1)';\n\n    // 2026年トレンド: より自然なpulseアニメーション（shakeより洗練）\n    card.style.animation = 'errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2';\n\n    // UX改善: エラー内容を表示するツールチップ風UI\n    this.addErrorTooltip(card, taskId);\n\n    // エラーは手動で消すまで表示継続（クリックで消去）\n    card.style.cursor = 'pointer';\n    card.onclick = () => this.animateCardExit(card, taskId);\n\n    // 5秒後に自動フェードアウト（UX改善）\n    setTimeout(() => {\n      if (this.taskCards.has(taskId)) {\n        this.animateCardExit(card, taskId);\n      }\n    }, 5000);\n  }\n\n  /**\n   * エラー時のツールチップ表示（UX改善）\n   */\n  addErrorTooltip(card, taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData || !taskData.error) return;\n\n    // ツールチップ要素作成\n    const tooltip = document.createElement('div');\n    tooltip.style.cssText = `\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;\n    tooltip.textContent = taskData.error;\n\n    card.style.position = 'relative';\n    card.appendChild(tooltip);\n\n    // フェードイン\n    requestAnimationFrame(() => {\n      tooltip.style.opacity = '1';\n    });\n\n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      if (tooltip.parentNode) {\n        tooltip.style.opacity = '0';\n        setTimeout(() => {\n          if (tooltip.parentNode) {\n            tooltip.parentNode.removeChild(tooltip);\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * カード退場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardExit(card, taskId) {\n    // iOS 26 Liquid Glass 退場エフェクト - 2026年トレンドの「スッと消える」\n    card.style.transition = 'all 0.28s cubic-bezier(0.4, 0, 0.2, 1)';\n    card.style.transform = 'translateY(-12px) scale(0.92)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(6px) brightness(1.2)';\n\n    // 2026年トレンド: 消去時の微細な光の拡散効果\n    card.style.boxShadow = '0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)';\n\n    setTimeout(() => {\n      if (card.parentNode) {\n        card.parentNode.removeChild(card);\n      }\n      this.taskCards.delete(taskId);\n      // カード削除後に表示制限を再適用\n      this.updateCardDisplayLimit();\n    }, 280);\n  }\n\n  /**\n   * ユーザーの表現スタイルを自然に感知\n   */\n  getResponseType(prompt) {\n    // ユーザーの表現スタイルを自然に感知\n    if (/ちょこっと|ちょこん|少し|軽く/.test(prompt) || prompt.length < 15) {\n      return 'casual';\n    }\n    if (/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)) {\n      return 'magical';\n    }\n    return 'balanced'; // 80%がここに該当\n  }\n\n  /**\n   * 温かみのあるメッセージを生成（マーケ提案ベース）\n   */\n  getFriendlyMessage(status, prompt, errorMessage = null) {\n    const shortPrompt = prompt.length > 15 ? prompt.substring(0, 15) + '...' : prompt;\n\n    // 自然な応答システム適用\n    const responseType = this.getResponseType(prompt);\n\n    switch (status) {\n      case 'pending':\n        return responseType === 'casual' ? 'ちょこっと準備中です...' :\n               responseType === 'magical' ? '魔法をかけようとしています...' :\n               'ちょこっと魔法の準備中...';\n      case 'processing':\n      case 'in-progress':\n      case 'progress':\n        // Modify mode specific messages for processing\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整中です...' :\n                 responseType === 'magical' ? 'イメージを変化させています...' :\n                 'ちょこんと編集中です...';\n        }\n        return responseType === 'casual' ? 'ちょこんと配置中です...' :\n               responseType === 'magical' ? 'あなたの想いを形にしています...' :\n               'ちょこっと魔法をかけています...';\n      case 'completed':\n        // Delete mode specific messages\n        if (this.currentMode === 'delete') {\n          return responseType === 'casual' ? 'ちょこっと削除しました！' :\n                 responseType === 'magical' ? 'すっきりと片付きました！' :\n                 'ちょこんと削除完了！すっきりですね！';\n        }\n        // Modify mode specific messages\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整しました！' :\n                 responseType === 'magical' ? '素敵に変身しました！' :\n                 'ちょこんと編集完了！いい感じですね！';\n        }\n        // Default completion messages for other modes\n        return responseType === 'casual' ? 'ちょこっとドロップしました！' :\n               responseType === 'magical' ? '素敵な世界が完成しました！' :\n               'ちょこんと配置完了！素敵ですね！';\n      case 'error':\n        // エラー理由があれば含める\n        if (errorMessage) {\n          const shortError = errorMessage.length > 30 ? errorMessage.substring(0, 30) + '...' : errorMessage;\n          return `❌ ${shortError}`;\n        }\n        return responseType === 'casual' ? 'おっと、エラーが発生しました' :\n               responseType === 'magical' ? '申し訳ございません、処理に失敗しました' :\n               'エラーが発生しました。もう一度お試しください';\n      default:\n        return shortPrompt;\n    }\n  }\n\n  /**\n   * ステータス色取得\n   */\n  getStatusColor(status) {\n    // ネオンパープル/ピンク系で統一（2025トレンド）\n    const colors = {\n      pending: this.isDarkMode ? '#a78bfa' : '#7c3aed',        // 薄紫\n      processing: this.isDarkMode ? '#c084fc' : '#9333ea',     // 紫（生成中）\n      progress: this.isDarkMode ? '#ec4899' : '#be185d',       // ピンク\n      completed: this.isDarkMode ? '#a78bfa' : '#7c3aed',      // 紫（完了も統一）\n      error: this.isDarkMode ? '#f87171' : '#dc2626'           // 赤（エラーのみ）\n    };\n    return colors[status] || colors.pending;\n  }\n\n  /**\n   * ステータスインジケーター作成（パーセント表示なし）\n   */\n  createStatusIndicator(status) {\n    if (status === 'processing' || status === 'progress') {\n      return `\n        <div class=\"status-indicator\" style=\"\n          background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        \">\n          <div class=\"status-pulse\" style=\"\n            background: linear-gradient(90deg, transparent, #6366f1, #8b5cf6, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          \"></div>\n        </div>\n        <div style=\"display: flex; align-items: center; gap: 4px; margin-top: 8px;\">\n          <div class=\"status-dots\" style=\"font-size: 10px; color: ${this.isDarkMode ? '#c084fc' : '#9333ea'};\">\n            処理中<span style=\"animation: dots 1.5s infinite;\">...</span>\n          </div>\n        </div>\n      `;\n    }\n    return '';\n  }\n\n  /**\n   * タスク完了アニメーション\n   */\n  animateTaskCompletion(card) {\n    // 控えめなサクセスアニメーション\n    card.style.animation = 'taskComplete 0.8s ease-out';\n\n    // 微妙なパーティクル効果を追加（控えめ）\n    this.addSubtleParticleEffect(card);\n\n    setTimeout(() => {\n      card.style.animation = '';\n    }, 800);\n\n    this.ensureTaskAnimations();\n  }\n\n  /**\n   * 控えめなパーティクル効果\n   */\n  addSubtleParticleEffect(card) {\n    const particles = 3; // 少ない数のパーティクル\n    const rect = card.getBoundingClientRect();\n\n    for (let i = 0; i < particles; i++) {\n      const particle = document.createElement('div');\n      particle.style.cssText = `\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right - 20}px;\n        top: ${rect.top + 10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;\n\n      // ランダムな方向に少し移動\n      const angle = (i / particles) * Math.PI * 2;\n      const distance = 15; // 控えめな距離\n      particle.style.setProperty('--move-x', `${Math.cos(angle) * distance}px`);\n      particle.style.setProperty('--move-y', `${Math.sin(angle) * distance}px`);\n\n      document.body.appendChild(particle);\n\n      // 自動削除\n      setTimeout(() => particle.remove(), 1200);\n    }\n  }\n\n  /**\n   * タスクアニメーション用CSS確保\n   */\n  ensureTaskAnimations() {\n    if (document.getElementById('task-animations')) return;\n\n    const style = document.createElement('style');\n    style.id = 'task-animations';\n    style.textContent = `\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * プログレス付きタスクステータス表示（互換性のため）\n   */\n  addTaskStatus(message, percent = 0, taskId = null) {\n    const id = taskId || `task_${Date.now()}`;\n    return this.addTaskCard(message, {\n      percent: Math.min(Math.max(percent, 0), 100),\n      taskId: id,\n      status: percent > 0 ? 'progress' : 'pending'\n    });\n  }\n\n  /**\n   * プログレス更新\n   */\n  updateTaskProgress(taskId, percent, newMessage = null) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask && newMessage) {\n      // 既存タスクを更新\n      this.addOutput(newMessage, 'progress', { \n        percent: Math.min(Math.max(percent, 0), 100),\n        taskId\n      });\n    }\n  }\n\n  /**\n   * タスク完了（プログレスバー削除）\n   */\n  completeTask(taskId) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask) {\n      // 完了アニメーション\n      existingTask.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n      existingTask.style.opacity = '0';\n      existingTask.style.transform = 'translateX(20px)';\n      \n      setTimeout(() => {\n        if (existingTask.parentNode) {\n          existingTask.remove();\n        }\n      }, 500);\n    }\n  }\n\n  /**\n   * SSE接続開始（リアルタイム進捗受信）\n   */\n  connectToProgress(serverTaskId, uiTaskId = null) {\n    if (this.activeConnections.has(serverTaskId)) {\n      return;\n    }\n\n    const eventSource = new EventSource(`/api/progress/${serverTaskId}`);\n    this.activeConnections.set(serverTaskId, eventSource);\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        data.uiTaskId = uiTaskId; // UI用タスクIDを追加\n        this.handleProgressUpdate(data);\n      } catch (error) {\n        console.error('SSE data parse error:', error);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error);\n      this.disconnectProgress(serverTaskId);\n    };\n  }\n\n  /**\n   * 進捗更新処理\n   */\n  handleProgressUpdate(data) {\n    switch (data.type) {\n      case 'connected':\n        this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);\n        break;\n\n      case 'progress':\n        if (data.percent !== undefined && data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'progress', { percent: data.percent });\n        }\n        break;\n\n      case 'completed':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'completed');\n        }\n        this.disconnectProgress(data.taskId);\n        break;\n\n      case 'error':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'error');\n        }\n        this.addOutput(`❌ ${data.message}`, 'error');\n        this.disconnectProgress(data.taskId);\n        break;\n    }\n  }\n\n  /**\n   * SSE接続終了\n   */\n  disconnectProgress(taskId) {\n    const connection = this.activeConnections.get(taskId);\n    if (connection) {\n      connection.close();\n      this.activeConnections.delete(taskId);\n    }\n  }\n\n  /**\n   * 出力エリアを最下部にスクロール\n   */\n  scrollToBottom() {\n    if (this.outputDiv) {\n      this.outputDiv.scrollTop = this.outputDiv.scrollHeight;\n    }\n  }\n\n  /**\n   * モード別コマンドプレフィックス\n   */\n  getModePrefix(mode) {\n    // サーバー側でモードを区別するためのプレフィックス\n    const prefixes = {\n      generate: '', // デフォルトは生成モード\n      modify: '[変更] ',\n      delete: '[削除] '\n    };\n    return prefixes[mode] || '';\n  }\n\n  /**\n   * コマンド保存 (Undo/Redoシステム)\n   */\n  saveCommandToHistory(commandData) {\n    // 現在のインデックス以降の履歴を削除（新しいコマンドが実行されたため）\n    this.commandHistory = this.commandHistory.slice(0, this.currentHistoryIndex + 1);\n    \n    // 新しいコマンドを履歴に追加\n    this.commandHistory.push(commandData);\n    this.currentHistoryIndex = this.commandHistory.length - 1;\n    \n    // 最大コマンド保存数を超えた場合、古いコマンドを削除\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentHistoryIndex--;\n    }\n    \n    // ボタン状態を更新\n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undo実行\n   */\n  undo() {\n    if (!this.canUndo()) {\n      this.addOutput('↶ Undoできる操作がありません', 'hint');\n      return;\n    }\n    \n    const command = this.commandHistory[this.currentHistoryIndex];\n    this.currentHistoryIndex--;\n    \n    // Undoの逆操作を実行（簡易実装）\n    if (command.mode === 'generate') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の生成を取り消しました`, 'system');\n      // 実際のシーン管理では最後に作成されたオブジェクトを削除\n      if (this.sceneManager && this.sceneManager.undoLastGenerate) {\n        this.sceneManager.undoLastGenerate();\n      }\n    } else if (command.mode === 'modify') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の変更を取り消しました`, 'system');\n      // 実際のシーン管理では前の状態に戻す\n      if (this.sceneManager && this.sceneManager.undoLastModify) {\n        this.sceneManager.undoLastModify();\n      }\n    } else if (command.mode === 'delete') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の削除を取り消しました`, 'system');\n      // 実際のシーン管理では削除されたオブジェクトを復元\n      if (this.sceneManager && this.sceneManager.undoLastDelete) {\n        this.sceneManager.undoLastDelete();\n      }\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Redo実行\n   */\n  redo() {\n    if (!this.canRedo()) {\n      this.addOutput('↷ Redoできる操作がありません', 'hint');\n      return;\n    }\n    \n    this.currentHistoryIndex++;\n    const command = this.commandHistory[this.currentHistoryIndex];\n    \n    // Redoでコマンドを再実行\n    this.addOutput(`↷ Redo: \"${command.command}\" を再実行しました`, 'system');\n    \n    // 実際のシーン管理でのRedo処理\n    if (this.sceneManager && this.sceneManager.redoCommand) {\n      this.sceneManager.redoCommand(command);\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undoが可能かチェック\n   */\n  canUndo() {\n    return this.currentHistoryIndex >= 0;\n  }\n\n  /**\n   * Redoが可能かチェック\n   */\n  canRedo() {\n    return this.currentHistoryIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Undo/Redoボタンの状態更新\n   */\n  updateUndoRedoButtons() {\n    if (this.undoBtn) {\n      this.undoBtn.disabled = !this.canUndo();\n      this.undoBtn.style.opacity = this.canUndo() ? '1' : '0.4';\n      this.undoBtn.style.cursor = this.canUndo() ? 'pointer' : 'not-allowed';\n    }\n    \n    if (this.redoBtn) {\n      this.redoBtn.disabled = !this.canRedo();\n      this.redoBtn.style.opacity = this.canRedo() ? '1' : '0.4';\n      this.redoBtn.style.cursor = this.canRedo() ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  /**\n   * 確認付き全オブジェクト削除\n   */\n  async clearAllWithConfirmation() {\n    const confirmed = await this.showClearAllConfirmation();\n    if (confirmed) {\n      this.clearAll();\n    }\n  }\n\n  /**\n   * Clear All確認ダイアログ\n   */\n  async showClearAllConfirmation() {\n    return this.showConfirmationDialog({\n      icon: '🧹',\n      title: 'Clear All の確認',\n      message: 'すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。',\n      confirmText: 'Clear All 実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#6366f1'\n    });\n  }\n\n  /**\n   * モーダルクローズアニメーション\n   */\n  closeModalWithAnimation(modal) {\n    const dialog = modal.querySelector('div:last-child');\n    dialog.style.transform = 'scale(0.9)';\n    dialog.style.opacity = '0';\n    modal.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (modal.parentElement) {\n        document.body.removeChild(modal);\n      }\n    }, 200);\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    if (this.sceneManager) {\n      this.sceneManager.clearAll();\n      this.addOutput('🧹 全ての実験オブジェクトを削除しました', 'system');\n    } else if (this.client) {\n      // サーバー側での削除は未実装\n      this.addOutput('⚠️ サーバー側削除は未実装', 'error');\n    }\n  }\n\n  // showHistory() メソッド完全削除済み\n\n  /**\n   * 利用可能なコマンド例を表示\n   */\n  showExamples() {\n    const examples = [\n      '右上にドラゴンを作って',\n      '中央に大きなユニコーンを生成',\n      '左下に小さな桜を作って',\n      '空に鳳凰を作って',\n      '地面に神社を作って'\n    ];\n\n    this.addOutput('💡 コマンド例:', 'system');\n    examples.forEach(example => {\n      this.addOutput(`   \"${example}\"`, 'hint');\n    });\n  }\n\n  /**\n   * SceneManager設定\n   */\n  setSceneManager(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.applyServiceSelectionToSceneManager();\n  }\n\n  /**\n   * Client設定\n   */\n  setClient(client) {\n    this.client = client;\n  }\n\n  /**\n   * 設定更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n    // 必要に応じてUIを更新\n    if (newConfig.activationKey) {\n      // 新しいキーバインドを反映するため、イベントリスナーを再設定\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  /**\n   * スタイル再適用\n   */\n  refreshStyles() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isWabiSabiMode ? 'wabisabi-mode' : (this.isDarkMode ? 'dark-mode' : 'light-mode');\n\n    // Generateモードボタンのスタイルを再適用\n    const generateBtn = this.container?.querySelector('[data-mode=\"generate\"]');\n    if (generateBtn) {\n      generateBtn.style.cssText = this.getModeButtonStyles(true, 'generate');\n    }\n    \n    // Executeボタンのスタイルを再適用\n    const executeBtn = this.container?.querySelector('#execute-btn');\n    if (executeBtn) {\n      executeBtn.style.cssText = this.getModernButtonStyles('primary');\n    }\n  }\n\n  /**\n   * テーマ切り替え (light -> dark -> wabisabi -> light)\n   */\n  toggleTheme() {\n    const themeOrder = ['light', 'dark', 'wabisabi'];\n    const currentIndex = themeOrder.indexOf(this.currentTheme);\n    const nextIndex = (currentIndex + 1) % themeOrder.length;\n\n    this.currentTheme = themeOrder[nextIndex];\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n\n    localStorage.setItem('live-command-theme', this.currentTheme);\n\n    // アイコンボタン更新\n    if (this.themeToggle) {\n      const getThemeIcon = () => {\n        const themeConfig = {\n          light: '🌙',\n          dark: '🍵',\n          wabisabi: '☀️'\n        };\n        return themeConfig[this.currentTheme] || '🌙';\n      };\n\n      const getThemeTitle = () => {\n        const titleConfig = {\n          light: 'ダークモードに切り替え',\n          dark: '侘び寂びモードに切り替え',\n          wabisabi: 'ライトモードに切り替え'\n        };\n        return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n      };\n\n      const getThemeIconWithFilter = () => {\n        const icon = getThemeIcon();\n        if (icon === '☀️') {\n          return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n        } else if (icon === '🍵') {\n          return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n        } else {\n          return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n        }\n      };\n\n      this.themeToggle.innerHTML = getThemeIconWithFilter();\n      this.themeToggle.title = getThemeTitle();\n    }\n\n    // 全スタイル再適用\n    this.applyTheme();\n\n    // テーマ切り替え完了（履歴には出力しない）\n  }\n\n  /**\n   * テーマ適用\n   */\n  applyTheme() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isDarkMode ? 'dark-mode' : 'light-mode';\n\n    // メインコンテナ（display状態を保持）\n    const currentDisplay = this.container.style.display;\n    const currentFlexDirection = this.container.style.flexDirection;\n    this.container.style.cssText = this.getContainerStyles();\n    this.container.style.display = currentDisplay || 'flex';\n    this.container.style.flexDirection = currentFlexDirection || 'column';\n\n    // フローティングブランドバッジのテーマ再適用\n    const brandBadge = this.container.querySelector('.floating-brand-badge');\n    if (brandBadge) {\n      brandBadge.style.background = this.isDarkMode \n        ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))'\n        : 'linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))';\n      brandBadge.style.border = `1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'}`;\n    }\n\n    // 入力フィールド\n    this.input.style.cssText = this.getInputStyles();\n\n    // スタイル適用\n    this.output.style.cssText = this.getOutputStyles();\n\n    // ラジオボタンモードセレクターの2025年仕様テーマ再適用\n    if (this.radioModeContainer) {\n      this.radioModeContainer.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))');\n      this.radioModeContainer.style.borderColor = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.4)'\n        : (this.isDarkMode\n          ? 'rgba(99, 102, 241, 0.15)'\n          : 'rgba(255, 255, 255, 0.25)');\n\n      // 各ラジオボタンのスタイル更新\n      Object.keys(this.radioModeButtons).forEach(key => {\n        const { button } = this.radioModeButtons[key];\n        if (this.currentMode !== key) {\n          button.style.color = this.isWabiSabiMode\n            ? 'rgba(245, 245, 245, 0.8)'\n            : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n          button.style.background = 'transparent';\n          button.style.border = '1px solid transparent';\n          button.style.boxShadow = 'none';\n        }\n      });\n\n      // 現在選択されているモードのスタイルも更新\n      this.selectMode(this.currentMode, false);\n    }\n\n    // アクションボタンのテーマ再適用\n    if (this.clearBtn) {\n      this.clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    }\n    if (this.historyBtn) {\n      this.historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n      this.historyBtn.style.opacity = '0.5';\n    }\n    if (this.themeToggle) {\n      const getThemeIcon = () => {\n        const themeConfig = {\n          light: '🌙', // ライトモード時は月を表示（次がダーク）\n          dark: '🍵',  // ダークモード時は茶を表示（次がwabi-sabi）\n          wabisabi: '☀️' // wabi-sabiモード時は太陽を表示（次がライト）\n        };\n        return themeConfig[this.currentTheme] || '🌙';\n      };\n      const getThemeTitle = () => {\n        const titleConfig = {\n          light: 'ダークモードに切り替え',\n          dark: '侘び寂びモードに切り替え',\n          wabisabi: 'ライトモードに切り替え'\n        };\n        return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n      };\n      const getThemeIconWithFilter = () => {\n        const icon = getThemeIcon();\n        // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n        if (icon === '☀️') {\n          return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n        } else if (icon === '🍵') {\n          return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n        } else {\n          return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n        }\n      };\n      this.themeToggle.innerHTML = getThemeIconWithFilter();\n      this.themeToggle.title = getThemeTitle();\n      this.themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    }\n    if (this.settingsButton) {\n      this.settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    }\n\n    this.updateServiceSelectorTheme();\n\n    // 閉じるボタンのテーマ更新\n    const closeButton = this.container.querySelector('.close-button');\n    if (closeButton) {\n      closeButton.style.color = this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937');\n      closeButton.style.background = this.isWabiSabiMode\n        ? 'rgba(245, 245, 245, 0.1)'\n        : (this.isDarkMode\n          ? 'rgba(255, 255, 255, 0.1)'\n          : 'rgba(0, 0, 0, 0.1)');\n    }\n\n    // フローティングコンテナとタスクカードのテーマ更新\n    this.updateFloatingContainerTheme();\n\n    // 既存の出力テキストの色を更新\n    this.updateExistingTextColors();\n  }\n\n  /**\n   * フローティングコンテナとタスクカードのテーマ更新\n   */\n  updateFloatingContainerTheme() {\n    if (!this.floatingContainer) return;\n\n    // フローティングコンテナの表示状態を保持\n    const currentDisplay = this.floatingContainer.style.display;\n\n    // 既存のタスクカードの色だけをテーマに合わせて更新（レイアウトは保持）\n    if (this.taskCards && this.taskCards.size > 0) {\n      this.taskCards.forEach((taskData, taskId) => {\n        const card = taskData.element;\n        if (card) {\n          // テーマ関連の色のみ更新（位置やアニメーション状態は保持）\n          // 2025年Glassmorphism仕様適用\n          const glassmorphismDark = {\n            background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n            border: '1px solid rgba(99, 102, 241, 0.25)',\n            color: '#ffffff'\n          };\n\n          const glassmorphismLight = {\n            background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n            border: '1px solid rgba(255, 255, 255, 0.4)',\n            color: '#1f2937'\n          };\n\n          const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n\n          card.style.setProperty('background', theme.background, 'important');\n          card.style.setProperty('border', theme.border, 'important');\n          card.style.setProperty('color', theme.color, 'important');\n        }\n      });\n    }\n\n    // テーマ切り替え時は位置は変更せず、表示状態のみ復元\n    this.floatingContainer.style.display = currentDisplay;\n  }\n\n  /**\n   * 既存のテキスト色を現在のテーマに合わせて更新\n   */\n  updateExistingTextColors() {\n    const colors = this.isDarkMode ? {\n      system: '#60a5fa',\n      command: '#93c5fd',\n      success: '#f472b6',\n      error: '#f87171',\n      processing: '#fbbf24',\n      info: '#d1d5db',\n      hint: '#d1d5db'\n    } : {\n      system: '#1e40af',\n      command: '#1d4ed8',\n      success: '#be185d',\n      error: '#dc2626',\n      processing: '#d97706',\n      info: '#7c3aed',\n      hint: '#374151'\n    };\n\n    const defaultTextColor = this.isDarkMode ? '#d1d5db' : '#374151';\n\n    // output内の全てのdivの色を更新\n    this.output.querySelectorAll('div').forEach(line => {\n      const text = line.textContent;\n      let type = 'default';\n      \n      // テキストの内容からタイプを判定\n      if (text.includes('📋') || text.includes('🎨') || text.includes('🎮') || text.includes('UI起動')) {\n        type = 'system';\n      } else if (text.startsWith('> ')) {\n        type = 'command';\n      } else if (text.includes('✅') || text.includes('⭐') || text.includes('生成しました')) {\n        type = 'success';\n      } else if (text.includes('❌') || text.includes('エラー')) {\n        type = 'error';\n      } else if (text.includes('中...')) {\n        type = 'processing';\n      } else if (text.includes('📍') || text.includes('使用モデル:') || text.includes('位置:')) {\n        type = 'info';\n      } else if (text.includes('   ')) {\n        type = 'hint';\n      }\n\n      line.style.color = colors[type] || defaultTextColor;\n    });\n  }\n\n  /**\n   * Importインターフェース表示\n   */\n  showImportInterface() {\n    // 隠しファイル入力を作成（Importボタンから直接選択できるので、ボタンは不要）\n    if (!this.fileInput) {\n      this.fileInput = document.createElement('input');\n      this.fileInput.type = 'file';\n      this.fileInput.accept = '.glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov';\n      this.fileInput.style.display = 'none';\n      this.fileInput.onchange = (e) => this.handleFileSelection(e);\n      document.body.appendChild(this.fileInput);\n    }\n\n    // ドラッグ&ドロップ機能を有効化\n    this.enableDragAndDrop();\n  }\n\n  /**\n   * Importインターフェース非表示\n   */\n  hideImportInterface() {\n    if (this.fileSelectButton && this.fileSelectButton.parentNode) {\n      this.fileSelectButton.parentNode.removeChild(this.fileSelectButton);\n    }\n    this.disableDragAndDrop();\n  }\n\n  /**\n   * ファイル選択ダイアログを開く\n   */\n  openFileSelector() {\n    if (this.fileInput) {\n      this.fileInput.click();\n    }\n  }\n\n  /**\n   * Importボタンから直接ファイル選択を実行\n   */\n  triggerFileSelection() {\n    // ファイル入力要素が存在しない場合は作成\n    if (!this.fileInput) {\n      this.showImportInterface(); // 既存のファイル入力作成処理を呼び出し\n    }\n\n    // 直接ファイル選択ダイアログを開く\n    this.openFileSelector();\n\n    // Import モードに切り替え（UI反映）\n    this.selectMode('import', true);\n  }\n\n  /**\n   * ファイル選択処理\n   */\n  async handleFileSelection(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      // ファイルタイプを判定\n      const fileType = this.detectFileType(file.name);\n\n      // ファイルをローカルURLとして処理\n      const fileUrl = URL.createObjectURL(file);\n\n      // ファイル情報を保存\n      this.selectedFile = {\n        file: file,\n        url: fileUrl,\n        type: fileType,\n        name: file.name\n      };\n\n      this.selectMode('import', true);\n\n      // 自動的にデフォルトプロンプトで実行\n      const defaultPrompt = `中央に設置 (${file.name})`;\n      this.input.value = defaultPrompt;\n\n      this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`, 'system');\n      this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`, 'system');\n\n      // 自動実行（少し遅延を入れてUX向上）\n      setTimeout(() => {\n        this.executeCommand();\n      }, 500);\n\n    } catch (error) {\n      console.error('File selection error:', error);\n      this.addOutput(`❌ ファイル選択エラー: ${error.message}`, 'error');\n    }\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を有効化\n   */\n  enableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.addEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.addEventListener('drop', this.handleDrop.bind(this));\n    this.input.addEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.addEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を無効化\n   */\n  disableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.removeEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.removeEventListener('drop', this.handleDrop.bind(this));\n    this.input.removeEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.removeEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグオーバー処理\n   */\n  handleDragOver(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグエンター処理\n   */\n  handleDragEnter(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグリーブ処理\n   */\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n  }\n\n  /**\n   * ドロップ処理\n   */\n  async handleDrop(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length === 0) return;\n\n    const file = files[0]; // 最初のファイルのみ処理\n\n    // ファイルタイプをチェック\n    const fileType = this.detectFileType(file.name);\n    if (!fileType) {\n      this.addOutput('❌ サポートされていないファイル形式です', 'error');\n      return;\n    }\n\n    // ファイル選択処理と同じ流れ\n    this.handleFileSelection({ target: { files: [file] } });\n  }\n\n  /**\n   * ファイルタイプ判定\n   */\n  detectFileType(fileName) {\n    const ext = fileName.toLowerCase().split('.').pop();\n\n    if (['glb', 'gltf'].includes(ext)) return '3d';\n    if (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) return 'image';\n    if (['mp4', 'mov', 'webm'].includes(ext)) return 'video';\n\n    return null;\n  }\n\n  /**\n   * Importコマンド処理\n   */\n  async handleImportCommand(command) {\n    if (!this.selectedFile) {\n      throw new Error('ファイルが選択されていません');\n    }\n\n    try {\n      // プロンプトから位置情報を解析\n      const position = this.sceneManager ? this.sceneManager.parsePosition(command) : { x: 0, y: 5, z: -10 };\n\n      let result;\n\n      switch (this.selectedFile.type) {\n        case '3d':\n          // 3Dモデルを読み込み\n          if (this.sceneManager) {\n            result = await this.sceneManager.load3DModel(this.selectedFile.url, {\n              position: position,\n              // scale: 自動調整に任せる\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'image':\n          // 画像をテクスチャプレーンとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadImageFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'video':\n          // 動画をビデオテクスチャとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadVideoFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        default:\n          throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`);\n      }\n\n      // ファイル情報をクリーンアップ\n      const processedFileName = this.selectedFile?.name;\n      const importedType = this.selectedFile?.type;\n      const importedUrl = this.selectedFile?.url;\n\n      if (importedType !== 'video' && importedUrl) {\n        URL.revokeObjectURL(importedUrl);\n      }\n\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n\n      return {\n        success: true,\n        message: `${processedFileName || 'ファイル'} を ${position.x}, ${position.y}, ${position.z} に配置しました`,\n        objectId: result.objectId\n      };\n\n    } catch (error) {\n      // エラー時もファイル情報をクリーンアップ\n      if (this.selectedFile?.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n      throw error;\n    }\n  }\n\n  /**\n   * 削除モードが選択された時の処理\n   */\n  handleDeleteModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：削除コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を削除 ⏎`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 削除対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 削除するオブジェクトを選択後、削除ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('delete');\n      \n      // DELETEモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 修正モードが選択された時の処理\n   */\n  handleModifyModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：修正コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 修正対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 修正するオブジェクトを選択後、修正ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('modify');\n      \n      // Modifyモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Attention Animation\n   * オブジェクト未選択時の注意喚起アニメーション\n   */\n  triggerAttentionAnimation(mode) {\n    const chatOutput = this.chatOutput;\n    const inputField = this.input;\n    \n    // 2025年トレンド1: Micro-Shake Effect（微細な震え）\n    this.addMicroShakeEffect(chatOutput);\n    \n    // 2025年トレンド2: Context-Aware Glow（状況認識グロー）\n    this.addContextGlow(inputField, mode);\n    \n    // 2025年トレンド3: Emotional Pulse（感情的パルス）\n    this.addEmotionalPulse(chatOutput, mode);\n    \n    // 2025年トレンド4: 3D Depth Shadow（立体的影効果）\n    this.add3DDepthEffect(chatOutput);\n  }\n\n  /**\n   * 2025年トレンド：Micro-Shake Effect\n   */\n  addMicroShakeEffect(element) {\n    element.style.animation = 'microShake2025 0.5s ease-in-out';\n    \n    // CSSアニメーションを動的追加\n    this.ensureMicroShakeAnimation();\n    \n    // アニメーション後クリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 500);\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Glow\n   */\n  addContextGlow(element, mode) {\n    const glowColor = mode === 'delete' ? 'rgba(239, 68, 68, 0.4)' : 'rgba(99, 102, 241, 0.4)';\n    \n    element.style.transition = 'all 0.3s ease';\n    element.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n    \n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      element.style.boxShadow = '';\n    }, 3000);\n  }\n\n  /**\n   * 2025年トレンド：Emotional Pulse\n   */\n  addEmotionalPulse(element, mode) {\n    const pulseColor = mode === 'delete' ? '#ef4444' : '#6366f1';\n    \n    element.style.borderLeft = `4px solid ${pulseColor}`;\n    element.style.animation = 'emotionalPulse2025 2s ease-in-out infinite';\n    \n    // CSSアニメーションを動的追加\n    this.ensureEmotionalPulseAnimation();\n    \n    // 6秒後にアニメーション停止\n    setTimeout(() => {\n      element.style.animation = '';\n      element.style.borderLeft = '';\n    }, 6000);\n  }\n\n  /**\n   * 2025年トレンド：3D Depth Effect\n   */\n  add3DDepthEffect(element) {\n    element.style.transform = 'translateZ(8px) rotateX(1deg)';\n    element.style.transition = 'transform 0.3s ease';\n    \n    // 2秒後に元に戻す\n    setTimeout(() => {\n      element.style.transform = '';\n    }, 2000);\n  }\n\n  /**\n   * Micro-Shake CSSアニメーション確保\n   */\n  ensureMicroShakeAnimation() {\n    if (document.getElementById('micro-shake-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'micro-shake-2025';\n    style.textContent = `\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Emotional Pulse CSSアニメーション確保\n   */\n  ensureEmotionalPulseAnimation() {\n    if (document.getElementById('emotional-pulse-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'emotional-pulse-2025';\n    style.textContent = `\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * モード切り替え時の入力欄メッセージ上書き機能\n   * ユーザビリティ向上：他モードのメッセージを新モードの初期状態にクリア\n   */\n  clearInputOnModeSwitch(newMode) {\n    // 現在の入力欄に内容がある場合のみ処理\n    if (this.input.value.trim()) {\n      // 以前のモードのメッセージかどうかを判定\n      const isPreviousModeMessage = this.isPreviousModeMessage(this.input.value, newMode);\n      \n      if (isPreviousModeMessage) {\n        // 以前のモードのメッセージの場合、新モードの初期メッセージに置き換え\n        this.input.value = '';\n        this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`, 'system');\n      }\n    }\n  }\n\n  /**\n   * 入力内容が以前のモードのメッセージかどうかを判定\n   */\n  isPreviousModeMessage(inputValue, currentMode) {\n    // Delete/Modifyモードの特徴的なメッセージパターンを検出\n    const deletePatterns = [\n      /.*を削除$/,\n      /削除$/\n    ];\n    \n    const modifyPatterns = [\n      /.*を$/,\n      /.*を変更/,\n      /.*をピンク/,\n      /.*を大きく/,\n      /.*を小さく/,\n      /.*を移動/,\n      /回転/,\n      /反転/,\n      /ミラー/,\n      /傾け/,\n      /向きを変え/,\n      /.*を.*色/,\n      /.*を.*サイズ/\n    ];\n    \n    const importPatterns = [\n      /ファイル/,\n      /画像/,\n      /インポート/\n    ];\n\n    // 現在のモードと異なるパターンにマッチする場合は上書き対象\n    switch (currentMode) {\n      case 'delete':\n        return modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'modify':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'import':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'generate':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      default:\n        return false;\n    }\n  }\n\n  /**\n   * モード表示名を取得\n   */\n  getModeDisplayName(mode) {\n    const modeNames = {\n      'generate': '生成',\n      'import': 'インポート',\n      'modify': '修正',\n      'delete': '削除'\n    };\n    return modeNames[mode] || mode;\n  }\n\n  /**\n   * 常時表示フローティングチョコアイコンを作成\n   */\n  createFloatingChocolateIcon() {\n    // 既存のアイコンがあれば削除\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.remove();\n    }\n\n    this.floatingChocolateIcon = document.createElement('div');\n    this.floatingChocolateIcon.innerHTML = '🍫';\n    this.floatingChocolateIcon.title = 'ChocoDrop を開く (@キーでも開けます)';\n    this.floatingChocolateIcon.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;\n\n    // ホバー効果\n    this.floatingChocolateIcon.addEventListener('mouseover', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1.1) translateY(-2px)';\n      this.floatingChocolateIcon.style.boxShadow = '0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)';\n      this.floatingChocolateIcon.style.opacity = '1';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    this.floatingChocolateIcon.addEventListener('mouseout', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1) translateY(0)';\n      this.floatingChocolateIcon.style.boxShadow = '0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)';\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    // クリックで ChocoDrop を開く\n    this.floatingChocolateIcon.addEventListener('click', () => {\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // 右クリックメニュー\n    this.floatingChocolateIcon.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.showFloatingIconContextMenu(e);\n    });\n\n    // DOM に追加\n    document.body.appendChild(this.floatingChocolateIcon);\n  }\n\n  /**\n   * フローティングアイコンの右クリックメニューを表示\n   */\n  showFloatingIconContextMenu(event) {\n    // 既存のメニューがあれば削除\n    const existingMenu = document.querySelector('.floating-icon-context-menu');\n    if (existingMenu) {\n      existingMenu.remove();\n    }\n\n    // コンテキストメニュー作成\n    const menu = document.createElement('div');\n    menu.className = 'floating-icon-context-menu';\n    menu.style.cssText = `\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isDarkMode ? 'rgba(17, 24, 39, 0.85)' : 'rgba(255, 255, 255, 0.85)'};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.2)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n    `;\n\n    // メニューアイテム1: フォームを開く\n    const openFormItem = document.createElement('div');\n    openFormItem.innerHTML = '📄 フォームを開く';\n    openFormItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: #6366f1;\n      text-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);\n    `;\n\n    openFormItem.addEventListener('mouseover', () => {\n      openFormItem.style.background = this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)';\n      openFormItem.style.textShadow = '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    openFormItem.addEventListener('mouseout', () => {\n      openFormItem.style.background = 'transparent';\n      openFormItem.style.textShadow = '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    openFormItem.addEventListener('click', () => {\n      menu.remove();\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // メニューアイテム2: アイコンを非表示\n    const hideIconItem = document.createElement('div');\n    hideIconItem.innerHTML = '✕ アイコンを非表示';\n    hideIconItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: #6366f1;\n      text-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);\n    `;\n\n    hideIconItem.addEventListener('mouseover', () => {\n      hideIconItem.style.background = this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)';\n      hideIconItem.style.textShadow = '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    hideIconItem.addEventListener('mouseout', () => {\n      hideIconItem.style.background = 'transparent';\n      hideIconItem.style.textShadow = '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    hideIconItem.addEventListener('click', () => {\n      menu.remove();\n      this.hideFloatingIcon();\n    });\n\n    // メニューに追加\n    menu.appendChild(openFormItem);\n    menu.appendChild(hideIconItem);\n\n    // DOM に追加\n    document.body.appendChild(menu);\n\n    // 画面外に出ないように調整\n    const rect = menu.getBoundingClientRect();\n    if (rect.right > window.innerWidth) {\n      menu.style.left = `${event.clientX - rect.width}px`;\n    }\n    if (rect.bottom > window.innerHeight) {\n      menu.style.top = `${event.clientY - rect.height}px`;\n    }\n\n    // 外部クリックで閉じる\n    const closeMenu = (e) => {\n      if (!menu.contains(e.target)) {\n        menu.remove();\n        document.removeEventListener('click', closeMenu);\n      }\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', closeMenu);\n    }, 10);\n  }\n\n  /**\n   * フローティングアイコンを非表示にする\n   */\n  hideFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * フローティングアイコンを表示する\n   */\n  showFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'flex';\n    }\n  }\n\n  dispose() {\n    // ファイル選択関連のクリーンアップ\n    if (this.fileInput && this.fileInput.parentNode) {\n      this.fileInput.parentNode.removeChild(this.fileInput);\n    }\n    if (this.selectedFile && this.selectedFile.url) {\n      URL.revokeObjectURL(this.selectedFile.url);\n    }\n\n    // フローティングチョコアイコンのクリーンアップ\n    if (this.floatingChocolateIcon && this.floatingChocolateIcon.parentNode) {\n      this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon);\n    }\n\n    if (this.container && this.container.parentElement) {\n      this.container.parentElement.removeChild(this.container);\n    }\n  }\n\n  showOverlayTextarea() {\n    if (this.overlayTextarea) return;\n\n    this.isExpanded = true;\n    \n    // オーバーレイテキストエリアを作成\n    this.overlayTextarea = document.createElement('textarea');\n    this.overlayTextarea.value = this.input.value;\n    this.overlayTextarea.placeholder = this.input.placeholder;\n    \n    // フォームの位置とサイズを取得\n    const containerRect = this.container.getBoundingClientRect();\n    \n    // 画面境界を考慮した位置調整\n    const overlayHeight = 300;\n    const padding = 20;\n    \n    let top = containerRect.top + 60;\n    let left = containerRect.left;\n    let width = containerRect.width;\n    \n    // 右端がはみ出る場合\n    if (left + width > window.innerWidth - padding) {\n      left = window.innerWidth - width - padding;\n    }\n    \n    // 左端がはみ出る場合\n    if (left < padding) {\n      left = padding;\n      width = Math.min(width, window.innerWidth - 2 * padding);\n    }\n    \n    // 下端がはみ出る場合\n    if (top + overlayHeight > window.innerHeight - padding) {\n      top = Math.max(padding, window.innerHeight - overlayHeight - padding);\n    }\n\n    const overlayBackground = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))');\n\n    const overlayBorder = this.isWabiSabiMode\n      ? '1px solid rgba(93, 64, 55, 0.5)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.25)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    const overlayInnerShadow = this.isWabiSabiMode\n      ? '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n      : (this.isDarkMode\n        ? '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n        : '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)');\n\n    const overlayTextColor = this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937');\n\n    // オーバーレイのスタイル設定\n    this.overlayTextarea.style.cssText = `\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${overlayBackground};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${overlayBorder};\n      box-shadow: ${overlayInnerShadow};\n      border-radius: 16px;\n      color: ${overlayTextColor};\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;\n    \n    // ドキュメントに追加\n    document.body.appendChild(this.overlayTextarea);\n    \n    // アニメーション開始\n    requestAnimationFrame(() => {\n      this.overlayTextarea.style.opacity = '1';\n    });\n    \n    // フォーカス設定\n    this.overlayTextarea.focus();\n    \n    // 入力同期\n    this.overlayTextarea.addEventListener('input', (e) => {\n      this.input.value = e.target.value;\n    });\n    \n    // Escapeキーで閉じる\n    this.overlayTextarea.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.hideOverlayTextarea();\n      }\n    });\n    \n    // 外側クリックで閉じる\n    this.overlayTextarea.addEventListener('blur', () => {\n      setTimeout(() => this.hideOverlayTextarea(), 100);\n    });\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n}\n","const IMAGE_SERVICE_STORAGE_KEY = 'chocodrop-service-image';\nconst VIDEO_SERVICE_STORAGE_KEY = 'chocodrop-service-video';\nconst KEYWORD_HIGHLIGHT_COLOR = '#ff6ad5';\n\n/**\n * Command UI - Web interface for ChocoDrop System\n * Real-time natural language command interface for 3D scenes\n */\nexport class CommandUI {\n  constructor(options = {}) {\n    this.sceneManager = options.sceneManager || null;\n    this.client = options.client || null;\n    this.onControlsToggle = options.onControlsToggle || (() => {});\n    \n    this.isVisible = false;\n    this.container = null;\n    this.input = null;\n    this.output = null;\n    this.currentMode = 'generate';\n\n    // リアルタイム進捗管理\n    this.activeConnections = new Map();\n    this.currentTaskId = null;\n    \n    // 設定\n    this.config = {\n      activationKey: options.activationKey || '@',\n      position: options.position || 'bottom-right',\n      width: options.width || 450,\n      maxHeight: options.maxHeight || 600,\n      theme: options.theme || 'dark',\n      showExamples: options.showExamples !== false,\n      autoScroll: options.autoScroll !== false,\n      enableDebugLogging: options.enableDebugLogging === true,\n      skipServiceDialog: options.skipServiceDialog !== false,  // デフォルトで非表示（明示的にfalseの場合のみ表示）\n      ...options.config\n    };\n\n    this.availableImageServices = [];\n    this.availableVideoServices = [];\n    this.selectedImageService = null;\n    this.selectedVideoService = null;\n    this.highlightOverlay = null;\n    this.inputDefaultStyles = null;\n    this.imageServiceSelect = null;\n    this.videoServiceSelect = null;\n    this.serviceSelectorContainer = null;\n    this.serviceSelectorStatus = null;\n    this.serviceSelectorContent = null;\n    this.serviceSelectorRetryButton = null;\n    this.serviceSelectorSaveButton = null;\n    this.serviceSelectorCancelButton = null;\n    this.serviceModalOverlay = null;\n    this.serviceModal = null;\n    this.servicesLoading = false;\n    this.isExpanded = false;\n    this.overlayTextarea = null;\n    this.pendingImageService = null;\n    this.pendingVideoService = null;\n    this.feedbackAutoClearTimer = null;\n    this.currentFeedback = null;\n\n    try {\n      const storedImage = localStorage.getItem(IMAGE_SERVICE_STORAGE_KEY);\n      const storedVideo = localStorage.getItem(VIDEO_SERVICE_STORAGE_KEY);\n      console.log('🔍 Debug localStorage read:', { storedImage, storedVideo, IMAGE_SERVICE_STORAGE_KEY, VIDEO_SERVICE_STORAGE_KEY });\n      if (storedImage) {\n        this.selectedImageService = storedImage;\n        console.log('✅ Set selectedImageService:', this.selectedImageService);\n      }\n      if (storedVideo) {\n        this.selectedVideoService = storedVideo;\n        console.log('✅ Set selectedVideoService:', this.selectedVideoService);\n      }\n      console.log('🔍 Final values:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    } catch (error) {\n      console.warn('⚠️ Failed to load stored service selections:', error);\n    }\n\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    this.applyServiceSelectionToSceneManager();\n    console.log('🔍 After applyServiceSelectionToSceneManager - UI:', { selectedImageService: this.selectedImageService, selectedVideoService: this.selectedVideoService });\n    console.log('🔍 After applyServiceSelectionToSceneManager - SceneManager:', { selectedImageService: this.sceneManager?.selectedImageService, selectedVideoService: this.sceneManager?.selectedVideoService });\n\n    // テーマモード状態管理 (light, dark, wabisabi)\n    this.currentTheme = localStorage.getItem('live-command-theme') || 'light';\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    \n    // Undo/Redo システム\n    this.commandHistory = [];\n    this.currentHistoryIndex = -1;\n    this.maxHistorySize = 50; // 最大コマンド保存数\n    \n    this.initUI();\n    this.bindEvents();\n\n    if (!this.client && this.sceneManager && this.sceneManager.client) {\n      this.client = this.sceneManager.client;\n    }\n\n    this.createServiceModal();\n    this.createFloatingChocolateIcon();\n\n    // DOM読み込み完了後にスタイルを確実に適用\n    document.addEventListener('DOMContentLoaded', () => {\n      this.refreshStyles();\n    });\n\n    this.logDebug('🎮 CommandUI initialized');\n\n    // GitHub Pages等でサービス設定を不要にする場合はスキップ\n    if (!this.config.skipServiceDialog && (!this.selectedImageService || !this.selectedVideoService)) {\n      this.openServiceModal(true);\n    }\n  }\n\n  logDebug(...args) {\n    if (!this.config.enableDebugLogging) {\n      return;\n    }\n    console.log(...args);\n  }\n\n  /**\n   * UI要素の作成と配置\n   */\n  initUI() {\n    // メインコンテナ\n    this.container = document.createElement('div');\n    this.container.id = 'live-command-ui';\n    this.container.style.cssText = this.getContainerStyles();\n\n    // 2025年トレンド：Progressive Disclosure（ホバー時のみブランド表示）\n    const brandIndicator = document.createElement('div');\n    brandIndicator.className = 'progressive-brand-indicator';\n    brandIndicator.style.cssText = `\n      position: absolute;\n      top: -8px;\n      right: 8px;\n      width: 8px;\n      height: 8px;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      border-radius: 50%;\n      opacity: 0.7;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      z-index: 10;\n      cursor: pointer;\n    `;\n    \n    // Progressive Disclosure: ホバー/クリックでブランド名表示\n    const brandText = document.createElement('div');\n    brandText.className = 'progressive-brand-text';\n    brandText.style.cssText = `\n      position: absolute;\n      top: -35px;\n      right: -5px;\n      padding: 6px 12px;\n      background: rgba(255, 255, 255, 0.15);\n      border: 1px solid ${this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.25)'};\n      border-radius: 12px;\n      box-shadow: 0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1);\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 11px;\n      font-weight: 700;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n      letter-spacing: 0.02em;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      opacity: 0;\n      transform: translateY(5px) scale(0.9);\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      pointer-events: none;\n      z-index: 11;\n      white-space: nowrap;\n    `;\n    brandText.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">🍫</span> <span style=\"color: #6366f1;\">ChocoDrop</span>';\n    \n    // Progressive Disclosure イベント\n    brandIndicator.addEventListener('mouseenter', () => {\n      brandText.style.opacity = '1';\n      brandText.style.transform = 'translateY(0) scale(1)';\n      brandIndicator.style.transform = 'scale(1.2)';\n      brandIndicator.style.opacity = '1';\n    });\n    \n    brandIndicator.addEventListener('mouseleave', () => {\n      brandText.style.opacity = '0';\n      brandText.style.transform = 'translateY(5px) scale(0.9)';\n      brandIndicator.style.transform = 'scale(1)';\n      brandIndicator.style.opacity = '0.7';\n    });\n    \n    brandIndicator.appendChild(brandText);\n    this.container.appendChild(brandIndicator);\n\n    // 出力エリア（タスクカードコンテナ）- 非表示に変更\n    this.output = document.createElement('div');\n    this.outputDiv = this.output; // 両方の参照を保持（互換性のため）\n    this.output.id = 'command-output';\n    this.output.className = 'command-output';\n    this.output.style.cssText = this.getOutputStyles();\n    // フローティングカード用コンテナ\n    this.floatingContainer = document.createElement('div');\n    this.floatingContainer.id = 'floating-cards-container';\n    this.floatingContainer.style.cssText = `\n      position: fixed;\n      bottom: var(--floating-bottom, 120px);\n      left: 50%;\n      transform: translateX(-50%);\n      z-index: 99999;\n      pointer-events: none;\n      display: none;\n      flex-direction: column;\n      gap: 8px;\n      width: 400px;\n      max-width: 90vw;\n      align-items: center;\n      justify-content: flex-start;\n    `;\n\n    // タスクカード管理用\n    this.taskCards = new Map();\n\n    // 入力フィールドラッパー（展開ボタン用）\n    this.inputWrapper = document.createElement('div');\n    this.inputWrapper.style.cssText = `\n      position: relative;\n      width: 100%;\n      margin-bottom: 0;\n    `;\n\n    // Ultra-Simple 単一入力フィールド（自動リサイズ対応）\n    this.input = document.createElement('textarea');\n    this.input.rows = 1;\n    this.input.id = 'command-input';\n    this.input.placeholder = '「右上にドラゴンを」「美しい桜の森を中央に」など... ✨';\n    this.input.style.cssText = this.getInputStyles();\n\n    // 展開ボタン（初期状態は非表示）\n    this.expandButton = document.createElement('div');\n    this.expandButton.innerHTML = '⤢';\n    this.expandButton.title = 'テキスト全体を表示';\n    this.expandButton.style.cssText = `\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      width: 24px;\n      height: 24px;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\n      border-radius: 6px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-size: 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 1;\n    `;\n\n    // 展開ボタンのホバー効果\n    this.expandButton.addEventListener('mouseenter', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      this.expandButton.style.transform = 'scale(1.1)';\n    });\n\n    this.expandButton.addEventListener('mouseleave', () => {\n      this.expandButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      this.expandButton.style.transform = 'scale(1)';\n    });\n\n    // 展開ボタンのクリック処理\n    this.expandButton.addEventListener('click', () => {\n      if (this.isExpanded) {\n        this.hideOverlayTextarea();\n      } else {\n        this.showOverlayTextarea();\n      }\n    });\n\n    // ラッパーに要素を追加\n    this.inputWrapper.appendChild(this.input);\n    this.inputWrapper.appendChild(this.expandButton);\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合）\n\n    // ラジオボタン風モードセレクター\n    const modeSelector = this.createRadioModeSelector();\n\n    // ミニマルアクションボタン\n    const actionContainer = this.createMinimalActions();\n\n    // ×クローズボタンをフォーム右上に追加\n    const closeButton = document.createElement('div');\n    closeButton.innerHTML = '×';\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      border-radius: 50%;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 14px;\n      font-weight: normal;\n      transition: all 0.2s ease;\n      backdrop-filter: blur(8px);\n      z-index: 10;\n    `;\n\n    closeButton.addEventListener('mouseover', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)';\n      closeButton.style.transform = 'scale(1.1)';\n    });\n\n    closeButton.addEventListener('mouseout', () => {\n      closeButton.style.background = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.transform = 'scale(1)';\n    });\n\n    closeButton.addEventListener('click', () => {\n      this.hide();\n    });\n\n    // 組み立て（ヘッダー削除、ブランドバッジは既に追加済み）\n    // this.container.appendChild(this.output); // 大きなタスク表示エリアをDOMに追加しない\n    this.container.appendChild(closeButton);\n    this.container.appendChild(modeSelector);\n    this.container.appendChild(this.inputWrapper);\n    this.container.appendChild(actionContainer);\n\n    // フローティングカードコンテナをbodyに直接追加\n    document.body.appendChild(this.floatingContainer);\n\n    // DOM に追加\n    document.body.appendChild(this.container);\n\n    // 初回テーマ適用\n    this.applyTheme();\n\n    // 日本語IME対応のcomposition state管理\n    this.isComposing = false;\n    this.hasCompositionJustEnded = false;\n\n    // リアルタイム入力監視とコマンド検出（IME対応）\n    this.input.addEventListener('input', () => {\n      // IME入力中はコマンド検出を停止\n      if (this.isComposing) {\n        return;\n      }\n      \n      // フィードバック自動クリア（ユーザーが入力を修正している）\n      if (this.currentFeedback) {\n        this.clearInputFeedback();\n      }\n      \n      // 自動リサイズ処理\n      this.autoResizeTextarea();\n      \n      // キーワードハイライト適用\n      this.applyKeywordHighlighting();\n      \n      this.detectCommandType();\n    });\n    \n    // 日本語IME composition events\n    this.input.addEventListener('compositionstart', () => {\n      this.isComposing = true;\n    });\n    \n    this.input.addEventListener('compositionend', () => {\n      this.isComposing = false;\n      \n      // Safariのみフラグ設定（他のブラウザは不要）\n      const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n      if (isSafari) {\n        this.hasCompositionJustEnded = true;\n      }\n      \n      // 確定後のコマンド検出を実行\n      setTimeout(() => {\n        this.autoResizeTextarea();\n        this.detectCommandType();\n      }, 10);\n    });\n    \n    // Safari判定\n    const isSafari = /Safari/.test(navigator.userAgent) && /Version/.test(navigator.userAgent);\n    \n    // 日本語IME対応Enterキー処理（Safari対応版）\n    this.input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        // Safari: compositionend直後のEnterをスキップ\n        if (isSafari && this.hasCompositionJustEnded) {\n          this.hasCompositionJustEnded = false;\n          return;\n        }\n        \n        // その他のブラウザ: isComposingチェック\n        if (!isSafari && (e.isComposing || this.isComposing)) {\n          return;\n        }\n        \n\n\n        e.preventDefault();\n        this.executeCommand();\n      }\n    });\n    \n    // 初期メッセージ\n    if (this.config.showExamples) {\n      // 起動メッセージ削除\n      // 起動時は静かに待機\n    }\n  }\n\n  /**\n   * モードセレクター作成\n   */\n  createMinimalActions() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      margin-bottom: 0 !important;\n      gap: 8px;\n      justify-content: space-between;\n      align-items: center;\n    `;\n\n    // 左側: Clear All ボタン（承認済みのLayout Bデザイン）\n    const leftSection = document.createElement('div');\n    leftSection.style.cssText = 'display: flex; gap: 8px; align-items: center;';\n\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">🧹</span> Clear All';\n    clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    clearBtn.addEventListener('click', () => this.clearAllWithConfirmation());\n\n    // 履歴ボタン（将来実装用スペース確保）- 海外UI標準対応：同一幅\n    const historyBtn = document.createElement('button');\n    historyBtn.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.7) brightness(0.9);\">📚</span> History';\n    historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n    historyBtn.style.opacity = '0.5';\n    historyBtn.disabled = true;\n    historyBtn.title = '履歴機能（開発中）';\n\n    leftSection.appendChild(clearBtn);\n    leftSection.appendChild(historyBtn);\n\n    // 右側: テーマトグルと設定（ヘッダーから移動）\n    const rightSection = document.createElement('div');\n    rightSection.style.cssText = 'display: flex; gap: 6px; align-items: center;';\n\n    const themeToggle = document.createElement('button');\n    const getThemeIcon = () => {\n      const themeConfig = {\n        light: '🌙',\n        dark: '🍵',\n        wabisabi: '☀️'\n      };\n      return themeConfig[this.currentTheme] || '🌙';\n    };\n\n    const getThemeTitle = () => {\n      const titleConfig = {\n        light: 'ダークモードに切り替え',\n        dark: '侘び寂びモードに切り替え',\n        wabisabi: 'ライトモードに切り替え'\n      };\n      return titleConfig[this.currentTheme] || 'ダークモードに切り替え';\n    };\n\n    const getThemeIconWithFilter = () => {\n      const icon = getThemeIcon();\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (icon === '☀️') {\n        return `<span style=\"filter: saturate(1.2) brightness(1.1);\">${icon}</span>`;\n      } else if (icon === '🍵') {\n        return `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${icon}</span>`;\n      } else {\n        return `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${icon}</span>`;\n      }\n    };\n\n    themeToggle.innerHTML = getThemeIconWithFilter();\n    themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    themeToggle.title = getThemeTitle();\n    themeToggle.addEventListener('click', () => this.toggleTheme());\n\n    const settingsButton = document.createElement('button');\n    settingsButton.innerHTML = '<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">⚙️</span>';\n    settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    settingsButton.title = 'サービス設定を開く';\n    settingsButton.addEventListener('click', () => this.openServiceModal());\n\n    rightSection.appendChild(themeToggle);\n    rightSection.appendChild(settingsButton);\n\n    container.appendChild(leftSection);\n    container.appendChild(rightSection);\n\n    // 参照を保持\n    this.clearBtn = clearBtn;\n    this.historyBtn = historyBtn;\n    this.themeToggle = themeToggle;\n    this.settingsButton = settingsButton;\n\n    return container;\n  }\n\n  createServiceSelectorSection() {\n    this.serviceSelectorContainer = document.createElement('div');\n    this.serviceSelectorContainer.id = 'service-selector';\n    this.serviceSelectorContainer.style.cssText = `\n      margin-bottom: 16px;\n      padding: 12px;\n      border-radius: 12px;\n      border: 1px solid transparent;\n      transition: background 0.3s ease, border 0.3s ease;\n    `;\n\n    this.serviceSelectorStatus = document.createElement('div');\n    this.serviceSelectorStatus.textContent = 'サービス情報を読み込んでいます...';\n    this.serviceSelectorStatus.style.fontSize = '12px';\n    this.serviceSelectorStatus.style.opacity = '0.8';\n    this.serviceSelectorStatus.style.marginBottom = '8px';\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorStatus);\n\n    this.serviceSelectorContent = document.createElement('div');\n    this.serviceSelectorContainer.appendChild(this.serviceSelectorContent);\n\n    this.updateServiceSelectorTheme();\n    return this.serviceSelectorContainer;\n  }\n\n  createServiceModal() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.remove();\n      this.serviceModalOverlay = null;\n      this.serviceModal = null;\n    }\n\n    this.serviceModalOverlay = document.createElement('div');\n    this.serviceModalOverlay.id = 'chocodrop-service-modal-overlay';\n    this.serviceModalOverlay.style.cssText = `\n      position: fixed;\n      inset: 0;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      backdrop-filter: blur(18px);\n      -webkit-backdrop-filter: blur(18px);\n      z-index: 2000;\n      padding: 16px !important;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    `;\n\n    this.serviceModalOverlay.addEventListener('click', (event) => {\n      if (event.target === this.serviceModalOverlay) {\n        this.closeServiceModal();\n      }\n    });\n\n    this.serviceModal = document.createElement('div');\n    this.serviceModal.className = 'chocodrop-service-modal';\n    this.serviceModal.style.cssText = `\n      width: min(420px, 90vw);\n      border-radius: 24px;\n      padding: 26px 28px;\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 20px 40px rgba(15, 23, 42, 0.35);\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n      max-height: 90vh;\n      overflow-y: auto;\n      position: relative;\n    `;\n\n    const title = document.createElement('h2');\n    title.textContent = 'サービス設定';\n    title.style.cssText = `\n      margin: 0;\n      font-size: 18px;\n      font-weight: 700;\n      letter-spacing: 0.03em;\n    `;\n\n    const subtitle = document.createElement('p');\n    subtitle.textContent = '利用するサービスを選択してください。';\n    subtitle.style.cssText = `\n      margin: 0;\n      font-size: 12px;\n      opacity: 0.75;\n    `;\n\n    const selector = this.createServiceSelectorSection();\n\n    const actionRow = document.createElement('div');\n    actionRow.style.cssText = `\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 16px;\n    `;\n\n    this.serviceSelectorRetryButton = document.createElement('button');\n    this.serviceSelectorRetryButton.textContent = '再読み込み';\n    this.serviceSelectorRetryButton.style.cssText = `\n      font-size: 11px;\n      padding: 6px 14px;\n      border-radius: 10px;\n      border: 1px solid transparent;\n      cursor: pointer;\n      display: none;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorRetryButton.addEventListener('click', () => this.initializeServiceSelector(true));\n\n    const actionButtons = document.createElement('div');\n    actionButtons.style.cssText = 'display: flex; gap: 8px;';\n\n    this.serviceSelectorCancelButton = document.createElement('button');\n    this.serviceSelectorCancelButton.textContent = 'Cancel';\n    this.serviceSelectorCancelButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 16px;\n      border-radius: 10px;\n      border: 1px solid rgba(255, 255, 255, 0.35);\n      background: transparent;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    `;\n    this.serviceSelectorCancelButton.addEventListener('click', () => this.closeServiceModal());\n\n    this.serviceSelectorSaveButton = document.createElement('button');\n    this.serviceSelectorSaveButton.textContent = 'Save';\n    this.serviceSelectorSaveButton.style.cssText = `\n      font-size: 12px;\n      padding: 8px 18px;\n      border-radius: 10px;\n      border: none;\n      cursor: pointer;\n      background: linear-gradient(135deg, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'});\n      color: white;\n      font-weight: 600;\n      transition: all 0.2s ease;\n      box-shadow: 0 12px 24px rgba(99, 102, 241, 0.35);\n    `;\n    this.serviceSelectorSaveButton.addEventListener('click', () => this.handleServiceSave());\n\n    actionButtons.appendChild(this.serviceSelectorCancelButton);\n    actionButtons.appendChild(this.serviceSelectorSaveButton);\n\n    actionRow.appendChild(this.serviceSelectorRetryButton);\n    actionRow.appendChild(actionButtons);\n\n    this.serviceModal.appendChild(title);\n    this.serviceModal.appendChild(subtitle);\n    this.serviceModal.appendChild(selector);\n    this.serviceModal.appendChild(actionRow);\n\n    this.serviceModalOverlay.appendChild(this.serviceModal);\n    document.body.appendChild(this.serviceModalOverlay);\n\n    this.updateServiceSelectorTheme();\n    this.toggleServiceRetryButton(false);\n  }\n\n  openServiceModal(forceFetch = false) {\n    if (!this.serviceModalOverlay) {\n      this.createServiceModal();\n    }\n\n    this.serviceModalOverlay.style.display = 'flex';\n    requestAnimationFrame(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.opacity = '1';\n      }\n    });\n\n    this.resetPendingSelections();\n    this.initializeServiceSelector(forceFetch);\n  }\n\n  closeServiceModal() {\n    if (!this.serviceModalOverlay) {\n      return;\n    }\n\n    this.serviceModalOverlay.style.opacity = '0';\n    setTimeout(() => {\n      if (this.serviceModalOverlay) {\n        this.serviceModalOverlay.style.display = 'none';\n      }\n      this.resetPendingSelections();\n    }, 150);\n  }\n\n  async initializeServiceSelector(force = false) {\n    if (this.servicesLoading && !force) {\n      return;\n    }\n\n    if (!this.client || typeof this.client.getAvailableServices !== 'function') {\n      this.setServiceSelectorStatus('サービス情報を取得できませんでした（クライアント初期化待ちです）。右下の「再読み込み」で再取得できます。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n      return;\n    }\n\n    this.servicesLoading = true;\n    this.setServiceSelectorStatus('サービス情報を読み込んでいます...', 'info');\n    this.toggleServiceRetryButton(false);\n    this.setServiceButtonsEnabled(false);\n\n    try {\n      if (typeof this.client.ensureInitialized === 'function') {\n        await this.client.ensureInitialized();\n      }\n\n      const response = await this.client.getAvailableServices();\n      if (!response || response.success === false || !response.metadata) {\n        throw new Error(response?.error || 'サービス情報が取得できませんでした');\n      }\n\n      this.availableImageServices = Array.isArray(response.metadata?.image) ? response.metadata.image : [];\n      this.availableVideoServices = Array.isArray(response.metadata?.video) ? response.metadata.video : [];\n\n      this.selectedImageService = this.resolveServiceSelection(\n        'image',\n        this.availableImageServices,\n        response.default?.image\n      );\n\n      this.selectedVideoService = this.resolveServiceSelection(\n        'video',\n        this.availableVideoServices,\n        response.default?.video\n      );\n\n      this.pendingImageService = this.selectedImageService;\n      this.pendingVideoService = this.selectedVideoService;\n\n      this.populateServiceSelector();\n      this.applyServiceSelectionToSceneManager();\n      this.setServiceButtonsEnabled(true);\n    } catch (error) {\n      console.error('❌ Failed to initialize service selector:', error);\n      this.setServiceSelectorStatus('MCP設定が必要です。config.jsonでMCPサービスを設定してください。3000番以外のポートを使用している場合は、サーバーのCORS設定も確認してください。詳細はREADMEをご確認ください。', 'error');\n      this.toggleServiceRetryButton(true);\n      this.setServiceButtonsEnabled(false);\n    } finally {\n      this.servicesLoading = false;\n    }\n  }\n\n  setServiceSelectorStatus(message, type = 'info') {\n    if (!this.serviceSelectorStatus) {\n      return;\n    }\n    this.serviceSelectorStatus.textContent = message;\n    this.serviceSelectorStatus.dataset.statusType = type;\n    this.serviceSelectorStatus.classList.toggle('service-selector-helper', type !== 'error');\n    this.updateServiceSelectorTheme();\n  }\n\n  toggleServiceRetryButton(visible) {\n    if (!this.serviceSelectorRetryButton) {\n      return;\n    }\n    this.serviceSelectorRetryButton.style.display = visible ? 'inline-flex' : 'none';\n    this.updateServiceSelectorTheme();\n  }\n\n  resolveServiceSelection(type, services, defaultId) {\n    if (!services || services.length === 0) {\n      return null;\n    }\n\n    const storageKey = type === 'image' ? IMAGE_SERVICE_STORAGE_KEY : VIDEO_SERVICE_STORAGE_KEY;\n    let storedId = null;\n    try {\n      storedId = localStorage.getItem(storageKey);\n    } catch (error) {\n      console.warn('⚠️ Failed to access localStorage:', error);\n    }\n\n    const isStoredValid = storedId && services.some(service => service.id === storedId);\n    let resolvedId = isStoredValid ? storedId : null;\n\n    if (!resolvedId && defaultId && services.some(service => service.id === defaultId)) {\n      resolvedId = defaultId;\n    }\n\n    if (!resolvedId) {\n      resolvedId = services[0]?.id || null;\n    }\n\n    try {\n      if (resolvedId) {\n        localStorage.setItem(storageKey, resolvedId);\n      } else {\n        localStorage.removeItem(storageKey);\n      }\n    } catch (error) {\n      console.warn('⚠️ Failed to persist service selection:', error);\n    }\n\n    return resolvedId;\n  }\n\n  populateServiceSelector() {\n    if (!this.serviceSelectorContent) {\n      return;\n    }\n\n    this.serviceSelectorContent.innerHTML = '';\n\n    const hasImage = this.availableImageServices.length > 0;\n    const hasVideo = this.availableVideoServices.length > 0;\n\n    if (!hasImage && !hasVideo) {\n      this.setServiceSelectorStatus('利用可能なサービスが見つかりませんでした。', 'error');\n      return;\n    }\n\n    this.setServiceSelectorStatus('利用するサービスを選択してください。', 'info');\n\n    if (hasImage) {\n      const imageRow = this.buildServiceRow('image', '画像 (T2I)', this.availableImageServices, this.pendingImageService || this.selectedImageService);\n      this.serviceSelectorContent.appendChild(imageRow);\n    }\n\n    if (hasVideo) {\n      const videoRow = this.buildServiceRow('video', '動画 (T2V)', this.availableVideoServices, this.pendingVideoService || this.selectedVideoService);\n      this.serviceSelectorContent.appendChild(videoRow);\n    }\n\n    this.updateServiceSelectorTheme();\n  }\n\n  buildServiceRow(type, labelText, services, selectedId) {\n    const row = document.createElement('div');\n    row.className = `service-row service-row-${type}`;\n    row.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      margin-bottom: 12px;\n    `;\n\n    const label = document.createElement('label');\n    label.textContent = labelText;\n    label.style.fontSize = '13px';\n    label.style.fontWeight = '600';\n    row.appendChild(label);\n\n    const select = document.createElement('select');\n    select.dataset.serviceType = type;\n    select.style.fontFamily = 'inherit';\n    select.style.width = '100%';\n\n    services.forEach(service => {\n      const option = document.createElement('option');\n      option.value = service.id;\n      option.textContent = service.name || service.id;\n      if (service.description) {\n        option.title = service.description;\n      }\n      select.appendChild(option);\n    });\n\n    if (selectedId && services.some(service => service.id === selectedId)) {\n      select.value = selectedId;\n    }\n\n    select.addEventListener('change', (event) => {\n      this.onServiceSelectionChange(type, event.target.value);\n    });\n\n    row.appendChild(select);\n\n    const description = document.createElement('div');\n    description.className = 'service-description';\n    description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    description.style.fontSize = '11px';\n    description.style.opacity = '0.75';\n    description.style.lineHeight = '1.4';\n    description.style.minHeight = '14px';\n    row.appendChild(description);\n\n    select.addEventListener('change', () => {\n      description.textContent = this.findServiceInfo(type, select.value)?.description || '';\n    });\n\n    if (type === 'image') {\n      this.imageServiceSelect = select;\n    } else {\n      this.videoServiceSelect = select;\n    }\n\n    return row;\n  }\n\n  onServiceSelectionChange(type, serviceId) {\n    if (type === 'image') {\n      this.pendingImageService = serviceId;\n    } else {\n      this.pendingVideoService = serviceId;\n    }\n\n    const info = this.findServiceInfo(type, serviceId);\n    const description = type === 'image'\n      ? this.imageServiceSelect?.parentElement?.querySelector('.service-description')\n      : this.videoServiceSelect?.parentElement?.querySelector('.service-description');\n\n    if (description) {\n      description.textContent = info?.description || '';\n    }\n  }\n\n  handleServiceSave() {\n    const newImageId = this.pendingImageService || this.selectedImageService;\n    const newVideoId = this.pendingVideoService || this.selectedVideoService;\n\n    if (newImageId) {\n      try {\n        localStorage.setItem(IMAGE_SERVICE_STORAGE_KEY, newImageId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist image service selection:', error);\n      }\n      this.selectedImageService = newImageId;\n      this.sceneManager?.setImageService(newImageId);\n    }\n\n    if (newVideoId) {\n      try {\n        localStorage.setItem(VIDEO_SERVICE_STORAGE_KEY, newVideoId);\n      } catch (error) {\n        console.warn('⚠️ Failed to persist video service selection:', error);\n      }\n      this.selectedVideoService = newVideoId;\n      this.sceneManager?.setVideoService(newVideoId);\n    }\n\n    const imageInfo = this.findServiceInfo('image', newImageId);\n    const videoInfo = this.findServiceInfo('video', newVideoId);\n\n    if (imageInfo) {\n      this.addOutput(`🖼️ 画像サービスを「${imageInfo.name}」に設定しました`, 'system');\n    }\n    if (videoInfo) {\n      this.addOutput(`🎬 動画サービスを「${videoInfo.name}」に設定しました`, 'system');\n    }\n\n    this.closeServiceModal();\n  }\n\n  setServiceButtonsEnabled(enabled) {\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.disabled = !enabled;\n      this.serviceSelectorSaveButton.style.opacity = enabled ? '1' : '0.6';\n      this.serviceSelectorSaveButton.style.cursor = enabled ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  resetPendingSelections() {\n    this.pendingImageService = this.selectedImageService;\n    this.pendingVideoService = this.selectedVideoService;\n\n    if (this.imageServiceSelect && this.selectedImageService) {\n      this.imageServiceSelect.value = this.selectedImageService;\n    }\n    if (this.videoServiceSelect && this.selectedVideoService) {\n      this.videoServiceSelect.value = this.selectedVideoService;\n    }\n\n    if (this.serviceSelectorContent && this.serviceSelectorContent.childElementCount > 0) {\n      this.populateServiceSelector();\n    }\n  }\n\n  findServiceInfo(type, serviceId) {\n    const list = type === 'image' ? this.availableImageServices : this.availableVideoServices;\n    return list.find(service => service.id === serviceId) || null;\n  }\n\n  applyServiceSelectionToSceneManager() {\n    if (!this.sceneManager) {\n      return;\n    }\n    this.sceneManager.setImageService(this.selectedImageService);\n    this.sceneManager.setVideoService(this.selectedVideoService);\n  }\n\n  updateServiceSelectorTheme() {\n    if (this.serviceModalOverlay) {\n      this.serviceModalOverlay.style.background = this.isDarkMode\n        ? 'rgba(8, 11, 26, 0.55)'\n        : 'rgba(229, 231, 255, 0.45)';\n    }\n\n    if (this.serviceModal) {\n      this.serviceModal.style.background = this.isDarkMode\n        ? 'rgba(17, 24, 39, 0.15)'\n        : 'rgba(255, 255, 255, 0.15)';\n      this.serviceModal.style.border = this.isDarkMode\n        ? '1px solid rgba(129, 140, 248, 0.4)'\n        : '1px solid rgba(99, 102, 241, 0.25)';\n      this.serviceModal.style.color = this.isDarkMode ? '#e5e7ff' : '#1f2937';\n    }\n\n    if (this.serviceSelectorStatus) {\n      const type = this.serviceSelectorStatus.dataset?.statusType;\n      const statusColor = type === 'error'\n        ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n        : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.75)');\n      this.serviceSelectorStatus.style.color = statusColor;\n    }\n\n    if (this.serviceSelectorContainer) {\n      const labels = this.serviceSelectorContainer.querySelectorAll('label');\n      labels.forEach(label => {\n        label.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(31, 41, 55, 0.9)');\n      });\n\n      const selects = this.serviceSelectorContainer.querySelectorAll('select');\n      selects.forEach(select => {\n        select.style.background = this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.15)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.18)' : 'rgba(99, 102, 241, 0.12)');\n        select.style.border = this.isWabiSabiMode\n          ? '1px solid rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? '1px solid rgba(129, 140, 248, 0.45)' : '1px solid rgba(99, 102, 241, 0.45)');\n        select.style.color = this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937');\n        select.style.padding = '10px 12px';\n        select.style.borderRadius = '10px';\n        select.style.fontSize = '13px';\n        select.style.outline = 'none';\n        select.style.boxShadow = this.isWabiSabiMode\n          ? '0 12px 24px rgba(93, 64, 55, 0.25)'\n          : (this.isDarkMode\n            ? '0 12px 28px rgba(15, 23, 42, 0.5)'\n            : '0 12px 24px rgba(99, 102, 241, 0.2)');\n      });\n\n      const descriptions = this.serviceSelectorContainer.querySelectorAll('.service-description');\n      descriptions.forEach(desc => {\n        desc.style.color = this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.7)'\n          : (this.isDarkMode ? 'rgba(209, 213, 219, 0.8)' : 'rgba(55, 65, 81, 0.7)');\n      });\n    }\n\n    if (this.serviceSelectorRetryButton) {\n      this.serviceSelectorRetryButton.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.25)'\n        : (this.isDarkMode\n          ? 'rgba(129, 140, 248, 0.35)'\n          : 'rgba(99, 102, 241, 0.15)');\n      this.serviceSelectorRetryButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.5)'\n        : (this.isDarkMode\n          ? '1px solid rgba(129, 140, 248, 0.5)'\n          : '1px solid rgba(99, 102, 241, 0.45)');\n      this.serviceSelectorRetryButton.style.color = this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#f9fafb' : '#1e1b4b');\n      this.serviceSelectorRetryButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 0 8px rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '0 0 8px rgba(129, 140, 248, 0.45)'\n          : '0 0 8px rgba(99, 102, 241, 0.35)');\n    }\n\n    if (this.serviceSelectorCancelButton) {\n      this.serviceSelectorCancelButton.style.border = this.isWabiSabiMode\n        ? '1px solid rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode\n          ? '1px solid rgba(209, 213, 219, 0.3)'\n          : '1px solid rgba(148, 163, 184, 0.5)');\n      this.serviceSelectorCancelButton.style.color = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.85)'\n        : (this.isDarkMode ? 'rgba(226, 232, 240, 0.85)' : 'rgba(30, 41, 59, 0.85)');\n    }\n\n    if (this.serviceSelectorSaveButton) {\n      this.serviceSelectorSaveButton.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, #6D4C41, #5D4037)'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')'\n          : 'linear-gradient(135deg, #818cf8, #a855f7)');\n      this.serviceSelectorSaveButton.style.boxShadow = this.isWabiSabiMode\n        ? '0 16px 28px rgba(93, 64, 55, 0.35)'\n        : (this.isDarkMode\n          ? '0 16px 28px rgba(99, 102, 241, 0.4)'\n          : '0 16px 28px rgba(129, 140, 248, 0.35)');\n    }\n  }\n\n  /**\n   * ラジオボタン風モードセレクター作成\n   */\n  createRadioModeSelector() {\n    const container = document.createElement('div');\n    container.className = 'radio-mode-selector';\n    container.style.cssText = `\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      gap: 8px;\n      margin-bottom: 12px;\n      padding: 12px;\n      background: ${this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.25), rgba(189, 189, 189, 0.2))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))')};\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(141, 110, 99, 0.4)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(255, 255, 255, 0.25)')};\n      border-radius: 16px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      position: relative;\n    `;\n\n    const modes = [\n      { value: 'generate', label: 'Generate', icon: '✨' },\n      { value: 'import', label: 'Import', icon: '📥' },\n      { value: 'modify', label: 'Modify', icon: '🔧' },\n      { value: 'delete', label: 'Delete', icon: '🗑️' }\n    ];\n\n    this.radioModeButtons = {};\n\n    modes.forEach(mode => {\n      const button = document.createElement('div');\n      button.className = `mode-option ${mode.value}`;\n      button.style.cssText = `\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 4px;\n        padding: 10px 8px;\n        border-radius: 12px;\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-size: 11px;\n        font-weight: 600;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)')};\n        background: transparent;\n        border: 1px solid transparent;\n        position: relative;\n      `;\n\n      const icon = document.createElement('div');\n      icon.textContent = mode.icon;\n      icon.style.cssText = `\n        font-size: 16px;\n        margin-bottom: 2px;\n        filter: ${this.isDarkMode \n          ? 'hue-rotate(220deg) saturate(0.8) brightness(1.2)' \n          : 'hue-rotate(240deg) saturate(0.7) brightness(0.9)'};\n        transition: filter 0.2s ease;\n      `;\n\n      const label = document.createElement('span');\n      label.textContent = mode.label;\n\n      // AUTOバッジを作成\n      const autoBadge = document.createElement('div');\n      autoBadge.className = 'auto-badge';\n      autoBadge.textContent = 'AUTO';\n      autoBadge.style.cssText = `\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        font-size: 7px;\n        font-weight: 700;\n        padding: 2px 4px;\n        background: linear-gradient(135deg, #10b981, #059669);\n        color: white;\n        border-radius: 6px;\n        opacity: 0;\n        transform: scale(0.8);\n        transition: all 0.2s ease;\n        display: none;\n      `;\n\n      button.appendChild(icon);\n      button.appendChild(label);\n      button.appendChild(autoBadge);\n\n      // クリックイベント\n      button.addEventListener('click', () => {\n        if (mode.value === 'import') {\n          this.triggerFileSelection();\n        } else {\n          this.selectMode(mode.value, true); // trueは手動選択を示す\n        }\n      });\n\n      this.radioModeButtons[mode.value] = { button, autoBadge };\n      container.appendChild(button);\n    });\n\n\n    this.radioModeContainer = container;\n    // デフォルトでGenerateを選択\n    this.selectMode('generate', false);\n\n    return container;\n  }\n\n  /**\n   * モード選択（ラジオボタンUI更新）\n   */\n  selectMode(mode, isManual = false, detectedKeyword = null) {\n    this.currentMode = mode;\n\n    // 全ボタンをリセット\n    Object.keys(this.radioModeButtons).forEach(key => {\n      const { button, autoBadge } = this.radioModeButtons[key];\n      button.style.color = this.isWabiSabiMode\n        ? '#F5F5F5'\n        : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n      button.style.background = 'transparent';\n      button.style.border = '1px solid transparent';\n      button.style.transform = 'scale(1)';\n      button.style.boxShadow = 'none';\n      // AUTOバッジを非表示\n      autoBadge.style.display = 'none';\n      autoBadge.style.opacity = '0';\n    });\n\n    // 選択されたボタンをハイライト（2025年仕様）\n    const { button, autoBadge } = this.radioModeButtons[mode];\n    \n    // 2025 Glassmorphism選択状態\n    const selectedGlass = this.isWabiSabiMode\n      ? {\n          background: 'linear-gradient(135deg, rgba(109, 76, 65, 0.2), rgba(141, 110, 99, 0.15))',\n          border: '1px solid rgba(109, 76, 65, 0.4)',\n          boxShadow: '0 4px 16px rgba(109, 76, 65, 0.25), inset 0 1px 0 rgba(245, 245, 220, 0.15)',\n          color: '#F5F5F5'\n        }\n      : (this.isDarkMode\n        ? {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.15))',\n            border: '1px solid rgba(99, 102, 241, 0.4)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1)',\n            color: '#a5b4fc'\n          }\n        : {\n            background: 'linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.08))',\n            border: '1px solid rgba(99, 102, 241, 0.3)',\n            boxShadow: '0 4px 16px rgba(99, 102, 241, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.2)',\n            color: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n          });\n\n    button.style.color = selectedGlass.color;\n    button.style.background = selectedGlass.background;\n    button.style.border = selectedGlass.border;\n    button.style.boxShadow = selectedGlass.boxShadow;\n    button.style.transform = 'scale(1.02)';\n\n    // AUTOバッジの表示制御\n    if (!isManual && detectedKeyword) {\n      // 自動切り替えの場合はAUTOバッジを表示\n      autoBadge.style.display = 'inline-block';\n      setTimeout(() => {\n        autoBadge.style.opacity = '1';\n        autoBadge.style.transform = 'scale(1)';\n      }, 100);\n      \n      // 3秒後にフェードアウト\n      setTimeout(() => {\n        autoBadge.style.opacity = '0';\n        autoBadge.style.transform = 'scale(0.8)';\n        setTimeout(() => {\n          autoBadge.style.display = 'none';\n        }, 200);\n      }, 3000);\n    }\n\n    // パルス効果を追加\n    if (!isManual && mode !== 'import') {\n      this.addPulseEffect(button);\n      this.addContainerGlow(mode);\n    } else if (mode === 'import') {\n      this.addContainerGlow(mode);\n    }\n\n    // プレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n\n    // モード切り替え時の入力欄メッセージ上書き機能\n    if (isManual) {\n      this.clearInputOnModeSwitch(mode);\n    }\n\n    // Importモード専用処理\n    if (mode === 'import' || this.selectedFile) {\n      this.showImportInterface();\n    } else {\n      this.hideImportInterface();\n    }\n\n    // Deleteモード専用処理\n    if (mode === 'delete' && isManual) {\n      this.handleDeleteModeSelection();\n    }\n\n    // Modifyモード専用処理\n    if (mode === 'modify' && isManual) {\n      this.handleModifyModeSelection();\n    }\n\n    // モード切り替えメッセージは表示しない（UIで分かるため）\n  }\n\n  /**\n   * パルス効果を追加\n   */\n  addPulseEffect(element) {\n    // 既存のアニメーションをリセット\n    element.style.animation = 'none';\n    \n    // 少し遅らせてからアニメーションを適用（リフロー強制）\n    setTimeout(() => {\n      element.style.animation = 'smartModePulse 0.6s ease-out';\n    }, 10);\n    \n    // アニメーション終了後にクリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 610);\n    \n    // CSSアニメーションを動的に追加（まだ存在しない場合）\n    this.ensurePulseAnimation();\n  }\n\n  /**\n   * パルスアニメーション用CSSを確保\n   */\n  ensurePulseAnimation() {\n    if (document.getElementById('smart-mode-pulse-animation')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'smart-mode-pulse-animation';\n    style.textContent = `\n      @keyframes smartModePulse {\n        0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0.7); }\n        70% { transform: scale(1.05); box-shadow: 0 0 0 10px rgba(236, 72, 153, 0); }\n        100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(236, 72, 153, 0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コンテナグロー効果\n   */\n  addContainerGlow(mode) {\n    const container = this.radioModeContainer;\n    if (!container) return;\n\n    // モードに応じてグロー色を設定\n    const glowColors = this.isWabiSabiMode ? {\n      generate: 'rgba(139, 195, 74, 0.4)',\n      modify: 'rgba(139, 195, 74, 0.4)',\n      delete: 'rgba(139, 195, 74, 0.4)',\n      import: 'rgba(139, 195, 74, 0.4)'\n    } : {\n      generate: 'rgba(79, 70, 229, 0.4)',\n      modify: 'rgba(236, 72, 153, 0.4)',\n      delete: 'rgba(107, 114, 128, 0.3)',\n      import: 'rgba(59, 130, 246, 0.35)'\n    };\n\n    const glowColor = glowColors[mode] || glowColors.generate;\n\n    // 一時的にグロー効果を適用\n    container.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n\n    const intensified = glowColor.replace('0.4', '0.6').replace('0.3', '0.5');\n    container.style.borderColor = intensified !== glowColor ? intensified : glowColor;\n    \n    // 1秒後にグロー効果を除去\n    setTimeout(() => {\n      container.style.boxShadow = '';\n      container.style.borderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.15)';\n    }, 1000);\n  }\n\n  getActionButtonStyles(variant = 'secondary') {\n    const baseStyles = `\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-weight: 500;\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n    `;\n\n    if (variant === 'secondary') {\n      // Clear All, History ボタン用 - 美しい配置と統一感\n      return baseStyles + `\n        width: 90px;\n        height: 36px;\n        padding: 8px 12px;\n        font-size: 12px;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 6px;\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(141, 110, 99, 0.3), rgba(109, 76, 65, 0.2))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(93, 64, 55, 0.6)'\n          : (this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)')};\n        color: ${this.isWabiSabiMode\n          ? '#F5F5F5'\n          : (this.isDarkMode ? '#d1d5db' : '#374151')};\n        text-align: center;\n        white-space: nowrap;\n      `;\n    } else if (variant === 'icon') {\n      // テーマトグル、設定ボタン用\n      return baseStyles + `\n        width: 32px;\n        height: 32px;\n        padding: 0;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: ${this.isDarkMode \n          ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(139, 92, 246, 0.1))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))'};\n        border: 1px solid ${this.isDarkMode ? 'rgba(99, 102, 241, 0.2)' : 'rgba(255, 255, 255, 0.4)'};\n        color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'};\n      `;\n    }\n  }\n\n  /**\n   * 破壊的アクション用ボタンスタイル（赤系ガラス効果）\n   */\n  getDestructiveButtonStyles() {\n    return `\n      min-width: 50px;\n      height: 32px;\n      border: 1px solid ${this.isDarkMode ? 'rgba(220, 38, 127, 0.4)' : 'rgba(190, 24, 93, 0.35)'};\n      border-radius: 6px;\n      background: ${this.isDarkMode ? 'rgba(220, 38, 127, 0.3)' : 'rgba(190, 24, 93, 0.25)'};\n      color: ${this.isDarkMode ? '#fca5a5' : '#dc2626'};\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n      font-size: 11px;\n      font-weight: 500;\n      padding: 0 8px;\n      backdrop-filter: blur(10px);\n      -webkit-backdrop-filter: blur(10px);\n    `;\n  }\n\n  getCommandTypeIndicatorStyles() {\n    return `\n      padding: 4px 0;\n      margin-bottom: 0;\n      font-size: 11px;\n      font-weight: 400;\n      text-align: left;\n      color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)'};\n      transition: all 0.3s ease;\n      border: none;\n      background: none;\n    `;\n  }\n\n  /**\n   * テキストエリアの自動リサイズ処理（最大2行）\n   */\n  autoResizeTextarea() {\n    // 高さをリセットして正確な scrollHeight を取得\n    this.input.style.height = 'auto';\n    \n    // 現在のコンテンツに基づいて高さを計算\n    const lineHeight = 22; // CSS で設定した line-height\n    const padding = 28; // 上下のパディング合計 (14px * 2)\n    const maxLines = 2;\n    const maxHeight = (lineHeight * maxLines) + padding;\n    \n    // スクロール高さに基づいて新しい高さを決定\n    const newHeight = Math.min(this.input.scrollHeight, maxHeight);\n    \n    // 高さを適用\n    this.input.style.height = newHeight + 'px';\n    \n    // 2行を超える場合はスクロールを有効化と展開ボタン表示\n    if (this.input.scrollHeight > maxHeight) {\n      this.input.style.overflowY = 'auto';\n      // 展開ボタンを表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'flex';\n      }\n    } else {\n      this.input.style.overflowY = 'hidden';\n      // 展開ボタンを非表示\n      if (this.expandButton) {\n        this.expandButton.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * リアルタイムコマンドタイプ検出\n   */\n  detectCommandType() {\n    const input = this.input.value.trim();\n    if (!input) {\n      this.selectMode('generate', false);\n      return;\n    }\n\n    const commandType = this.analyzeCommandType(input);\n\n    // Delete/Modifyは手動選択を優先、自動切り替えしない\n    if (this.currentMode === 'delete' || this.currentMode === 'modify') {\n      return; // 現在のモードを維持\n    }\n    // Generate/Importのみ自動切り替え\n    this.selectMode(commandType.type, false, commandType.detectedKeyword);\n  }\n\n  /**\n   * ルールベースコマンド分析\n   */\n  analyzeCommandType(text, hasSelectedObject) {\n    const trimmedText = text.trim();\n    \n    this.logDebug(`🔍 Analyzing command: \"${text}\"`);\n    this.logDebug(`📋 Selected object: ${hasSelectedObject ? 'Yes' : 'No'}`);\n    \n    // 空コマンド\n    if (!trimmedText) {\n      return { type: 'empty', reason: '空のコマンド' };\n    }\n\n    // メディアタイプの検出\n    const mediaInfo = this.detectMediaType(text);\n    \n    // 1. 削除コマンドの検出（最優先）\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除' },\n      { pattern: /消去/, keyword: '消去' },\n      { pattern: /消して/, keyword: '消して' },\n      { pattern: /消す/, keyword: '消す' },\n      { pattern: /取り除/, keyword: '取り除' },\n      { pattern: /除去/, keyword: '除去' },\n      { pattern: /削除して/, keyword: '削除して' },\n      { pattern: /delete/i, keyword: 'delete' },\n      { pattern: /remove/i, keyword: 'remove' },\n      { pattern: /clear/i, keyword: 'clear' },\n      { pattern: /erase/i, keyword: 'erase' }\n    ];\n    \n    for (const { pattern, keyword } of deletePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Delete pattern matched: ${keyword}`);\n        return {\n          type: 'delete',\n          confidence: 0.9,\n          reason: '削除キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: true,\n          detectedKeyword: keyword,\n          needsTarget: true\n        };\n      }\n    }\n    \n    // 2. 明確な生成コマンドの検出（選択状態に関係なく）\n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って' },\n      { pattern: /つくって/, keyword: 'つくって' },\n      { pattern: /生成/, keyword: '生成' },\n      { pattern: /作成/, keyword: '作成' },\n      { pattern: /描いて/, keyword: '描いて' },\n      { pattern: /書いて/, keyword: '書いて' },\n      { pattern: /create/i, keyword: 'create' },\n      { pattern: /generate/i, keyword: 'generate' },\n      { pattern: /make/i, keyword: 'make' },\n      { pattern: /draw/i, keyword: 'draw' }\n    ];\n    \n    for (const { pattern, keyword } of generatePatterns) {\n      if (pattern.test(text)) {\n        this.logDebug(`✅ Generate pattern matched: ${keyword}`);\n        return {\n          type: 'generate',\n          confidence: mediaInfo.confidence,\n          reason: '生成キーワードを検出',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          detectedKeyword: keyword,\n          needsTarget: false\n        };\n      }\n    }\n    \n    // 3. 自然言語での対象指定（確実にmodify）\n    const targetPatterns = [\n      /インポートした.*を/,\n      /選択した.*を/,\n      /この.*を/,\n      /その.*を/,\n      /あの.*を/,\n      /[0-9]+番目.*を/,\n      /最初.*を/,\n      /初回.*を/,\n      /生成した.*を/,\n      /作った.*を/,\n      /.+の(画像|写真|イメージ|絵|イラスト|ピクチャー)(を|に)/,\n      /.+の(動画|ビデオ|ムービー|映像|クリップ)(を|に)/,\n      /(.+?)(画像|写真|イメージ|絵|イラスト|ピクチャー)を.*(変えて|変更|にして|加工|編集|調整|塗り|並べ|移動|回転|反転|整列)/,\n      /(.+?)(動画|ビデオ|ムービー|映像|クリップ)を.*(変えて|変更|にして|加工|編集|調整|塗り|並べ|移動|回転|反転|整列)/\n    ];\n\n    const explicitTargetMatched = targetPatterns.some(pattern => pattern.test(text));\n    if (explicitTargetMatched) {\n      this.logDebug('✅ Target reference pattern matched');\n      return {\n        type: 'modify',\n        confidence: 0.9,\n        reason: '対象を明示的に指定',\n        mediaType: mediaInfo.type,\n        requiresConfirmation: false,\n        needsTarget: true,\n        hasExplicitTarget: true\n      };\n    }\n\n    // 4. 選択オブジェクトがある場合の処理\n    if (hasSelectedObject && trimmedText) {\n      // 新規作成意図でなければmodify\n      if (!/の画像|の動画|画像を|動画を|画像$|動画$/.test(text)) {\n        this.logDebug(`✅ Selected object + command = modify`);\n        return {\n          type: 'modify',\n          confidence: 0.8,\n          reason: '選択オブジェクトに対する変更',\n          mediaType: mediaInfo.type,\n          requiresConfirmation: false,\n          needsTarget: false  // 既に選択済み\n        };\n      }\n    }\n\n    // 5. 変更系のキーワードが含まれる場合（対象未選択でもmodify判定）\n    const modificationIndicators = /(にして|に変えて|へ変えて|へ変更|変えて|変更|調整|加工|編集|塗(って|り)|染め|彩色|彩度|明るく|暗く|薄く|濃く|ぼかし|シャープ|左右反転|上下反転|反転|回転|移動|並べ|整列|揃え|寄せて|拡大|縮小|大きく|小さく|伸ばして|縮めて|高く|低く|近づけ|遠ざけ|透明|半透明|不透明|透過|背景を透過|背景透過|背景を消|背景消|背景抜|輝かせて|光らせて|暗くして|焼き込み|焼き付け|flip|rotate|move|align|scale|resize|tint|color|brighten|darken|adjust|edit|modify)/i;\n    const mediaReferenceIndicators = /(画像|写真|イメージ|絵|イラスト|ピクチャー|メディア|素材|動画|ビデオ|ムービー|映像|クリップ|オブジェクト|モデル)/i;\n\n    if (modificationIndicators.test(text)) {\n      this.logDebug('✅ Modification indicators detected');\n      return {\n        type: 'modify',\n        confidence: 0.7,\n        reason: '変更キーワードを検出',\n        mediaType: mediaInfo.type,\n        requiresConfirmation: false,\n        needsTarget: !hasSelectedObject,\n        hasExplicitTarget: explicitTargetMatched || mediaReferenceIndicators.test(text)\n      };\n    }\n\n    // 6. デフォルト（安全な生成）\n    this.logDebug(`ℹ️ Defaulting to generate mode`);\n    return {\n      type: 'generate',\n      confidence: mediaInfo.confidence,\n      reason: 'デフォルト動作（新規生成）',\n      mediaType: mediaInfo.type,\n      requiresConfirmation: false,\n      needsTarget: false\n    };\n  }\n\n  /**\n   * Extract all command keywords from the analyzeCommandType patterns\n   * Returns an array of {pattern, keyword, type} objects\n   */\n  getAllCommandKeywords() {\n    const deletePatterns = [\n      { pattern: /削除/, keyword: '削除', type: 'delete' },\n      { pattern: /消去/, keyword: '消去', type: 'delete' },\n      { pattern: /消して/, keyword: '消して', type: 'delete' },\n      { pattern: /消す/, keyword: '消す', type: 'delete' },\n      { pattern: /取り除/, keyword: '取り除', type: 'delete' },\n      { pattern: /除去/, keyword: '除去', type: 'delete' },\n      { pattern: /削除して/, keyword: '削除して', type: 'delete' },\n      { pattern: /delete/i, keyword: 'delete', type: 'delete' },\n      { pattern: /remove/i, keyword: 'remove', type: 'delete' },\n      { pattern: /clear/i, keyword: 'clear', type: 'delete' },\n      { pattern: /erase/i, keyword: 'erase', type: 'delete' }\n    ];\n    \n    const modifyPatterns = [\n      { pattern: /移動/, keyword: '移動', type: 'modify' },\n      { pattern: /動かして/, keyword: '動かして', type: 'modify' },\n      { pattern: /変更/, keyword: '変更', type: 'modify' },\n      { pattern: /変えて/, keyword: '変えて', type: 'modify' },\n      { pattern: /修正/, keyword: '修正', type: 'modify' },\n      { pattern: /調整/, keyword: '調整', type: 'modify' },\n      { pattern: /move/i, keyword: 'move', type: 'modify' },\n      { pattern: /change/i, keyword: 'change', type: 'modify' },\n      { pattern: /modify/i, keyword: 'modify', type: 'modify' },\n      { pattern: /edit/i, keyword: 'edit', type: 'modify' }\n    ];\n    \n    const generatePatterns = [\n      { pattern: /作って/, keyword: '作って', type: 'generate' },\n      { pattern: /生成/, keyword: '生成', type: 'generate' },\n      { pattern: /作成/, keyword: '作成', type: 'generate' },\n      { pattern: /描いて/, keyword: '描いて', type: 'generate' },\n      { pattern: /書いて/, keyword: '書いて', type: 'generate' },\n      { pattern: /create/i, keyword: 'create', type: 'generate' },\n      { pattern: /generate/i, keyword: 'generate', type: 'generate' },\n      { pattern: /make/i, keyword: 'make', type: 'generate' },\n      { pattern: /draw/i, keyword: 'draw', type: 'generate' }\n    ];\n\n    return [...deletePatterns, ...modifyPatterns, ...generatePatterns];\n  }\n\n  /**\n   * Apply keyword highlighting to the input text\n   */\n  applyKeywordHighlighting() {\n    // TODO: 一時的にキーワードハイライト機能を無効化（リリース後に再検討）\n    return;\n\n    if (!this.input || this.isComposing) {\n      return;\n    }\n\n    const text = this.input.value;\n    if (!text.trim()) {\n      this.clearKeywordHighlighting();\n      return;\n    }\n\n    // Get all keyword patterns\n    const allKeywords = this.getAllCommandKeywords();\n    \n    // Find matches in the text\n    const matches = [];\n    for (const { pattern, keyword, type } of allKeywords) {\n      const match = text.match(pattern);\n      if (match) {\n        const startIndex = match.index;\n        const endIndex = startIndex + match[0].length;\n        matches.push({\n          start: startIndex,\n          end: endIndex,\n          keyword: match[0], // Use actual matched text\n          type: type\n        });\n      }\n    }\n\n    // Sort matches by position to avoid overlaps\n    matches.sort((a, b) => a.start - b.start);\n\n    // Apply highlighting if we have matches\n    if (matches.length > 0) {\n      this.createHighlightOverlay(text, matches);\n    } else {\n      this.clearKeywordHighlighting();\n    }\n  }\n\n  /**\n   * Create a highlighting overlay div that sits behind the textarea\n   */\n  createHighlightOverlay(text, matches) {\n    // Remove existing overlay\n    this.clearKeywordHighlighting();\n\n    // Create highlight overlay div\n    this.highlightOverlay = document.createElement('div');\n    this.highlightOverlay.className = 'keyword-highlight-overlay';\n    \n    // Copy textarea styles to overlay\n    const computedStyle = window.getComputedStyle(this.input);\n\n    if (!this.inputDefaultStyles) {\n      this.captureInputDefaultStyles();\n    }\n    this.highlightOverlay.style.cssText = `\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      overflow: hidden;\n      font-family: ${computedStyle.fontFamily};\n      font-size: ${computedStyle.fontSize};\n      font-weight: ${computedStyle.fontWeight};\n      line-height: ${computedStyle.lineHeight};\n      letter-spacing: ${computedStyle.letterSpacing};\n      padding: ${computedStyle.padding};\n      border: ${computedStyle.borderWidth} solid transparent;\n      margin: 0;\n      z-index: 1;\n      color: transparent;\n      background: transparent;\n    `;\n\n    // Build highlighted HTML\n    let highlightedHTML = '';\n    let lastIndex = 0;\n\n    for (const match of matches) {\n      // Add text before this match\n      highlightedHTML += this.escapeHtml(text.substring(lastIndex, match.start));\n      \n      // Add highlighted keyword\n      const color = this.getKeywordColor(match.type);\n      highlightedHTML += `<span style=\"color: ${color}; font-weight: 600; background: linear-gradient(135deg, ${color}22 0%, ${color}11 100%); border-radius: 3px; padding: 1px 2px;\">${this.escapeHtml(match.keyword)}</span>`;\n      \n      lastIndex = match.end;\n    }\n\n    // Add remaining text\n    highlightedHTML += this.escapeHtml(text.substring(lastIndex));\n\n    this.highlightOverlay.innerHTML = highlightedHTML;\n\n    // Make textarea background transparent so overlay shows through\n    this.input.style.background = 'transparent';\n    this.input.style.backgroundColor = 'transparent';\n    this.input.style.backgroundImage = 'none';\n    this.input.style.color = this.getInputTextColor();\n\n    // Insert overlay before textarea\n    this.inputWrapper.insertBefore(this.highlightOverlay, this.input);\n  }\n\n  /**\n   * Get the appropriate color for each keyword type\n   */\n  getKeywordColor(type) {\n    return KEYWORD_HIGHLIGHT_COLOR;\n  }\n\n  getInputTextColor() {\n    if (this.isWabiSabiMode) {\n      return '#F5F5F5';\n    }\n    return this.isDarkMode ? '#ffffff' : '#1f2937';\n  }\n\n  captureInputDefaultStyles() {\n    if (!this.input) {\n      return;\n    }\n    const computedStyle = window.getComputedStyle(this.input);\n    this.inputDefaultStyles = {\n      background: computedStyle.background,\n      backgroundImage: computedStyle.backgroundImage,\n      backgroundColor: computedStyle.backgroundColor,\n      color: computedStyle.color\n    };\n  }\n\n  /**\n   * Clear keyword highlighting\n   */\n  clearKeywordHighlighting() {\n    if (this.highlightOverlay) {\n      this.highlightOverlay.remove();\n      this.highlightOverlay = null;\n    }\n    \n    // Restore textarea background\n    if (this.input) {\n      if (this.inputDefaultStyles) {\n        this.input.style.background = this.inputDefaultStyles.background;\n        this.input.style.backgroundImage = this.inputDefaultStyles.backgroundImage;\n        this.input.style.backgroundColor = this.inputDefaultStyles.backgroundColor;\n        this.input.style.color = this.inputDefaultStyles.color;\n      } else {\n        this.input.style.background = '';\n        this.input.style.backgroundImage = '';\n        this.input.style.backgroundColor = '';\n        this.input.style.color = '';\n      }\n    }\n  }\n\n  /**\n   * Escape HTML characters\n   */\n  escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  /**\n   * メディアタイプ検出（画像/動画）\n   */\n  detectMediaType(text) {\n    const videoPatterns = [\n      /動画|ビデオ|映像|ムービー/,\n      /video|movie|clip/i\n    ];\n    \n    const imagePatterns = [\n      /画像|写真|絵|イラスト|イメージ/,\n      /image|picture|photo|illustration/i\n    ];\n    \n    if (videoPatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'video',\n        confidence: 0.8,\n        reason: '動画生成コマンド'\n      };\n    }\n    \n    if (imagePatterns.some(pattern => pattern.test(text))) {\n      return {\n        type: 'image',\n        confidence: 0.8,\n        reason: '画像生成コマンド'\n      };\n    }\n    \n    // デフォルトは画像\n    return {\n      type: 'image',\n      confidence: 0.6,\n      reason: '生成コマンド（画像デフォルト）'\n    };\n  }\n\n  /**\n   * コマンドタイプインジケーター表示\n   */\n  showCommandTypeIndicator(commandInfo) {\n    const { type, confidence, reason } = commandInfo;\n    \n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    // Proactive UX: 低信頼度時に提案表示\n    if (confidence < 0.7) {\n      this.showProactiveSuggestion(type, confidence);\n    } else {\n      this.hideProactiveSuggestion();\n    }\n    \n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[type].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n    // this.commandTypeIndicator.style.display = 'block';\n    // this.commandTypeIndicator.style.cursor = 'default';\n    \n    // スワイプジェスチャー対応\n    this.enableGestureControl();\n  }\n\n  /**\n   * Proactive UX: 低信頼度時の提案表示\n   */\n  showProactiveSuggestion(detectedType, confidence) {\n    if (!this.proactiveSuggestion) {\n      this.proactiveSuggestion = document.createElement('div');\n      this.proactiveSuggestion.id = 'proactive-suggestion';\n      this.proactiveSuggestion.style.cssText = `\n        margin-bottom: 0;\n        padding: 10px;\n        background: rgba(255, 193, 7, 0.15);\n        border: 1px solid rgba(255, 193, 7, 0.3);\n        border-radius: 8px;\n        font-size: 12px;\n        color: #ffc107;\n        text-align: center;\n        cursor: pointer;\n        transition: all 0.2s ease;\n      `;\n      // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n      // 代わりに入力フィールドの前に挿入\n      this.container.insertBefore(this.proactiveSuggestion, this.input);\n    }\n\n    const alternativeTypes = ['generate', 'modify', 'delete'].filter(t => t !== detectedType);\n    const suggestion = alternativeTypes[0]; // 最初の代替案\n\n    const suggestionLabels = {\n      generate: '🎨 生成',\n      modify: '✏️ 変更', \n      delete: '🗑️ 削除'\n    };\n\n    this.proactiveSuggestion.innerHTML = `\n      💡 もしかして「${suggestionLabels[suggestion]}モード」ですか？\n      <div style=\"margin-top: 4px; font-size: 10px; opacity: 0.8;\">\n        クリックで変更 | スワイプで選択\n      </div>\n    `;\n    \n    this.proactiveSuggestion.style.display = 'block';\n    \n    // クリックで提案モードに変更\n    this.proactiveSuggestion.onclick = () => {\n      this.currentMode = suggestion;\n      this.hideProactiveSuggestion();\n      this.updateIndicatorForMode(suggestion, 0.9);\n    };\n  }\n\n  /**\n   * Proactive UX提案を非表示\n   */\n  hideProactiveSuggestion() {\n    if (this.proactiveSuggestion) {\n      this.proactiveSuggestion.style.display = 'none';\n    }\n  }\n\n  /**\n   * 指定モードでインジケーター更新\n   */\n  updateIndicatorForMode(mode, confidence) {\n    const typeLabels = {\n      generate: '🎨 生成モード',\n      modify: '✏️ 変更モード',\n      delete: '🗑️ 削除モード'\n    };\n    \n    const typeColors = {\n      generate: 'linear-gradient(135deg, #4f46e5, #4338ca)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)',\n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n\n    // 旧コマンドタイプインジケーターは削除（ラジオボタンUIに統合済み）\n    // this.commandTypeIndicator.textContent = `◯ ${typeLabels[mode].replace('🎨 ', '').replace('✏️ ', '').replace('🗑️ ', '')}`;\n  }\n\n  /**\n   * ジェスチャーコントロール有効化\n   */\n  enableGestureControl() {\n    // 旧スワイプジェスチャー機能は削除（ラジオボタンUIに統合済み）\n    // ラジオボタンで直接モード選択可能になったため、スワイプ操作は不要\n    this.gestureEnabled = true;\n  }\n\n  /**\n   * アクションボタン作成\n   */\n  createActionButtons() {\n    const container = document.createElement('div');\n    container.style.cssText = `\n      display: flex;\n      margin-top: 8px;\n      gap: 8px;\n    `;\n\n    // 履歴ボタン削除 - タスク進行状況に置き換え済み\n\n    // クリアオールボタン\n    const clearBtn = document.createElement('button');\n    clearBtn.innerHTML = '🧹 全削除';\n    clearBtn.style.cssText = this.getModernButtonStyles('danger');\n    clearBtn.addEventListener('click', () => this.clearAll());\n\n    // historyBtn削除済み\n    container.appendChild(clearBtn);\n\n    return container;\n  }\n\n  /**\n   * スタイル定義\n   */\n  getContainerStyles() {\n    const positions = {\n      'bottom-right': 'bottom: 20px; right: 20px;',\n      'bottom-left': 'bottom: 20px; left: 20px;',\n      'top-right': 'top: 20px; right: 20px;',\n      'top-left': 'top: 20px; left: 20px;',\n      'center': 'top: 50%; left: 50%; transform: translate(-50%, -50%);'\n    };\n\n    // 2025 Glassmorphism仕様：ダーク・ライト両対応\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.7), rgba(30, 27, 75, 0.65))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(99, 102, 241, 0.2)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))',\n      backdropFilter: 'blur(24px) saturate(180%)',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.3)'\n    };\n\n    // 侘び寂びモード - 枯山水の静寂：独自のアイデンティティ\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))',\n      backdropFilter: 'blur(20px) saturate(120%)',\n      border: '1px solid rgba(93, 64, 55, 0.5)',\n      boxShadow: '0 8px 32px rgba(33, 33, 33, 0.4), 0 0 0 1px rgba(93, 64, 55, 0.4), inset 0 1px 0 rgba(189, 189, 189, 0.15)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      position: fixed;\n      ${positions[this.config.position] || positions['bottom-right']}\n      width: 320px;\n      max-height: ${this.config.maxHeight}px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 20px;\n      color: ${this.isDarkMode ? '#ffffff' : '#1f2937'};\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-size: 14px;\n      z-index: 1000;\n      padding: 16px !important;\n      box-shadow: ${theme.boxShadow};\n      backdrop-filter: ${theme.backdropFilter};\n      -webkit-backdrop-filter: ${theme.backdropFilter};\n      display: none;\n      flex-direction: column;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    `;\n  }\n\n  getHeaderStyles() {\n    // ダークモードと同じ紫グラデーションで統一\n    const gradientColors = 'linear-gradient(135deg, #4f46e5, #7c3aed)';\n\n    return `\n      margin-bottom: 20px;\n      text-align: center;\n      background: ${gradientColors};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n      font-weight: 800;\n      font-size: 18px;\n      border-bottom: 1px solid rgba(79, 70, 229, 0.2);\n      padding-bottom: 12px;\n    `;\n  }\n\n  getOutputStyles() {\n    // カスタムスクロールバーのCSSを注入\n    this.addScrollbarStyles();\n\n    return `\n      height: 200px;\n      overflow-y: auto;\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.05)' : 'rgba(255, 255, 255, 0.1)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.2)'};\n      border-radius: 12px;\n      padding: 12px;\n      margin-bottom: 16px;\n      font-size: 12px;\n      line-height: 1.4;\n      backdrop-filter: blur(8px);\n\n      /* カスタムスクロールバーのスタイル */\n      scrollbar-width: thin;\n      scrollbar-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.3) rgba(0, 0, 0, 0.1)'};\n    `;\n  }\n\n  /**\n   * スクロールバーのカスタムスタイルをページに注入\n   */\n  addScrollbarStyles() {\n    if (document.getElementById('custom-scrollbar-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'custom-scrollbar-styles';\n    style.textContent = `\n      .command-output::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .command-output::-webkit-scrollbar-track {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'};\n        border-radius: 4px;\n      }\n\n      .command-output::-webkit-scrollbar-thumb {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)'};\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .command-output::-webkit-scrollbar-thumb:hover {\n        background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(0, 0, 0, 0.5)'};\n      }\n\n      /* ダークモード用 */\n      .dark-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(255, 255, 255, 0.1);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(255, 255, 255, 0.3);\n      }\n\n      .dark-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n\n      /* ライトモード用 */\n      .light-mode .command-output::-webkit-scrollbar-track {\n        background: rgba(0, 0, 0, 0.1);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      .light-mode .command-output::-webkit-scrollbar-thumb:hover {\n        background: rgba(0, 0, 0, 0.5);\n      }\n\n      @keyframes shimmer {\n        0% { background-position: -200% 0; }\n        100% { background-position: 200% 0; }\n      }\n\n      /* 2025年トレンド: 微細な浮遊感アニメーション */\n      @keyframes gentleFloat {\n        0%, 100% { \n          transform: translateY(0px) scale(1);\n        }\n        25% { \n          transform: translateY(-2px) scale(1.005);\n        }\n        50% { \n          transform: translateY(-1px) scale(1.002);\n        }\n        75% { \n          transform: translateY(-3px) scale(1.008);\n        }\n      }\n\n      /* タスクステータスコンテナのホバー効果 */\n      .task-status-container:hover .progress-bar {\n        box-shadow: 0 0 20px rgba(255,123,71,0.6) !important;\n        transform: scaleY(1.1);\n      }\n\n      /* プログレスバーの微細なアニメーション */\n      .progress-bar {\n        position: relative;\n      }\n\n      .progress-bar::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: linear-gradient(90deg, \n          transparent, \n          rgba(255,255,255,0.4), \n          transparent);\n        animation: progress-shine 2s ease-in-out infinite;\n      }\n\n      @keyframes progress-shine {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  getInputStyles() {\n    // 2025 Glassmorphism仕様：入力フィールド\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))',\n      border: '1px solid rgba(255, 255, 255, 0.5)',\n      boxShadow: '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)'\n    };\n\n    const glassmorphismWabiSabi = {\n      background: 'linear-gradient(135deg, rgba(97, 97, 97, 0.4), rgba(66, 66, 66, 0.3))',\n      border: '1px solid rgba(97, 97, 97, 0.5)',\n      boxShadow: '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n    };\n\n    const theme = this.isWabiSabiMode ? glassmorphismWabiSabi : (this.isDarkMode ? glassmorphismDark : glassmorphismLight);\n\n    return `\n      width: 100%;\n      padding: 14px 16px;\n      background: ${theme.background};\n      border: ${theme.border};\n      border-radius: 14px;\n      color: ${this.isWabiSabiMode ? '#F5F5F5' : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n      font-size: 14px;\n      outline: none;\n      box-sizing: border-box;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      box-shadow: ${theme.boxShadow};\n      placeholder-color: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(55, 65, 81, 0.6)'};\n      resize: none;\n      overflow-y: hidden;\n      min-height: 22px;\n      max-height: 66px;\n      line-height: 22px;\n    `;\n  }\n\n  getModernButtonStyles(type) {\n    const styles = {\n      primary: this.isWabiSabiMode ? `\n        background: linear-gradient(135deg, #8D6E63, #6D4C41);\n        box-shadow: 0 4px 12px rgba(85, 139, 47, 0.4), inset 0 1px 0 rgba(184, 158, 135, 0.15);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      ` : `\n        background: linear-gradient(135deg, #4f46e5, #4338ca);\n        width: 100%;\n        padding: 16px;\n        font-size: 14px;\n        font-weight: 600;\n      `,\n      secondary: this.isWabiSabiMode ? `\n        background: rgba(158, 158, 158, 0.2);\n        border: 1px solid rgba(141, 110, 99, 0.4);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n      `,\n      danger: this.isWabiSabiMode ? `\n        background: rgba(141, 110, 99, 0.3);\n        border: 1px solid rgba(93, 64, 55, 0.5);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #F5F5F5;\n      ` : `\n        background: rgba(255, 59, 48, 0.15);\n        border: 1px solid rgba(255, 59, 48, 0.3);\n        flex: 1;\n        padding: 12px;\n        font-size: 13px;\n        font-weight: 500;\n        backdrop-filter: blur(8px);\n        color: #ff453a;\n      `\n    };\n\n    return `\n      border: none;\n      border-radius: 12px;\n      color: white;\n      cursor: pointer;\n      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      font-family: inherit;\n      outline: none;\n      ${styles[type]}\n    `;\n  }\n\n  getModeButtonStyles(isActive, mode) {\n    // モードカラー設定\n    const modeColors = {\n      generate: 'linear-gradient(135deg, #22c55e, #16a34a)',  // Green - チャット欄と同じ緑色\n      modify: 'linear-gradient(135deg, #22c55e, #16a34a)',    // Green - チャット欄と同じ緑色\n      delete: 'linear-gradient(135deg, #22c55e, #16a34a)'     // Green - チャット欄と同じ緑色\n    };\n    \n    return `\n      flex: 1;\n      padding: 12px 16px;\n      border: none;\n      border-radius: 8px;\n      color: ${isActive ? 'white' : 'rgba(255, 255, 255, 0.7)'};\n      background: ${isActive ? modeColors[mode] : 'transparent'};\n      font-size: 13px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-family: inherit;\n      outline: none;\n    `;\n  }\n\n  /**\n   * イベントバインディング\n   */\n  bindEvents() {\n    // キーボードショートカット\n    document.addEventListener('keydown', (e) => {\n      // 設定されたキーでUI表示切替\n      if (e.key === this.config.activationKey) {\n        e.preventDefault();\n        this.toggle();\n        return;\n      }\n      \n      // Enterキー処理はinitUI()内で行うため、ここでは処理しない\n      // （IME対応のため）\n      \n      // Escapeで非表示\n      if (this.isVisible && e.key === 'Escape') {\n        this.hide();\n      }\n      \n      // Ctrl+Z/Ctrl+Y でUndo/Redo\n      if (this.isVisible && e.ctrlKey) {\n        if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault();\n          this.undo();\n        } else if (e.key === 'y' || (e.key === 'z' && e.shiftKey)) {\n          e.preventDefault();\n          this.redo();\n        }\n      }\n    });\n\n    // 入力フィールドのスタイル調整\n    this.input.addEventListener('focus', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8BC34A';\n        this.input.style.boxShadow = '0 0 5px rgba(139, 195, 74, 0.5)';\n      } else {\n        this.input.style.borderColor = '#74b9ff';\n        this.input.style.boxShadow = '0 0 5px rgba(116, 185, 255, 0.5)';\n      }\n    });\n\n    this.input.addEventListener('blur', () => {\n      if (this.isWabiSabiMode) {\n        this.input.style.borderColor = '#8D6E63';\n        this.input.style.boxShadow = 'none';\n      } else {\n        this.input.style.borderColor = '#4a90e2';\n        this.input.style.boxShadow = 'none';\n      }\n    });\n  }\n\n  /**\n   * UI表示/非表示切替\n   */\n  toggle() {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * UI表示\n   */\n  show() {\n    this.container.style.display = 'flex';\n    this.container.style.flexDirection = 'column';\n    this.floatingContainer.style.display = 'flex';\n\n    // UIフォームの位置に合わせて配置（少し遅延して正確な位置を取得）\n    setTimeout(() => {\n      const containerRect = this.container.getBoundingClientRect();\n      this.floatingContainer.style.left = containerRect.left + 'px';\n      this.floatingContainer.style.top = (containerRect.top - 80) + 'px';\n      this.floatingContainer.style.width = containerRect.width + 'px';\n      this.floatingContainer.style.transform = 'none';\n    }, 50);\n\n    this.isVisible = true;\n    this.input.focus();\n\n    // フォーム表示中はチョコアイコンを隠す\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0';\n      this.floatingChocolateIcon.style.pointerEvents = 'none';\n    }\n\n    // コントロールを無効化\n    this.onControlsToggle(true);\n    // コントロール停止時も静かに\n  }\n\n  /**\n   * UI非表示\n   */\n  hide() {\n    this.container.style.display = 'none';\n    this.floatingContainer.style.display = 'none';\n    this.isVisible = false;\n\n    // フォーム非表示時はチョコアイコンを再表示\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.pointerEvents = 'auto';\n    }\n\n    // コントロールを再有効化\n    this.onControlsToggle(false);\n    this.logDebug('🎮 コントロールを再開');\n  }\n\n  /**\n   * モード切り替え\n   */\n  switchMode(mode) {\n    if (this.currentMode === mode) return;\n    \n    this.currentMode = mode;\n    \n    // モードボタンのスタイル更新\n    this.container.querySelectorAll('[data-mode]').forEach(btn => {\n      const isActive = btn.dataset.mode === mode;\n      btn.style.cssText = this.getModeButtonStyles(isActive, btn.dataset.mode);\n    });\n    \n    // 入力フィールドのプレースホルダー更新\n    this.input.placeholder = this.getPlaceholderForMode(mode);\n    \n    // 実行ボタンのラベルと色更新\n    const executeBtn = this.container.querySelector('#execute-btn');\n    const labels = {\n      generate: '🎨 Generate Object',\n      modify: '✏️ Apply Changes', \n      delete: '🗑️ Delete Objects'\n    };\n    \n    const buttonColors = {\n      generate: 'linear-gradient(135deg, #5b21b6, #4c1d95)',\n      modify: 'linear-gradient(135deg, #ec4899, #be185d)', \n      delete: 'rgba(107, 114, 128, 0.15)'\n    };\n    \n    executeBtn.innerHTML = `<span>${labels[mode]}</span>`;\n    executeBtn.style.background = buttonColors[mode];\n    \n    // モード切り替え通知は不要（ボタンで分かるため）\n  }\n  \n  /**\n   * モード別プレースホルダー\n   */\n  getPlaceholderForMode(mode) {\n    const placeholders = {\n      generate: '「猫の画像を作って」と話しかけて ⏎ ✨',\n      import: 'ファイルを選択して ⏎ 📁',\n      modify: '選択後「背景の緑色を透明にして」と伝えて ⏎ ✏️',\n      delete: '選択後、コマンドをそのまま送って ⏎ 🗑️'\n    };\n    return placeholders[mode] || placeholders.generate;\n  }\n\n  /**\n   * コマンド実行\n   */\n  async executeCommand() {\n    const command = this.input.value.trim();\n    if (!command) return;\n\n    // 事前バリデーション（2025年UX改善）\n    const preValidation = await this.preValidateCommand(command);\n    if (!preValidation.canExecute) {\n      // バリデーション失敗時はフィードバック表示して終了\n      return;\n    }\n\n    await this.proceedWithExecution(command, preValidation.commandType);\n  }\n\n  /**\n   * 削除確認ダイアログ\n   */\n  async showConfirmationDialog(options) {\n    const {\n      icon = '🗑️',\n      title = '確認',\n      message = 'この操作を実行しますか？',\n      confirmText = '実行',\n      cancelText = 'キャンセル',\n      confirmColor = '#ef4444'\n    } = options;\n\n    return new Promise((resolve) => {\n      const modal = document.createElement('div');\n      modal.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(15, 23, 42, 0.6);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 2000;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n      `;\n\n      const dialog = document.createElement('div');\n      dialog.style.cssText = `\n        background: ${this.isWabiSabiMode\n          ? 'linear-gradient(135deg, rgba(239, 235, 233, 0.4), rgba(215, 204, 200, 0.3))'\n          : (this.isDarkMode\n            ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n            : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))')};\n        border: 1px solid ${this.isWabiSabiMode\n          ? 'rgba(161, 136, 127, 0.4)'\n          : (this.isDarkMode ? 'rgba(99, 102, 241, 0.3)' : 'rgba(255, 255, 255, 0.5)')};\n        border-radius: 20px;\n        padding: 32px;\n        max-width: 420px;\n        text-align: center;\n        color: ${this.isWabiSabiMode\n          ? '#5D4037'\n          : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n        font-family: inherit;\n        backdrop-filter: blur(24px) saturate(180%);\n        -webkit-backdrop-filter: blur(24px) saturate(180%);\n        box-shadow: ${this.isWabiSabiMode\n          ? '0 8px 32px rgba(93, 64, 55, 0.2), 0 0 0 1px rgba(161, 136, 127, 0.2)'\n          : (this.isDarkMode\n            ? '0 8px 32px rgba(15, 23, 42, 0.4), 0 0 0 1px rgba(99, 102, 241, 0.1)'\n            : '0 8px 32px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.2)')};\n        transform: scale(0.9);\n        opacity: 0;\n        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n      `;\n\n      dialog.innerHTML = `\n        <div style=\"font-size: 56px; margin-bottom: 20px;\">${icon}</div>\n        <h3 style=\"margin: 0 0 16px 0; color: ${this.isDarkMode ? '#a5b4fc' : '#6366f1'}; font-size: 20px; font-weight: 700; letter-spacing: 0.02em;\">\n          ${title}\n        </h3>\n        <p style=\"margin: 0 0 28px 0; color: ${this.isDarkMode ? '#d1d5db' : '#6b7280'}; line-height: 1.6; font-size: 16px;\">\n          ${message}\n        </p>\n        <div style=\"display: flex; gap: 8px; justify-content: center;\">\n          <button id=\"cancel-btn\" style=\"\n            padding: 14px 24px;\n            background: ${this.isDarkMode \n              ? 'linear-gradient(135deg, rgba(55, 65, 81, 0.3), rgba(75, 85, 99, 0.2))'\n              : 'linear-gradient(135deg, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.15))'};\n            border: 1px solid ${this.isDarkMode ? 'rgba(156, 163, 175, 0.2)' : 'rgba(255, 255, 255, 0.3)'};\n            border-radius: 12px;\n            color: ${this.isDarkMode ? '#d1d5db' : '#374151'};\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(16px);\n            -webkit-backdrop-filter: blur(16px);\n          \">${cancelText}</button>\n          <button id=\"confirm-btn\" style=\"\n            padding: 14px 24px;\n            background: ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'linear-gradient(135deg, ' + (this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6') + ')' \n              : confirmColor === '#ef4444'\n              ? 'linear-gradient(135deg, #ef4444, #dc2626)'\n              : 'linear-gradient(135deg, #ff7b47, #f97316)'};\n            border: none;\n            border-radius: 12px;\n            color: white;\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 700;\n            transition: all 0.2s ease;\n            box-shadow: 0 4px 16px ${confirmColor === (this.isWabiSabiMode ? '#8BC34A' : '#6366f1') \n              ? 'rgba(99, 102, 241, 0.3)' \n              : confirmColor === '#ef4444' \n              ? 'rgba(239, 68, 68, 0.3)' \n              : 'rgba(255, 123, 71, 0.3)'};\n            backdrop-filter: blur(8px);\n            -webkit-backdrop-filter: blur(8px);\n          \">${confirmText}</button>\n        </div>\n      `;\n\n      modal.appendChild(dialog);\n      document.body.appendChild(modal);\n\n      // アニメーション開始\n      requestAnimationFrame(() => {\n        modal.style.opacity = '1';\n        dialog.style.transform = 'scale(1)';\n        dialog.style.opacity = '1';\n      });\n\n      // イベントリスナー\n      dialog.querySelector('#cancel-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(false);\n      };\n\n      dialog.querySelector('#confirm-btn').onclick = () => {\n        this.closeModalWithAnimation(modal);\n        resolve(true);\n      };\n\n      // ESCキーでキャンセル\n      const escHandler = (e) => {\n        if (e.key === 'Escape') {\n          this.closeModalWithAnimation(modal);\n          document.removeEventListener('keydown', escHandler);\n          resolve(false);\n        }\n      };\n      document.addEventListener('keydown', escHandler);\n\n      // モーダル背景クリックでキャンセル\n      modal.onclick = (e) => {\n        if (e.target === modal) {\n          this.closeModalWithAnimation(modal);\n          resolve(false);\n        }\n      };\n    });\n  }\n\n  async showDeleteConfirmation(command) {\n    return this.showConfirmationDialog({\n      icon: '🗑️',\n      title: '削除の確認',\n      message: `「${command}」を実行しますか？<br>この操作は取り消すことができません。`,\n      confirmText: '削除実行',\n      cancelText: 'キャンセル',\n      confirmColor: '#ff7b47'\n    });\n  }\n\n  /**\n   * 出力エリアにメッセージ追加\n   */\n  /**\n   * タスクカード追加（従来のaddOutputを置き換え）\n   */\n  addOutput(message, type = 'default', options = {}) {\n    // タスクカード形式で処理\n    if (type === 'task' || type === 'progress') {\n      return this.addTaskCard(message, options);\n    }\n\n    // エラーとシステムメッセージのみ表示\n    if (type === 'error' || type === 'system') {\n      this.addSystemMessage(message, type);\n    }\n  }\n\n  /**\n   * フローティングタスクカード追加\n   */\n  addTaskCard(taskInfo, options = {}) {\n    if (!this.taskCards) this.taskCards = new Map();\n\n    const taskId = options.taskId || `task_${Date.now()}_${Math.random().toString(36).substr(2, 5)}`;\n    const status = options.status || 'pending';\n    const prompt = taskInfo.prompt || taskInfo.command || taskInfo;\n\n    // フローティングカード作成\n    const card = document.createElement('div');\n    card.className = 'floating-task-card';\n    card.setAttribute('data-task-id', taskId);\n\n    // 2025年トレンド: 待機中のアニメーション効果\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    // iOS 26 Liquid Glass + 2026年トレンドスタイル\n    card.style.cssText = this.getFloatingCardStyles(status);\n    // アニメーション用初期状態（非表示）- 強制設定\n    card.style.setProperty('opacity', '0', 'important');\n    card.style.setProperty('transform', 'translateY(20px) scale(0.95)', 'important');\n    card.style.setProperty('filter', 'blur(4px)', 'important');\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    const statusText = {\n      pending: '待機中',\n      processing: '生成中',\n      progress: '進行中',\n      completed: '完了',\n      error: 'エラー'\n    };\n\n    // 温かみのあるメッセージ表示\n    const friendlyMessage = this.getFriendlyMessage(status, prompt, options.errorMessage);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // フローティングコンテナに追加（最新が上に来るように）\n    this.floatingContainer.insertBefore(card, this.floatingContainer.firstChild);\n    \n    // カード表示制限を適用（最新3個まで表示）\n    this.updateCardDisplayLimit();\n\n    this.taskCards.set(taskId, {\n      element: card,\n      status: status,\n      prompt: prompt,\n      originalPrompt: prompt, // 元のプロンプト\n      startTime: Date.now(),\n      endTime: null,\n      error: null,\n      contentType: 'image', // 'image', 'video', etc.\n      model: null,\n      settings: null\n    });\n\n    // カード詳細モーダル用のイベントリスナー\n    this.addCardDetailEvents(card, taskId);\n    \n    // 入場アニメーション\n    this.animateCardEntrance(card);\n    \n    // 2025年トレンド: シマーエフェクトCSS確保\n    this.ensureShimmerStyles();\n    \n    return taskId;\n  }\n\n  /**\n   * 2025年トレンド: シマーエフェクトスタイルを確保\n   */\n  ensureShimmerStyles() {\n    if (document.querySelector('#chocodrop-shimmer-styles')) return;\n    \n    const styleSheet = document.createElement('style');\n    styleSheet.id = 'chocodrop-shimmer-styles';\n    styleSheet.textContent = `\n      /* 2025年トレンド: シマーエフェクト（強化版） */\n      .chocodrop-shimmer {\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .chocodrop-shimmer::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.5)' : 'rgba(255, 255, 255, 0.7)'},\n          transparent\n        );\n        animation: shimmer 1.5s infinite;\n        pointer-events: none;\n        z-index: 1;\n      }\n      \n      .chocodrop-shimmer > * {\n        position: relative;\n        z-index: 2;\n      }\n      \n      /* 2025年トレンド: 微細な浮遊感 */\n      .chocodrop-float {\n        animation: gentleFloat 4s ease-in-out infinite;\n      }\n      \n      /* 待機中の特別なパルス効果（強化版） */\n      .chocodrop-shimmer.floating-task-card {\n        animation: gentleFloat 4s ease-in-out infinite, subtlePulse 3s ease-in-out infinite;\n      }\n      \n      @keyframes subtlePulse {\n        0%, 100% { \n          box-shadow: 0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1);\n        }\n        50% { \n          box-shadow: 0 12px 40px rgba(15, 23, 42, 0.5), 0 0 0 1px rgba(99, 102, 241, 0.3);\n        }\n      }\n    `;\n    \n    document.head.appendChild(styleSheet);\n  }\n\n  /**\n   * フローティングタスクカード更新\n   */\n  updateTaskCard(taskId, status, options = {}) {\n    if (!this.taskCards || !this.taskCards.has(taskId)) return;\n\n    const taskData = this.taskCards.get(taskId);\n    const card = taskData.element;\n\n    // ステータス更新\n    taskData.status = status;\n\n    // エラー情報を保存\n    if (status === 'error' && options.errorMessage) {\n      taskData.error = options.errorMessage;\n    }\n\n    // 2025年トレンド: アニメーション状態管理\n    if (status === 'pending' || status === 'processing' || status === 'progress') {\n      // 待機中・処理中: シマーエフェクト追加\n      card.classList.add('chocodrop-shimmer', 'chocodrop-float');\n    } else {\n      // 完了・エラー: シマーエフェクト削除\n      card.classList.remove('chocodrop-shimmer', 'chocodrop-float');\n    }\n\n    const iconMap = {\n      pending: '⏳',\n      processing: '🎨',\n      progress: '⚡',\n      completed: '✅',\n      error: '❌'\n    };\n\n    // 温かみのあるメッセージ更新（エラー時は理由も含める）\n    const friendlyMessage = this.getFriendlyMessage(status, taskData.prompt, taskData.error);\n    card.innerHTML = `\n      <span style=\"font-size: 14px;\">${iconMap[status]}</span>\n      <span style=\"font-size: 13px; margin-left: 6px;\">${friendlyMessage}</span>\n    `;\n\n    // スタイル更新（完了状態に応じて）\n    card.style.cssText = this.getFloatingCardStyles(status);\n\n    // 完了時の自動消去アニメーション\n    if (status === 'completed') {\n      this.animateCardSuccess(card, taskId);\n    } else if (status === 'error') {\n      this.animateCardError(card, taskId);\n    }\n  }\n\n  /**\n   * システムメッセージ表示\n   */\n  addSystemMessage(message, type) {\n    const entry = document.createElement('div');\n    entry.className = `system-message ${type}`;\n    entry.style.cssText = `\n      padding: 8px 12px;\n      margin: 4px 0;\n      border-radius: 8px;\n      font-size: 12px;\n      line-height: 1.4;\n      animation: slideIn 0.3s ease-out;\n      background: ${type === 'error' ? 'rgba(239, 68, 68, 0.1)' : 'rgba(107, 114, 128, 0.1)'};\n      border: 1px solid ${type === 'error' ? 'rgba(239, 68, 68, 0.3)' : 'rgba(107, 114, 128, 0.3)'};\n      color: ${type === 'error' ? '#fca5a5' : (this.isDarkMode ? '#d1d5db' : '#6b7280')};\n    `;\n    entry.textContent = message;\n    this.outputDiv.appendChild(entry);\n    this.scrollToBottom();\n  }\n\n  /**\n   * 入力フィールド直下のフィードバック表示（2025年トレンド準拠）\n   */\n  showInputFeedback(message, type = 'error', options = {}) {\n    if (type === 'success') {\n      return;\n    }\n\n    if (type === 'error') {\n      this.addOutput(`⚠️ ${message}`, 'error');\n    } else {\n      this.addOutput(`💡 ${message}`, 'system');\n    }\n\n    if (!this.feedbackOverlay) {\n      const overlay = document.createElement('div');\n      overlay.className = 'input-feedback-overlay';\n      overlay.style.cssText = `\n        position: absolute;\n        left: 16px;\n        right: 16px;\n        bottom: 12px;\n        z-index: 1200;\n        pointer-events: auto;\n        display: flex;\n        gap: 8px;\n        align-items: center;\n        padding: 12px 16px;\n        border-radius: 12px;\n        backdrop-filter: blur(10px);\n        -webkit-backdrop-filter: blur(10px);\n        transition: opacity 180ms ease, transform 180ms ease;\n        opacity: 0;\n        transform: translateY(8px);\n      `;\n      this.container.appendChild(overlay);\n      this.feedbackOverlay = overlay;\n    }\n\n    const overlay = this.feedbackOverlay;\n    overlay.innerHTML = '';\n\n    const isError = type === 'error';\n    const background = isError\n      ? (this.isDarkMode ? 'rgba(239, 68, 68, 0.28)' : 'rgba(239, 68, 68, 0.18)')\n      : (this.isDarkMode ? 'rgba(59, 130, 246, 0.25)' : 'rgba(59, 130, 246, 0.18)');\n    const border = isError\n      ? '1px solid rgba(239, 68, 68, 0.45)'\n      : '1px solid rgba(59, 130, 246, 0.35)';\n    const color = isError\n      ? (this.isDarkMode ? '#fca5a5' : '#b91c1c')\n      : (this.isDarkMode ? '#bfdbfe' : '#1d4ed8');\n\n    overlay.style.background = background;\n    overlay.style.border = border;\n    overlay.style.color = color;\n\n    const messageSpan = document.createElement('span');\n    messageSpan.textContent = message;\n    messageSpan.style.flex = '1';\n    overlay.appendChild(messageSpan);\n\n    if (options.actions && Array.isArray(options.actions) && options.actions.length > 0) {\n      const actionsContainer = document.createElement('div');\n      actionsContainer.style.cssText = `\n        display: flex;\n        gap: 8px;\n      `;\n\n      options.actions.forEach(action => {\n        const button = document.createElement('button');\n        button.type = 'button';\n        button.textContent = action.label;\n        button.style.cssText = `\n          padding: 6px 12px;\n          border-radius: 999px;\n          border: none;\n          cursor: pointer;\n          background: ${isError ? 'rgba(239, 68, 68, 0.28)' : 'rgba(59, 130, 246, 0.25)'};\n          color: inherit;\n          font-size: 11px;\n          transition: background 0.2s ease;\n        `;\n        button.addEventListener('mouseenter', () => {\n          button.style.background = isError ? 'rgba(239, 68, 68, 0.38)' : 'rgba(59, 130, 246, 0.35)';\n        });\n        button.addEventListener('mouseleave', () => {\n          button.style.background = isError ? 'rgba(239, 68, 68, 0.28)' : 'rgba(59, 130, 246, 0.25)';\n        });\n        button.addEventListener('click', () => {\n          if (typeof action.onClick === 'function') {\n            action.onClick();\n          }\n        });\n        actionsContainer.appendChild(button);\n      });\n\n      overlay.appendChild(actionsContainer);\n    }\n\n    if (this.feedbackAutoClearTimer) {\n      clearTimeout(this.feedbackAutoClearTimer);\n      this.feedbackAutoClearTimer = null;\n    }\n\n    overlay.style.pointerEvents = 'auto';\n    overlay.style.opacity = '1';\n    overlay.style.transform = 'translateY(0)';\n\n    this.currentFeedback = overlay;\n\n    if (type === 'info') {\n      this.feedbackAutoClearTimer = setTimeout(() => this.clearInputFeedback(), options.duration || 3000);\n    }\n  }\n\n  /**\n   * 入力フィードバックをクリア\n   */\n  clearInputFeedback() {\n    if (this.feedbackAutoClearTimer) {\n      clearTimeout(this.feedbackAutoClearTimer);\n      this.feedbackAutoClearTimer = null;\n    }\n\n    if (this.currentFeedback) {\n      const element = this.currentFeedback;\n      element.style.pointerEvents = 'none';\n      element.style.opacity = '0';\n      element.style.transform = 'translateY(8px)';\n      this.currentFeedback = null;\n      setTimeout(() => {\n        element.innerHTML = '';\n      }, 180);\n    }\n  }\n\n  /**\n   * フィードバック用CSSスタイルを確保\n   */\n  ensureFeedbackStyles() {\n    if (document.getElementById('feedback-styles')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'feedback-styles';\n    style.textContent = `\n      @keyframes feedbackSlideIn {\n        from {\n          opacity: 0;\n          transform: translateY(-10px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n      \n      @keyframes feedbackSlideOut {\n        from {\n          opacity: 1;\n          transform: translateY(0);\n        }\n        to {\n          opacity: 0;\n          transform: translateY(-10px);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * コマンド事前バリデーション（送信前チェック）\n   */\n  async preValidateCommand(command) {\n    // 1. コマンドタイプ判定\n    const hasSelectedObject = this.sceneManager?.selectedObject || this.selectedFile;\n    const commandType = this.analyzeCommandType(command, hasSelectedObject);\n\n    if (this.selectedFile) {\n      commandType.type = 'import';\n      commandType.mediaType = this.selectedFile.type === 'video' ? 'video' : 'image';\n      commandType.needsTarget = false;\n      commandType.requiresConfirmation = false;\n      commandType.hasExplicitTarget = true;\n      commandType.detectedKeyword = commandType.detectedKeyword || 'import';\n    }\n\n    // 最新の解析結果をUIモードへ反映（ユーザー入力優先）\n    if (commandType.type && this.selectMode && commandType.type !== this.currentMode) {\n      this.selectMode(commandType.type, false, commandType.detectedKeyword || null);\n    }\n\n    // 2. 空コマンドの場合\n    if (commandType.type === 'empty') {\n      this.showInputFeedback('💡 何をしましょうか？コマンドを入力してください', 'info');\n      return { canExecute: false, reason: 'empty_command' };\n    }\n    \n    // 3. 対象が必要なコマンドの事前チェック\n    if (commandType.needsTarget && !hasSelectedObject) {\n      const canAttemptSearch = !!this.sceneManager && (commandType.hasExplicitTarget || commandType.type === 'modify');\n      \n      // まず自然言語で対象を探してみる\n      if (canAttemptSearch) {\n        this.logDebug('🔍 Searching for explicitly mentioned target...');\n        try {\n          const foundTarget = await this.sceneManager?.findObjectByKeyword(command);\n          if (foundTarget) {\n            // 対象を発見！選択してアニメーション表示\n            this.sceneManager.selectObject(foundTarget);\n            this.showInputFeedback(`✨ 「${foundTarget.name || foundTarget.userData?.originalPrompt || 'オブジェクト'}」を見つけました！`, 'success');\n            // 1秒待ってから実行継続\n            setTimeout(() => this.executeCommandAfterValidation(command, commandType), 1000);\n            return { canExecute: false, reason: 'target_found_waiting' };\n          } else {\n            // 対象が見つからない場合\n            this.showInputFeedback(\n              '🔍 指定されたオブジェクトが見つかりません',\n              'error',\n              {\n                actions: [\n                  {\n                    label: '選択する',\n                    onClick: () => {\n                      this.clearInputFeedback();\n                      this.showInputFeedback('👆 3Dシーン内のオブジェクトをクリックで選択してください', 'info');\n                    }\n                  },\n                  {\n                    label: '新規作成に変更',\n                    onClick: () => {\n                      // コマンドを生成モード向けに変換\n                      const newCommand = this.convertToGenerateCommand(command);\n                      this.input.value = newCommand;\n                      this.clearInputFeedback();\n                      this.showInputFeedback('✏️ コマンドを新規作成用に変更しました', 'success');\n                    }\n                  }\n                ]\n              }\n            );\n            return { canExecute: false, reason: 'target_not_found' };\n          }\n        } catch (error) {\n          this.logDebug('❌ Error searching for target:', error);\n          this.showInputFeedback('⚠️ 対象の検索中にエラーが発生しました', 'error');\n          return { canExecute: false, reason: 'search_error' };\n        }\n      } else {\n        // 一般的な「対象が必要」エラー\n        this.showInputFeedback(\n          '🎯 操作対象が選択されていません',\n          'error',\n          {\n            actions: [\n              {\n                label: '選択する',\n                onClick: () => {\n                  this.clearInputFeedback();\n                  this.showInputFeedback('👆 3Dシーン内のオブジェクトをクリックで選択してください', 'info');\n                }\n              },\n              {\n                label: 'ヒント',\n                onClick: () => {\n                  this.clearInputFeedback();\n                  this.showInputFeedback('💡 「インポートした猫を」「選択した画像を」のように対象を明示してみてください', 'info');\n                }\n              }\n            ]\n          }\n        );\n        return { canExecute: false, reason: 'no_target_selected' };\n      }\n    }\n    \n    // 4. バリデーション成功\n    return { canExecute: true, commandType };\n  }\n\n  /**\n   * バリデーション後のコマンド実行\n   */\n  async executeCommandAfterValidation(command, commandType) {\n    // 既存のexecuteCommandロジックを継続\n    // フィードバックをクリアしてから実行\n    this.clearInputFeedback();\n    \n    // 元のexecuteCommandの続きを実行\n    await this.proceedWithExecution(command, commandType);\n  }\n\n  async proceedWithExecution(command, commandType) {\n    const hasSelectedObject = this.sceneManager?.selectedObject || this.selectedFile;\n    if (!commandType) {\n      commandType = this.analyzeCommandType(command, hasSelectedObject);\n    }\n\n    if (this.selectedFile) {\n      if (this.currentMode !== 'import') {\n        this.selectMode('import', false);\n      }\n      this.currentMode = 'import';\n    } else {\n      this.currentMode = commandType.type;\n    }\n\n    if (commandType.requiresConfirmation) {\n      const confirmed = await this.showDeleteConfirmation(command);\n      if (!confirmed) {\n        this.addOutput('❌ 削除をキャンセルしました', 'system');\n        return;\n      }\n    }\n\n    this.input.value = '';\n    this.clearInputFeedback();\n    this.hideProactiveSuggestion();\n\n    const taskId = this.addTaskCard(command, { status: 'processing' });\n\n    this.saveCommandToHistory({\n      command: command,\n      mode: this.currentMode,\n      mediaType: commandType.mediaType,\n      timestamp: Date.now()\n    });\n\n    let result;\n\n    try {\n      const modePrefix = this.getModePrefix(this.currentMode);\n      const fullCommand = `${modePrefix}${command}`;\n\n      this.logDebug('🔍 Current mode check:', this.currentMode);\n      if (this.currentMode === 'import') {\n        this.logDebug('📁 Import mode detected - bypassing SceneManager');\n        if (!this.selectedFile) {\n          throw new Error('ファイルが選択されていません。まずファイルを選択してください。');\n        }\n        result = await this.handleImportCommand(command);\n      } else if (this.sceneManager) {\n        result = await this.sceneManager.executeCommand(fullCommand);\n      } else if (this.client) {\n        if (this.currentMode === 'generate') {\n          if (commandType.mediaType === 'video') {\n            result = await this.client.generateVideo(command, {\n              model: this.selectedVideoService || undefined\n            });\n          } else {\n            result = await this.client.generateImage(command, {\n              service: this.selectedImageService || undefined\n            });\n          }\n        } else if (this.currentMode === 'modify') {\n          const selectedObject = this.sceneManager?.selectedObject;\n          if (!selectedObject) {\n            throw new Error('変更するオブジェクトが選択されていません。まず対象オブジェクトを選択してください。');\n          }\n          result = await this.client.modifySelectedObject(selectedObject, command);\n        } else if (this.currentMode === 'delete') {\n          const selectedObject = this.sceneManager?.selectedObject;\n          if (!selectedObject && !this.sceneManager?.getSelectedObjects()?.length) {\n            this.addOutput('⚠️ 削除するオブジェクトが選択されていません。まず3Dシーン内のオブジェクトをクリックで選択してから、再度Deleteボタンを押してください。', 'system');\n            return;\n          }\n          const confirmMessage = `本当に「${command}」を実行しますか？\n\nこの操作は取り消せません。`;\n          if (!confirm(confirmMessage)) {\n            this.addOutput('❌ 削除がキャンセルされました', 'system');\n            return;\n          }\n          result = await this.client.deleteObjects(command);\n        } else {\n          result = await this.client.executeCommand(fullCommand);\n        }\n      } else {\n        throw new Error('SceneManager または Client が設定されていません');\n      }\n\n      // サーバーからのエラーレスポンスをチェック\n      if (result && result.success === false) {\n        throw new Error(result.error || '操作に失敗しました');\n      }\n\n      if (result && result.taskId) {\n        this.connectToProgress(result.taskId, taskId);\n        this.currentTaskId = result.taskId;\n      }\n\n      if (taskId) {\n        this.updateTaskCard(taskId, 'completed');\n      }\n\n      if (result.modelName) {\n        // モデル情報がある場合はモーダル表示用に保持（必要に応じて拡張）\n      }\n\n      if (result.objectId) {\n        // オブジェクト ID の提示は将来のUI更新で対応\n      }\n\n      if (result.position) {\n        // 位置情報はデバッグ表示のみ（現状は未使用）\n      }\n\n      if (commandType.mediaType) {\n        // メディアタイプ別の追加処理が必要になった場合に備えたフック\n      }\n    } catch (error) {\n      const errorMessages = {\n        generate: `❌ ${commandType.mediaType === 'video' ? '動画' : '画像'}生成エラー`,\n        modify: '❌ 変更エラー',\n        delete: '❌ 削除エラー'\n      };\n\n      if (taskId) {\n        this.updateTaskCard(taskId, 'error', { errorMessage: error.message });\n      }\n\n      this.addOutput(`${errorMessages[this.currentMode]}: ${error.message}`, 'error');\n      console.error('Command execution error:', error);\n    }\n\n    if (this.sceneManager && this.sceneManager.selectedObject) {\n      if (this.currentMode === 'modify' || this.currentMode === 'delete') {\n        setTimeout(() => {\n          this.sceneManager.deselectObject();\n        }, 500);\n      }\n    }\n\n    if (this.config.autoScroll) {\n      this.scrollToBottom();\n    }\n  }\n\n  /**\n   * コマンドを生成モード向けに変換\n   */\n  convertToGenerateCommand(command) {\n    // 「猫を大きく」→「大きな猫の画像を作って」のような変換\n    const patterns = [\n      { from: /(.+)を大きく/, to: '大きな$1の画像を作って' },\n      { from: /(.+)を小さく/, to: '小さな$1の画像を作って' },\n      { from: /(.+)を(.+)に/, to: '$2の$1の画像を作って' },\n      { from: /(.+)を(.+)く/, to: '$2い$1の画像を作って' }\n    ];\n    \n    for (const { from, to } of patterns) {\n      if (from.test(command)) {\n        return command.replace(from, to);\n      }\n    }\n    \n    // パターンマッチしない場合はデフォルト\n    return `${command}の画像を作って`;\n  }\n\n  /**\n   * タスクカードスタイル取得\n   */\n  getTaskCardStyles(status) {\n    const baseStyles = `\n      background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(255, 255, 255, 0.15)'};\n      border: 1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.15)' : 'rgba(255, 255, 255, 0.25)'};\n      border-radius: 12px;\n      padding: 16px;\n      margin-bottom: 12px;\n      backdrop-filter: blur(12px);\n      transition: all 0.3s ease;\n      animation: slideInUp 0.3s ease-out;\n    `;\n\n    const statusBorders = {\n      pending: 'rgba(167, 139, 250, 0.3)',     // 薄紫\n      processing: 'rgba(192, 132, 252, 0.5)',  // 紫（強調）\n      progress: 'rgba(236, 72, 153, 0.4)',     // ピンク\n      completed: 'rgba(167, 139, 250, 0.4)',   // 紫\n      error: 'rgba(239, 68, 68, 0.4)'          // 赤\n    };\n\n    return baseStyles + `border-left: 3px solid ${statusBorders[status] || statusBorders.pending};`;\n  }\n\n  /**\n   * フローティングカードスタイル（iOS 26 Liquid Glass + 2026年トレンド）\n   */\n  getFloatingCardStyles(status) {\n    // 2025年Glassmorphism仕様：フローティングタスクカード\n    const glassmorphismDark = {\n      background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n      border: '1px solid rgba(99, 102, 241, 0.25)',\n      boxShadow: '0 8px 32px rgba(15, 23, 42, 0.3), 0 0 0 1px rgba(99, 102, 241, 0.1)',\n      color: '#ffffff'\n    };\n\n    const glassmorphismLight = {\n      background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n      border: '1px solid rgba(255, 255, 255, 0.4)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(255, 255, 255, 0.2)',\n      color: '#1f2937'\n    };\n\n    const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n    \n    // 2025年トレンド: 待機中のシマーエフェクト\n    const shimmerEffect = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      position: relative;\n      overflow: hidden;\n      &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'},\n          transparent\n        );\n        animation: shimmer 2s infinite;\n      }\n    ` : '';\n\n    // 2025年トレンド: 微細な浮遊感\n    const floatingAnimation = (status === 'pending' || status === 'processing' || status === 'progress') ? `\n      animation: gentleFloat 4s ease-in-out infinite, shimmer 2s infinite;\n    ` : '';\n\n    return `\n      height: 36px;\n      padding: 0 18px;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      background: ${theme.background};\n      backdrop-filter: blur(24px) saturate(180%);\n      -webkit-backdrop-filter: blur(24px) saturate(180%);\n      border: ${theme.border};\n      border-radius: 18px;\n      color: ${theme.color};\n      pointer-events: auto;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;\n      font-weight: 600;\n      font-size: 13px;\n      letter-spacing: 0.01em;\n      box-shadow: ${theme.boxShadow};\n      transform: translateY(10px);\n      opacity: 0;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      ${shimmerEffect}\n      ${floatingAnimation}\n      position: relative;\n      overflow: hidden;\n    `;\n  }\n\n  /**\n   * カード表示制限を適用（最大3個まで表示、それ以上は「+ N」で表示）\n   */\n  updateCardDisplayLimit() {\n    const maxVisibleCards = 3;\n    const allCards = Array.from(this.floatingContainer.children).filter(child => \n      !child.classList.contains('overflow-counter')\n    );\n    \n    // 既存のカウンターを削除\n    const existingCounter = this.floatingContainer.querySelector('.overflow-counter');\n    if (existingCounter) {\n      existingCounter.remove();\n    }\n    \n    if (allCards.length <= maxVisibleCards) {\n      // カードが3個以下の場合、すべて表示\n      allCards.forEach(card => {\n        card.style.display = 'flex';\n      });\n    } else {\n      // カードが4個以上の場合、最新3個のみ表示し、残りはカウンター表示\n      const visibleCards = allCards.slice(0, maxVisibleCards); // 最初の3個（最新）\n      const hiddenCount = allCards.length - maxVisibleCards;\n      \n      // 古いカードを非表示\n      allCards.forEach((card, index) => {\n        if (index < maxVisibleCards) {\n          card.style.display = 'flex';\n        } else {\n          card.style.display = 'none';\n        }\n      });\n      \n      // 「+ N」カウンターを作成\n      const counter = document.createElement('div');\n      counter.className = 'overflow-counter';\n      // テーマに応じたカウンタースタイル\n      const counterBaseColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.12)';\n      const counterBorderColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.15)';\n      const counterTextColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.6)';\n      \n      counter.style.cssText = `\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 8px 12px;\n        margin: 4px 0;\n        background: ${counterBaseColor};\n        backdrop-filter: blur(20px);\n        border-radius: 12px;\n        border: 1px solid ${counterBorderColor};\n        font-size: 12px;\n        color: ${counterTextColor};\n        font-weight: 500;\n        min-height: 32px;\n        transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n        cursor: pointer;\n      `;\n      counter.innerHTML = `+ ${hiddenCount}`;\n      \n      // カウンターを最後に挿入（最下部に配置）\n      this.floatingContainer.appendChild(counter);\n      \n      // カウンターのホバー効果（テーマ対応）\n      const counterHoverColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.18)';\n      \n      counter.addEventListener('mouseenter', () => {\n        counter.style.background = counterHoverColor;\n        counter.style.transform = 'scale(1.05)';\n      });\n      \n      counter.addEventListener('mouseleave', () => {\n        counter.style.background = counterBaseColor;\n        counter.style.transform = 'scale(1)';\n      });\n    }\n  }\n\n  /**\n   * カードに詳細モーダル用のイベントリスナーを追加\n   */\n  addCardDetailEvents(card, taskId) {\n    // タッチデバイス検出\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    \n    if (isTouchDevice) {\n      // モバイル/タブレット: タップで詳細表示\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    } else {\n      // デスクトップ: ホバーで詳細表示\n      let hoverTimeout;\n      \n      card.addEventListener('mouseenter', () => {\n        hoverTimeout = setTimeout(() => {\n          this.showTaskDetailModal(taskId);\n        }, 800); // 0.8秒ホバーで表示\n      });\n      \n      card.addEventListener('mouseleave', () => {\n        if (hoverTimeout) {\n          clearTimeout(hoverTimeout);\n        }\n      });\n      \n      // クリックでも表示（デスクトップでも使いやすく）\n      card.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.showTaskDetailModal(taskId);\n      });\n    }\n  }\n\n  /**\n   * タスク詳細モーダルを表示\n   */\n  showTaskDetailModal(taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData) return;\n    \n    // 既存のモーダルを削除\n    const existingModal = document.querySelector('.task-detail-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n    \n    // モーダル作成\n    const modal = this.createTaskDetailModal(taskData);\n    document.body.appendChild(modal);\n    \n    // 入場アニメーション\n    requestAnimationFrame(() => {\n      modal.style.opacity = '1';\n      modal.querySelector('.modal-content').style.transform = 'translateY(0) scale(1)';\n    });\n  }\n\n  /**\n   * タスク詳細モーダルのHTML要素を作成\n   */\n  createTaskDetailModal(taskData) {\n    const modal = document.createElement('div');\n    modal.className = 'task-detail-modal';\n    \n    // テーマに応じたスタイル\n    const overlayColor = this.isDarkMode ? 'rgba(0, 0, 0, 0.6)' : 'rgba(0, 0, 0, 0.4)';\n    const modalBg = this.isDarkMode ? 'rgba(20, 20, 20, 0.95)' : 'rgba(255, 255, 255, 0.95)';\n    const modalBorder = this.isDarkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)';\n    const textColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.9)' : 'rgba(0, 0, 0, 0.9)';\n    const labelColor = this.isDarkMode ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)';\n    \n    modal.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: ${overlayColor};\n      backdrop-filter: blur(10px);\n      z-index: 100000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      transition: opacity 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: pointer;\n    `;\n    \n    // 実行時間計算\n    const duration = taskData.endTime \n      ? ((taskData.endTime - taskData.startTime) / 1000).toFixed(1)\n      : ((Date.now() - taskData.startTime) / 1000).toFixed(1);\n    \n    // ステータス表示\n    const statusText = taskData.status === 'pending' ? '待機中' \n                    : taskData.status === 'in-progress' ? '実行中' \n                    : taskData.status === 'completed' ? '完了' \n                    : 'エラー';\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background: ${modalBg};\n      backdrop-filter: blur(30px);\n      border: 1px solid ${modalBorder};\n      border-radius: 16px;\n      padding: 16px !important;\n      max-width: 400px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      transform: translateY(20px) scale(0.95);\n      transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n      cursor: default;\n      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;\">\n        <h3 style=\"margin: 0; color: ${textColor}; font-size: 18px; font-weight: 600;\">タスク詳細</h3>\n        <button class=\"close-btn\" style=\"\n          background: none;\n          border: none;\n          font-size: 24px;\n          color: ${labelColor};\n          cursor: pointer;\n          padding: 0;\n          line-height: 1;\n          transition: color 0.2s;\n        \">×</button>\n      </div>\n      \n      <div style=\"space-y: 16px;\">\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📝 元のプロンプト</div>\n          <div style=\"color: ${textColor}; font-size: 14px; line-height: 1.4;\">${taskData.originalPrompt}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">📊 ステータス</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${statusText}</div>\n        </div>\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">⏱️ 実行時間</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${duration}秒</div>\n        </div>\n        \n        ${taskData.error ? `\n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">❌ エラー詳細</div>\n          <div style=\"color: #ef4444; font-size: 14px; line-height: 1.4;\">${taskData.error}</div>\n        </div>\n        ` : ''}\n        \n        <div>\n          <div style=\"color: ${labelColor}; font-size: 12px; font-weight: 500; margin-bottom: 0;\">🎨 コンテンツタイプ</div>\n          <div style=\"color: ${textColor}; font-size: 14px;\">${taskData.contentType || '画像'}</div>\n        </div>\n      </div>\n    `;\n    \n    // イベントリスナー\n    modalContent.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n    \n    const closeBtn = modalContent.querySelector('.close-btn');\n    closeBtn.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    closeBtn.addEventListener('mouseenter', () => {\n      closeBtn.style.color = textColor;\n    });\n    \n    closeBtn.addEventListener('mouseleave', () => {\n      closeBtn.style.color = labelColor;\n    });\n    \n    modal.addEventListener('click', () => {\n      this.closeTaskDetailModal(modal);\n    });\n    \n    modal.appendChild(modalContent);\n    return modal;\n  }\n\n  /**\n   * タスク詳細モーダルを閉じる\n   */\n  closeTaskDetailModal(modal) {\n    modal.style.opacity = '0';\n    modal.querySelector('.modal-content').style.transform = 'translateY(20px) scale(0.95)';\n    \n    setTimeout(() => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    }, 300);\n  }\n\n  /**\n   * カード入場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardEntrance(card) {\n    // iOS 26 Liquid Glass 入場エフェクト\n    card.style.transform = 'translateY(20px) scale(0.95)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(4px)';\n\n    requestAnimationFrame(() => {\n      card.style.transition = 'all 0.6s cubic-bezier(0.16, 1, 0.3, 1)';\n      card.style.transform = 'translateY(0) scale(1)';\n      card.style.opacity = '1';\n      card.style.filter = 'blur(0px)';\n\n      // 2026年トレンド: 微細な光る効果\n      card.style.boxShadow = '0 4px 20px rgba(255, 255, 255, 0.1), 0 0 40px rgba(255, 255, 255, 0.05)';\n    });\n  }\n\n  /**\n   * 成功時アニメーション + 自動消去（iOS 26 Liquid Glass）\n   */\n  animateCardSuccess(card, taskId) {\n    // iOS 26 Liquid Glass 成功エフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(76, 175, 80, 0.6)';\n    card.style.transform = 'scale(1.08)';\n    card.style.boxShadow = '0 8px 32px rgba(76, 175, 80, 0.4), 0 0 60px rgba(76, 175, 80, 0.2)';\n    card.style.filter = 'brightness(1.1) saturate(1.2)';\n\n    // 2026年トレンド: 流体的な戻りアニメーション\n    setTimeout(() => {\n      card.style.transform = 'scale(1.02)';\n      card.style.filter = 'brightness(1.05) saturate(1.1)';\n    }, 150);\n\n    // Liquid Glass風のスムーズなフェードアウト（2秒後に自動削除）\n    setTimeout(() => {\n      this.animateCardExit(card, taskId);\n    }, 2000);\n  }\n\n  /**\n   * エラー時アニメーション（2026年トレンド UX）\n   */\n  animateCardError(card, taskId) {\n    // iOS 26 Liquid Glass エラーエフェクト\n    card.style.transition = 'all 0.3s cubic-bezier(0.16, 1, 0.3, 1)';\n    card.style.borderColor = 'rgba(244, 67, 54, 0.7)';\n    card.style.boxShadow = '0 8px 32px rgba(244, 67, 54, 0.3), 0 0 60px rgba(244, 67, 54, 0.15)';\n    card.style.filter = 'saturate(1.3) brightness(1.1)';\n\n    // 2026年トレンド: より自然なpulseアニメーション（shakeより洗練）\n    card.style.animation = 'errorPulse 0.6s cubic-bezier(0.16, 1, 0.3, 1) 2';\n\n    // UX改善: エラー内容を表示するツールチップ風UI\n    this.addErrorTooltip(card, taskId);\n\n    // エラーは手動で消すまで表示継続（クリックで消去）\n    card.style.cursor = 'pointer';\n    card.onclick = () => this.animateCardExit(card, taskId);\n\n    // 5秒後に自動フェードアウト（UX改善）\n    setTimeout(() => {\n      if (this.taskCards.has(taskId)) {\n        this.animateCardExit(card, taskId);\n      }\n    }, 5000);\n  }\n\n  /**\n   * エラー時のツールチップ表示（UX改善）\n   */\n  addErrorTooltip(card, taskId) {\n    const taskData = this.taskCards.get(taskId);\n    if (!taskData || !taskData.error) return;\n\n    // ツールチップ要素作成\n    const tooltip = document.createElement('div');\n    tooltip.style.cssText = `\n      position: absolute;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(244, 67, 54, 0.95);\n      color: white;\n      padding: 8px 12px;\n      border-radius: 8px;\n      font-size: 11px;\n      white-space: nowrap;\n      pointer-events: none;\n      z-index: 1001;\n      backdrop-filter: blur(10px);\n      margin-bottom: 0;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    `;\n    tooltip.textContent = taskData.error;\n\n    card.style.position = 'relative';\n    card.appendChild(tooltip);\n\n    // フェードイン\n    requestAnimationFrame(() => {\n      tooltip.style.opacity = '1';\n    });\n\n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      if (tooltip.parentNode) {\n        tooltip.style.opacity = '0';\n        setTimeout(() => {\n          if (tooltip.parentNode) {\n            tooltip.parentNode.removeChild(tooltip);\n          }\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * カード退場アニメーション（2026年トレンド + iOS 26 Liquid Glass）\n   */\n  animateCardExit(card, taskId) {\n    // iOS 26 Liquid Glass 退場エフェクト - 2026年トレンドの「スッと消える」\n    card.style.transition = 'all 0.28s cubic-bezier(0.4, 0, 0.2, 1)';\n    card.style.transform = 'translateY(-12px) scale(0.92)';\n    card.style.opacity = '0';\n    card.style.filter = 'blur(6px) brightness(1.2)';\n\n    // 2026年トレンド: 消去時の微細な光の拡散効果\n    card.style.boxShadow = '0 0 40px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.1)';\n\n    setTimeout(() => {\n      if (card.parentNode) {\n        card.parentNode.removeChild(card);\n      }\n      this.taskCards.delete(taskId);\n      // カード削除後に表示制限を再適用\n      this.updateCardDisplayLimit();\n    }, 280);\n  }\n\n  /**\n   * ユーザーの表現スタイルを自然に感知\n   */\n  getResponseType(prompt) {\n    // ユーザーの表現スタイルを自然に感知\n    if (/ちょこっと|ちょこん|少し|軽く/.test(prompt) || prompt.length < 15) {\n      return 'casual';\n    }\n    if (/美しい|幻想|素敵|魔法|世界|綺麗/.test(prompt)) {\n      return 'magical';\n    }\n    return 'balanced'; // 80%がここに該当\n  }\n\n  /**\n   * 温かみのあるメッセージを生成（マーケ提案ベース）\n   */\n  getFriendlyMessage(status, prompt, errorMessage = null) {\n    const shortPrompt = prompt.length > 15 ? prompt.substring(0, 15) + '...' : prompt;\n\n    // 自然な応答システム適用\n    const responseType = this.getResponseType(prompt);\n\n    switch (status) {\n      case 'pending':\n        return responseType === 'casual' ? 'ちょこっと準備中です...' :\n               responseType === 'magical' ? '魔法をかけようとしています...' :\n               'ちょこっと魔法の準備中...';\n      case 'processing':\n      case 'in-progress':\n      case 'progress':\n        // Modify mode specific messages for processing\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整中です...' :\n                 responseType === 'magical' ? 'イメージを変化させています...' :\n                 'ちょこんと編集中です...';\n        }\n        return responseType === 'casual' ? 'ちょこんと配置中です...' :\n               responseType === 'magical' ? 'あなたの想いを形にしています...' :\n               'ちょこっと魔法をかけています...';\n      case 'completed':\n        // Delete mode specific messages\n        if (this.currentMode === 'delete') {\n          return responseType === 'casual' ? 'ちょこっと削除しました！' :\n                 responseType === 'magical' ? 'すっきりと片付きました！' :\n                 'ちょこんと削除完了！すっきりですね！';\n        }\n        // Modify mode specific messages\n        if (this.currentMode === 'modify') {\n          return responseType === 'casual' ? 'ちょこっと調整しました！' :\n                 responseType === 'magical' ? '素敵に変身しました！' :\n                 'ちょこんと編集完了！いい感じですね！';\n        }\n        // Default completion messages for other modes\n        return responseType === 'casual' ? 'ちょこっとドロップしました！' :\n               responseType === 'magical' ? '素敵な世界が完成しました！' :\n               'ちょこんと配置完了！素敵ですね！';\n      case 'error':\n        // エラー理由があれば含める\n        if (errorMessage) {\n          const shortError = errorMessage.length > 30 ? errorMessage.substring(0, 30) + '...' : errorMessage;\n          return `❌ ${shortError}`;\n        }\n        return responseType === 'casual' ? 'おっと、エラーが発生しました' :\n               responseType === 'magical' ? '申し訳ございません、処理に失敗しました' :\n               'エラーが発生しました。もう一度お試しください';\n      default:\n        return shortPrompt;\n    }\n  }\n\n  /**\n   * ステータス色取得\n   */\n  getStatusColor(status) {\n    // ネオンパープル/ピンク系で統一（2025トレンド）\n    const colors = {\n      pending: this.isDarkMode ? '#a78bfa' : '#7c3aed',        // 薄紫\n      processing: this.isDarkMode ? '#c084fc' : '#9333ea',     // 紫（生成中）\n      progress: this.isDarkMode ? '#ec4899' : '#be185d',       // ピンク\n      completed: this.isDarkMode ? '#a78bfa' : '#7c3aed',      // 紫（完了も統一）\n      error: this.isDarkMode ? '#f87171' : '#dc2626'           // 赤（エラーのみ）\n    };\n    return colors[status] || colors.pending;\n  }\n\n  /**\n   * ステータスインジケーター作成（パーセント表示なし）\n   */\n  createStatusIndicator(status) {\n    if (status === 'processing' || status === 'progress') {\n      return `\n        <div class=\"status-indicator\" style=\"\n          background: ${this.isDarkMode ? 'rgba(255, 255, 255, 0.08)' : 'rgba(0, 0, 0, 0.08)'};\n          border-radius: 8px;\n          height: 4px;\n          overflow: hidden;\n          margin-top: 8px;\n          position: relative;\n        \">\n          <div class=\"status-pulse\" style=\"\n            background: linear-gradient(90deg, transparent, ${this.isWabiSabiMode ? '#8BC34A, #689F38' : '#6366f1, #8b5cf6'}, transparent);\n            height: 100%;\n            width: 30%;\n            border-radius: 8px;\n            animation: statusPulse 1.8s ease-in-out infinite;\n          \"></div>\n        </div>\n        <div style=\"display: flex; align-items: center; gap: 4px; margin-top: 8px;\">\n          <div class=\"status-dots\" style=\"font-size: 10px; color: ${this.isDarkMode ? '#c084fc' : '#9333ea'};\">\n            処理中<span style=\"animation: dots 1.5s infinite;\">...</span>\n          </div>\n        </div>\n      `;\n    }\n    return '';\n  }\n\n  /**\n   * タスク完了アニメーション\n   */\n  animateTaskCompletion(card) {\n    // 控えめなサクセスアニメーション\n    card.style.animation = 'taskComplete 0.8s ease-out';\n\n    // 微妙なパーティクル効果を追加（控えめ）\n    this.addSubtleParticleEffect(card);\n\n    setTimeout(() => {\n      card.style.animation = '';\n    }, 800);\n\n    this.ensureTaskAnimations();\n  }\n\n  /**\n   * 控えめなパーティクル効果\n   */\n  addSubtleParticleEffect(card) {\n    const particles = 3; // 少ない数のパーティクル\n    const rect = card.getBoundingClientRect();\n\n    for (let i = 0; i < particles; i++) {\n      const particle = document.createElement('div');\n      particle.style.cssText = `\n        position: fixed;\n        width: 4px;\n        height: 4px;\n        background: linear-gradient(45deg, #a78bfa, #c084fc);\n        border-radius: 50%;\n        pointer-events: none;\n        z-index: 9999;\n        left: ${rect.right - 20}px;\n        top: ${rect.top + 10}px;\n        opacity: 0.8;\n        transform: scale(0);\n        animation: subtleParticle 1.2s ease-out forwards;\n      `;\n\n      // ランダムな方向に少し移動\n      const angle = (i / particles) * Math.PI * 2;\n      const distance = 15; // 控えめな距離\n      particle.style.setProperty('--move-x', `${Math.cos(angle) * distance}px`);\n      particle.style.setProperty('--move-y', `${Math.sin(angle) * distance}px`);\n\n      document.body.appendChild(particle);\n\n      // 自動削除\n      setTimeout(() => particle.remove(), 1200);\n    }\n  }\n\n  /**\n   * タスクアニメーション用CSS確保\n   */\n  ensureTaskAnimations() {\n    if (document.getElementById('task-animations')) return;\n\n    const style = document.createElement('style');\n    style.id = 'task-animations';\n    style.textContent = `\n      @keyframes slideInUp {\n        from { opacity: 0; transform: translateY(20px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      @keyframes taskComplete {\n        0% {\n          transform: scale(1);\n          border-left-color: rgba(192, 132, 252, 0.5);\n        }\n        30% {\n          transform: scale(1.01);\n          background: rgba(167, 139, 250, 0.08);\n          border-left-color: rgba(167, 139, 250, 0.6);\n        }\n        60% {\n          background: rgba(167, 139, 250, 0.05);\n        }\n        100% {\n          transform: scale(1);\n          background: rgba(167, 139, 250, 0.02);\n          border-left-color: rgba(167, 139, 250, 0.4);\n        }\n      }\n\n      @keyframes subtleParticle {\n        0% {\n          transform: scale(0) translate(0, 0);\n          opacity: 0.8;\n        }\n        20% {\n          transform: scale(1) translate(0, 0);\n          opacity: 1;\n        }\n        100% {\n          transform: scale(0.3) translate(var(--move-x, 0), var(--move-y, 0));\n          opacity: 0;\n        }\n      }\n\n      @keyframes shimmer {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100%); }\n      }\n\n      @keyframes slideIn {\n        from { opacity: 0; transform: translateX(-20px); }\n        to { opacity: 1; transform: translateX(0); }\n      }\n\n      @keyframes statusPulse {\n        0% { transform: translateX(-100%); }\n        50% { transform: translateX(300%); }\n        100% { transform: translateX(-100%); }\n      }\n\n      @keyframes dots {\n        0%, 20% { opacity: 0; }\n        50% { opacity: 1; }\n        100% { opacity: 0; }\n      }\n\n      @keyframes errorPulse {\n        0% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n        50% {\n          transform: scale(1.03);\n          filter: saturate(1.5) brightness(1.2);\n          box-shadow: 0 12px 40px rgba(244, 67, 54, 0.4), 0 0 80px rgba(244, 67, 54, 0.2);\n        }\n        100% {\n          transform: scale(1);\n          filter: saturate(1.3) brightness(1.1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * プログレス付きタスクステータス表示（互換性のため）\n   */\n  addTaskStatus(message, percent = 0, taskId = null) {\n    const id = taskId || `task_${Date.now()}`;\n    return this.addTaskCard(message, {\n      percent: Math.min(Math.max(percent, 0), 100),\n      taskId: id,\n      status: percent > 0 ? 'progress' : 'pending'\n    });\n  }\n\n  /**\n   * プログレス更新\n   */\n  updateTaskProgress(taskId, percent, newMessage = null) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask && newMessage) {\n      // 既存タスクを更新\n      this.addOutput(newMessage, 'progress', { \n        percent: Math.min(Math.max(percent, 0), 100),\n        taskId\n      });\n    }\n  }\n\n  /**\n   * タスク完了（プログレスバー削除）\n   */\n  completeTask(taskId) {\n    const existingTask = this.output.querySelector(`[data-task-id=\"${taskId}\"]`);\n    if (existingTask) {\n      // 完了アニメーション\n      existingTask.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n      existingTask.style.opacity = '0';\n      existingTask.style.transform = 'translateX(20px)';\n      \n      setTimeout(() => {\n        if (existingTask.parentNode) {\n          existingTask.remove();\n        }\n      }, 500);\n    }\n  }\n\n  /**\n   * SSE接続開始（リアルタイム進捗受信）\n   */\n  connectToProgress(serverTaskId, uiTaskId = null) {\n    if (this.activeConnections.has(serverTaskId)) {\n      return;\n    }\n\n    const eventSource = new EventSource(`/api/progress/${serverTaskId}`);\n    this.activeConnections.set(serverTaskId, eventSource);\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        data.uiTaskId = uiTaskId; // UI用タスクIDを追加\n        this.handleProgressUpdate(data);\n      } catch (error) {\n        console.error('SSE data parse error:', error);\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error);\n      this.disconnectProgress(serverTaskId);\n    };\n  }\n\n  /**\n   * 進捗更新処理\n   */\n  handleProgressUpdate(data) {\n    switch (data.type) {\n      case 'connected':\n        this.logDebug(`🔗 Connected to progress stream: ${data.taskId}`);\n        break;\n\n      case 'progress':\n        if (data.percent !== undefined && data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'progress', { percent: data.percent });\n        }\n        break;\n\n      case 'completed':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'completed');\n        }\n        this.disconnectProgress(data.taskId);\n        break;\n\n      case 'error':\n        if (data.uiTaskId) {\n          this.updateTaskCard(data.uiTaskId, 'error', { errorMessage: data.message });\n        }\n        this.addOutput(`❌ ${data.message}`, 'error');\n        this.disconnectProgress(data.taskId);\n        break;\n    }\n  }\n\n  /**\n   * SSE接続終了\n   */\n  disconnectProgress(taskId) {\n    const connection = this.activeConnections.get(taskId);\n    if (connection) {\n      connection.close();\n      this.activeConnections.delete(taskId);\n    }\n  }\n\n  /**\n   * 出力エリアを最下部にスクロール\n   */\n  scrollToBottom() {\n    if (this.outputDiv) {\n      this.outputDiv.scrollTop = this.outputDiv.scrollHeight;\n    }\n  }\n\n  /**\n   * モード別コマンドプレフィックス\n   */\n  getModePrefix(mode) {\n    // サーバー側でモードを区別するためのプレフィックス\n    const prefixes = {\n      generate: '', // デフォルトは生成モード\n      modify: '[変更] ',\n      delete: '[削除] '\n    };\n    return prefixes[mode] || '';\n  }\n\n  /**\n   * コマンド保存 (Undo/Redoシステム)\n   */\n  saveCommandToHistory(commandData) {\n    // 現在のインデックス以降の履歴を削除（新しいコマンドが実行されたため）\n    this.commandHistory = this.commandHistory.slice(0, this.currentHistoryIndex + 1);\n    \n    // 新しいコマンドを履歴に追加\n    this.commandHistory.push(commandData);\n    this.currentHistoryIndex = this.commandHistory.length - 1;\n    \n    // 最大コマンド保存数を超えた場合、古いコマンドを削除\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentHistoryIndex--;\n    }\n    \n    // ボタン状態を更新\n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undo実行\n   */\n  undo() {\n    if (!this.canUndo()) {\n      this.addOutput('↶ Undoできる操作がありません', 'hint');\n      return;\n    }\n    \n    const command = this.commandHistory[this.currentHistoryIndex];\n    this.currentHistoryIndex--;\n    \n    // Undoの逆操作を実行（簡易実装）\n    if (command.mode === 'generate') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の生成を取り消しました`, 'system');\n      // 実際のシーン管理では最後に作成されたオブジェクトを削除\n      if (this.sceneManager && this.sceneManager.undoLastGenerate) {\n        this.sceneManager.undoLastGenerate();\n      }\n    } else if (command.mode === 'modify') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の変更を取り消しました`, 'system');\n      // 実際のシーン管理では前の状態に戻す\n      if (this.sceneManager && this.sceneManager.undoLastModify) {\n        this.sceneManager.undoLastModify();\n      }\n    } else if (command.mode === 'delete') {\n      this.addOutput(`↶ Undo: \"${command.command}\" の削除を取り消しました`, 'system');\n      // 実際のシーン管理では削除されたオブジェクトを復元\n      if (this.sceneManager && this.sceneManager.undoLastDelete) {\n        this.sceneManager.undoLastDelete();\n      }\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Redo実行\n   */\n  redo() {\n    if (!this.canRedo()) {\n      this.addOutput('↷ Redoできる操作がありません', 'hint');\n      return;\n    }\n    \n    this.currentHistoryIndex++;\n    const command = this.commandHistory[this.currentHistoryIndex];\n    \n    // Redoでコマンドを再実行\n    this.addOutput(`↷ Redo: \"${command.command}\" を再実行しました`, 'system');\n    \n    // 実際のシーン管理でのRedo処理\n    if (this.sceneManager && this.sceneManager.redoCommand) {\n      this.sceneManager.redoCommand(command);\n    }\n    \n    this.updateUndoRedoButtons();\n  }\n\n  /**\n   * Undoが可能かチェック\n   */\n  canUndo() {\n    return this.currentHistoryIndex >= 0;\n  }\n\n  /**\n   * Redoが可能かチェック\n   */\n  canRedo() {\n    return this.currentHistoryIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Undo/Redoボタンの状態更新\n   */\n  updateUndoRedoButtons() {\n    if (this.undoBtn) {\n      this.undoBtn.disabled = !this.canUndo();\n      this.undoBtn.style.opacity = this.canUndo() ? '1' : '0.4';\n      this.undoBtn.style.cursor = this.canUndo() ? 'pointer' : 'not-allowed';\n    }\n    \n    if (this.redoBtn) {\n      this.redoBtn.disabled = !this.canRedo();\n      this.redoBtn.style.opacity = this.canRedo() ? '1' : '0.4';\n      this.redoBtn.style.cursor = this.canRedo() ? 'pointer' : 'not-allowed';\n    }\n  }\n\n  /**\n   * 確認付き全オブジェクト削除\n   */\n  async clearAllWithConfirmation() {\n    const confirmed = await this.showClearAllConfirmation();\n    if (confirmed) {\n      this.clearAll();\n    }\n  }\n\n  /**\n   * Clear All確認ダイアログ\n   */\n  async showClearAllConfirmation() {\n    return this.showConfirmationDialog({\n      icon: '🧹',\n      title: 'Clear All の確認',\n      message: 'すべてのオブジェクトが削除されます。<br>この操作は取り消すことができません。',\n      confirmText: 'Clear All 実行',\n      cancelText: 'キャンセル',\n      confirmColor: this.isWabiSabiMode ? '#8BC34A' : '#6366f1'\n    });\n  }\n\n  /**\n   * モーダルクローズアニメーション\n   */\n  closeModalWithAnimation(modal) {\n    const dialog = modal.querySelector('div:last-child');\n    dialog.style.transform = 'scale(0.9)';\n    dialog.style.opacity = '0';\n    modal.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (modal.parentElement) {\n        document.body.removeChild(modal);\n      }\n    }, 200);\n  }\n\n  /**\n   * 全オブジェクト削除\n   */\n  clearAll() {\n    if (this.sceneManager) {\n      this.sceneManager.clearAll();\n      this.addOutput('🧹 全ての実験オブジェクトを削除しました', 'system');\n    } else if (this.client) {\n      // サーバー側での削除は未実装\n      this.addOutput('⚠️ サーバー側削除は未実装', 'error');\n    }\n  }\n\n  // showHistory() メソッド完全削除済み\n\n  /**\n   * 利用可能なコマンド例を表示\n   */\n  showExamples() {\n    const examples = [\n      '右上にドラゴンを作って',\n      '中央に大きなユニコーンを生成',\n      '左下に小さな桜を作って',\n      '空に鳳凰を作って',\n      '地面に神社を作って'\n    ];\n\n    this.addOutput('💡 コマンド例:', 'system');\n    examples.forEach(example => {\n      this.addOutput(`   \"${example}\"`, 'hint');\n    });\n  }\n\n  /**\n   * SceneManager設定\n   */\n  setSceneManager(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.applyServiceSelectionToSceneManager();\n  }\n\n  /**\n   * Client設定\n   */\n  setClient(client) {\n    this.client = client;\n  }\n\n  /**\n   * 設定更新\n   */\n  updateConfig(newConfig) {\n    this.config = { ...this.config, ...newConfig };\n    // 必要に応じてUIを更新\n    if (newConfig.activationKey) {\n      // 新しいキーバインドを反映するため、イベントリスナーを再設定\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * クリーンアップ\n   */\n  /**\n   * スタイル再適用\n   */\n  refreshStyles() {\n    // Generateモードボタンのスタイルを再適用\n    const generateBtn = this.container?.querySelector('[data-mode=\"generate\"]');\n    if (generateBtn) {\n      generateBtn.style.cssText = this.getModeButtonStyles(true, 'generate');\n    }\n\n    // Executeボタンのスタイルを再適用\n    const executeBtn = this.container?.querySelector('#execute-btn');\n    if (executeBtn) {\n      executeBtn.style.cssText = this.getModernButtonStyles('primary');\n    }\n\n    // サービスモーダルの背景とスタイルを更新\n    if (this.serviceModal) {\n      this.updateServiceModalStyles();\n    }\n\n    // サービスセレクターテーマ更新\n    this.updateServiceSelectorTheme();\n  }\n\n  updateServiceModalStyles() {\n    if (!this.serviceModal) return;\n\n    // モーダルの背景とボーダーを更新（枯山水の静寂）\n    this.serviceModal.style.background = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(158, 158, 158, 0.4), rgba(189, 189, 189, 0.35))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(15, 23, 42, 0.85), rgba(30, 27, 75, 0.8))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.3))');\n\n    this.serviceModal.style.border = this.isWabiSabiMode\n      ? '1px solid rgba(141, 110, 99, 0.4)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.3)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    this.serviceModal.style.color = this.isWabiSabiMode\n      ? '#424242'\n      : (this.isDarkMode ? '#ffffff' : '#1f2937');\n\n    this.serviceModal.style.boxShadow = this.isWabiSabiMode\n      ? '0 20px 40px rgba(93, 64, 55, 0.35)'\n      : '0 20px 40px rgba(15, 23, 42, 0.35)';\n  }\n\n  /**\n   * テーマ切り替え\n   */\n  toggleTheme() {\n    // 3段階サイクル: light → dark → wabisabi → light\n    switch (this.currentTheme) {\n      case 'light':\n        this.currentTheme = 'dark';\n        break;\n      case 'dark':\n        this.currentTheme = 'wabisabi';\n        break;\n      case 'wabisabi':\n        this.currentTheme = 'light';\n        break;\n      default:\n        this.currentTheme = 'light';\n    }\n\n    // 状態更新\n    this.isDarkMode = this.currentTheme === 'dark';\n    this.isWabiSabiMode = this.currentTheme === 'wabisabi';\n    localStorage.setItem('live-command-theme', this.currentTheme);\n\n    // アイコンボタン更新\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n\n      const config = themeConfig[this.currentTheme];\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n    }\n\n    // 全スタイル再適用\n    this.applyTheme();\n\n    // テーマ切り替え完了（履歴には出力しない）\n  }\n\n  /**\n   * テーマ適用\n   */\n  applyTheme() {\n    // ボディにテーマクラスを設定\n    document.body.className = this.isWabiSabiMode ? 'wabisabi-mode' : (this.isDarkMode ? 'dark-mode' : 'light-mode');\n\n    // メインコンテナ（display状態を保持）\n    const currentDisplay = this.container.style.display;\n    const currentFlexDirection = this.container.style.flexDirection;\n    this.container.style.cssText = this.getContainerStyles();\n    this.container.style.display = currentDisplay || 'flex';\n    this.container.style.flexDirection = currentFlexDirection || 'column';\n\n    // フローティングブランドバッジのテーマ再適用\n    const brandBadge = this.container.querySelector('.floating-brand-badge');\n    if (brandBadge) {\n      brandBadge.style.background = this.isDarkMode \n        ? 'linear-gradient(135deg, rgba(99, 102, 241, 0.8), rgba(139, 92, 246, 0.7))'\n        : 'linear-gradient(135deg, rgba(99, 102, 241, 0.9), rgba(139, 92, 246, 0.8))';\n      brandBadge.style.border = `1px solid ${this.isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.4)'}`;\n    }\n\n    // 入力フィールド\n    const hadHighlight = !!this.highlightOverlay;\n    this.inputDefaultStyles = null;\n    this.clearKeywordHighlighting();\n    this.input.style.cssText = this.getInputStyles();\n    this.captureInputDefaultStyles();\n    if (hadHighlight || (this.input && this.input.value.trim())) {\n      this.applyKeywordHighlighting();\n    }\n\n    // スタイル適用\n    this.output.style.cssText = this.getOutputStyles();\n\n    // ラジオボタンモードセレクターの2025年仕様テーマ再適用\n    if (this.radioModeContainer) {\n      this.radioModeContainer.style.background = this.isWabiSabiMode\n        ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n        : (this.isDarkMode\n          ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.3), rgba(15, 23, 42, 0.4))'\n          : 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))');\n      this.radioModeContainer.style.borderColor = this.isWabiSabiMode\n        ? 'rgba(93, 64, 55, 0.4)'\n        : (this.isDarkMode\n          ? 'rgba(99, 102, 241, 0.15)'\n          : 'rgba(255, 255, 255, 0.25)');\n\n      // 各ラジオボタンのスタイル更新\n      Object.keys(this.radioModeButtons).forEach(key => {\n        const { button } = this.radioModeButtons[key];\n        if (this.currentMode !== key) {\n          button.style.color = this.isWabiSabiMode\n            ? 'rgba(245, 245, 245, 0.8)'\n            : (this.isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(55, 65, 81, 0.8)');\n          button.style.background = 'transparent';\n          button.style.border = '1px solid transparent';\n          button.style.boxShadow = 'none';\n        }\n      });\n\n      // 現在選択されているモードのスタイルも更新\n      this.selectMode(this.currentMode, false);\n    }\n\n    // アクションボタンのテーマ再適用\n    if (this.clearBtn) {\n      this.clearBtn.style.cssText = this.getActionButtonStyles('secondary');\n    }\n    if (this.historyBtn) {\n      this.historyBtn.style.cssText = this.getActionButtonStyles('secondary');\n      this.historyBtn.style.opacity = '0.5';\n    }\n    if (this.themeToggle) {\n      const themeConfig = {\n        light: { icon: '🌙', title: 'ダークモードに切り替え' },\n        dark: { icon: '🍵', title: '侘び寂びモードに切り替え' },\n        wabisabi: { icon: '☀️', title: 'ライトモードに切り替え' }\n      };\n      const config = themeConfig[this.currentTheme] || themeConfig.light;\n      // 太陽は黄色く、お茶は緑系、月は紫系フィルター\n      if (config.icon === '☀️') {\n        this.themeToggle.innerHTML = `<span style=\"filter: saturate(1.2) brightness(1.1);\">${config.icon}</span>`;\n      } else if (config.icon === '🍵') {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(80deg) saturate(1.1) brightness(1.0);\">${config.icon}</span>`;\n      } else {\n        this.themeToggle.innerHTML = `<span style=\"filter: hue-rotate(240deg) saturate(0.8) brightness(1.1);\">${config.icon}</span>`;\n      }\n      this.themeToggle.title = config.title;\n      this.themeToggle.style.cssText = this.getActionButtonStyles('icon');\n    }\n    if (this.settingsButton) {\n      this.settingsButton.style.cssText = this.getActionButtonStyles('icon');\n    }\n\n    this.updateServiceSelectorTheme();\n\n    // 閉じるボタンのテーマ更新\n    const closeButton = this.container.querySelector('.close-button');\n    if (closeButton) {\n      closeButton.style.color = this.isDarkMode ? '#ffffff' : '#1f2937';\n      closeButton.style.background = this.isDarkMode \n        ? 'rgba(255, 255, 255, 0.1)' \n        : 'rgba(0, 0, 0, 0.1)';\n    }\n\n    // フローティングコンテナとタスクカードのテーマ更新\n    this.updateFloatingContainerTheme();\n\n    // 既存の出力テキストの色を更新\n    this.updateExistingTextColors();\n  }\n\n  /**\n   * フローティングコンテナとタスクカードのテーマ更新\n   */\n  updateFloatingContainerTheme() {\n    if (!this.floatingContainer) return;\n\n    // フローティングコンテナの表示状態を保持\n    const currentDisplay = this.floatingContainer.style.display;\n\n    // 既存のタスクカードの色だけをテーマに合わせて更新（レイアウトは保持）\n    if (this.taskCards && this.taskCards.size > 0) {\n      this.taskCards.forEach((taskData, taskId) => {\n        const card = taskData.element;\n        if (card) {\n          // テーマ関連の色のみ更新（位置やアニメーション状態は保持）\n          // 2025年Glassmorphism仕様適用\n          const glassmorphismDark = {\n            background: 'linear-gradient(135deg, rgba(15, 23, 42, 0.75), rgba(30, 27, 75, 0.7))',\n            border: '1px solid rgba(99, 102, 241, 0.25)',\n            color: '#ffffff'\n          };\n\n          const glassmorphismLight = {\n            background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.35), rgba(255, 255, 255, 0.25))',\n            border: '1px solid rgba(255, 255, 255, 0.4)',\n            color: '#1f2937'\n          };\n\n          const theme = this.isDarkMode ? glassmorphismDark : glassmorphismLight;\n\n\n          card.style.setProperty('background', theme.background, 'important');\n          card.style.setProperty('border', theme.border, 'important');\n          card.style.setProperty('color', theme.color, 'important');\n        }\n      });\n    }\n\n    // テーマ切り替え時は位置は変更せず、表示状態のみ復元\n    this.floatingContainer.style.display = currentDisplay;\n  }\n\n  /**\n   * 既存のテキスト色を現在のテーマに合わせて更新\n   */\n  updateExistingTextColors() {\n    const colors = this.isDarkMode ? {\n      system: '#60a5fa',\n      command: '#93c5fd',\n      success: '#f472b6',\n      error: '#f87171',\n      processing: '#fbbf24',\n      info: '#d1d5db',\n      hint: '#d1d5db'\n    } : {\n      system: '#1e40af',\n      command: '#1d4ed8',\n      success: '#be185d',\n      error: '#dc2626',\n      processing: '#d97706',\n      info: '#7c3aed',\n      hint: '#374151'\n    };\n\n    const defaultTextColor = this.isDarkMode ? '#d1d5db' : '#374151';\n\n    // output内の全てのdivの色を更新\n    this.output.querySelectorAll('div').forEach(line => {\n      const text = line.textContent;\n      let type = 'default';\n      \n      // テキストの内容からタイプを判定\n      if (text.includes('📋') || text.includes('🎨') || text.includes('🎮') || text.includes('UI起動')) {\n        type = 'system';\n      } else if (text.startsWith('> ')) {\n        type = 'command';\n      } else if (text.includes('✅') || text.includes('⭐') || text.includes('生成しました')) {\n        type = 'success';\n      } else if (text.includes('❌') || text.includes('エラー')) {\n        type = 'error';\n      } else if (text.includes('中...')) {\n        type = 'processing';\n      } else if (text.includes('📍') || text.includes('使用モデル:') || text.includes('位置:')) {\n        type = 'info';\n      } else if (text.includes('   ')) {\n        type = 'hint';\n      }\n\n      line.style.color = colors[type] || defaultTextColor;\n    });\n  }\n\n  /**\n   * Importインターフェース表示\n   */\n  showImportInterface() {\n    // 隠しファイル入力を作成（Importボタンから直接選択できるので、ボタンは不要）\n    if (!this.fileInput) {\n      this.fileInput = document.createElement('input');\n      this.fileInput.type = 'file';\n      this.fileInput.accept = '.glb,.gltf,.jpg,.jpeg,.png,.mp4,.mov';\n      this.fileInput.style.display = 'none';\n      this.fileInput.onchange = (e) => this.handleFileSelection(e);\n      document.body.appendChild(this.fileInput);\n    }\n\n    // ドラッグ&ドロップ機能を有効化\n    this.enableDragAndDrop();\n  }\n\n  /**\n   * Importインターフェース非表示\n   */\n  hideImportInterface() {\n    if (this.fileSelectButton && this.fileSelectButton.parentNode) {\n      this.fileSelectButton.parentNode.removeChild(this.fileSelectButton);\n    }\n    this.disableDragAndDrop();\n  }\n\n  /**\n   * ファイル選択ダイアログを開く\n   */\n  openFileSelector() {\n    if (this.fileInput) {\n      this.fileInput.click();\n    }\n  }\n\n  /**\n   * Importボタンから直接ファイル選択を実行\n   */\n  triggerFileSelection() {\n    // ファイル入力要素が存在しない場合は作成\n    if (!this.fileInput) {\n      this.showImportInterface(); // 既存のファイル入力作成処理を呼び出し\n    }\n\n    // 直接ファイル選択ダイアログを開く\n    this.openFileSelector();\n\n    // Import モードに切り替え（UI反映）\n    this.selectMode('import', true);\n  }\n\n  /**\n   * ファイル選択処理\n   */\n  async handleFileSelection(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      // 前回のObjectURLをクリーンアップ（メモリリーク防止）\n      if (this.selectedFile && this.selectedFile.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n\n      // ファイルタイプを判定\n      const fileType = this.detectFileType(file.name);\n\n      // ファイルをローカルURLとして処理\n      const fileUrl = URL.createObjectURL(file);\n\n      // ファイル情報を保存\n      this.selectedFile = {\n        file: file,\n        url: fileUrl,\n        type: fileType,\n        name: file.name\n      };\n\n      this.selectMode('import', true);\n\n      // 自動的にデフォルトプロンプトで実行\n      const defaultPrompt = `中央に設置 (${file.name})`;\n      this.input.value = defaultPrompt;\n\n      this.addOutput(`📁 ファイル選択: ${file.name} (${fileType})`, 'system');\n      this.addOutput(`🚀 自動アップロード開始: ${defaultPrompt}`, 'system');\n\n      // 自動実行（少し遅延を入れてUX向上）\n      setTimeout(() => {\n        this.executeCommand();\n      }, 500);\n\n    } catch (error) {\n      console.error('File selection error:', error);\n      this.addOutput(`❌ ファイル選択エラー: ${error.message}`, 'error');\n    } finally {\n      // IMPORTANT: ファイル入力をリセットして同じファイルの再選択を可能にする\n      if (event.target) {\n        event.target.value = '';\n      }\n    }\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を有効化\n   */\n  enableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.addEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.addEventListener('drop', this.handleDrop.bind(this));\n    this.input.addEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.addEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグ&ドロップ機能を無効化\n   */\n  disableDragAndDrop() {\n    if (!this.input) return;\n\n    this.input.removeEventListener('dragover', this.handleDragOver.bind(this));\n    this.input.removeEventListener('drop', this.handleDrop.bind(this));\n    this.input.removeEventListener('dragenter', this.handleDragEnter.bind(this));\n    this.input.removeEventListener('dragleave', this.handleDragLeave.bind(this));\n  }\n\n  /**\n   * ドラッグオーバー処理\n   */\n  handleDragOver(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグエンター処理\n   */\n  handleDragEnter(e) {\n    e.preventDefault();\n    this.input.style.background = this.isDarkMode ? 'rgba(236, 72, 153, 0.1)' : 'rgba(236, 72, 153, 0.05)';\n  }\n\n  /**\n   * ドラッグリーブ処理\n   */\n  handleDragLeave(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n  }\n\n  /**\n   * ドロップ処理\n   */\n  async handleDrop(e) {\n    e.preventDefault();\n    this.input.style.background = '';\n\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length === 0) return;\n\n    const file = files[0]; // 最初のファイルのみ処理\n\n    // ファイルタイプをチェック\n    const fileType = this.detectFileType(file.name);\n    if (!fileType) {\n      this.addOutput('❌ サポートされていないファイル形式です', 'error');\n      return;\n    }\n\n    // ファイル選択処理と同じ流れ\n    this.handleFileSelection({ target: { files: [file] } });\n  }\n\n  /**\n   * ファイルタイプ判定\n   */\n  detectFileType(fileName) {\n    const ext = fileName.toLowerCase().split('.').pop();\n\n    if (['glb', 'gltf'].includes(ext)) return '3d';\n    if (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) return 'image';\n    if (['mp4', 'mov', 'webm'].includes(ext)) return 'video';\n\n    return null;\n  }\n\n  /**\n   * Importコマンド処理\n   */\n  async handleImportCommand(command) {\n    if (!this.selectedFile) {\n      throw new Error('ファイルが選択されていません');\n    }\n\n    try {\n      // プロンプトから位置情報を解析\n      const position = this.sceneManager ? this.sceneManager.parsePosition(command) : { x: 0, y: 5, z: -10 };\n\n      let result;\n\n      switch (this.selectedFile.type) {\n        case '3d':\n          // 3Dモデルを読み込み\n          if (this.sceneManager) {\n            result = await this.sceneManager.load3DModel(this.selectedFile.url, {\n              position: position,\n              // scale: 自動調整に任せる\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'image':\n          // 画像をテクスチャプレーンとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadImageFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        case 'video':\n          // 動画をビデオテクスチャとして配置\n          if (this.sceneManager) {\n            result = await this.sceneManager.loadVideoFile(this.selectedFile.url, {\n              position: position,\n              fileName: this.selectedFile.name\n            });\n          } else {\n            throw new Error('SceneManager が利用できません');\n          }\n          break;\n\n        default:\n          throw new Error(`サポートされていないファイルタイプ: ${this.selectedFile.type}`);\n      }\n\n      // ファイル情報をクリーンアップ\n      const processedFileName = this.selectedFile?.name;\n      const importedType = this.selectedFile?.type;\n      const importedUrl = this.selectedFile?.url;\n\n      if (importedType !== 'video' && importedUrl) {\n        URL.revokeObjectURL(importedUrl);\n      }\n\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n\n      return {\n        success: true,\n        message: `${processedFileName || 'ファイル'} を ${position.x}, ${position.y}, ${position.z} に配置しました`,\n        objectId: result.objectId\n      };\n\n    } catch (error) {\n      // エラー時もファイル情報をクリーンアップ\n      if (this.selectedFile?.url) {\n        URL.revokeObjectURL(this.selectedFile.url);\n      }\n      this.selectedFile = null;\n      this.selectMode('generate', false);\n      throw error;\n    }\n  }\n\n  /**\n   * 削除モードが選択された時の処理\n   */\n  handleDeleteModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：削除コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を削除 ⏎`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 削除対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 削除するオブジェクトを選択後、削除ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('delete');\n      \n      // DELETEモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 修正モードが選択された時の処理\n   */\n  handleModifyModeSelection() {\n    // SceneManagerから選択されたオブジェクトを取得\n    const selectedObject = this.sceneManager?.selectedObject;\n    \n    if (selectedObject) {\n      // 選択されたオブジェクトがある場合：修正コマンドをチャット欄に入力\n      const objectName = selectedObject.userData?.originalPrompt || selectedObject.name || '選択したオブジェクト';\n      this.input.value = `${objectName}を`;\n      this.input.focus();\n      \n      // カーソルを文末に移動（選択状態を解除）\n      this.input.setSelectionRange(this.input.value.length, this.input.value.length);\n      \n      this.addOutput(`🎯 修正対象: ${objectName}`, 'system');\n    } else {\n      // 選択されたオブジェクトがない場合：2025年トレンドアニメーションで注意喚起\n      this.input.value = '';\n      this.addOutput('❗ 修正するオブジェクトを選択後、修正ボタンを押してください', 'system');\n      \n      // 2025年トレンド：Context-Aware Attention Animation\n      this.triggerAttentionAnimation('modify');\n      \n      // Modifyモードを維持（generateモードに戻さない）\n    }\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Attention Animation\n   * オブジェクト未選択時の注意喚起アニメーション\n   */\n  triggerAttentionAnimation(mode) {\n    const chatOutput = this.chatOutput;\n    const inputField = this.input;\n    \n    // 2025年トレンド1: Micro-Shake Effect（微細な震え）\n    this.addMicroShakeEffect(chatOutput);\n    \n    // 2025年トレンド2: Context-Aware Glow（状況認識グロー）\n    this.addContextGlow(inputField, mode);\n    \n    // 2025年トレンド3: Emotional Pulse（感情的パルス）\n    this.addEmotionalPulse(chatOutput, mode);\n    \n    // 2025年トレンド4: 3D Depth Shadow（立体的影効果）\n    this.add3DDepthEffect(chatOutput);\n  }\n\n  /**\n   * 2025年トレンド：Micro-Shake Effect\n   */\n  addMicroShakeEffect(element) {\n    element.style.animation = 'microShake2025 0.5s ease-in-out';\n    \n    // CSSアニメーションを動的追加\n    this.ensureMicroShakeAnimation();\n    \n    // アニメーション後クリーンアップ\n    setTimeout(() => {\n      element.style.animation = '';\n    }, 500);\n  }\n\n  /**\n   * 2025年トレンド：Context-Aware Glow\n   */\n  addContextGlow(element, mode) {\n    const glowColor = mode === 'delete' ? 'rgba(239, 68, 68, 0.4)' : 'rgba(99, 102, 241, 0.4)';\n    \n    element.style.transition = 'all 0.3s ease';\n    element.style.boxShadow = `0 0 20px ${glowColor}, 0 0 40px ${glowColor}`;\n    \n    // 3秒後にフェードアウト\n    setTimeout(() => {\n      element.style.boxShadow = '';\n    }, 3000);\n  }\n\n  /**\n   * 2025年トレンド：Emotional Pulse\n   */\n  addEmotionalPulse(element, mode) {\n    const pulseColor = mode === 'delete' ? '#ef4444' : (this.isWabiSabiMode ? '#8BC34A' : '#6366f1');\n    \n    element.style.borderLeft = `4px solid ${pulseColor}`;\n    element.style.animation = 'emotionalPulse2025 2s ease-in-out infinite';\n    \n    // CSSアニメーションを動的追加\n    this.ensureEmotionalPulseAnimation();\n    \n    // 6秒後にアニメーション停止\n    setTimeout(() => {\n      element.style.animation = '';\n      element.style.borderLeft = '';\n    }, 6000);\n  }\n\n  /**\n   * 2025年トレンド：3D Depth Effect\n   */\n  add3DDepthEffect(element) {\n    element.style.transform = 'translateZ(8px) rotateX(1deg)';\n    element.style.transition = 'transform 0.3s ease';\n    \n    // 2秒後に元に戻す\n    setTimeout(() => {\n      element.style.transform = '';\n    }, 2000);\n  }\n\n  /**\n   * Micro-Shake CSSアニメーション確保\n   */\n  ensureMicroShakeAnimation() {\n    if (document.getElementById('micro-shake-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'micro-shake-2025';\n    style.textContent = `\n      @keyframes microShake2025 {\n        0%, 100% { transform: translateX(0); }\n        10% { transform: translateX(-2px) rotateZ(-0.5deg); }\n        20% { transform: translateX(2px) rotateZ(0.5deg); }\n        30% { transform: translateX(-1px) rotateZ(-0.3deg); }\n        40% { transform: translateX(1px) rotateZ(0.3deg); }\n        50% { transform: translateX(-0.5px) rotateZ(-0.1deg); }\n        60% { transform: translateX(0.5px) rotateZ(0.1deg); }\n        70% { transform: translateX(0); }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Emotional Pulse CSSアニメーション確保\n   */\n  ensureEmotionalPulseAnimation() {\n    if (document.getElementById('emotional-pulse-2025')) return;\n    \n    const style = document.createElement('style');\n    style.id = 'emotional-pulse-2025';\n    style.textContent = `\n      @keyframes emotionalPulse2025 {\n        0% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n        50% { \n          border-left-width: 8px;\n          filter: brightness(1.2) saturate(1.1);\n        }\n        100% { \n          border-left-width: 4px;\n          filter: brightness(1);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n\n  /**\n   * モード切り替え時の入力欄メッセージ上書き機能\n   * ユーザビリティ向上：他モードのメッセージを新モードの初期状態にクリア\n   */\n  clearInputOnModeSwitch(newMode) {\n    // 現在の入力欄に内容がある場合のみ処理\n    if (this.input.value.trim()) {\n      // 以前のモードのメッセージかどうかを判定\n      const isPreviousModeMessage = this.isPreviousModeMessage(this.input.value, newMode);\n      \n      if (isPreviousModeMessage) {\n        // 以前のモードのメッセージの場合、新モードの初期メッセージに置き換え\n        this.input.value = '';\n        this.addOutput(`💫 ${this.getModeDisplayName(newMode)}モードに切り替えました`, 'system');\n      }\n    }\n  }\n\n  /**\n   * 入力内容が以前のモードのメッセージかどうかを判定\n   */\n  isPreviousModeMessage(inputValue, currentMode) {\n    // Delete/Modifyモードの特徴的なメッセージパターンを検出\n    const deletePatterns = [\n      /.*を削除$/,\n      /削除$/\n    ];\n    \n    const modifyPatterns = [\n      /.*を$/,\n      /.*を変更/,\n      /.*をピンク/,\n      /.*を大きく/,\n      /.*を小さく/,\n      /.*を移動/,\n      /回転/,\n      /反転/,\n      /ミラー/,\n      /傾け/,\n      /向きを変え/,\n      /.*を.*色/,\n      /.*を.*サイズ/\n    ];\n    \n    const importPatterns = [\n      /ファイル/,\n      /画像/,\n      /インポート/\n    ];\n\n    // 現在のモードと異なるパターンにマッチする場合は上書き対象\n    switch (currentMode) {\n      case 'delete':\n        return modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'modify':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'import':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue));\n               \n      case 'generate':\n        return deletePatterns.some(pattern => pattern.test(inputValue)) ||\n               modifyPatterns.some(pattern => pattern.test(inputValue)) ||\n               importPatterns.some(pattern => pattern.test(inputValue));\n               \n      default:\n        return false;\n    }\n  }\n\n  /**\n   * モード表示名を取得\n   */\n  getModeDisplayName(mode) {\n    const modeNames = {\n      'generate': '生成',\n      'import': 'インポート',\n      'modify': '修正',\n      'delete': '削除'\n    };\n    return modeNames[mode] || mode;\n  }\n\n  /**\n   * 常時表示フローティングチョコアイコンを作成\n   */\n  createFloatingChocolateIcon() {\n    // 既存のアイコンがあれば削除\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.remove();\n    }\n\n    this.floatingChocolateIcon = document.createElement('div');\n    this.floatingChocolateIcon.innerHTML = '🍫';\n    this.floatingChocolateIcon.title = 'ChocoDrop を開く (@キーでも開けます)';\n    this.floatingChocolateIcon.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      width: 48px;\n      height: 48px;\n      border-radius: 50%;\n      background: rgba(99, 102, 241, 0.15);\n      backdrop-filter: blur(16px);\n      -webkit-backdrop-filter: blur(16px);\n      border: 1px solid rgba(255, 255, 255, 0.2);\n      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05);\n      opacity: 0.8;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 20px;\n      cursor: pointer;\n      z-index: 999;\n      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      transform: scale(1);\n      filter: none;\n    `;\n\n    // ホバー効果\n    this.floatingChocolateIcon.addEventListener('mouseover', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1.1) translateY(-2px)';\n      this.floatingChocolateIcon.style.boxShadow = '0 6px 16px rgba(99, 102, 241, 0.3), 0 3px 8px rgba(0, 0, 0, 0.1)';\n      this.floatingChocolateIcon.style.opacity = '1';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    this.floatingChocolateIcon.addEventListener('mouseout', () => {\n      this.floatingChocolateIcon.style.transform = 'scale(1) translateY(0)';\n      this.floatingChocolateIcon.style.boxShadow = '0 4px 12px rgba(99, 102, 241, 0.2), 0 2px 6px rgba(0, 0, 0, 0.05)';\n      this.floatingChocolateIcon.style.opacity = '0.8';\n      this.floatingChocolateIcon.style.filter = 'none';\n    });\n\n    // クリックで ChocoDrop を開く\n    this.floatingChocolateIcon.addEventListener('click', () => {\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // 右クリックメニュー\n    this.floatingChocolateIcon.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.showFloatingIconContextMenu(e);\n    });\n\n    // DOM に追加\n    document.body.appendChild(this.floatingChocolateIcon);\n  }\n\n  /**\n   * フローティングアイコンの右クリックメニューを表示\n   */\n  showFloatingIconContextMenu(event) {\n    // 既存のメニューがあれば削除\n    const existingMenu = document.querySelector('.floating-icon-context-menu');\n    if (existingMenu) {\n      existingMenu.remove();\n    }\n\n    // コンテキストメニュー作成\n    const menu = document.createElement('div');\n    menu.className = 'floating-icon-context-menu';\n    menu.style.cssText = `\n      position: fixed;\n      top: ${event.clientY}px;\n      left: ${event.clientX}px;\n      background: ${this.isWabiSabiMode\n        ? 'rgba(239, 235, 233, 0.9)'\n        : (this.isDarkMode ? 'rgba(17, 24, 39, 0.85)' : 'rgba(255, 255, 255, 0.85)')};\n      backdrop-filter: blur(20px);\n      -webkit-backdrop-filter: blur(20px);\n      border: 1px solid ${this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.4)'\n        : (this.isDarkMode ? 'rgba(129, 140, 248, 0.3)' : 'rgba(99, 102, 241, 0.2)')};\n      border-radius: 12px;\n      box-shadow: ${this.isWabiSabiMode\n        ? '0 8px 24px rgba(93, 64, 55, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'\n        : '0 8px 24px rgba(99, 102, 241, 0.2), 0 4px 12px rgba(0, 0, 0, 0.1)'};\n      padding: 8px 0;\n      min-width: 160px;\n      z-index: 2000;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      color: ${this.isWabiSabiMode\n        ? '#5D4037'\n        : (this.isDarkMode ? '#ffffff' : '#1f2937')};\n    `;\n\n    // メニューアイテム1: フォームを開く\n    const openFormItem = document.createElement('div');\n    openFormItem.innerHTML = '📄 フォームを開く';\n    openFormItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    openFormItem.addEventListener('mouseover', () => {\n      openFormItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    openFormItem.addEventListener('mouseout', () => {\n      openFormItem.style.background = 'transparent';\n      openFormItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    openFormItem.addEventListener('click', () => {\n      menu.remove();\n      if (this.isVisible) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // メニューアイテム2: アイコンを非表示\n    const hideIconItem = document.createElement('div');\n    hideIconItem.innerHTML = '✕ アイコンを非表示';\n    hideIconItem.style.cssText = `\n      padding: 8px 16px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: ${this.isWabiSabiMode ? '#8D6E63' : '#6366f1'};\n      text-shadow: ${this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)'};\n    `;\n\n    hideIconItem.addEventListener('mouseover', () => {\n      hideIconItem.style.background = this.isWabiSabiMode\n        ? 'rgba(161, 136, 127, 0.15)'\n        : (this.isDarkMode ? 'rgba(99, 102, 241, 0.15)' : 'rgba(99, 102, 241, 0.1)');\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 6px rgba(141, 110, 99, 0.5)'\n        : '0 2px 6px rgba(99, 102, 241, 0.5)';\n    });\n\n    hideIconItem.addEventListener('mouseout', () => {\n      hideIconItem.style.background = 'transparent';\n      hideIconItem.style.textShadow = this.isWabiSabiMode\n        ? '0 2px 4px rgba(141, 110, 99, 0.3)'\n        : '0 2px 4px rgba(99, 102, 241, 0.3)';\n    });\n\n    hideIconItem.addEventListener('click', () => {\n      menu.remove();\n      this.hideFloatingIcon();\n    });\n\n    // メニューに追加\n    menu.appendChild(openFormItem);\n    menu.appendChild(hideIconItem);\n\n    // DOM に追加\n    document.body.appendChild(menu);\n\n    // 画面外に出ないように調整\n    const rect = menu.getBoundingClientRect();\n    if (rect.right > window.innerWidth) {\n      menu.style.left = `${event.clientX - rect.width}px`;\n    }\n    if (rect.bottom > window.innerHeight) {\n      menu.style.top = `${event.clientY - rect.height}px`;\n    }\n\n    // 外部クリックで閉じる\n    const closeMenu = (e) => {\n      if (!menu.contains(e.target)) {\n        menu.remove();\n        document.removeEventListener('click', closeMenu);\n      }\n    };\n\n    setTimeout(() => {\n      document.addEventListener('click', closeMenu);\n    }, 10);\n  }\n\n  /**\n   * フローティングアイコンを非表示にする\n   */\n  hideFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * フローティングアイコンを表示する\n   */\n  showFloatingIcon() {\n    if (this.floatingChocolateIcon) {\n      this.floatingChocolateIcon.style.display = 'flex';\n    }\n  }\n\n  dispose() {\n    // キーワードハイライトのクリーンアップ\n    this.clearKeywordHighlighting();\n\n    // ファイル選択関連のクリーンアップ\n    if (this.fileInput && this.fileInput.parentNode) {\n      this.fileInput.parentNode.removeChild(this.fileInput);\n    }\n    if (this.selectedFile && this.selectedFile.url) {\n      URL.revokeObjectURL(this.selectedFile.url);\n    }\n\n    // フローティングチョコアイコンのクリーンアップ\n    if (this.floatingChocolateIcon && this.floatingChocolateIcon.parentNode) {\n      this.floatingChocolateIcon.parentNode.removeChild(this.floatingChocolateIcon);\n    }\n\n    if (this.container && this.container.parentElement) {\n      this.container.parentElement.removeChild(this.container);\n    }\n  }\n\n  showOverlayTextarea() {\n    if (this.overlayTextarea) return;\n\n    this.isExpanded = true;\n    \n    // オーバーレイテキストエリアを作成\n    this.overlayTextarea = document.createElement('textarea');\n    this.overlayTextarea.value = this.input.value;\n    this.overlayTextarea.placeholder = this.input.placeholder;\n    \n    // フォームの位置とサイズを取得\n    const containerRect = this.container.getBoundingClientRect();\n    \n    // 画面境界を考慮した位置調整\n    const overlayHeight = 300;\n    const padding = 20;\n    \n    let top = containerRect.top + 60;\n    let left = containerRect.left;\n    let width = containerRect.width;\n    \n    // 右端がはみ出る場合\n    if (left + width > window.innerWidth - padding) {\n      left = window.innerWidth - width - padding;\n    }\n    \n    // 左端がはみ出る場合\n    if (left < padding) {\n      left = padding;\n      width = Math.min(width, window.innerWidth - 2 * padding);\n    }\n    \n    // 下端がはみ出る場合\n    if (top + overlayHeight > window.innerHeight - padding) {\n      top = Math.max(padding, window.innerHeight - overlayHeight - padding);\n    }\n\n    const overlayBackground = this.isWabiSabiMode\n      ? 'linear-gradient(135deg, rgba(97, 97, 97, 0.7), rgba(66, 66, 66, 0.6))'\n      : (this.isDarkMode\n        ? 'linear-gradient(135deg, rgba(30, 27, 75, 0.4), rgba(15, 23, 42, 0.5))'\n        : 'linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2))');\n\n    const overlayBorder = this.isWabiSabiMode\n      ? '1px solid rgba(93, 64, 55, 0.5)'\n      : (this.isDarkMode\n        ? '1px solid rgba(99, 102, 241, 0.25)'\n        : '1px solid rgba(255, 255, 255, 0.5)');\n\n    const overlayInnerShadow = this.isWabiSabiMode\n      ? '0 4px 16px rgba(66, 66, 66, 0.3), inset 0 1px 0 rgba(189, 189, 189, 0.2)'\n      : (this.isDarkMode\n        ? '0 4px 16px rgba(15, 23, 42, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.08)'\n        : '0 4px 16px rgba(0, 0, 0, 0.08), inset 0 1px 0 rgba(255, 255, 255, 0.4)');\n\n    const overlayTextColor = this.getInputTextColor();\n\n    // オーバーレイのスタイル設定\n    this.overlayTextarea.style.cssText = `\n      position: fixed;\n      top: ${top}px;\n      left: ${left}px;\n      width: ${width}px;\n      height: ${overlayHeight}px;\n      box-sizing: border-box;\n      background: ${overlayBackground};\n      backdrop-filter: blur(24px) saturate(180%);\n      border: ${overlayBorder};\n      box-shadow: ${overlayInnerShadow};\n      border-radius: 16px;\n      color: ${overlayTextColor};\n      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.5;\n      padding: 20px;\n      resize: none;\n      outline: none;\n      z-index: 10000;\n      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);\n      opacity: 0;\n      transition: opacity 0.2s ease-out;\n    `;\n    \n    // ドキュメントに追加\n    document.body.appendChild(this.overlayTextarea);\n    \n    // アニメーション開始\n    requestAnimationFrame(() => {\n      this.overlayTextarea.style.opacity = '1';\n    });\n    \n    // フォーカス設定\n    this.overlayTextarea.focus();\n    \n    // 入力同期\n    this.overlayTextarea.addEventListener('input', (e) => {\n      this.input.value = e.target.value;\n    });\n    \n    // Escapeキーで閉じる\n    this.overlayTextarea.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.hideOverlayTextarea();\n      }\n    });\n    \n    // 外側クリックで閉じる\n    this.overlayTextarea.addEventListener('blur', () => {\n      setTimeout(() => this.hideOverlayTextarea(), 100);\n    });\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n  \n  hideOverlayTextarea() {\n    if (!this.overlayTextarea) return;\n    \n    this.isExpanded = false;\n    \n    // フェードアウトアニメーション\n    this.overlayTextarea.style.opacity = '0';\n    \n    setTimeout(() => {\n      if (this.overlayTextarea) {\n        document.body.removeChild(this.overlayTextarea);\n        this.overlayTextarea = null;\n      }\n    }, 200);\n  }\n}\n","import { ChocoDropClient, ChocoDroClient, LiveCommandClient } from './LiveCommandClient.js';\nimport { SceneManager } from './SceneManager.js';\nimport { CommandUI } from './CommandUI.js';\n\n/**\n * ChocoDrop ワンステップ初期化ヘルパー\n * 共有フォルダから複数の Three.js プロジェクトへ使い回すことを想定\n *\n * @param {THREE.Scene} scene - 既存 Three.js シーン\n * @param {Object} options - 初期化オプション\n * @param {THREE.Camera} [options.camera] - 相対配置計算に使用するカメラ\n * @param {THREE.WebGLRenderer} [options.renderer] - マウス操作を有効化する場合に使用\n * @param {string} [options.serverUrl] - ChocoDrop サーバーの明示的 URL\n * @param {ChocoDropClient} [options.client] - 既存のクライアントを注入する場合（旧 LiveCommandClient）\n * @param {Function} [options.onControlsToggle] - UI 開閉時に呼ばれるコールバック\n * @param {Object} [options.sceneOptions] - SceneManager へ渡す追加オプション\n * @param {Object} [options.uiOptions] - CommandUI へ渡す追加オプション\n * @returns {Object} - 初期化済みのコンポーネント群と dispose ヘルパー\n */\nexport function createChocoDrop(scene, options = {}) {\n  if (!scene) {\n    throw new Error('THREE.Scene インスタンスが必要です');\n  }\n\n  const {\n    camera = null,\n    renderer = null,\n    serverUrl = null,\n    client = null,\n    onControlsToggle = () => {},\n    sceneOptions = {},\n    uiOptions = {},\n    // トップレベルオプションを抽出\n    ...otherSceneOptions\n  } = options;\n\n  const resolvedServerUrl = serverUrl || sceneOptions.serverUrl || null;\n  const chocoDropClient = client || new ChocoDropClient(resolvedServerUrl);\n\n  const sceneManager = new SceneManager(scene, {\n    camera,\n    renderer,\n    serverUrl: resolvedServerUrl,\n    client: chocoDropClient,\n    ...sceneOptions,\n    ...otherSceneOptions\n  });\n\n  const commandUI = new CommandUI({\n    sceneManager,\n    client: chocoDropClient,\n    onControlsToggle,\n    ...uiOptions,\n    // GitHub Pages等でサービス設定ダイアログを無効化するオプション\n    skipServiceDialog: options.skipServiceDialog\n  });\n\n  return {\n    client: chocoDropClient,\n    sceneManager,\n    ui: commandUI,\n    dispose() {\n      commandUI.dispose?.();\n      sceneManager.dispose?.();\n    }\n  };\n}\n\n// 旧API名の互換エクスポート\nexport const createChocoDro = createChocoDrop;\nexport const createLiveCommand = createChocoDrop;\n","import { ChocoDropClient, ChocoDroClient, LiveCommandClient } from '../LiveCommandClient.js';\nimport { SceneManager } from '../SceneManager.js';\nimport { CommandUIDemo } from './CommandUIDemo.js';\nimport { createChocoDrop, createChocoDro, createLiveCommand } from '../bootstrap.js';\n\n/**\n * Demo version bootstrap function\n * Creates ChocoDrop instance with CommandUIDemo (restricted functionality)\n */\nfunction createChocoDropDemo(scene, options = {}) {\n  if (!scene) {\n    throw new Error('THREE.Scene インスタンスが必要です');\n  }\n\n  const {\n    camera = null,\n    renderer = null,\n    serverUrl = null,\n    client = null,\n    onControlsToggle = () => {},\n    sceneOptions = {},\n    uiOptions = {},\n    ...otherSceneOptions\n  } = options;\n\n  const resolvedServerUrl = serverUrl || sceneOptions.serverUrl || null;\n  const chocoDropClient = client || new ChocoDropClient(resolvedServerUrl);\n\n  // 旧APIとの互換のため、トップレベルに渡された追加オプションもSceneManagerへ伝搬させる\n  const mergedSceneOptions = {\n    ...sceneOptions,\n    ...otherSceneOptions\n  };\n\n  const sceneManager = new SceneManager(scene, {\n    camera,\n    renderer,\n    serverUrl: resolvedServerUrl,\n    client: chocoDropClient,\n    ...mergedSceneOptions\n  });\n\n  // Use CommandUIDemo instead of CommandUI\n  const commandUI = new CommandUIDemo({\n    sceneManager,\n    client: chocoDropClient,\n    onControlsToggle,\n    ...uiOptions\n  });\n\n  sceneManager.ui = commandUI;\n  commandUI.setSceneManager(sceneManager);\n\n  return {\n    sceneManager,\n    ui: commandUI,\n    client: chocoDropClient,\n    dispose: () => {\n      if (commandUI) commandUI.dispose();\n      if (sceneManager) sceneManager.dispose();\n    }\n  };\n}\n\n// Export everything for demo UMD\nexport {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUIDemo,\n  createChocoDropDemo,\n  createChocoDropDemo as createChocoDrop,  // Alias for compatibility\n  createChocoDro,\n  createLiveCommand\n};\n\n// Default export for convenience\nexport default {\n  ChocoDropClient,\n  ChocoDroClient,\n  LiveCommandClient,\n  SceneManager,\n  CommandUI: CommandUIDemo, // Alias for demo\n  CommandUIDemo,\n  createChocoDrop: createChocoDropDemo, // Use demo version\n  createChocoDro,\n  createLiveCommand\n};\n"],"names":["ChocoDropClient","constructor","serverUrl","this","initialized","initPromise","console","log","initializeWithConfig","baseUrl","window","location","protocol","hostname","port","response","fetch","ok","config","json","detectServerUrl","error","warn","currentPort","ensureInitialized","Error","generateImage","prompt","options","payload","width","height","service","method","headers","body","JSON","stringify","status","result","generateVideo","safeDefaults","resolution","enable_safety_checker","enable_prompt_expansion","duration","aspect_ratio","model","seed","negative_prompt","frames_per_second","guidance_scale","executeCommand","command","modifySelectedObject","selectedObject","modifyCommand","userData","objectId","id","getAvailableServices","LiveCommandClient","ChocoDroClient","TRANSLATION_DICTIONARY","createObjectKeywords","keywords","japanese","english","Object","entries","includes","push","translateKeyword","matchKeywordWithFilename","keyword","filename","lowerFilename","toLowerCase","jp","aliases","alias","englishKeyword","module","exports","THREE","globalThis","THREEModule","SceneManager","scene","camera","renderer","labelRenderer","client","experimentGroup","Group","name","add","commandHistory","spawnedObjects","Map","objectCounter","selectedImageService","selectedVideoService","audioControls","audioControlUpdateInterval","audioControlUpdateListener","clock","Clock","raycaster","Raycaster","mouse","Vector2","lastHoveredObject","showLocationIndicator","indicatorDuration","defaultObjectScale","enableObjectSelection","enableMouseInteraction","enableDebugLogging","setupClickEvents","sceneManager","setupObjectDragging","debugSceneInfo","position","x","toFixed","y","z","rotation","Math","PI","fov","near","far","children","length","getObjectByName","size","forEach","obj","worldPos","Vector3","getWorldPosition","type","visible","scale","box","Box3","setFromObject","getSize","center","getCenter","meshCount","traverse","child","isMesh","distance","distanceTo","selectObject","object","deselectObject","createModernSelectionIndicator","commandUI","objectInfo","addOutput","modelName","currentMode","objectName","originalPrompt","input","value","focus","setSelectionRange","existingIndicator","remove","indicatorGroup","adjustedSize","geometry","parameters","shape","Shape","moveTo","lineTo","points","getPoints","geometryLine","BufferGeometry","setFromPoints","adaptiveColor","getAdaptiveSelectionColor","materialLine","LineBasicMaterial","color","linewidth","transparent","opacity","line","Line","set","edgesGeometry","EdgesGeometry","BoxGeometry","edgesMaterial","edges","LineSegments","copy","addResizeHandles","parentObject","handleSize","handleGeometry","handleMaterial","MeshBasicMaterial","depthTest","depthWrite","handleHoverMaterial","getAdaptiveHoverColor","corner","pos","index","handle","Mesh","clone","isResizeHandle","handleIndex","defaultMaterial","material","hoverMaterial","renderOrder","onHover","setScalar","document","style","cursor","onHoverExit","updateSelectionIndicatorScale","indicator","dispose","Array","isArray","canvas","domElement","isDragging","dragObject","dragOffset","mouseStart","dragMode","originalScale","addEventListener","event","button","rect","getBoundingClientRect","clientX","left","clientY","top","setFromCamera","intersects","intersectObjects","resizeHandleInfo","isRotateHandle","source","showDeleteConfirmation","then","confirmed","removeObject","catch","point","sub","handleHoverEffects","deltaX","deltaY","scaleMultiplier","abs","newScale","max","min","moveScale","preventDefault","scaleFactor","emissive","setHex","setTimeout","activeEl","activeElement","tagName","isContentEditable","rotationStep","rotated","key","newRotationX","newRotationXDown","cameraDirection","getWorldDirection","targetPoint","multiplyScalar","lookAt","angles","timestamp","Date","now","parsed","parseCommand","dispatchCommand","message","startsWith","actualCommand","replace","parseObjectModificationCommand","trim","parseDeleteCommand","cmd","naturalLanguagePattern","parseNaturalLanguageCommand","isAnimationForVideo","some","parsePosition","parseSize","fileType","getObjectKeywords","normalizeTargetPhrase","phrase","referentialPattern","test","trailingPatterns","pattern","englishLeadingPattern","isReferentialCommand","getObjectSourceType","getRecentObjects","objects","from","values","importContext","generatedContext","candidates","filter","sort","a","b","aTime","lastModified","createdAt","findRecentObjectByContext","normalizedTarget","objectKeywords","candidate","matchesObjectName","extractTextTokens","text","split","map","token","buildObjectKeywordHints","fileName","baseType","Set","baseName","Boolean","findObjectByKeyword","normalizedCommand","importOrderMatch","match","orderNumber","parseInt","findImportedObjectByOrder","sourceMatch","sourceType","isImported","findObjectBySourceAndName","recentObject","findObjectByName","importedObjects","importOrder","matchingObjects","foundObject","childSource","sourceLabel","target","targetLower","keywordLower","aliasLower","promptLower","parseImageGenerationCommand","particles","particle","parts","colorMap","colorName","colorValue","effects","parseEffects","parseFloat","movement","parsePositionFromPrompt","degreeMatch","flip","requiresSelection","effectKeywords","intensity","metalness","roughness","animation","speed","amplitude","axis","colors","presetEffects","presetName","presetEffectList","chromaRequested","requiresChromaKey","chromaConfig","detectChromaKeyConfig","canApplyChroma","effect","threshold","smoothing","toString","showInputFeedback","term","detectChromaKeyColor","hexMatch","colorKeywords","tokens","entry","applyEffects","targetObject","applied","applyOpacityEffect","applyGlowEffect","applyMaterialEffect","applyAnimationEffect","applyCosmicEffect","applyWatercolorEffect","applyChromaKeyEffect","needsUpdate","ensureEmissiveSupport","Color","emissiveIntensity","fallbackColor","originalColor","lerp","undefined","animations","startAnimationLoop","animationId","uuid","has","delete","animationData","startTime","originalPosition","originalRotation","useColorFallback","cosmicAnimationId","cosmicData","cosmicType","getCosmicSpeed","colorIndex","originalEmissive","originalEmissiveIntensity","texture","isChromaKeyMaterial","uniforms","keyColor","shaderMaterial","ShaderMaterial","vertexShader","fragmentShader","side","DoubleSide","toneMapped","watercolorAnimationId","watercolorData","artType","getWatercolorSpeed","originalOpacity","animationLoopRunning","animate","updateAnimations","requestAnimationFrame","currentTime","elapsed","updateFloatAnimation","updatePulseAnimation","updateSpinAnimation","updateSparkleAnimation","updateRainbowAnimation","updateGlitchAnimation","updateCosmicAnimation","updateWatercolorAnimation","yOffset","sin","rotationAmount","hue","setHSL","random","offset","colorCycleSpeed","numColors","colorProgress","currentColorIndex","floor","nextColorIndex","lerpFactor","currentColor","nextColor","blendedColor","intensityMultiplier","cos","opacityMultiplier","getAutoEffectsFromPrompt","lowerPrompt","applyRecognitionFeedback","stopRecognitionFeedback","feedbackAnimationId","movePatterns","regex","RegExp","direction","targetObjectName","requiresObjectSearch","colorPatterns","colorKey","rotationPatterns","flipPatterns","effectPatterns","effectName","distanceMatch","executeImageGeneration","executeVideoGeneration","executeObjectModification","executeNaturalObjectModification","executeDelete","executeFileImport","executeObjectSelection","fallbackSizes","imageResult","lastError","i","dimensions","success","loader","TextureLoader","imageUrl","localPath","pop","loadAsync","colorSpace","SRGBColorSpace","createFallbackTexture","baseSize","imageWidth","image","naturalWidth","data","aspectRatio","naturalHeight","planeWidth","planeHeight","PlaneGeometry","plane","alphaTest","finalPosition","calculateCameraRelativePosition","alignPlaneToCamera","createLocationIndicator","videoResult","videoTexture","video","videoUrl","createElement","src","crossOrigin","loop","muted","playsInline","VideoTexture","play","createFallbackVideoTexture","requestedWidth","metadata","requestedHeight","planeAspect","videoElement","createAudioControl","fallbackVideoTexture","loadImageFile","fileUrl","loadVideoFile","autoplay","preload","Promise","resolve","reject","videoWidth","videoHeight","once","load","playError","objectUrl","targetObjects","findObjectsByName","selectObjectFromMultiple","modified","currentPos","newPos","modifications","searchName","results","searchLower","originalCommand","ordinalPatterns","matchedText","currentScale","newRotation","degrees","currentOpacity","currentScaleX","updateAllAudioControlPositions","clearAll","targetByKeyword","deleteReason","deletedObjectId","display","accept","appendChild","onchange","async","file","files","URL","createObjectURL","removeChild","oncancel","click","getSpawnedObjects","modal","cssText","container","title","textContent","objectList","item","time","toLocaleTimeString","innerHTML","round","onmouseover","borderColor","background","onmouseout","onclick","selectedObjectId","cancelBtn","ctx","getContext","hashString","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","font","textAlign","fillText","slice","CanvasTexture","animationFrame","icons","iconIndex","str","hash","charCodeAt","get","pause","removeAttribute","revokeObjectURL","cleanupCallbacks","cb","mat","keys","getCommandHistory","relativePosition","SphereGeometry","indicatorPos","parent","cameraPos","cameraRight","cameraUp","crossVectors","normalize","cameraUpActual","logDebug","forward","negate","up","applyQuaternion","quaternion","dot","right","orientation","Matrix4","makeBasis","setFromRotationMatrix","setCamera","updateConfig","newConfig","setImageService","serviceId","getImageService","setVideoService","getVideoService","videoObject","audioButton","className","tooltip","createTooltip","volumeSlider","sliderContainer","slider","head","e","volume","createVolumeSlider","isSliderVisible","transform","buttonRect","stopPropagation","pointerEvents","querySelector","contains","audioControlElement","updateAudioControlPosition","hideSlider","passive","setInterval","onDocumentClick","removeEventListener","parentNode","clearInterval","vector","project","offsetX","offsetY","toggleVideoAudio","initializeLabelRenderer","loadAndInitializeCSS2DRenderer","ensureCSS2DRenderer","css2dInitPromise","CSS2DRenderer","setupCSS2DRenderer","import","CSS2DObject","setSize","innerWidth","innerHeight","addLabelRendererResizeHandler","labelRendererResizeHandler","updateRenderer","render","args","backgroundColor","bgColor","r","g","isColor","pow","getLuminance","IMAGE_SERVICE_STORAGE_KEY","VIDEO_SERVICE_STORAGE_KEY","CommandUIDemo","onControlsToggle","isVisible","output","activeConnections","currentTaskId","activationKey","maxHeight","theme","skipServiceDialog","showExamples","autoScroll","availableImageServices","availableVideoServices","imageServiceSelect","videoServiceSelect","serviceSelectorContainer","serviceSelectorStatus","serviceSelectorContent","serviceSelectorRetryButton","serviceSelectorSaveButton","serviceSelectorCancelButton","serviceModalOverlay","serviceModal","servicesLoading","isExpanded","overlayTextarea","pendingImageService","pendingVideoService","storedImage","localStorage","getItem","storedVideo","applyServiceSelectionToSceneManager","currentTheme","isDarkMode","isWabiSabiMode","currentHistoryIndex","maxHistorySize","initUI","bindEvents","createServiceModal","createFloatingChocolateIcon","refreshStyles","openServiceModal","showDemoMessage","showCompactToast","existingToast","getElementById","buttonContainer","radioModeContainer","toast","getContainerStyles","brandIndicator","brandText","outputDiv","getOutputStyles","floatingContainer","taskCards","inputWrapper","rows","placeholder","getInputStyles","expandButton","hideOverlayTextarea","showOverlayTextarea","modeSelector","createRadioModeSelector","actionContainer","createMinimalActions","closeButton","hide","applyTheme","isComposing","hasCompositionJustEnded","autoResizeTextarea","detectCommandType","navigator","userAgent","isSafari","leftSection","clearBtn","getActionButtonStyles","clearAllWithConfirmation","historyBtn","disabled","rightSection","themeToggle","getThemeIcon","light","dark","wabisabi","icon","getThemeIconWithFilter","getThemeTitle","toggleTheme","settingsButton","createServiceSelectorSection","fontSize","marginBottom","updateServiceSelectorTheme","closeServiceModal","subtitle","selector","actionRow","initializeServiceSelector","actionButtons","handleServiceSave","toggleServiceRetryButton","forceFetch","resetPendingSelections","force","setServiceSelectorStatus","setServiceButtonsEnabled","resolveServiceSelection","default","populateServiceSelector","dataset","statusType","classList","toggle","services","defaultId","storageKey","storedId","resolvedId","setItem","removeItem","hasImage","hasVideo","imageRow","buildServiceRow","videoRow","labelText","selectedId","row","label","fontWeight","select","serviceType","fontFamily","option","description","onServiceSelectionChange","findServiceInfo","lineHeight","minHeight","info","parentElement","newImageId","newVideoId","imageInfo","videoInfo","enabled","childElementCount","find","border","statusColor","querySelectorAll","padding","borderRadius","outline","boxShadow","desc","radioModeButtons","mode","autoBadge","triggerFileSelection","selectMode","isManual","detectedKeyword","selectedGlass","addPulseEffect","addContainerGlow","getPlaceholderForMode","clearInputOnModeSwitch","selectedFile","showImportInterface","hideImportInterface","handleDeleteModeSelection","handleModifyModeSelection","element","ensurePulseAnimation","glowColor","generate","modify","variant","baseStyles","getDestructiveButtonStyles","getCommandTypeIndicatorStyles","newHeight","scrollHeight","overflowY","commandType","analyzeCommandType","mediaInfo","detectMediaType","deletePatterns","modifyPatterns","generatePatterns","confidence","reason","mediaType","requiresConfirmation","showCommandTypeIndicator","commandInfo","showProactiveSuggestion","hideProactiveSuggestion","enableGestureControl","detectedType","proactiveSuggestion","insertBefore","suggestion","t","updateIndicatorForMode","gestureEnabled","createActionButtons","getModernButtonStyles","positions","backdropFilter","getHeaderStyles","addScrollbarStyles","primary","secondary","danger","getModeButtonStyles","isActive","ctrlKey","shiftKey","redo","undo","show","flexDirection","containerRect","floatingChocolateIcon","switchMode","btn","executeBtn","placeholders","handleDemoOrientationCommand","normalized","wantsVerticalFlip","wantsHorizontalFlip","wantsRotateRight","wantsRotateLeft","wantsRotateBack","handled","operations","currentX","currentY","join","taskId","addTaskCard","saveCommandToHistory","fullCommand","getModePrefix","handleImportCommand","orientationResult","getSelectedObjects","confirmMessage","confirm","deleteObjects","connectToProgress","updateTaskCard","errorMessages","scrollToBottom","showConfirmationDialog","confirmText","cancelText","confirmColor","dialog","closeModalWithAnimation","escHandler","addSystemMessage","taskInfo","substr","card","setAttribute","getFloatingCardStyles","setProperty","friendlyMessage","getFriendlyMessage","pending","processing","progress","completed","updateCardDisplayLimit","endTime","contentType","settings","addCardDetailEvents","animateCardEntrance","taskData","animateCardSuccess","animateCardError","getTaskCardStyles","statusBorders","allCards","existingCounter","hiddenCount","counter","counterBaseColor","counterBorderColor","counterTextColor","firstChild","counterHoverColor","maxTouchPoints","showTaskDetailModal","hoverTimeout","clearTimeout","existingModal","createTaskDetailModal","overlayColor","modalBg","modalBorder","textColor","labelColor","statusText","modalContent","closeBtn","closeTaskDetailModal","transition","animateCardExit","addErrorTooltip","getResponseType","errorMessage","shortPrompt","substring","responseType","getStatusColor","createStatusIndicator","animateTaskCompletion","addSubtleParticleEffect","ensureTaskAnimations","angle","addTaskStatus","percent","updateTaskProgress","newMessage","completeTask","existingTask","serverTaskId","uiTaskId","eventSource","EventSource","onmessage","parse","handleProgressUpdate","onerror","disconnectProgress","connection","close","scrollTop","commandData","shift","updateUndoRedoButtons","canUndo","undoLastGenerate","undoLastModify","undoLastDelete","canRedo","redoCommand","undoBtn","redoBtn","showClearAllConfirmation","example","setSceneManager","setClient","generateBtn","themeOrder","nextIndex","indexOf","currentDisplay","currentFlexDirection","brandBadge","updateFloatingContainerTheme","updateExistingTextColors","glassmorphismDark","glassmorphismLight","system","hint","defaultTextColor","fileInput","handleFileSelection","enableDragAndDrop","fileSelectButton","disableDragAndDrop","openFileSelector","detectFileType","url","defaultPrompt","handleDragOver","bind","handleDrop","handleDragEnter","handleDragLeave","dataTransfer","ext","load3DModel","processedFileName","importedType","importedUrl","triggerAttentionAnimation","chatOutput","inputField","addMicroShakeEffect","addContextGlow","addEmotionalPulse","add3DDepthEffect","ensureMicroShakeAnimation","pulseColor","borderLeft","ensureEmotionalPulseAnimation","newMode","isPreviousModeMessage","getModeDisplayName","inputValue","importPatterns","showFloatingIconContextMenu","existingMenu","menu","openFormItem","textShadow","hideIconItem","hideFloatingIcon","bottom","closeMenu","showFloatingIcon","overlayBackground","overlayBorder","overlayInnerShadow","overlayTextColor","CommandUI","highlightOverlay","inputDefaultStyles","feedbackAutoClearTimer","currentFeedback","clearInputFeedback","applyKeywordHighlighting","glowColors","intensified","hasSelectedObject","trimmedText","needsTarget","explicitTargetMatched","hasExplicitTarget","mediaReferenceIndicators","getAllCommandKeywords","createHighlightOverlay","matches","clearKeywordHighlighting","computedStyle","getComputedStyle","captureInputDefaultStyles","letterSpacing","borderWidth","highlightedHTML","lastIndex","escapeHtml","start","getKeywordColor","end","backgroundImage","getInputTextColor","div","preValidation","preValidateCommand","canExecute","proceedWithExecution","ensureShimmerStyles","styleSheet","feedbackOverlay","overlay","isError","messageSpan","flex","actions","actionsContainer","action","onClick","ensureFeedbackStyles","foundTarget","executeCommandAfterValidation","newCommand","convertToGenerateCommand","patterns","to","shimmerEffect","updateServiceModalStyles","hadHighlight","themeConfig","createChocoDrop","sceneOptions","uiOptions","otherSceneOptions","resolvedServerUrl","chocoDropClient","ui","createChocoDro","createLiveCommand","createChocoDropDemo","mergedSceneOptions"],"mappings":"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"}